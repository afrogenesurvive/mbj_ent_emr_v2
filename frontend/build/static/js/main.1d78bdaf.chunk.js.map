{"version":3,"sources":["logo.svg","components/alertBox/AlertBox.js","context/auth-context.js","components/Navigation/MainNavigation.js","assets/loading.gif","components/overlay/LoadingOverlay.js","pages/landing/Landing.js","components/items/patient/PatientItem.js","components/lists/patient/PatientList.js","components/items/appointment/AppointmentItem.js","components/lists/appointment/AppointmentList.js","components/items/queue/QueueSlotItem.js","components/lists/queue/QueueSlotList.js","components/items/queue/QueueItem.js","components/forms/search/PatientSearchForm.js","components/forms/search/UserSearchForm.js","components/items/user/UserItem.js","components/lists/user/UserList.js","pages/landing/Home.js","components/items/user/AddressItem.js","components/lists/user/UserAddressList.js","components/items/user/AttendanceItem.js","components/lists/user/UserAttendanceList.js","components/items/user/LeaveItem.js","components/lists/user/UserLeaveList.js","components/items/user/ImageItem.js","components/lists/user/UserImageList.js","components/items/patient/FileItem.js","components/lists/user/UserFileList.js","components/items/user/AppointmentItem.js","components/lists/user/UserAppointmentList.js","components/items/user/NoteItem.js","components/lists/user/UserNoteList.js","components/forms/filter/FilterAddressForm.js","components/forms/filter/FilterAttendanceForm.js","components/forms/filter/FilterLeaveForm.js","components/forms/filter/FilterImageForm.js","components/forms/filter/FilterFileForm.js","components/forms/filter/FilterAppointmentForm.js","components/forms/filter/FilterNoteForm.js","components/forms/add/UpdateUserSingleFieldForm.js","components/forms/add/AddAddressForm.js","components/forms/add/AddAttendanceForm.js","components/forms/add/AddLeaveForm.js","components/forms/add/AddNoteForm.js","components/forms/add/AddImageForm.js","components/forms/add/AddFileForm.js","components/floatMenu/FloatMenu.js","pages/profile/Profile.js","components/forms/auth/LoginForm.js","components/forms/auth/VerifyUserForm.js","components/forms/auth/ForgotPasswordForm.js","pages/auth/Login.js","components/forms/auth/SignupForm.js","pages/auth/Signup.js","components/forms/auth/ResetPasswordForm.js","pages/auth/PasswordReset.js","components/lists/user/SearchUserList.js","components/details/UserDetail.js","components/forms/filter/FilterUserForm.js","pages/staff/Staff.js","components/forms/create/CreatePatientForm.js","components/lists/patient/SearchPatientList.js","assets/letterhead.jpg","components/pdfView/PdfView.js","components/lists/patient/PatientAddressList.js","components/items/patient/NextOfKinItem.js","components/lists/patient/PatientNextOfKinList.js","components/items/patient/AttachmentItem.js","components/lists/patient/PatientAttachmentList.js","components/items/patient/AllergyItem.js","components/lists/patient/PatientAllergyList.js","components/items/patient/MedicationItem.js","components/lists/patient/PatientMedicationList.js","components/items/patient/ComorbidityItem.js","components/lists/patient/PatientComorbidityList.js","components/items/patient/ImageItem.js","components/lists/patient/PatientImageList.js","components/lists/patient/PatientFileList.js","components/items/patient/NoteItem.js","components/lists/patient/PatientNoteList.js","components/items/patient/TagItem.js","components/lists/patient/PatientTagList.js","components/items/visit/VisitItem.js","components/lists/visit/VisitList.js","components/forms/filter/FilterAllergyForm.js","components/forms/filter/FilterMedicationForm.js","components/forms/filter/FilterComorbidityForm.js","components/forms/filter/FilterNextOfKinForm.js","components/forms/filter/FilterVisitForm.js","components/forms/filter/FilterTagForm.js","components/forms/add/UpdatePatientSingleFieldForm.js","components/forms/add/AddTagForm.js","components/forms/add/AddNextOfKinForm.js","components/forms/add/AddAllergyForm.js","components/forms/add/AddMedicationForm.js","components/forms/add/AddComorbidityForm.js","components/forms/add/AddAttachmentForm.js","components/details/PatientDetail.js","components/forms/filter/FilterPatientForm.js","pages/patient/Patients.js","components/forms/create/CreateAppointmentForm.js","components/items/appointment/NoteItem.js","components/lists/appointment/AppointmentNoteList.js","components/items/appointment/TagItem.js","components/lists/appointment/AppointmentTagList.js","components/forms/add/AddUserForm.js","components/details/AppointmentDetail.js","components/forms/search/AppointmentSearchForm.js","pages/appointment/Appointment.js","components/forms/create/CreateVisitForm.js","components/items/visit/ComplaintItem.js","components/lists/visit/VisitComplaintList.js","components/items/visit/SurveyItem.js","components/lists/visit/VisitSurveyList.js","components/items/visit/SystematicInquiryItem.js","components/lists/visit/VisitSystematicInquiryList.js","components/items/visit/VitalsItem.js","components/lists/visit/VisitVitalsList.js","components/items/visit/ExaminationItem.js","components/lists/visit/VisitExaminationList.js","components/items/visit/InvestigationItem.js","components/lists/visit/VisitInvestigationList.js","components/items/visit/DiagnosisItem.js","components/lists/visit/VisitDiagnosisList.js","components/items/visit/TreatmentItem.js","components/lists/visit/VisitTreatmentList.js","components/items/visit/BillingItem.js","components/lists/visit/VisitBillingList.js","components/items/visit/VigilanceItem.js","components/lists/visit/VisitVigilanceList.js","components/items/visit/ImageItem.js","components/lists/visit/VisitImageList.js","components/items/visit/FileItem.js","components/lists/visit/VisitFileList.js","components/forms/filter/FilterComplaintForm.js","components/forms/filter/FilterSurveyForm.js","components/forms/filter/FilterSystematicInquiryForm.js","components/forms/filter/FilterDiagnosisForm.js","components/forms/filter/FilterVitalsForm.js","components/forms/filter/FilterExaminationForm.js","components/forms/filter/FilterInvestigationForm.js","components/forms/filter/FilterTreatmentForm.js","components/forms/filter/FilterBillingForm.js","components/forms/add/AddComplaintForm.js","components/forms/add/AddSurveyForm.js","components/forms/add/AddSystematicInquiryForm.js","components/forms/add/AddVitalsForm.js","components/forms/add/AddExaminationForm.js","components/forms/add/AddInvestigationForm.js","components/forms/add/AddDiagnosisForm.js","components/forms/add/AddTreatmentForm.js","components/forms/add/AddBillingForm.js","components/forms/add/AddVigilanceForm.js","components/details/VisitDetail.js","components/forms/search/VisitSearchForm.js","pages/visit/Visit.js","App.js","serviceWorker.js","index.js"],"names":["AlertBox","props","alert","useState","state","setState","handleStateChange","className","icon","faMinusSquare","size","onClick","faPlusSquare","Alert","variant","React","createContext","token","activityId","activityA","activityUser","role","userId","user","users","selectedUser","selectedPatient","selectedAppointment","selectedVisit","userAlert","file","fancyDate","login","tokenExpiration","logout","setUserAlert","args","userOnline","mainNavigation","Consumer","context","Fragment","to","LoadingOverlay","Row","toggleOverlay","status","type","Button","Container","ListGroup","Item","selectCalendarDetails","OverlayTrigger","key","placement","overlay","Popover","id","Content","faExternalLinkAlt","bind","data","goLink","pathname","appointment","_id","patient","name","moment","unix","date","substr","add","format","time","location","important","faCheckSquare","faBan","description","visit","startDate","endDate","Image","src","loadingGif","fluid","action","target","startCreateDateClickAppt","selectPatient","newAppointmentDate","LandingPage","overlayStatus","isGuest","this","Col","Component","PatientItem","deleteState","setDeleteState","count","Card","Body","Text","username","faEye","appointmentPage","showDetails","homePage","faUserPlus","onSelect","canDelete","faTrashAlt","registration","number","title","dob","age","gender","onDelete","PatientList","filter","patients2","patients","propsPatients","field","value","sort","a","b","x","loggedIn","active","map","indexOf","AppointmentItem","visitPage","faCalendarPlus","checkinTime","seenTime","inProgress","toString","attended","AppointmentList","appointments2","appointments","propsAppointments","subType","QueueSlotItem","queueSlot","seen","slotSeen","slotUnseen","consultant","QueueSlotList","queueSlots","QueueItem","queue","creator","slots","PatientSearchForm","Form","onSubmit","onConfirm","Group","as","controlId","Label","Control","placeholder","onCancel","UserSearchForm","UserItem","selectUser","faBatteryThreeQuarters","faBatteryEmpty","UserList","users2","propsUsers","HomePage","isLoading","seshStore","todayAppointments","weekImportantAppointments","recentPatients","queueToday","addingQueueSlot","queueSlotAddStage","sublistPatientSearch","sublistUserSearch","loadHome","getAppointmentsToday","getAppointmentsImportantWeek","getRecentPatients","getQueueToday","getAllPatients","getAllUsers","console","log","requestBody","query","fetch","method","body","JSON","stringify","headers","Authorization","then","res","Error","json","resData","responseAlert","errors","message","error","catch","err","getAppointmentsImportantNextWeek","submitFilterForm","event","preventDefault","startAddQueueSlot","cancelAddQueueSlot","createQueue","submitQueueSlotAddPatient","queuePatients","existingPatient","includes","submitQueueSlotAddConsultant","queueId","patientId","consultantId","addQueueSlot","queueSlotSeen","slotNumber","queueSlotUnseen","deleteQueSlot","deleteQueueSlot","startPatientSearch","cancelSublistPatientSearch","submitSublistPatientSearchForm","regex","getPatientsByFieldRegex","getPatientsByField","logUserActivity","startUserSearch","cancelSublistUserSearch","submitSublistUserSearchForm","getUsersByFieldRegex","getUsersByField","sessionStorage","getItem","parse","md","authId","contextType","AuthContext","AddressItem","address","town","country","street","city","parish","primary","makePrimary","UserAddressList","addresses2","addresses","propsAddresses","postalCode","AttendanceItem","attendance","UserAttendanceList","attendance2","propsAttendance","attendanceItem","LeaveItem","leave","UserLeaveList","leave2","propsLeave","leaveItem","ImageItem","href","image","path","rel","UserImageList","images2","images","propsImages","FileItem","PatientFileList","files2","files","propsFiles","UserAppointmentList","NoteItem","note","UserNoteList","notes2","notes","propsNotes","FilterAddressForm","hidden","FilterLeaveForm","FilterImageForm","FilterFileForm","FilterAppointmentForm","readOnly","FilterNoteForm","UpdateUserSingleFieldForm","AddAddressForm","AddAttendanceForm","Date","rows","AddLeaveForm","AddNoteForm","AddImageForm","onChange","e","_currentValue","AddFileForm","FloatMenu","menuSelect","subMenuState","page","subMenuSelect","MyProfilePage","profileLoaded","sideCol","startFilter","selectFilter","menuSelected","adding","updateSingleField","calendarAttendance","calendarLeave","calendarAppointments","pocketVars","s3State","submitAddAddressForm","trim","length","addUserAddress","deleteAddress","deleteUserAddress","setAddressPrimary","setUserAddressPrimary","submitAddAttendanceForm","attendanceDate","attendanceStatus","attendanceDescription","addUserAttendance","parseForCalendar","deleteAttendance","deleteUserAttendance","submitAddLeaveForm","addUserLeave","deleteLeave","deleteUserLeave","addUseLeavce","submitAddImageForm","imageName","imageType","imagePath","fileInput","fileName","filePath","fileType","split","config","bucketName","dirName","region","accessKeyId","s3","secretAccessKey","s3Url","ReactS3Client","S3","uploadFile","statusText","addUserImage","deleteImage","deleteUserImage","filename","deleteFile","response","submitAddFileForm","file2Name","file2Type","file2Path","addUserFile","deleteUserFile","submitAddNoteForm","addUserNotes","deleteNote","deleteUserNote","submitUpdateSingleFieldForm","updateUserSingleField","startUpdateSingleField","cancelUpdateSingleField","toggleSideCol","toggleFilter","startAdd","cancelAdd","end","viewCalendarEvent","input","extendedProps","dateClick","socket","io","getThisUser","getPocketVars","pocketVarsParsed","getUserById","sendSocketAdminMessage","request","activityDate","addUserActivity","contact","email","phone","phone2","registrationNumber","employmentDate","clientConnected","verification","verified","code","Tabs","defaultActiveKey","Tab","eventKey","FilterAttendanceForm","initialView","plugins","dayGridPlugin","interactionPlugin","events","eventClick","showListDetails","LoginForm","onStartVerification","onStartForgotPassword","verifyUserForm","canCancel","canConfirm","ForgotPasswordForm","LoginPage","verifying","activeTab","userSeshStore","requestingPasswordReset","showForm","submitLoginForm","password","sessionObject","setItem","verifyUser","toggleVerification","toggleForgotPassword","requestPasswordReset","VerifyUserForm","SignupForm","SignUpPage","signupStatus","invited","submitSignupForm","addressNumber","addressStreet","addressTown","addressCity","addressParish","addressCountry","addressPostalCode","createUser","submitInviteForm","challenge","inviteCode","verifyInvitation","ResetPasswordForm","verf","PasswordResetPage","passwordResetStatus","verfCode","submitResetPasswordForm","verificationCode","resetUserPassword","SearchUserList","UserDetail","updateUser","replace","subMenu","FilterUserForm","StaffPage","searchUsers","fromGoLink","goLinkId","tabKey","sendSocketNotification","deleteUser","resetFilter","clearSearch","goLinkUser","CreatePatientForm","today","SearchPatientList","styles","StyleSheet","create","paddingTop","paddingBottom","paddingHorizontal","fontSize","textAlign","fontFamily","author","marginBottom","subtitle","margin","text","header","color","pageNumber","position","bottom","left","right","flexDirection","backgroundColor","section","padding","flexGrow","PdfView","class","close","pdfViewData","style","letterHead","break","PatientAddressList","NextOfKinItem","nextOfKin","relation","PatientNextOfKinList","nextOfKin2","propsNextOfKin","nextOfKinItem","AttachmentItem","attachment","faEraser","item","PatientAttachmentList","attachments","AllergyItem","allergy","onAddAttachment","deleteAttachment","PatientAllergyList","allergies2","allergies","propsAllergies","MedicationItem","medication","PatientMedicationList","medication2","propsMedication","medicationItem","ComorbidityItem","comorbidity","Title","PatientComorbidityList","comorbidity2","comorbidities","propsComormidity","comorbidityItem","PatientImageList","UserFileList","PatientNoteList","TagItem","tag","PatientTagList","tags2","tags","propsTags","VisitItem","patientPage","VisitList","visits2","visits","propsVisits","FilterAllergyForm","FilterMedicationForm","FilterComorbidityForm","FilterNextOfKinForm","FilterVisitForm","FilterTagForm","UpdatePatientSingleFieldForm","AddTagForm","AddNextOfKinForm","AddAllergyForm","AddMedicationForm","AddComorbidityForm","AddAttachmentForm","PatientDetail","addAttachmentForm","addAttachmentArgs","calendarVisits","showPdfView","showPdfData","updatePatient","addPatientAddress","deletePatientAddress","setPatientAddressPrimary","submitAddNextOfKinForm","addPatientNextOfKin","deleteNextOfKin","phone1","deletePatientNextOfKin","submitAddAllergyForm","addPatientAllergy","deleteAllergy","deletePatientAllergy","preAttachments","filePath2","index","preAttachment","filename2","submitAddMedicationForm","addPatientMedication","deleteMedication","deletePatientMedication","submitAddComorbidityForm","addPatientComorbidity","deleteComorbidity","deletePatientComorbidity","startAddAttachment","cancelAddAttachment","addAttachment","allergyTitle","allergyType","allergyDescription","medicationTitle","medicationType","medicationDescription","addPatientAllergyAttachment","addPatientMedicationAttachment","allergyAttachment","medicationAttachment","deletePatientAllergyAttachment","deletePatientMedicationAttachment","addPatientImage","deletePatientImage","addPatientFile","deletePatientFile","addPatientNotes","deletePatientNote","submitAddTagForm","addPatientTags","deleteTag","deletePatientTag","updatePatientSingleField","dateStr","closePdfView","new","propsPatient","newAppointment","newVisit","lastName","referral","reason","physician","attendingPhysician","occupation","employer","insurance","company","policyNumber","expiryDate","subscriber","FilterPatientForm","PatientPage","searchPatients","creatingPatient","newPatient","dateClickPatientSelect","onStartCreateNewPatient","cancelCreateNewPatient","submitCreateNewPatientForm","contactEmail","contactPhone","contactPhone2","referralDate","referralReason","referralPhysicianName","referralPhysicianPhone","referralPhysicianEmail","referralPhysicianAddress","occupationRole","occupationEmployerName","occupationEmployerEmail","occupationEmployerPhone","occupationEmployerAddress","insuranceCompany","insurancePolicyNumber","insuranceDescription","insuranceExpiryDate","insuranceSubscriberCompany","insuranceSubscriberDescription","createPatient","deletePatient","goLinkPatient","true","lg","CreateAppointmentForm","preFillDate","AppointmentNoteList","AppointmentTagList","AddUserForm","setUser","AppointmentDetail","showAddConsultantForm","calEvent","startTime","endTime","appointmentId","updateAppointment","addAppointmentNotes","deleteAppointmentNote","addAppointmentTags","deleteAppointmentTag","submitAddUserForm","userRole","addAppointmentConsultant","deleteConsultant","deleteAppointmentConsultant","startUpdatePatient","updateAppointmentSingleField","consultants","AppointmentSearchForm","AppointmentPage","searchAppointments","calendar","creatingAppointment","sublistSearch","getAppointmentsByFieldRegex","getAppointmentsByField","onStartCreateNewAppointment","cancelCreateNewAppointment","submitCreateNewAppointmentForm","checked","createAppointment","getAllAppointments","selectAppointment","deleteAppointment","startSublistSearch","cancelSublistSearch","submitSublistSearchForm","goLinkAppointment","CreateVisitForm","ComplaintItem","complaint","anamnesis","VisitComplaintList","complaints2","complaints","propsComplaints","SurveyItem","survey","VisitSurveyList","surveys2","surveys","propsSurveys","SystematicInquiryItem","systematicInquiry","VisitSystematicInquiryList","systematicInquirys2","propsSystematicInquirys","systematicInquirys","VitalsItem","vitals","pr","rr","temp","ps02","heightValue","heightUnit","weightValue","weightUnit","bmi","urine","VisitVitalsList","vitals2","propsVitals","bp1","bp2","vitalsItem","ExaminationItem","examination","general","area","measure","followUp","VisitExaminationList","examinations2","propsExaminations","examinations","InvestigationItem","investigation","VisitInvestigationList","investigations2","propsInvestigations","investigations","DiagnosisItem","diagnosis","VisitDiagnosisList","diagnosis2","propsDiagnosis","diagnoses","TreatmentItem","treatment","dose","frequency","VisitTreatmentList","treatment2","propsTreatment","treatments","BillingItem","billing","amount","paid","updateBillingPaid","VisitBillingList","billing2","propsBilling","billings","VigilanceItem","vigilance","chronicIllness","diabetes","testing","comment","hbp","dyslipidemia","cad","lifestyle","weight","diet","smoking","substanceAbuse","exercise","asthma","screening","breast","prostate","cervix","colon","dental","vaccines","influenza","varicella","hpv","mmr","tetanus","pneumovax","other","VisitVigilanceList","vigilance2","propsVigilance","vigilances","VisitImageList","VisitFileList","FilterComplaintForm","FilterSurveyForm","FilterSystematicInquiryForm","FilterDiagnosisForm","FilterVitalsForm","FilterExaminationForm","FilterInvestigationForm","FilterTreatmentForm","FilterBillingForm","AddComplaintForm","AddSurveyForm","AddSystematicInquiryForm","AddVitalsForm","step","AddExaminationForm","AddInvestigationForm","AddDiagnosisForm","AddTreatmentForm","AddBillingForm","AddVigilanceForm","VisitDetail","submitAddComplaintForm","visitId","updateVisit","addVisitComplaint","deleteComplaint","deleteVisitComplaint","submitAddSurveyForm","addVisitSurvey","deleteSurvey","deleteVisitSurvey","submitAddSystematicInquiryForm","addVisitSysInquiry","deleteSystematicInquiry","deleteVisitSysInquiry","submitAddVitalsForm","urineType","urineValue","toFixed","addVisitVitals","deleteVitals","deleteVisitVitals","submitAddExaminationForm","addVisitExamination","deleteExamination","deleteVisitExamination","submitAddInvestigationForm","addVisitInvestigation","deleteInvestigation","deleteVisitInvestigation","submitAddDiagnosisForm","addVisitDiagnosis","deleteDiagnosis","deleteVisitDiagnosis","submitAddTreatmentForm","addVisitTreatment","deleteTreatment","deleteVisitTreatment","submitAddBillingForm","parseFloat","addVisitBilling","updateVisitBillingPaid","deleteBilling","deleteVisitBilling","addVisitImage","deleteVisitImage","addVisitFile","deleteVisitFile","submitAddVigilanceForm","vigilanceChronicIllnessDiabetesMedication","vigilanceChronicIllnessDiabetesTesting","vigilanceChronicIllnessDiabetesComment","vigilanceChronicIllnessHbpMedication","vigilanceChronicIllnessHbpTesting","vigilanceChronicIllnessHbpComment","vigilanceChronicIllnessDyslipidemiaMedication","vigilanceChronicIllnessDyslipidemiaTesting","vigilanceChronicIllnessDyslipidemiaComment","vigilanceChronicIllnessCadMedication","vigilanceChronicIllnessCadTesting","vigilanceChronicIllnessCadComment","vigilanceLifestyleWeightMedication","vigilanceLifestyleWeightTesting","vigilanceLifestyleWeightComment","vigilanceLifestyleDietMedication","vigilanceLifestyleDietTesting","vigilanceLifestyleDietComment","vigilanceLifestyleSmokingMedication","vigilanceLifestyleSmokingTesting","vigilanceLifestyleSmokingComment","vigilanceLifestyleSubstanceAbuseMedication","vigilanceLifestyleSubstanceAbuseTesting","vigilanceLifestyleSubstanceAbuseComment","vigilanceLifestyleExerciseMedication","vigilanceLifestyleExerciseTesting","vigilanceLifestyleExerciseComment","vigilanceLifestyleAllergiesMedication","vigilanceLifestyleAllergiesTesting","vigilanceLifestyleAllergiesComment","vigilanceLifestyleAsthmaMedication","vigilanceLifestyleAsthmaTesting","vigilanceLifestyleAsthmaComment","vigilanceScreeningBreastMedication","vigilanceScreeningBreastTesting","vigilanceScreeningBreastComment","vigilanceScreeningProstateMedication","vigilanceScreeningProstateTesting","vigilanceScreeningProstateComment","vigilanceScreeningCervixMedication","vigilanceScreeningCervixTesting","vigilanceScreeningCervixComment","vigilanceScreeningColonMedication","vigilanceScreeningColonTesting","vigilanceScreeningColonComment","vigilanceScreeningDentalMedication","vigilanceScreeningDentalTesting","vigilanceScreeningDentalComment","vigilanceVaccinesInfluenzaMedication","vigilanceVaccinesInfluenzaTesting","vigilanceVaccinesInfluenzaComment","vigilanceVaccinesVaricellaMedication","vigilanceVaccinesVaricellaTesting","vigilanceVaccinesVaricellaComment","vigilanceVaccinesHpvMedication","vigilanceVaccinesHpvTesting","vigilanceVaccinesHpvComment","vigilanceVaccinesMmrMedication","vigilanceVaccinesMmrTesting","vigilanceVaccinesMmrComment","vigilanceVaccinesTetanusMedication","vigilanceVaccinesTetanusTesting","vigilanceVaccinesTetanusComment","vigilanceVaccinesPneumovaxMedication","vigilanceVaccinesPneumovaxTesting","vigilanceVaccinesPneumovaxComment","vigilanceVaccinesOtherName","vigilanceVaccinesOtherMedication","vigilanceVaccinesOtherTesting","vigilanceVaccinesOtherComment","addVisitVigilance","deleteVigilance","deleteVisitVigilance","addVisitConsultant","deleteVisitConsultant","complaintTitle","complaintDescription","complaintAnamnesis","complaintAttachment","surveyTitle","surveyDescription","surveyAttachment","systematicInquiryTitle","systematicInquiryDescription","systematicInquiryAttachment","examinationGeneral","examinationArea","examinationType","examinationMeasure","examinationValue","examinationDescription","examinationFollowUp","examinationAttachment","investigationTitle","investigationType","investigationDescription","investigationAttachment","diagnosisTitle","diagnosisType","diagnosisDescription","diagnosisAttachment","treatmentType","treatmentTitle","treatmentDescription","treatmentDose","treatmentFrequency","treatmentAttachment","billingAmount","billingPaid","billingTitle","billingType","billingDescription","billingNotes","billingAttachment","addVisitComplaintAttachment","addVisitSurveyAttachment","addVisitSysInquiryAttachment","addVisitExaminationAttachment","addVisitInvestigationAttachment","addVisitDiagnosisAttachment","addVisitTreatmentAttachment","addVisitBillingAttachment","deleteVisitComplaintAttachment","deleteVisitSurveyAttachment","deleteVisitSysInquiryAttachment","deleteVisitExaminationAttachment","deleteVisitInvestigationAttachment","deleteVisitDiagnosisAttachment","deleteVisitTreatmentAttachment","deleteVisitBillingAttachment","updateVisitSingleField","completeVisit","completeVisitById","propsVisit","VisitSearchForm","VisitPage","searchVisits","creatingVisit","newVisitPatient","otfAppt","getVisitsByFieldRegex","getVisitsByField","onStartCreateNewVisit","cancelCreateNewVisit","deleteOtfAppointment","submitCreateNewVisitForm","tooEarly","tooLate","createVisit","getAllVisits","deleteAppointmentById","selectCalendarAppointment","selectVisit","deleteVisit","parseForCalendarAppts","goLinkVisit","newVisitDate","bootstrapPlugin","App","sessionStorageAuth","sessionCookiePresent","passwordResetState","passwordResetMessage","logout2","emit","msg","notificationId","room","passwordReset","params","formGridParams","formGridPassword","cancelPasswordReset","on","adminMessage","sendNotification","msgObject","conversationId","receiver","undefined","addMessage","clear","sender","Provider","from","exact","render","Home","Staff","Appointment","Visit","Landing","Login","Signup","PasswordReset","resetState","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.1d78bdaf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, {useState} from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faMinusSquare,\n  faPlusSquare\n} from '@fortawesome/free-solid-svg-icons';\n\nimport './alertBox.css'\n\nconst AlertBox = (props) => {\n  let alert = \"Alerts shown here\";\n\n  if (props.alert !== null) {\n    alert = '\"'+props.alert+'\"';\n  }\n  const [state, setState] = useState('alertBoxOpen');\n  const handleStateChange = () => {\n    if (state === 'alertBoxClosed') {\n      setState('alertBoxOpen');\n    }\n    if (state === 'alertBoxOpen') {\n      setState('alertBoxClosed');\n    }\n   }\n\nreturn (\n  <div className={state}>\n  {state === 'alertBoxOpen' ? (\n    <FontAwesomeIcon icon={faMinusSquare} className=\"alertIcon\" size='2x' onClick={handleStateChange}/>\n  ):(\n    <FontAwesomeIcon icon={faPlusSquare} className=\"alertIcon\" size='2x' onClick={handleStateChange}/>\n  )}\n\n  <Alert variant=\"warning\">\n  <p className=\"alertBoxText\">{alert}</p>\n  </Alert>\n  </div>\n)\n\n}\n\nexport default AlertBox;\n","import React from 'react';\n\nexport default React.createContext({\n    token: null,\n    activityId: null,\n    activityA: null,\n    activityUser: null,\n    role: null,\n    userId: null,\n    user: {},\n    users:[],\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    selectedVisit: null,\n    userAlert: \"...\",\n    file: null,\n    fancyDate: null,\n    login: (token, activityId, role, tokenExpiration) => {},\n    logout: () => {},\n    setUserAlert: (args) => {},\n    userOnline: () => {},\n});\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n// import Button from 'react-bootstrap/Button';\n\nimport AuthContext from '../../context/auth-context';\nimport './MainNavigation.css';\n\n\nconst mainNavigation = props => (\n  <AuthContext.Consumer>\n    {context => {\n      return (\n        <header className=\"main-navigation\">\n          <div className=\"main-navigation__logo\">\n            <h1>MBJ ENT EMR V2.0.1</h1>\n          </div>\n          <nav className=\"main-navigation__items\">\n            <ul>\n              {!context.token && (\n                <React.Fragment>\n                <li>\n                  <NavLink to=\"/landing\">Landing</NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/login\">Login</NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/signup\">Signup</NavLink>\n                </li>\n                </React.Fragment>\n              )}\n              {context.token && (\n                <React.Fragment>\n                  <li>\n                    <NavLink to=\"/home\">Home</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/profile\">Profile</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/staff\">Staff</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/patients\">Patients</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/appointments\">Appointments</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/visits\">Visits</NavLink>\n                  </li>\n                  <li>\n                    <button onClick={context.logout}>Logout</button>\n                  </li>\n                </React.Fragment>\n              )}\n              {\n                // !context.token && (\n                //   <React.Fragment>\n                //     <li>\n                //       <NavLink to=\"/landing\">.</NavLink>\n                //     </li>\n                //   </React.Fragment>\n                // )\n              }\n            </ul>\n          </nav>\n        </header>\n      );\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default mainNavigation;\n","export default __webpack_public_path__ + \"static/media/loading.79041449.gif\";","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport moment from 'moment';\nimport loadingGif from '../../assets/loading.gif';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport \"./loadingOverlay.css\"\n\nconst LoadingOverlay = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"loadingOverlay\">\n    <Row className=\"overlayCloseRow\">\n    {props.toggleOverlay &&\n      props.status.type !== 's3' && (\n      <Button className=\"sidebarButton\" variant=\"warning\" onClick={props.toggleOverlay}>X</Button>\n    )}\n    </Row>\n\n    {\n    //   props.status && (\n    //   <h5 className=\"attachmentViewerTitle\">... {props.status.type} ...</h5>\n    // )\n    }\n\n      <Container className=\"overlayContainer\">\n\n        {props.status.type === 'calendarAppointment' && (\n          <React.Fragment>\n            <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              {props.selectCalendarDetails && (\n                <Row className=\"overlayRow\">\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Go To Appointment Details</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon centered_btn\"  onClick={props.selectCalendarDetails.bind(this, props.status.data)}/>\n                </OverlayTrigger>\n\n                </Row>\n              )}\n              {props.status.goLink && (\n                <Row className=\"overlayRow\">\n                <Link className=\"centered_btn\"\n                  to={{\n                    pathname: \"/appointments\",\n                    state: {appointment: props.status.data._id}\n                  }}\n                >\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Go To Appointment Details</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon centered_btn\"/>\n                </OverlayTrigger>\n\n                </Link>\n                </Row>\n              )}\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p className=\"overlayListGroupItemText\">Patient: <span className=\"bold\">{props.status.data.patient.name}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p className=\"overlayListGroupItemText\">Date: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              <p className=\"overlayListGroupItemText\">Time: <span className=\"bold\">{props.status.data.time}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p className=\"overlayListGroupItemText\">Location: <span className=\"bold\">{props.status.data.location}</span></p>\n              <p className=\"overlayListGroupItemText\">important: <span className=\"bold\">{props.status.data.important === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p className=\"overlayListGroupItemText\">type: <span className=\"bold\">{props.status.data.type}</span></p>\n              <p className=\"overlayListGroupItemText\">description: <span className=\"bold\">{props.status.data.description}</span></p>\n              </ListGroup.Item>\n            </ListGroup>\n\n            </Row>\n\n          </React.Fragment>\n        )}\n\n        {props.status.type === 'calendarVisit' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n          <ListGroup className=\"overlayListGroup\">\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            {props.selectCalendarDetails && (\n              <Row className=\"overlayRow\">\n              <OverlayTrigger\n                key={'top'}\n                placement={'top'}\n                overlay={\n                  <Popover id={`popover-positioned-${'top'}`}>\n                    <Popover.Content>\n                      <strong>Go To Visit Details</strong>\n                    </Popover.Content>\n                  </Popover>\n                }\n              >\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon centered_btn\" onClick={props.selectCalendarDetails.bind(this, props.status.data)}/>\n              </OverlayTrigger>\n\n              </Row>\n            )}\n            {props.status.goLink && (\n              <Row className=\"overlayRow\">\n              <Link className=\"centered_btn\"\n                to={{\n                  pathname: \"/visits\",\n                  state: {visit: props.status.data._id}\n                }}\n              >\n              <OverlayTrigger\n                key={'top'}\n                placement={'top'}\n                overlay={\n                  <Popover id={`popover-positioned-${'top'}`}>\n                    <Popover.Content>\n                      <strong>Go To Visit Details</strong>\n                    </Popover.Content>\n                  </Popover>\n                }\n              >\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n              </OverlayTrigger>\n\n              </Link>\n              </Row>\n            )}\n            </ListGroup.Item>\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            <p className=\"overlayListGroupItemText\">Patient: <span className=\"bold\">{props.status.data.patient.name}</span></p>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            <p className=\"overlayListGroupItemText\">Date: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n            <p className=\"overlayListGroupItemText\">Time: <span className=\"bold\">{props.status.data.time}</span></p>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            <p className=\"overlayListGroupItemText\">type: <span className=\"bold\">{props.status.data.type}</span></p>\n            </ListGroup.Item>\n          </ListGroup>\n          </Row>\n\n          </React.Fragment>\n        )}\n\n        {props.status.type === 'calendarAttendance' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Date: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Status: <span className=\"bold\">{props.status.data.status}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Description: <span className=\"bold\">{props.status.data.description}</span></p>\n              </ListGroup.Item>\n            </ListGroup>\n          </Row>\n          </React.Fragment>\n        )}\n        {props.status.type === 'calendarLeave' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Type: <span className=\"bold\">{props.status.data.type}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>startDate: <span className=\"bold\">{moment.unix(props.status.data.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>endDate: <span className=\"bold\">{moment.unix(props.status.data.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Description: <span className=\"bold\">{props.status.data.description}</span></p>\n              </ListGroup.Item>\n            </ListGroup>\n          </Row>\n          </React.Fragment>\n        )}\n        {props.status.type === 's3' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n                <Image src={loadingGif} className=\"loadingGif\" fluid />\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n                <p>{props.status.data.action} -ing {props.status.data.target}...</p>\n              </ListGroup.Item>\n            </ListGroup>\n          </Row>\n          <Row className=\"overlayRow\">\n\n          </Row>\n          </React.Fragment>\n        )}\n\n        {props.status.type === 'dateClickAppointment' && (\n\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <h5>Create new Appointment for {props.status.data} ?</h5>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <Button variant=\"primary\" type=\"button\" className=\"loginFormBtn searchBtn\" onClick={props.startCreateDateClickAppt}>Create</Button>\n              <Button variant=\"danger\" type=\"button\" className=\"loginFormBtn searchBtn\" onClick={props.toggleOverlay}>Cancel</Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Row>\n          </React.Fragment>\n        )}\n\n        {props.status.type === 'dateClickVisit' && (\n\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <h5>To create new Visit for {props.status.data}, you must select a Patient!</h5>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <Link\n                to={{\n                  pathname: \"/patients\",\n                  state: {selectPatient: ''}\n                }}\n              >\n              <Button variant=\"success\" type=\"button\" className=\"loginFormBtn searchBtn\">Select Patient</Button>\n              </Link>\n              <Button variant=\"danger\" type=\"button\" className=\"loginFormBtn searchBtn\" onClick={props.toggleOverlay}>Cancel</Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Row>\n          </React.Fragment>\n        )}\n\n        {props.status.type === 'dateClickAppointmentPatient' && (\n\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <h5>Create new Appointment for </h5>\n              <p>{props.status.data.patient.name} ( {props.status.data.patient._id} ) </p>\n              <p>on {props.status.data.date} ?</p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <Link\n                to={{\n                  pathname: \"/appointments\",\n                  state: {newAppointmentDate: {\n                    date: props.status.data.date,\n                    patient: props.status.data.patient}}\n                }}\n              >\n              <Button variant=\"primary\" className=\"searchBtn\">Create</Button>\n              </Link>\n              <Button variant=\"danger\" type=\"button\" className=\"loginFormBtn searchBtn\" onClick={props.toggleOverlay}>Cancel</Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Row>\n          </React.Fragment>\n        )}\n\n        {\n        //   props.status.type === 'dateClickVisitPatient' && (\n        //\n        //   <React.Fragment>\n        //   <Row className=\"overlayRow\">\n        //     <ListGroup className=\"overlayListGroup\">\n        //       <ListGroup.Item className=\"overlayListGroupItem\">\n        //       <h5>Create new Visit for </h5>\n        //       <p>{props.status.data.patient.name} ( {props.status.data.patient._id} ) </p>\n        //       <p>on {props.status.data.date} ?</p>\n        //       </ListGroup.Item>\n        //       <ListGroup.Item className=\"overlayListGroupItem\">\n        //       <Link\n        //         to={{\n        //           pathname: \"/visits\",\n        //           state: {newVisitDate: {\n        //             date: props.status.data.date,\n        //             patient: props.status.data.patient,\n        //           }}\n        //         }}\n        //       >\n        //       <Button variant=\"primary\" className=\"searchBtn\">Create</Button>\n        //       </Link>\n        //       <Button variant=\"danger\" type=\"button\" className=\"loginFormBtn searchBtn\" onClick={props.toggleOverlay}>Cancel</Button>\n        //       </ListGroup.Item>\n        //     </ListGroup>\n        //   </Row>\n        //   </React.Fragment>\n        // )\n      }\n\n      </Container>\n\n    </div>\n  </div>\n)\n\n}\n\nexport default LoadingOverlay;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { NavLink } from 'react-router-dom';\nimport io from 'socket.io-client';\n\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport './landing.css';\n\nclass LandingPage extends Component {\n  state = {\n    role: null,\n    userAlert: \"landing page\",\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n  };\n\n  // constructor(props) {\n  //   super(props);\n  //   this.socket = io('http://localhost:9099');\n  // }\n\ncomponentDidMount () {\n  // this.socket.on('toast', function(data) {\n  //   console.log(\"admin msg...\",data);\n  // });\n}\n\n  render() {\n\n    return (\n      <React.Fragment>\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n      <Container className=\"landingPageContainer\">\n\n      <Row className=\"landingPageRow\">\n      <Col className=\"landingPageCol\">\n        <h1> Welcome to MBJ ENT EMR</h1>\n      </Col>\n      </Row>\n\n\n          {\n            // this.state.isGuest === true && (\n            //   <NavLink to=\"/login\">Login</NavLink>\n            // )\n          }\n          {\n            // this.state.isGuest === true && (\n            //   <NavLink to=\"/signup\">Signup</NavLink>\n            // )\n          }\n\n      </Container>\n\n      </React.Fragment>\n    );\n\n  }\n\n\n}\n\nexport default LandingPage;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './PatientItem.css';\n\nconst PatientItem = (props) => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.count} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Username: <span className=\"bold\">{props.patient.username}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            role: <span className=\"bold\">{props.patient.role}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {props.appointmentPage !== true &&\n            props.showDetails && (\n              <OverlayTrigger\n\n                placement={'top'}\n                overlay={\n                  <Popover id={`popover-positioned-${'top'}`}>\n                    <Popover.Content>\n                      <strong>Go to Patient Details</strong>\n                    </Popover.Content>\n                  </Popover>\n                }\n              >\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.patient)}/>\n              </OverlayTrigger>\n\n          )}\n\n          {props.homePage && (\n            <Link\n              to={{\n                pathname: \"/patients\",\n                state: {patient: props.patient._id}\n              }}\n            >\n            <OverlayTrigger\n\n              placement={'top'}\n              overlay={\n                <Popover id={`popover-positioned-${'top'}`}>\n                  <Popover.Content>\n                    <strong>Go to Patient Details</strong>\n                  </Popover.Content>\n                </Popover>\n              }\n            >\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </OverlayTrigger>\n\n            </Link>\n          )}\n\n          {props.appointmentPage === true && (\n            <OverlayTrigger\n\n              placement={'top'}\n              overlay={\n                <Popover id={`popover-positioned-${'top'}`}>\n                  <Popover.Content>\n                    <strong>Add/Use Patient</strong>\n                  </Popover.Content>\n                </Popover>\n              }\n            >\n              <FontAwesomeIcon icon={faUserPlus} className=\"listIcon\" onClick={props.onSelect.bind(this, props.patient)}/>\n            </OverlayTrigger>\n\n          )}\n\n          {props.canDelete && (\n            <OverlayTrigger\n\n              placement={'top'}\n              overlay={\n                <Popover id={`popover-positioned-${'top'}`}>\n                  <Popover.Content>\n                    <strong>Delete!?</strong>\n                  </Popover.Content>\n                </Popover>\n              }\n            >\n              <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n            </OverlayTrigger>\n\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.patient._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Regno: <span className=\"bold\">{props.patient.registration.number}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                name: <span className=\"bold\">{props.patient.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                username: <span className=\"bold\">{props.patient.username}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                title: <span className=\"bold\">{props.patient.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                role: <span className=\"bold\">{props.patient.role}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                dob: <span className=\"bold\">{moment.unix(props.patient.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                age: <span className=\"bold\">{props.patient.age}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                gender: <span className=\"bold\">{props.patient.gender}</span>\n              </Card.Text>\n              </li>\n\n\n            </ul>\n            </Row>\n          )}\n          {deleteState === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.patient)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default PatientItem;\n","import React from 'react';\n\nimport PatientItem from '../../items/patient/PatientItem';\nimport './UserList.css';\n\nconst PatientList = props => {\n\n  const {...filter} = props.filter;\n  let patients2 = props.patients;\n  let propsPatients = [];\n\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'registration.date' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.registration.date > b.registration.date) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'registration.date' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.registration.date < b.registration.date) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'loggedIn') {\n    propsPatients = patients2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field === 'patient' && filter.key === 'active') {\n    propsPatients = patients2.filter(x => x.active === filter.value);\n  }\n\n  if (filter.field !== 'patient') {\n    propsPatients = patients2;\n  }\n\n  let count = 0;\n\n  const patients = propsPatients.map(patient => {\n\n    count = propsPatients.indexOf(patient)+1;\n\n    return (\n      <PatientItem\n        key={count}\n        count={count}\n        patient={patient}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        appointmentPage={props.appointmentPage}\n        homePage={props.homePage}\n        onSelect={props.onSelect}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{patients}</ul>;\n};\n\nexport default PatientList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus,\n  faCalendarPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './AppointmentItem.css';\n\nconst AppointmentItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.appointment.title}</span>\n          </Card.Text>\n          {!props.homePage && (\n            <Card.Text className=\"cardText\">\n              Type: <span className=\"bold\">{props.appointment.type}</span>\n            </Card.Text>\n          )}\n          {!props.homePage && (\n            <Card.Text className=\"cardText\">\n              Date: <span className=\"bold\">{moment.unix(props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n            </Card.Text>\n          )}\n          {props.homePage && (\n            <Card.Text className=\"cardText\">\n              Patient: <span className=\"bold\">{props.appointment.patient._id}</span>\n            </Card.Text>\n          )}\n\n          <OverlayTrigger\n\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {props.visitPage !== true &&\n            props.showDetails && (\n              <OverlayTrigger\n\n                placement={'top'}\n                overlay={\n                  <Popover id={`popover-positioned-${'top'}`}>\n                    <Popover.Content>\n                      <strong>Go To Appointment Details</strong>\n                    </Popover.Content>\n                  </Popover>\n                }\n              >\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.appointment)}/>\n              </OverlayTrigger>\n\n          )}\n\n          {props.homePage && (\n            <Link\n              to={{\n                pathname: \"/appointments\",\n                state: {appointment: props.appointment._id}\n              }}\n            >\n            <OverlayTrigger\n\n              placement={'top'}\n              overlay={\n                <Popover id={`popover-positioned-${'top'}`}>\n                  <Popover.Content>\n                    <strong>Go To Appointment Details</strong>\n                  </Popover.Content>\n                </Popover>\n              }\n            >\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </OverlayTrigger>\n\n            </Link>\n          )}\n\n          {props.visitPage === true && (\n            <OverlayTrigger\n              \n              placement={'top'}\n              overlay={\n                <Popover id={`popover-positioned-${'top'}`}>\n                  <Popover.Content>\n                    <strong>Add/Use Appointment</strong>\n                  </Popover.Content>\n                </Popover>\n              }\n            >\n              <FontAwesomeIcon icon={faCalendarPlus} className=\"listIcon\" onClick={props.onSelect.bind(this, props.appointment)}/>\n            </OverlayTrigger>\n\n          )}\n\n          {props.canDelete && (\n            <OverlayTrigger\n\n              placement={'top'}\n              overlay={\n                <Popover id={`popover-positioned-${'top'}`}>\n                  <Popover.Content>\n                    <strong>Delete!?</strong>\n                  </Popover.Content>\n                </Popover>\n              }\n            >\n              <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n            </OverlayTrigger>\n\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.appointment._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.appointment.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.appointment.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Date: <span className=\"bold\">{moment.unix(props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                time: <span className=\"bold\">{props.appointment.time}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Patient: <span className=\"bold\">{props.appointment.patient.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                checkinTime: <span className=\"bold\">{props.appointment.checkinTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                seenTime: <span className=\"bold\">{props.appointment.seenTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                location: <span className=\"bold\">{props.appointment.location}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                description: <span className=\"bold\">{props.appointment.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                inProgress: <span className=\"bold\">{props.appointment.inProgress.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                attended: <span className=\"bold\">{props.appointment.attended.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                important: <span className=\"bold\">{props.appointment.important.toString()}</span>\n              </Card.Text>\n              </li>\n\n            </ul>\n            </Row>\n          )}\n          {deleteState === true && (\n            <Row>\n              {props.canDelete && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.appointment)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AppointmentItem;\n","import React from 'react';\nimport AppointmentItem from '../../items/appointment/AppointmentItem';\nimport './AppointmentList.css'\n\nconst AppointmentList = props => {\n\n  const {...filter} = props.filter;\n  let appointments2 = props.appointments;\n  let propsAppointments = [];\n\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType > b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType < b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time > b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time < b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location > b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location < b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'important') {\n    propsAppointments = appointments2.filter(x => x.important === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'inProgress') {\n    propsAppointments = appointments2.filter(x => x.inProgress === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'attended') {\n    propsAppointments = appointments2.filter(x => x.attended === filter.value);\n  }\n\n  if (filter.field !== 'appointment') {\n    propsAppointments = appointments2;\n  }\n\n  let count = 0;\n\n  const appointments = propsAppointments.map(appointment=> {\n\n    count = propsAppointments.indexOf(appointment);\n\n    return (\n      <AppointmentItem\n        key={count}\n        appointment={appointment}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        visitPage={props.visitPage}\n        homePage={props.homePage}\n        onSelect={props.onSelect}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{appointments}</ul>;\n};\n\nexport default AppointmentList;\n","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus\n} from '@fortawesome/free-solid-svg-icons';\n\nimport './queueItem.css';\n\nconst QueueSlotItem = props => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Number: {props.queueSlot.number}\n          </Card.Text>\n\n          <Card.Text className=\"cardText\">\n            Patient: {props.queueSlot.patient.name}\n          </Card.Text>\n          <Link\n            to={{\n              pathname: \"/patients\",\n              state: {patient: props.queueSlot.patient._id}\n            }}\n          >\n\n          <OverlayTrigger\n            key={'left'}\n            placement={'left'}\n            overlay={\n              <Popover id={`popover-positioned-${'left'}`}>\n                <Popover.Content>\n                  <strong>Go to Patient Details</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n          </OverlayTrigger>\n\n          </Link>\n\n          <Card.Text className=\"cardText\">\n            Seen: {props.queueSlot.seen === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'bottom'}\n            placement={'bottom'}\n            overlay={\n              <Popover id={`popover-positioned-${'bottom'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              {props.queueSlot.seen !== true && (\n                <Button variant=\"outline-success\" onClick={props.slotSeen.bind(this, props.queueSlot)}>Seen</Button>\n              )}\n              {props.queueSlot.seen === true && (\n                <Button variant=\"outline-success\" onClick={props.slotUnseen.bind(this, props.queueSlot)}>Un-See</Button>\n              )}\n              <li>\n\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Time: {props.queueSlot.time}\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Consultant: {props.queueSlot.consultant.username}\n              </Card.Text>\n              <Link\n                to={{\n                  pathname: \"/staff\",\n                  state: {user: props.queueSlot.consultant._id}\n                }}\n              >\n              <OverlayTrigger\n                key={'bottom'}\n                placement={'bottom'}\n                overlay={\n                  <Popover id={`popover-positioned-${'bottom'}`}>\n                    <Popover.Content>\n                      <strong>Go To Consultant Details</strong>\n                    </Popover.Content>\n                  </Popover>\n                }\n              >\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n              </OverlayTrigger>\n\n              </Link>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Seen: {props.queueSlot.seen === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n              SeenTime:\n              </Card.Text>\n\n              {props.queueSlot.seenTime && (\n                <Card.Text className=\"cardText\">\n                {props.queueSlot.seenTime}\n                </Card.Text>\n              )}\n\n              </li>\n              <li>\n              <OverlayTrigger\n                key={'right'}\n                placement={'right'}\n                overlay={\n                  <Popover id={`popover-positioned-${'right'}`}>\n                    <Popover.Content>\n                      <strong>Delete!?</strong>\n                    </Popover.Content>\n                  </Popover>\n                }\n              >\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n              </OverlayTrigger>\n\n              </li>\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.queueSlot)}>Delete</Button>\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default QueueSlotItem;\n","import React from 'react';\n\nimport QueueSlotItem from '../../items/queue/QueueSlotItem';\nimport './queueSlotList.css';\n\nconst QueueSlotList = props => {\n\n  let count = 0;\n\n  const queueSlots = props.queueSlots.map(queueSlot => {\n    count = props.queueSlots.indexOf(queueSlot)+1;\n\n    return (\n      <QueueSlotItem\n        key={count}\n        queueSlot={queueSlot}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        slotSeen={props.slotSeen}\n        slotUnseen={props.slotUnseen}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{queueSlots}</ul>;\n};\n\nexport default QueueSlotList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport moment from 'moment';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport QueueSlotList from '../../lists/queue/QueueSlotList';\n\nimport './queueItem.css';\n\nconst QueueItem = props => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n\n  return (\n    <div className=\"itemDiv\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Date: {moment.unix(props.queue.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Creator: {props.queue.creator.username}\n          </Card.Text>\n\n          <QueueSlotList\n            queueSlots={props.queue.slots}\n            slotSeen={props.slotSeen}\n            slotUnseen={props.slotUnseen}\n            onDelete={props.onDelete}\n          />\n\n        </Card.Body>\n      </Card>\n    </div>\n  )\n};\n\nexport default QueueItem;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst PatientSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"field\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Search Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>name</option>\n        <option>username</option>\n        <option>title</option>\n        <option>role</option>\n        <option>dob</option>\n        <option>age</option>\n        <option>gender</option>\n        <option>registration.date</option>\n        <option>registration.number</option>\n        <option>contact.email</option>\n        <option>contact.phone</option>\n        <option>contact.phone2</option>\n        <option>addresses.number</option>\n        <option>addresses.street</option>\n        <option>addresses.town</option>\n        <option>addresses.city</option>\n        <option>addresses.parish</option>\n        <option>addresses.country</option>\n        <option>addresses.postalCode</option>\n        <option>addresses.primary</option>\n        <option>verification.verified</option>\n        <option>expiryDate</option>\n        <option>referral.date</option>\n        <option>referral.reason</option>\n        <option>referral.physician.name</option>\n        <option>referral.physician.email</option>\n        <option>referral.physician.phone</option>\n        <option>attendingPhysician</option>\n        <option>occupation.role</option>\n        <option>occupation.employer.name</option>\n        <option>occupation.employer.phone</option>\n        <option>occupation.employer.email</option>\n        <option>insurance.company</option>\n        <option>insurance.policyNumber</option>\n        <option>insurance.description</option>\n        <option>insurance.expiryDate</option>\n        <option>insurance.subscriber.company</option>\n        <option>insurance.subscriber.description</option>\n        <option>nextOfKin.name</option>\n        <option>nextOfKin.relation</option>\n        <option>nextOfKin.contact.email</option>\n        <option>nextOfKin.contact.phone</option>\n        <option>nextOfKin.contact.phone2</option>\n        <option>allergies.type</option>\n        <option>allergies.title</option>\n        <option>allergies.description</option>\n        <option>allergies.attachments</option>\n        <option>medication.title</option>\n        <option>medication.type</option>\n        <option>medication.description</option>\n        <option>medication.attachments</option>\n        <option>images.name</option>\n        <option>images.type</option>\n        <option>images.path</option>\n        <option>files.name</option>\n        <option>files.type</option>\n        <option>files.path</option>\n        <option>notes</option>\n        <option>tags</option>\n        <option>loggedIn</option>\n        </Form.Control>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"query\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Search Query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"YYYY-MM-DD\"/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Search</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default PatientSearchForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst UserSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"field\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Search Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>title</option>\n          <option>name</option>\n          <option>username</option>\n          <option>registrationNumber</option>\n          <option>dob</option>\n          <option>age</option>\n          <option>gender</option>\n          <option>contact.email</option>\n          <option>contact.phone</option>\n          <option>contact.phone2</option>\n          <option>addresses.number</option>\n          <option>addresses.street</option>\n          <option>addresses.town</option>\n          <option>addresses.city</option>\n          <option>addresses.parish</option>\n          <option>addresses.country</option>\n          <option>addresses.postalCode</option>\n          <option>addresses.primary</option>\n          <option>loggedIn</option>\n          <option>clientConnected</option>\n          <option>verification.verified</option>\n          <option>attendance.date</option>\n          <option>attendance.status</option>\n          <option>attendance.description</option>\n          <option>leave.type</option>\n          <option>leave.startDate</option>\n          <option>leave.endDate</option>\n          <option>leave.description</option>\n          <option>images.name</option>\n          <option>images.type</option>\n          <option>images.path</option>\n          <option>files.name</option>\n          <option>files.type</option>\n          <option>files.path</option>\n          <option>notes</option>\n        </Form.Control>\n      </Form.Group>\n\n\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n    <Form.Group as={Col} controlId=\"query\" className=\"formGroup\">\n      <Form.Label className=\"formLabel\">Search Query</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"YYYY-MM-DD\"/>\n    </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Search</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default UserSearchForm;\n","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus,\n  faCalendarPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst UserItem = (props) => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n  const [deleteState, setDeleteState] = useState(false);\n  const handleDeleteStateChange = () => {\n    if (deleteState === true) {\n      setDeleteState(false);\n    }\n    if (deleteState === false) {\n      setDeleteState(true);\n    }\n   }\n\n  return (\n    <li key={props.count} className=\"userItemLi\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Username: <span className=\"bold\">{props.user.username}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            role: <span className=\"bold\">{props.user.role}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n\n          {!props.appointmentPage &&\n            !props.visitPage &&\n            props.showDetails && (\n              <OverlayTrigger\n\n                placement={'top'}\n                overlay={\n                  <Popover id={`popover-positioned-${'top'}`}>\n                    <Popover.Content>\n                      <strong>Go To Staff Details</strong>\n                    </Popover.Content>\n                  </Popover>\n                }\n              >\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.user)}/>\n              </OverlayTrigger>\n\n          )}\n\n          {props.appointmentPage && (\n            <Link\n              to={{\n                pathname: \"/staff\",\n                state: {user: props.user._id}\n              }}\n            >\n            <OverlayTrigger\n\n              placement={'top'}\n              overlay={\n                <Popover id={`popover-positioned-${'top'}`}>\n                  <Popover.Content>\n                    <strong>Go To Staff Details</strong>\n                  </Popover.Content>\n                </Popover>\n              }\n            >\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </OverlayTrigger>\n\n            </Link>\n          )}\n\n          {props.visitPage && (\n            <Link\n              to={{\n                pathname: \"/staff\",\n                state: {user: props.user._id}\n              }}\n            >\n            <OverlayTrigger\n\n              placement={'top'}\n              overlay={\n                <Popover id={`popover-positioned-${'top'}`}>\n                  <Popover.Content>\n                    <strong>Go To Staff Details</strong>\n                  </Popover.Content>\n                </Popover>\n              }\n            >\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </OverlayTrigger>\n\n            </Link>\n          )}\n\n          {props.selectUser && (\n            <OverlayTrigger\n\n              placement={'top'}\n              overlay={\n                <Popover id={`popover-positioned-${'top'}`}>\n                  <Popover.Content>\n                    <strong>Select/Add User</strong>\n                  </Popover.Content>\n                </Popover>\n              }\n            >\n              <FontAwesomeIcon icon={faUserPlus} className=\"listIcon\" onClick={props.selectUser.bind(this, props.user)}/>\n            </OverlayTrigger>\n\n          )}\n\n          {props.canDelete && (\n            <OverlayTrigger\n\n              placement={'top'}\n              overlay={\n                <Popover id={`popover-positioned-${'top'}`}>\n                  <Popover.Content>\n                    <strong>Delete!?</strong>\n                  </Popover.Content>\n                </Popover>\n              }\n            >\n              <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n            </OverlayTrigger>\n\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.user._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                name: <span className=\"bold\">{props.user.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                username: <span className=\"bold\">{props.user.username}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                title: <span className=\"bold\">{props.user.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                role: <span className=\"bold\">{props.user.role}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                dob: <span className=\"bold\">{moment.unix(props.user.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                age: <span className=\"bold\">{props.user.age}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                gender: <span className=\"bold\">{props.user.gender}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                loggedIn: <span className=\"bold\">{props.user.loggedIn === true && (<FontAwesomeIcon icon={faBatteryThreeQuarters} className=\"listIcon\"/>)} {props.user.loggedIn === false && (<FontAwesomeIcon icon={faBatteryEmpty} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n\n            </ul>\n            </Row>\n          )}\n\n          {deleteState === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.user)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from '../../items/user/UserItem';\nimport './UserList.css';\n\nconst UserList = props => {\n\n  const {...filter} = props.filter;\n  let users2 = props.users;\n  let propsUsers = [];\n\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'loggedIn') {\n    propsUsers = users2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field !== 'staff') {\n    propsUsers = users2;\n  }\n\n  let count = 0;\n\n  const users = propsUsers.map(user => {\n\n    count = propsUsers.indexOf(user)+1;\n\n    return (\n      <UserItem\n        count={count}\n        user={user}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        appointmentPage={props.appointmentPage}\n        homePage={props.homePage}\n        visitPage={props.visitPage}\n        selectUser={props.selectUser}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{users}</ul>;\n};\n\nexport default UserList;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { NavLink } from 'react-router-dom';\nimport Image from 'react-bootstrap/Image';\nimport moment from 'moment';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport PatientList from '../../components/lists/patient/PatientList';\nimport AppointmentList from '../../components/lists/appointment/AppointmentList';\nimport QueueItem from '../../components/items/queue/QueueItem';\nimport PatientSearchForm from '../../components/forms/search/PatientSearchForm';\nimport UserSearchForm from '../../components/forms/search/UserSearchForm';\nimport UserList from '../../components/lists/user/UserList';\nimport loadingGif from '../../assets/loading.gif';\nimport './landing.css';\n\nclass HomePage extends Component {\n  state = {\n    role: null,\n    userAlert: \"landing\",\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    isLoading: false,\n    seshStore: null,\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    todayAppointments: null,\n    queue: null,\n    weekImportantAppointments: null,\n    recentPatients: null,\n    queueToday: null,\n    addingQueueSlot: false,\n    queueSlotAddStage: null,\n    users: null,\n    patients: null,\n    selectedUser: null,\n    selectedPatient: null,\n    sublistPatientSearch: false,\n    sublistUserSearch: false,\n  };\n  static contextType = AuthContext;\n\n\ncomponentDidMount () {\n  console.log('...home component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n\n    this.getAppointmentsToday(seshStore);\n    this.getAppointmentsImportantWeek(seshStore);\n    this.getRecentPatients(seshStore);\n    this.getQueueToday(seshStore);\n    this.getAllPatients(seshStore);\n    this.getAllUsers(seshStore);\n\n  }\n}\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      console.log('...all users retrieval success!...');\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nloadHome = () => {\n  const args = {\n    token: this.context.token,\n    activityId: this.context.activityId\n  }\n\n  this.getAppointmentsToday(args);\n  this.getAppointmentsImportantWeek(args);\n  this.getRecentPatients(args);\n  this.getQueueToday(args);\n  this.getAllPatients(args);\n  this.getAllUsers(args);\n\n}\n\ngetAppointmentsToday = (args) => {\n  console.log('...retrieving todays appointments...');\n  this.context.setUserAlert('...retrieving todays appointments...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAppointmentsToday(\n        activityId:\"${activityId}\")\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAppointmentsToday);\n      console.log('...get todays appointments success!...');\n      let responseAlert = '...get todays appointments success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        todayAppointments: resData.data.getAppointmentsToday,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\ngetAppointmentsImportantWeek = (args) => {\n  console.log('...retrieving important appointments for week...');\n  this.context.setUserAlert('...retrieving important appointments for week...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAppointmentsImportantNextWeek(\n        activityId:\"${activityId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAppointmentsImportantNextWeek);\n      console.log('...get week important appointments success!...');\n      let responseAlert = '...get week important appointments success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        weekImportantAppointments: resData.data.getAppointmentsImportantNextWeek,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\ngetRecentPatients = (args) => {\n  console.log('...retrieving recent patients...');\n  this.context.setUserAlert('...retrieving recent patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getRecentPatients(\n        activityId:\"${activityId}\",\n        amount:7\n      )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getRecentPatients);\n      console.log('...retrieve recent patients success!...');\n      let responseAlert = '...retrieve recent patients success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        recentPatients: resData.data.getRecentPatients,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\ngetQueueToday = (args) => {\n  console.log('...retrieving todays queue...');\n  this.context.setUserAlert('...retrieving todays queue...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getQueueToday(\n        activityId:\"${activityId}\"\n      )\n      {_id,date,currentSlot,slots{number,time,patient{_id,username,name},consultant{_id,username,role},seen,seenTime},creator{_id,username,role}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getQueueToday);\n      console.log('...retrieve recent patients success!...');\n      let responseAlert = '...retrieve recent patients success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        queueToday: resData.data.getQueueToday,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nstartAddQueueSlot = () => {\n  this.setState({\n    addingQueueSlot: true,\n    queueSlotAddStage: 1\n  })\n}\ncancelAddQueueSlot = () => {\n  this.setState({\n    addingQueueSlot: false,\n    queueSlotAddStage: null\n  })\n}\ncreateQueue = () => {\n  console.log('...creating new queue...');\n  this.context.setUserAlert('...creating new queue...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n\n  let requestBody = {\n    query: `\n      mutation {createQueue(\n        activityId:\"${activityId}\"\n      )\n        {_id,date,currentSlot,slots{number,time,patient{_id,username},consultant{_id,username,role},seen,seenTime},creator{_id,username,role}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getRecentPatients);\n      console.log('...create queue success!...');\n      let responseAlert = '...create queue success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        queueToday: resData.data.createQueue,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nsubmitQueueSlotAddPatient = (args) => {\n  const queuePatients = this.state.queueToday.slots.map(x=> x.patient._id)\n  const existingPatient = queuePatients.includes(args._id);\n  console.log('1:',args);\n  console.log('2:',queuePatients);\n  console.log('3:',existingPatient);\n  if (existingPatient === true ) {\n    console.log('...this patient is already in the queue!...');\n    this.context.setUserAlert('...this patient is already in the queue!...')\n  } else {\n    this.setState({\n      selectPatient: args,\n      queueSlotAddStage: 2\n    })\n  }\n\n}\nsubmitQueueSlotAddConsultant = (args) => {\n  console.log('...creating new queue...');\n  this.context.setUserAlert('...creating new queue...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const queueId = this.state.queueToday._id;\n  const patientId = this.state.selectPatient._id;\n  const consultantId = args._id;\n\n  if (args.role !== 'Nurse' && args.role !== 'Doctor') {\n    console.log('...please choose a nurse or doctor...');\n    this.context.setUserAlert('...please choose a nurse or doctor...')\n    this.setState({isLoading: false})\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addQueueSlot(\n        activityId:\"${activityId}\",\n        queueId:\"${queueId}\",\n        patientId:\"${patientId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,date,slots{number,time,patient{_id,username,name,lastName},consultant{_id,username,role},seen,seenTime},creator{_id,username,role}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      console.log('...add queue slot success!...');\n      let responseAlert = '...add queue slot success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        queueToday: resData.data.addQueueSlot,\n        addingQueueSlot: false,\n        queueSlotAddStage: null,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\nqueueSlotSeen = (args) => {\n  console.log('...updating queue slot...');\n  this.context.setUserAlert('...updating queue slot...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const queueId = this.state.queueToday._id;\n  const slotNumber = args.number;\n\n  let requestBody = {\n    query: `\n      mutation {queueSlotSeen(\n        activityId:\"${activityId}\",\n        queueId:\"${queueId}\",\n        queueInput:{\n          slotNumber:${slotNumber}\n        })\n        {_id,date,slots{number,time,patient{_id,username,name,lastName},consultant{_id,username,role},seen,seenTime},creator{_id,username,role}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.queueSlotSeen);\n      console.log('...update queue slot seen success!...');\n      let responseAlert = '...update queue slot seen success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        queueToday: resData.data.queueSlotSeen,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\nqueueSlotUnseen = (args) => {\n  console.log('...updating queue slot...');\n  this.context.setUserAlert('...updating queue slot...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const queueId = this.state.queueToday._id;\n  const slotNumber = args.number;\n\n  let requestBody = {\n    query: `\n      mutation {queueSlotUnseen(\n        activityId:\"${activityId}\",\n        queueId:\"${queueId}\",\n        queueInput:{\n          slotNumber:${slotNumber}\n        })\n        {_id,date,slots{number,time,patient{_id,username,name,lastName},consultant{_id,username,role},seen,seenTime},creator{_id,username,role}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.queueSlotUnseen);\n      console.log('...update queue slot unseen success!...');\n      let responseAlert = '...update queue slot unseen success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        queueToday: resData.data.queueSlotUnseen,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ndeleteQueSlot = (args) => {\n  console.log('...deleting queue slot...');\n  this.context.setUserAlert('...deleting queue slot...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const queueId = this.state.queueToday._id;\n  const slotNumber = args.number;\n\n  let requestBody = {\n    query: `\n      mutation {deleteQueueSlot(\n        activityId:\"${activityId}\",\n        queueId:\"${queueId}\",\n        queueInput:{\n          slotNumber:${slotNumber}\n        })\n        {_id,date,slots{number,time,patient{_id,username,name,lastName},consultant{_id,username,role},seen,seenTime},creator{_id,username,role}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteQueueSlot);\n      console.log('...delete queue slot success!...');\n      let responseAlert = '...delete queue slot success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        queueToday: resData.data.deleteQueueSlot,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nstartPatientSearch = () => {\n  this.setState({sublistPatientSearch: true})\n}\ncancelSublistPatientSearch = () => {\n  this.setState({\n    sublistPatientSearch: false\n  })\n  this.getAllPatients({\n    activityId: this.context.activityId,\n    token: this.context.token\n   })\n}\nsubmitSublistPatientSearchForm = (event) => {\n  event.preventDefault();\n  console.log('...searching patients...');\n  this.context.setUserAlert('...searching patients...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'active' ||\n      field === 'age' ||\n      field === 'dob' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'registration.date' ||\n      field === 'expiryDate' ||\n      field === 'referral.date' ||\n      field === 'insurance.expiryDate' ||\n      field === 'insurance.expiryDate'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getPatientsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getPatientsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getPatientsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getPatientsByField);\n      }\n\n      let responseAlert = '...patient search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          patients: resData.data.getPatientsByFieldRegex,\n          activityA: `getPatientsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          patients: resData.data.getPatientsByField,\n          activityA: `getPatientsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nstartUserSearch = () => {\n  this.setState({sublistUserSearch: true})\n}\ncancelSublistUserSearch = () => {\n  this.setState({\n    sublistUserSearch: false\n  })\n  this.getAllUsers({\n    activityId: this.context.activityId,\n    token: this.context.token\n   })\n}\nsubmitSublistUserSearchForm = (event) => {\n  event.preventDefault();\n  console.log('...searching users...');\n  this.context.setUserAlert('...searching users...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'age' ||\n      field === 'dob' ||\n      field === 'employmentDate' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'attendance.date' ||\n      field === 'leave.startDate' ||\n      field === 'leave.endDate'\n    ) {\n      regex = false;\n  }\n  console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getUsersByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getUsersByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getUsersByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getUsersByField);\n      }\n\n      let responseAlert = '...staff search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          users: resData.data.getUsersByFieldRegex,\n          activityA: `getUsersByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n        this.context.activityUser = resData.data.getUsersByFieldRegex;\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          users: resData.data.getUsersByField,\n          activityA: `getUsersByField?activityId:${activityId},userId:${userId}`\n        });\n        this.context.activityUser = resData.data.getUsersByField;\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nselectPatient = (args) => {\n  console.log('...selecting...');\n  this.setState({\n    selectedPatient: args\n  })\n}\nselectUser = (args) => {\n  console.log('...selecting...');\n  this.setState({\n    selectedUser: args\n  })\n}\n\n\n\n  render() {\n\n    return (\n      <React.Fragment>\n\n      {\n        this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n          toggleOverlay={this.toggleOverlay}\n        />\n      )\n    }\n      <Container className=\"landingPageContainer\">\n\n      <Row className=\"landingPageTopRow\">\n\n        <Button variant=\"secondary\" size=\"md\" onClick={this.loadHome}>Refresh</Button>\n        {this.state.isLoading ? (\n          <Image src={loadingGif} className=\"loadingGif\" fluid />\n        ):(\n          <p>.</p>\n        )}\n\n      </Row>\n\n      <Row className=\"landingPageRow\">\n      <Col md={6} className=\"landingPageCol\">\n        <h3>Todays appts</h3>\n        {this.state.todayAppointments && (\n          <AppointmentList\n            filter={this.state.filter}\n            appointments={this.state.todayAppointments}\n            authId={this.context.activityId}\n            homePage={true}\n          />\n        )}\n      </Col>\n      <Col md={6} className=\"landingPageCol\">\n        <h3>Queue</h3>\n        {!this.state.queueToday && (\n          <React.Fragment>\n            <Button variant=\"secondary\" onClick={this.createQueue}>New</Button>\n          </React.Fragment>\n        )}\n        {this.state.queueToday && (\n          <React.Fragment>\n          {this.state.addingQueueSlot !== true && (\n            <OverlayTrigger\n              key={'right'}\n              placement={'right'}\n              overlay={\n                <Popover id={`popover-positioned-${'right'}`}>\n                  <Popover.Content>\n                    <strong>Add Patient to Queue</strong>\n                  </Popover.Content>\n                </Popover>\n              }\n            >\n              <FontAwesomeIcon icon={faUserPlus} className=\"listIcon\" onClick={this.startAddQueueSlot}/>\n            </OverlayTrigger>\n\n          )}\n          {this.state.addingQueueSlot === true && (\n            <Button variant=\"danger\" onClick={this.cancelAddQueueSlot}>Cancel</Button>\n          )}\n\n          {\n            this.state.addingQueueSlot === true &&\n            this.state.queueSlotAddStage === 1 && (\n              <React.Fragment>\n              <p>Adding Queue Slot: Patient</p>\n              <Button variant=\"primary\" onClick={this.startPatientSearch}>Search</Button>\n              <Row className=\"patientSubListRow\">\n              {this.state.sublistPatientSearch === true && (\n                <PatientSearchForm\n                  onCancel={this.cancelSublistPatientSearch}\n                  onConfirm={this.submitSublistPatientSearchForm}\n                />\n              )}\n              </Row>\n              <Row className=\"patientSubListRow\">\n              <PatientList\n                filter={this.state.filter}\n                patients={this.state.patients}\n                authId={this.context.activityId}\n                onSelect={this.submitQueueSlotAddPatient}\n                appointmentPage={true}\n              />\n              </Row>\n              </React.Fragment>\n          )}\n        {\n          this.state.addingQueueSlot === true &&\n          this.state.queueSlotAddStage === 2 && (\n            <React.Fragment>\n            <p>Adding Queue Slot: Consultant</p>\n            <Button variant=\"primary\" onClick={this.startUserSearch}>Search</Button>\n            <Row className=\"patientSubListRow\">\n            {this.state.sublistUserSearch === true && (\n              <UserSearchForm\n                onCancel={this.cancelSublistUserSearch}\n                onConfirm={this.submitSublistUserSearchForm}\n              />\n            )}\n            </Row>\n            <Row className=\"patientSubListRow\">\n            <UserList\n              filter={this.state.filter}\n              users={this.state.users}\n              authId={this.context.activityId}\n              selectUser={this.submitQueueSlotAddConsultant}\n              homePage={true}\n            />\n            </Row>\n            </React.Fragment>\n        )}\n\n          <QueueItem\n            queue={this.state.queueToday}\n            slotSeen={this.queueSlotSeen}\n            slotUnseen={this.queueSlotUnseen}\n            onDelete={this.deleteQueSlot}\n          />\n          </React.Fragment>\n        )}\n      </Col>\n      </Row>\n\n      <Row className=\"landingPageRow\">\n      <Col md={5}className=\"landingPageCol\">\n        <h3>Week's important</h3>\n        {this.state.weekImportantAppointments && (\n          <AppointmentList\n            filter={this.state.filter}\n            appointments={this.state.weekImportantAppointments}\n            authId={this.context.activityId}\n            homePage={true}\n          />\n        )}\n      </Col>\n      <Col md={4}className=\"landingPageCol\">\n        <h3>Recent patients</h3>\n        {this.state.recentPatients && (\n          <PatientList\n            filter={this.state.filter}\n            patients={this.state.recentPatients}\n            authId={this.context.activityId}\n            homePage={true}\n          />\n        )}\n      </Col>\n      <Col md={3}className=\"landingPageCol\">\n        <h3>more stats</h3>\n      </Col>\n      </Row>\n\n      </Container>\n\n      </React.Fragment>\n    );\n\n  }\n\n\n}\n\nexport default HomePage;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport './UserItem.css';\n\nconst AddressItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Town: <span className=\"bold\">{props.address.town}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Country: <span className=\"bold\">{props.address.country}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                No: <span className=\"bold\">{props.address.number}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Street: <span className=\"bold\">{props.address.street}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Town: <span className=\"bold\">{props.address.town}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                City: <span className=\"bold\">{props.address.city}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Parish: <span className=\"bold\">{props.address.parish}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Country: <span className=\"bold\">{props.address.country}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Primary: <span className=\"bold\"> {props.address.primary === true && (<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>)} {props.address.primary === false && (<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n              {props.makePrimary && (\n                <li>\n                <Button variant=\"outline-primary\" onClick={props.makePrimary.bind(this, props.address)}>Set Primary</Button>\n                </li>\n              )}\n              {props.canDelete === true && (\n                <li>\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.address)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AddressItem;\n","import React from 'react';\n\nimport AddressItem from '../../items/user/AddressItem';\nimport './UserList.css';\n\nconst UserAddressList = props => {\n\n  const {...filter} = props.filter;\n  let addresses2 = props.addresses;\n  let propsAddresses = [];\n\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number > b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number < b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street > b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street < b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town > b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town < b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city > b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city < b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish > b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish < b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country > b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country < b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode > b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode < b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'primary') {\n    propsAddresses = addresses2.filter(x => x.primary === filter.value);\n  }\n  if (filter.field !== 'address') {\n    propsAddresses = addresses2;\n  }\n\n  let count = 0;\n\n  const addresses = propsAddresses.map(address => {\n\n    count = propsAddresses.indexOf(address)+1;\n\n    return (\n      <AddressItem\n        key={count}\n        address={address}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        makePrimary={props.makePrimary}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{addresses}</ul>;\n};\n\nexport default UserAddressList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst AttendanceItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n          Date: <span className=\"bold\">{moment.unix(props.attendance.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Status: <span className=\"bold\">{props.attendance.status}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'right'}\n            placement={'right'}\n            overlay={\n              <Popover id={`popover-positioned-${'right'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n              Date: <span className=\"bold\">{moment.unix(props.attendance.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Status: <span className=\"bold\">{props.attendance.status}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.attendance.description}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <OverlayTrigger\n                  key={'right'}\n                  placement={'right'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'right'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.attendance)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default AttendanceItem;\n","import React from 'react';\n\nimport AttendanceItem from '../../items/user/AttendanceItem';\nimport './UserList.css';\n\nconst UserAttendanceList = props => {\n\n  const {...filter} = props.filter;\n  let attendance2 = props.attendance;\n  let propsAttendance = [];\n\n  if (filter.field === 'attendance' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsAttendance = attendance2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'attendance' && filter.key === 'status' && filter.value === 'Descending') {\n    propsAttendance = attendance2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'attendance' && filter.key === 'status' && filter.value === 'Ascending') {\n    propsAttendance = attendance2.sort((a, b) => (a.status > b.status) ? 1 : -1);\n  }\n  if (filter.field === 'attendance' && filter.key === 'status' && filter.value === 'Descending') {\n    propsAttendance = attendance2.sort((a, b) => (a.status < b.status) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'attendance') {\n    propsAttendance = attendance2;\n  }\n\n  let count = 0;\n\n  const attendance = propsAttendance.map(attendanceItem => {\n\n    count = propsAttendance.indexOf(attendanceItem)+1;\n\n    return (\n      <AttendanceItem\n        key={count}\n        attendance={attendanceItem}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"attendanceList\">{attendance}</ul>;\n};\n\nexport default UserAttendanceList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst LeaveItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Start: <span className=\"bold\">{moment.unix(props.leave.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.leave.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Start: <span className=\"bold\">{moment.unix(props.leave.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                End: <span className=\"bold\">{moment.unix(props.leave.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.leave.description}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.leave)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default LeaveItem;\n","import React from 'react';\n\nimport LeaveItem from '../../items/user/LeaveItem';\nimport './UserList.css';\n\nconst UserLeaveList = props => {\n\n  const {...filter} = props.filter;\n  let leave2 = props.leave;\n  let propsLeave = [];\n\n  if (filter.field === 'leave' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsLeave = leave2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'type' && filter.value === 'Descending') {\n    propsLeave = leave2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'startDate' && filter.value === 'Ascending') {\n    propsLeave = leave2.sort((a, b) => (a.startDate > b.startDate) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'startDate' && filter.value === 'Descending') {\n    propsLeave = leave2.sort((a, b) => (a.startDate < b.startDate) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'endDate' && filter.value === 'Ascending') {\n    propsLeave = leave2.sort((a, b) => (a.endDate > b.endDate) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'endDate' && filter.value === 'Descending') {\n    propsLeave = leave2.sort((a, b) => (a.endDate < b.endDate) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'leave') {\n    propsLeave = leave2;\n  }\n\n  let count = 0;\n\n  const leave = propsLeave.map(leaveItem => {\n\n    count = propsLeave.indexOf(leaveItem)+1;\n\n    return (\n      <LeaveItem\n        key={count}\n        leave={leaveItem}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"leaveList\">{leave}</ul>;\n};\n\nexport default UserLeaveList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './UserItem.css';\n\nconst ImageItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n          <a href={props.image.path} target=\"_blank\" rel=\"noopener noreferrer\">{props.image.name}</a>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.image.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.image.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.image.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.image)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n\n};\n\nexport default ImageItem;\n","import React from 'react';\n\nimport ImageItem from '../../items/user/ImageItem';\nimport './UserList.css';\n\nconst UserImageList = props => {\n\n  const {...filter} = props.filter;\n  let images2 = props.images;\n  let propsImages = [];\n\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'image') {\n    propsImages = images2;\n  }\n\n  let count = 0;\n\n  const images = propsImages.map(image => {\n\n    count = propsImages.indexOf(image)+1;\n\n    return (\n      <ImageItem\n        key={count}\n        image={image}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"imageList\">{images}</ul>;\n};\n\nexport default UserImageList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst FileItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            <a href={props.file.path} target=\"_blank\" rel=\"noopener noreferrer\">{props.file.name}</a>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.file.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.file.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.file.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.file)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default FileItem;\n","import React from 'react';\n\nimport FileItem from '../../items/patient/FileItem';\nimport './UserList.css';\n\nconst PatientFileList = props => {\n\n  const {...filter} = props.filter;\n  let files2 = props.files;\n  let propsFiles = [];\n\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'file') {\n    propsFiles = files2;\n  }\n\n  let count = 0;\n\n  const files = propsFiles.map(file => {\n\n    count = propsFiles.indexOf(file)+1;\n\n    return (\n      <FileItem\n        key={count}\n        file={file}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{files}</ul>;\n};\n\nexport default PatientFileList;\n","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst AppointmentItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.appointment.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.appointment.type}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Date: <span className=\"bold\">{moment.unix(props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          <Link\n            to={{\n              pathname: \"/appointments\",\n              state: {appointment: props.appointment._id}\n            }}\n          >\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>Go to Appointment Details</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n          </OverlayTrigger>\n\n          </Link>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.appointment._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                time: <span className=\"bold\">{props.appointment.time}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                checkinTime: <span className=\"bold\">{props.appointment.checkinTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                seenTime: <span className=\"bold\">{props.appointment.seenTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                location: <span className=\"bold\">{props.appointment.location}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                description: <span className=\"bold\">{props.appointment.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                inProgress: <span className=\"bold\">{props.appointment.inProgress.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                attended: <span className=\"bold\">{props.appointment.attended.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                important: <span className=\"bold\">{props.appointment.important.toString()}</span>\n              </Card.Text>\n              </li>\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AppointmentItem;\n","import React from 'react';\n\nimport AppointmentItem from '../../items/user/AppointmentItem';\nimport './UserList.css';\n\nconst UserAppointmentList = props => {\n\n  const {...filter} = props.filter;\n  let appointments2 = props.appointments;\n  let propsAppointments = [];\n\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType > b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType < b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time > b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time < b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location > b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location < b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'important') {\n    propsAppointments = appointments2.filter(x => x.important === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'inProgress') {\n    propsAppointments = appointments2.filter(x => x.inProgress === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'attended') {\n    propsAppointments = appointments2.filter(x => x.attended === filter.value);\n  }\n  if (filter.field !== 'appointment') {\n    propsAppointments = appointments2;\n  }\n\n  let count = 0;\n\n  const appointments = propsAppointments.map(appointment => {\n\n    count = propsAppointments.indexOf(appointment)+1;\n\n    return (\n      <AppointmentItem\n        key={count}\n        appointment={appointment}\n      />\n    );\n  });\n\n  return <ul className=\"appointmentList\">{appointments}</ul>;\n};\n\nexport default UserAppointmentList;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './UserItem.css';\n\nconst NoteItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Note: <span className=\"bold\">{props.note}</span>\n          </Card.Text>\n\n          {props.canDelete === true && (\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>Delete!?</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n        )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.note)}>Delete</Button>\n              )}\n            </Row>\n            )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\n\nimport NoteItem from '../../items/user/NoteItem';\nimport './UserList.css';\n\nconst UserNoteList = props => {\n\n  const {...filter} = props.filter;\n  let notes2 = props.notes;\n  let propsNotes = [];\n\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Ascending') {\n    propsNotes = notes2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Descending') {\n    propsNotes = notes2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'note') {\n    propsNotes = notes2;\n  }\n\n  let count = 0;\n\n  const notes = propsNotes.map(note => {\n\n    count = propsNotes.indexOf(note)+1;\n\n    return (\n      <NoteItem\n        key={count}\n        note={note}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{notes}</ul>;\n};\n\nexport default UserNoteList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAddressForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"address\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n          <option>number</option>\n          <option>street</option>\n          <option>town</option>\n          <option>city</option>\n          <option>parish</option>\n          <option>country</option>\n          <option>postalCode</option>\n          <option>primary</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAddressForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAddressForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"attendance\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n          <option>status</option>\n          <option>date</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAddressForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterLeaveForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"leave\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n          <option>type</option>\n          <option>startDate</option>\n          <option>endDate</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterLeaveForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterImageForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"image\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>type</option>\n          <option>link</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterImageForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterFileForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"file\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>type</option>\n          <option>link</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"dangers\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterFileForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAppointmentForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden={true} readOnly value=\"appointment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n          <option>title</option>\n          <option>type</option>\n          <option>subType</option>\n          <option>date</option>\n          <option>time</option>\n          <option>location</option>\n          <option>important</option>\n          <option>inProgress</option>\n          <option>attended</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAppointmentForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterNoteForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"note\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n          <option>note</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterNoteForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst UpdateUserSingleFieldForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Update Single Field</h4>\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"field\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control type=\"text\" value={props.field}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"query\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">New Data</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"(Date format = YYYY-MM-DD!!)\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn searchBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default UpdateUserSingleFieldForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './addForms.css';\n\nconst AddAddressForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Address</h4>\n    <p>required feilds are denoted by a ' * '</p>\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"number\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Address Number * </Form.Label>\n        <Form.Control type=\"number\" placeholder=\"...\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"street\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Address Street * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n\n      <Form.Group as={Col} controlId=\"town\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Address Town</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"city\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Address City * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"parish\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Address Parish</Form.Label>\n        <Form.Control as=\"select\">\n          <option>none</option>\n          <option>Clarendon</option>\n          <option>Hanover</option>\n          <option>Kingston</option>\n          <option>Manchester</option>\n          <option>Portland</option>\n          <option>St. Andrew</option>\n          <option>St. Ann</option>\n          <option>St. Catherine</option>\n          <option>St. Elizabeth</option>\n          <option>St. James</option>\n          <option>St. Mary</option>\n          <option>St. Thomas</option>\n          <option>Trelawny</option>\n          <option>Westmoreland</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"country\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Address Country * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n\n\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n\n      <Form.Group as={Col} controlId=\"postalCode\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Address PostalCode</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAddressForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddAttendanceForm = (props) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const handleChangeStartDate = startDate => {\n    setStartDate(startDate);\n    console.log(`startDate ${startDate}`);\n   }\n   const [endDate, setEndDate] = useState(new Date());\n   const handleChangeEndDate = endDate => {\n     setEndDate(endDate);\n     console.log(`endDate ${endDate}`);\n    }\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Attendance</h4>\n    <p>required feilds are denoted by a ' * '</p>\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"date\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Date * </Form.Label>\n        <Form.Control type=\"date\" placeholder=\"...\"/>\n      </Form.Group>\n      {\n        // <Form.Group as={Col} controlId=\"\">\n        //   <Form.Label>startDate</Form.Label>\n        //   <DatePicker className=\"\" id=\"startDate\"\n        //     selected={startDate}\n        //     onChange={handleChangeStartDate}\n        //   />\n        // </Form.Group>\n        // <Form.Group as={Col} controlId=\"\">\n        //   <Form.Label>startDate</Form.Label>\n        //   <DatePicker className=\"\" id=\"endDate\"\n        //     selected={endDate}\n        //     onChange={handleChangeEndDate}\n        //   />\n        // </Form.Group>\n      }\n\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n    <Form.Group as={Col} controlId=\"status\" className=\"formGroup\">\n      <Form.Label className=\"formLabel\">Status * </Form.Label>\n      <Form.Control type=\"text\" placeholder=\"present/absent\"/>\n    </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n    <Form.Group as={Col} controlId=\"description\" className=\"formGroup\">\n      <Form.Label className=\"formLabel\">Description</Form.Label>\n      <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n    </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAttendanceForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddLeaveForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Leave</h4>\n    <p>required feilds are denoted by a ' * '</p>\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"startDate\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Start Date * </Form.Label>\n        <Form.Control type=\"date\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"endDate\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">End Date * </Form.Label>\n        <Form.Control type=\"date\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"type\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Type * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"description\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddLeaveForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddNoteForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Notes</h4>\n    <p>required feilds are denoted by a ' * '</p>\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"notes\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Notes * </Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...note,note,note...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddNoteForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddImageForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Image</h4>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Image</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"...\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n  <Form.Row className=\"formBtnRow\">\n    <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n    <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddImageForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddFileForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add File</h4>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} className=\"formGroup\">\n        <Form.Label className=\"formLabel\">File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"...\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddFileForm;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport moment from 'moment';\nimport loadingGif from '../../assets/loading.gif';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport \"./menus.css\"\n\nconst FloatMenu = (props) =>{\n\nreturn (\n  <div className=\"FloatMenuTop\">\n\n  {props.state === 'menuProfile' && (\n    <ul className=\"FloatMenuList\">\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'all')}>All</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'basic')}>Basic</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'admin')}>Admin</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'address')}>Addresses</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'attendance')}>Attendance</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'leave')}>Leave</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'image')}>Images</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'file')}>Files</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'appointment')}>Appointments</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'note')}>Notes</Button>\n      </li>\n    </ul>\n  )}\n\n  {props.state === 'menuStaff' && (\n    <ul className=\"FloatMenuList\">\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'list')}>List</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'search')}>Search</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'detail')}>Detail</Button>\n      </li>\n    </ul>\n  )}\n  {props.state === 'menuPatient' && (\n    <ul className=\"FloatMenuList\">\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'list')}>List</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'search')}>Search</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'detail')}>Detail</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'new')}>New</Button>\n      </li>\n    </ul>\n  )}\n  {props.state === 'menuAppointment' && (\n    <ul className=\"FloatMenuList\">\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'list')}>List</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'search')}>Search</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'detail')}>Detail</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'new')}>New</Button>\n      </li>\n    </ul>\n  )}\n  {props.state === 'menuVisit' && (\n    <ul className=\"FloatMenuList\">\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'list')}>List</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'search')}>Search</Button>\n      </li>\n      <li>\n      <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'detail')}>Detail</Button>\n      </li>\n      {props.role === 'Nurse' && (\n        <li>\n        <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'new')}>New</Button>\n        </li>\n      )}\n      {props.role === 'Doctor' && (\n        <li>\n        <Button variant=\"light\" onClick={props.menuSelect.bind(this, 'new')}>New</Button>\n        </li>\n      )}\n    </ul>\n  )}\n  {props.subMenuState === true &&\n    props.page === 'patient' && (\n    <ul className=\"FloatSubMenuList\">\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'all')}>All</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'basic')}>Basic</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'comorbidities')}>Comorbidities</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'admin')}>Admin</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'address')}>Address</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'nextOfKin')}>Next-of-Kin</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'allergy')}>Allergy</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'medication')}>Medication</Button>\n    </li>\n\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'image')}>Image</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'file')}>File</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'appointment')}>Appointment</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'visit')}>Visit</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'note')}>Note</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'tag')}>Tag</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'doc')}>Docs</Button>\n    </li>\n    </ul>\n  )}\n  {props.subMenuState === true &&\n    props.page === 'staff' && (\n    <ul className=\"FloatSubMenuList\">\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'all')}>All</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'basic')}>Basic</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'admin')}>Admin</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'address')}>Address</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'attendance')}>Attendance</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'leave')}>Leave</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'image')}>Image</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'file')}>File</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'appointment')}>Appointment</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'note')}>Note</Button>\n    </li>\n    </ul>\n  )}\n  {props.subMenuState === true &&\n    props.page === 'appointment' && (\n    <ul className=\"FloatSubMenuList\">\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'all')}>All</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'basic')}>Basic</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'admin')}>Admin</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'consultant')}>Consultants</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'note')}>Note</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'tag')}>Tag</Button>\n    </li>\n    </ul>\n  )}\n  {props.subMenuState === true &&\n    props.page === 'visit' && (\n    <ul className=\"FloatSubMenuList\">\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'all')}>All</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'basic')}>Basic</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'comorbidities')}>Comorbidities</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'allergy')}>Allergy</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'medication')}>Medication</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'admin')}>Admin</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'consultant')}>Consultants</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'complaint')}>Complaints</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'survey')}>Surveys</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'systematicInquiry')}>Systematic Inquiry</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'vitals')}>Vitals</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'examination')}>Examination</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'investigation')}>Investigation</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'diagnosis')}>Diagnosis</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'treatment')}>Treatment</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'billing')}>Billing</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'vigilance')}>Vigilance</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'image')}>Images</Button>\n    </li>\n    <li>\n    <Button variant=\"light\" onClick={props.subMenuSelect.bind(this, 'file')}>Files</Button>\n    </li>\n    </ul>\n  )}\n\n  </div>\n)\n\n}\n\nexport default FloatMenu;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Overlay from 'react-bootstrap/Overlay';\nimport Popover from 'react-bootstrap/Popover';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\nimport S3 from 'react-aws-s3';\nimport io from 'socket.io-client';\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport UserAddressList from '../../components/lists/user/UserAddressList'\nimport UserAttendanceList from '../../components/lists/user/UserAttendanceList'\nimport UserLeaveList from '../../components/lists/user/UserLeaveList'\nimport UserImageList from '../../components/lists/user/UserImageList'\nimport UserFileList from '../../components/lists/user/UserFileList'\nimport UserAppointmentList from '../../components/lists/user/UserAppointmentList'\nimport UserNoteList from '../../components/lists/user/UserNoteList'\n\nimport FilterAddressForm from '../../components/forms/filter/FilterAddressForm';\nimport FilterAttendanceForm from '../../components/forms/filter/FilterAttendanceForm';\nimport FilterLeaveForm from '../../components/forms/filter/FilterLeaveForm';\nimport FilterImageForm from '../../components/forms/filter/FilterImageForm';\nimport FilterFileForm from '../../components/forms/filter/FilterFileForm';\nimport FilterAppointmentForm from '../../components/forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../../components/forms/filter/FilterNoteForm';\n\nimport UpdateUserSingleFieldForm from '../../components/forms/add/UpdateUserSingleFieldForm';\nimport AddAddressForm from '../../components/forms/add/AddAddressForm';\nimport AddAttendanceForm from '../../components/forms/add/AddAttendanceForm';\nimport AddLeaveForm from '../../components/forms/add/AddLeaveForm';\nimport AddNoteForm from '../../components/forms/add/AddNoteForm';\nimport AddImageForm from '../../components/forms/add/AddImageForm';\nimport AddFileForm from '../../components/forms/add/AddFileForm';\n\nimport FloatMenu from '../../components/floatMenu/FloatMenu';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './profile.css';\n\nclass MyProfilePage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menuProfile',\n    startFilter: false,\n    selectFilter: null,\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    menuSelect: 'all',\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    calendarAttendance: null,\n    calendarLeave: null,\n    calendarAppointments: null,\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.socket = io('http://localhost:9099');\n  }\n\ncomponentDidMount () {\n  console.log('...MyProfile component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getThisUser(seshStore);\n    this.getPocketVars(seshStore);\n\n  }\n}\ncomponentWillUnmount() {\n\n}\n\n\ngetPocketVars (args) {\n    console.log('...retriving pocketVars..');\n    this.context.setUserAlert('...retriving pocketVars..')\n    const token = args.token;\n    const activityId = args.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")}\n          `};\n          // **f*etch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {**\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        if (resData.errors) {\n          this.context.setUserAlert(resData.errors[0].message);\n        } else {\n          let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n          console.log('...retriving pocketVars success...');\n          this.context.setUserAlert('...retriving pocketVars success...')\n          this.setState({\n            pocketVars: pocketVarsParsed\n          });\n\n        }\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.context.setUserAlert(err);\n      });\n    }\ngetThisUser (args) {\n  console.log('...retrieving your profile info...');\n  this.context.setUserAlert('...retrieving your profile info...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getUserById(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\"\n      )\n      {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getUserById);\n      let responseAlert = '...profile retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.getUserById,\n        activityA: `getUserById?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.getUserById;\n\n      if (resData.data.getUserById.role === 'Admin') {\n        this.setState({\n          canDelete: true\n        })\n      }\n      this.parseForCalendar({\n        attendance: resData.data.getUserById.attendance,\n        leave: resData.data.getUserById.leave,\n        appointments: resData.data.getUserById.appointments,\n      })\n      this.logUserActivity(args);\n      this.props.sendSocketAdminMessage(`${activityId} just logged in...`);\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message)\n      }\n\n      if (resData.data.addUserActivity.error) {\n        this.context.setUserAlert(resData.data.addUserActivity.error)\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsubmitAddAddressForm = (event) => {\n  event.preventDefault();\n  console.log('...adding address...');\n  this.context.setUserAlert('...adding address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const number = event.target.number.value;\n  const street = event.target.street.value;\n  const town = event.target.town.value;\n  const city = event.target.city.value;\n  const parish = event.target.parish.value;\n  const country = event.target.country.value;\n  const postalCode = event.target.postalCode.value;\n\n  if (\n      number.trim().length === 0 ||\n      street.trim().length === 0 ||\n      city.trim().length === 0 ||\n      country.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${number},\n          addressStreet:\"${street}\",\n          addressTown:\"${town}\",\n          addressCity:\"${city}\",\n          addressParish:\"${parish}\",\n          addressCountry:\"${country}\",\n          addressPostalCode:\"${postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAddress);\n      let responseAlert = '...address add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserAddress,\n        activityA: `addUserAddress?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAddress = (args) => {\n  console.log('...deleting address...');\n  this.context.setUserAlert('...deleting address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      mutation {deleteUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\",\n          addressPrimary: ${args.primary}\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAddress);\n      let responseAlert = '...address delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserAddress,\n        activityA: `deleteUserAddress?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.deleteUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsetAddressPrimary = (args) => {\n  console.log('...setting primary address...');\n  this.context.setUserAlert('...setting primary address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      mutation {setUserAddressPrimary(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.setUserAddressPrimary);\n      let responseAlert = '...address set primary success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.setUserAddressPrimary,\n        activityA: `setUserAddressPrimary?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.setUserAddressPrimary;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddAttendanceForm = (event) => {\n  event.preventDefault();\n  console.log('...adding attendance...');\n  this.context.setUserAlert('...attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const attendanceDate = event.target.date.value;\n  const attendanceStatus = event.target.status.value;\n  const attendanceDescription = event.target.description.value;\n\n  if (\n      attendanceDate.trim().length === 0 ||\n      attendanceStatus.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addUserAttendance(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          attendanceDate:\"${attendanceDate}\",\n          attendanceStatus:\"${attendanceStatus}\",\n          attendanceDescription:\"${attendanceDescription}\"\n        })\n      {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAttendance);\n      let responseAlert = '...attendance add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserAttendance,\n        activityA: `addUserAttendance?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: resData.data.addUserAttendance.attendance,\n        leave: resData.data.addUserAttendance.leave,\n        appointments: resData.data.addUserAttendance.appointments,\n      })\n      this.context.activityUser = resData.data.addUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAttendance = (args) => {\n  console.log('...deleting attendance...');\n  this.context.setUserAlert('...deleting attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserAttendance(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            attendanceDate:\"${args.date}\",\n            attendanceStatus:\"${args.status}\",\n            attendanceDescription:\"${args.description}\"\n          }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAttendance);\n      let responseAlert = '...attendance delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserAttendance,\n        activityA: `deleteUserAttendance?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: resData.data.deleteUserAttendance.attendance,\n        leave: resData.data.deleteUserAttendance.leave,\n        appointments: resData.data.deleteUserAttendance.appointments,\n      })\n      this.context.activityUser = resData.data.deleteUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddLeaveForm = (event) => {\n  event.preventDefault();\n  console.log('...adding leave...');\n  this.context.setUserAlert('...leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const startDate = event.target.startDate.value;\n  const endDate = event.target.endDate.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n\n  if (\n      startDate.trim().length === 0 ||\n      endDate.trim().length === 0 ||\n      type.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addUserLeave(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          leaveType:\"${type}\",\n          leaveStartDate:\"${startDate}\",\n          leaveEndDate:\"${endDate}\",\n          leaveDescription:\"${description}\"\n        }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserLeave);\n      let responseAlert = '...leave add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserLeave,\n        activityA: `addUserLeave?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: resData.data.addUserLeave.attendance,\n        leave: resData.data.addUserLeave.leave,\n        appointments: resData.data.addUserLeave.appointments,\n      })\n      this.context.activityUser = resData.data.addUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteLeave = (args) => {\n  console.log('...deleting leave...');\n  this.context.setUserAlert('...deleting leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserLeave(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            leaveType:\"${args.type}\",\n            leaveStartDate:\"${args.startDate}\",\n            leaveEndDate:\"${args.endDate}\",\n            leaveDescription:\"${args.description}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserLeave);\n      let responseAlert = '...leave delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserLeave,\n        activityA: `deleteUserLeave?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: resData.data.addUserLeave.attendance,\n        leave: resData.data.addUserLeave.leave,\n        appointments: resData.data.addUseLeavce.appointments,\n      })\n      this.context.activityUser = resData.data.deleteUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding image...');\n  this.context.setUserAlert('...image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  const username = this.state.activityUser.username;\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+activityId+'/images';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addUserImage(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          imageName:\"${imageName}\",\n          imageType:\"${imageType}\",\n          imagePath:\"${imagePath}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserImage);\n      let responseAlert = '...image add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserImage,\n        activityA: `addUserImage?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n  console.log('...deleting image...');\n  this.context.setUserAlert('...deleting image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const username = this.state.activityUser.username;\n\n  const filePath = 'staff/'+username+'/images';\n  const filename = args.name;\n  // console.log('foo',filename);\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            imageName:\"${args.name}\",\n            imageType:\"${args.type}\",\n            imagePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserImage);\n      let responseAlert = '...image delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserImage,\n        activityA: `deleteUserImage?activityId:${activityId},userId:${userId}`,\n      });\n      this.context.activityUser = resData.data.deleteUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'staff/'+activityId+'/images';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding file...');\n  this.context.setUserAlert('...file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  const username = this.state.activityUser.username;\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+activityId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addUserFile(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          fileName:\"${file2Name}\",\n          fileType:\"${file2Type}\",\n          filePath:\"${file2Path}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserFile);\n      let responseAlert = '...file add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserFile,\n        activityA: `addUserFile?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n  console.log('...deleting file...');\n  this.context.setUserAlert('...deleting file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const username = this.state.activityUser.username;\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserFile(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            fileName:\"${args.name}\",\n            fileType:\"${args.type}\",\n            filePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserFile);\n      let responseAlert = '...file delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserFile,\n        activityA: `deleteUserFile?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.deleteUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'staff/'+activityId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding note...');\n  this.context.setUserAlert('...note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const note = event.target.notes.value;\n\n  if (\n      note.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addUserNotes(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          notes:\"${note}\"\n        }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserNotes,\n        activityA: `addUserNotes?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n  console.log('...deleting note...');\n  this.context.setUserAlert('...deleting note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  let requestBody = {\n    query: `\n        mutation {deleteUserNote(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            note: \"${args}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserNote,\n        activityA: `deleteUserNote?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.deleteUserNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  if (\n      query.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {updateUserSingleField(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateUserSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.updateUserSingleField,\n        activityA: `updateUserSingleField?activityId:${activityId},userId:${userId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.updateUserSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\ntoggleFilter = (args) => {\n  this.setState({\n    startFilter: !this.state.startFilter,\n    selectFilter: args\n  })\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing profile dates for calendar...');\n  let calendarAttendance = args.attendance.map(x => ({\n      title: x.status,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        status: x.status,\n        description: x.description,\n        field: 'attendance'\n      }\n    }))\n  let calendarLeave = args.leave.map(x => ({\n      title: x.type,\n      date: moment.unix(x.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      end: moment.unix(x.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        type: x.type,\n        startDate: x.startDate,\n        endDate: x.endDate,\n        description: x.description,\n        field: 'leave'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave\n    })\n  let calendarAppointments = args.appointments.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n        field: 'appointments'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave,\n      calendarAppointments: calendarAppointments,\n    })\n}\nviewCalendarEvent = (args) => {\n\n  let input = args.event.extendedProps.props;\n  let data;\n  if (input.field === 'attendance') {\n    data = {\n      date: input.date,\n      status: input.status,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAttendance', data: data}\n    })\n  }\n  if (input.field === 'leave') {\n    data = {\n      type: input.type,\n      startDate: input.startDate,\n      endDate: input.endDate,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarLeave', data: data}\n    })\n  }\n  if (input.field === 'appointments') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      location: input.location,\n      description: input.description,\n      important: input.important,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAppointment', data: data, goLink: true}\n    })\n  }\n}\ndateClick = (args) => {\n  console.log('dateClick',args)\n  // this.setState({\n  //   overlay: true,\n  //   overlayStatus: {type: 'calendarAppointment', data: appointment}\n  // })\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    <FloatMenu\n      state={this.state.sideCol}\n      menuSelect={this.menuSelect}\n      role={this.context.role}\n      page=\"profile\"\n    />\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <div className=\"topContainer\">\n\n      <div className=\"headTop\">\n        <Row className=\"\">\n            <h1 className=\"\">My Profile</h1>\n        </Row>\n        <Row className=\"\">\n            {this.state.isLoading ? (\n              <Image src={loadingGif} className=\"loadingGif\" fluid />\n            ):(\n              <p>.</p>\n            )}\n        </Row>\n      </div>\n\n      <Row className=\"\">\n\n        {this.state.activityUser && (\n          <Col md={12} className=\"\">\n\n          {\n          //   this.state.startFilter === true && (\n          //   <Col>\n          //     {this.state.selectFilter === 'address' && (\n          //       <FilterAddressForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'attendance' && (\n          //       <FilterAttendanceForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'leave' && (\n          //       <FilterLeaveForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'image' && (\n          //       <FilterImageForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'file' && (\n          //       <FilterFileForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'appointment' && (\n          //       <FilterAppointmentForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'note' && (\n          //       <FilterNoteForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //   </Col>\n          // )\n        }\n\n          {this.state.updateSingleField.state === true && (\n            <UpdateUserSingleFieldForm\n              field={this.state.updateSingleField.field}\n              onConfirm={this.submitUpdateSingleFieldForm}\n              onCancel={this.cancelUpdateSingleField}\n            />\n          )}\n\n          {this.state.sideCol === 'menuProfile' && (\n            <Col>\n            {this.state.menuSelect === 'all' && (\n              <Col className=\"tabCol tabColDetail\">\n              <Row className=\"tabRowAll \">\n              <ul className=\"summaryList\">\n              <li className=\"summaryListItem\">\n                <Col className=\"tabCol\">\n                <Col className=\"subTabCol\">\n                  <h3 className=\"\">Basic Info:</h3>\n                </Col>\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Title:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.title}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Name:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.name}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'name')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Username:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.username}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Role:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.role}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">DOB:</p>\n                      <p className=\"listGroupText bold\">{moment.unix(this.state.activityUser.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Age:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.age}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <p className=\"listGroupText\">Gender:</p>\n                        <p className=\"listGroupText bold\">{this.state.activityUser.gender}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Email:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.contact.email}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Phone:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.contact.phone}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Phone 2:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.contact.phone2}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Col>\n              </li>\n              <li className=\"summaryListItem\">\n                <Col className=\"tabCol\">\n                <Col className=\"subTabCol\">\n                  <h3 className=\"\">Admin Info:</h3>\n                </Col>\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Reg No:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.registrationNumber}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Employment Date:</p>\n                      {this.state.activityUser.employmentDate && (\n                        <p className=\"listGroupText bold\">{moment.unix(this.state.activityUser.employmentDate.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      )}\n\n                      {this.context.role === 'Admin' && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'employmentDate')}>Edit</Button>\n                      )}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser._id}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">LoggedIn:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.loggedIn.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">ClientConnected:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.clientConnected.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Verified:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.verification.verified.toString()}</p>\n                      <p className=\"listGroupText\">Type:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.verification.type}</p>\n                      <p className=\"listGroupText\">Code:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.verification.code}</p>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Col>\n              </li>\n              <li className=\"summaryListItem\">\n                <Col className=\"tabCol\">\n                  <Col className=\"subTabCol\">\n                    <h3 className=\"\">Addresses:</h3>\n                  </Col>\n                  <Col className=\"subTabCol\">\n                    <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'address')}>Filter</Button>\n                    <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n                  </Col>\n                  {this.state.startFilter === true &&\n                    this.state.selectFilter === 'address' && (\n                    <FilterAddressForm\n                      onCancel={this.toggleFilter}\n                      onConfirm={this.submitFilterForm}\n                    />\n                  )}\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'address' && (\n                      <AddAddressForm\n                        onConfirm={this.submitAddAddressForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserAddressList\n                    filter={this.state.filter}\n                    addresses={this.state.activityUser.addresses}\n                    authId={this.state.activityUser._id}\n                    onDelete={this.deleteAddress}\n                    canDelete={this.state.canDelete}\n                    makePrimary={this.setAddressPrimary}\n                  />\n                </Col>\n              </li>\n              <li className=\"summaryListItem\">\n                <Col className=\"tabCol\">\n                  <Col className=\"subTabCol\">\n                    <h3 className=\"\">Attendance:</h3>\n                  </Col>\n                  <Col className=\"subTabCol\">\n                    <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'attendance')}>Add</Button>\n                  </Col>\n\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'attendance' && (\n                      <AddAttendanceForm\n                        onConfirm={this.submitAddAttendanceForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\"className=\"subTabs\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    {this.state.startFilter === true &&\n                      this.state.selectFilter === 'attendance' && (\n                      <FilterAttendanceForm\n                        onCancel={this.toggleFilter}\n                        onConfirm={this.submitFilterForm}\n                      />\n                    )}\n                    <Col className=\"subTabCol\">\n                      <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'attendance')}>Filter</Button>\n                    </Col>\n                      <UserAttendanceList\n                      filter={this.state.filter}\n                      attendance={this.state.activityUser.attendance}\n                      authId={this.state.activityUser._id}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteAttendance}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <FullCalendar\n                        initialView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin, interactionPlugin]}\n                        events={this.state.calendarAttendance}\n                        eventClick={this.viewCalendarEvent}\n                        dateClick={this.dateClick}\n                      />\n                    </Tab>\n                  </Tabs>\n                </Col>\n              </li>\n              <li className=\"summaryListItem\">\n                <Col className=\"tabCol\">\n                  <Col className=\"subTabCol\">\n                    <h3 className=\"\">Leave:</h3>\n                  </Col>\n                  <Col className=\"subTabCol\">\n                    <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'leave')}>Add</Button>\n                  </Col>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'leave' && (\n                      <AddLeaveForm\n                        onConfirm={this.submitAddLeaveForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <Col className=\"subTabCol\">\n                      <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'leave')}>Filter</Button>\n                    </Col>\n                    {this.state.startFilter === true &&\n                      this.state.selectFilter === 'leave' && (\n                      <FilterLeaveForm\n                        onCancel={this.toggleFilter}\n                        onConfirm={this.submitFilterForm}\n                      />\n                    )}\n                    <UserLeaveList\n                      filter={this.state.filter}\n                      leave={this.state.activityUser.leave}\n                      authId={this.state.activityUser._id}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteLeave}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        initialView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin, interactionPlugin]}\n                        events={this.state.calendarLeave}\n                        eventClick={this.viewCalendarEvent}\n                        dateClick={this.dateClick}\n                      />\n                    </Tab>\n                  </Tabs>\n                </Col>\n              </li>\n              <li className=\"summaryListItem\">\n                <Col className=\"tabCol\">\n                  <Col className=\"subTabCol\">\n                    <h3 className=\"\">Images:</h3>\n                  </Col>\n                  <Col className=\"subTabCol\">\n                    <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'image')}>Filter</Button>\n                    <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                  </Col>\n                  {this.state.startFilter === true &&\n                    this.state.selectFilter === 'image' && (\n                    <FilterImageForm\n                      onCancel={this.toggleFilter}\n                      onConfirm={this.submitFilterForm}\n                    />\n                  )}\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'image' && (\n                      <AddImageForm\n                        onConfirm={this.submitAddImageForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserImageList\n                    filter={this.state.filter}\n                    images={this.state.activityUser.images}\n                    authId={this.state.activityUser._id}showListDetails={this.showListDetails}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteImage}\n                  />\n                </Col>\n              </li>\n              <li className=\"summaryListItem\">\n                <Col className=\"tabCol\">\n                  <Col className=\"subTabCol\">\n                    <h3 className=\"\">Files:</h3>\n                  </Col>\n                  <Col className=\"subTabCol\">\n                    <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'file')}>Filter</Button>\n                    <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                  </Col>\n                  {this.state.startFilter === true &&\n                    this.state.selectFilter === 'file' && (\n                    <FilterFileForm\n                      onCancel={this.toggleFilter}\n                      onConfirm={this.submitFilterForm}\n                    />\n                  )}\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'file' && (\n                      <AddFileForm\n                        onConfirm={this.submitAddFileForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserFileList\n                    filter={this.state.filter}\n                    files={this.state.activityUser.files}\n                    authId={this.state.activityUser._id}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteFile}\n                  />\n                </Col>\n              </li>\n              <li className=\"summaryListItem\">\n                <Col className=\"tabCol\">\n                  <Col className=\"subTabCol\">\n                    <p className=\"\">Appointments:</p>\n                  </Col>\n\n                  <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    {this.state.startFilter === true &&\n                      this.state.selectFilter === 'appointment' && (\n                      <FilterAppointmentForm\n                        onCancel={this.toggleFilter}\n                        onConfirm={this.submitFilterForm}\n                      />\n                    )}\n                    <Col className=\"subTabCol\">\n                      <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'appointment')}>Filter</Button>\n                    </Col>\n                    <UserAppointmentList\n                      filter={this.state.filter}\n                      appointments={this.state.activityUser.appointments}\n                      authId={this.state.activityUser._id}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <FullCalendar\n                        initialView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin, interactionPlugin]}\n                        events={this.state.calendarAppointments}\n                        eventClick={this.viewCalendarEvent}\n                        dateClick={this.dateClick}\n                      />\n                    </Tab>\n                  </Tabs>\n                </Col>\n              </li>\n              <li className=\"summaryListItem\">\n                <Col className=\"tabCol\">\n                  <Col className=\"subTabCol\">\n                    <h3 className=\"\">Notes:</h3>\n                  </Col>\n                  <Col className=\"subTabCol\">\n                    <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'note')}>Filter</Button>\n                    <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                  </Col>\n                  {this.state.startFilter === true &&\n                    this.state.selectFilter === 'note' && (\n                    <FilterNoteForm\n                      onCancel={this.toggleFilter}\n                      onConfirm={this.submitFilterForm}\n                    />\n                  )}\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'note' && (\n                      <AddNoteForm\n                        onConfirm={this.submitAddNoteForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserNoteList\n                    filter={this.state.filter}\n                    notes={this.state.activityUser.notes}\n                    authId={this.state.activityUser._id}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteNote}\n                  />\n                </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              </li>\n              </ul>\n              </Row>\n              </Col>\n            )}\n            {this.state.menuSelect === 'basic' && (\n            <Col className=\"tabCol\">\n            <Col className=\"subTabCol\">\n              <h3 className=\"\">Basic Info:</h3>\n            </Col>\n            <ListGroup className=\"profileBasicListGroup\">\n              <ListGroup.Item>\n                <p className=\"listGroupText\">Title:</p>\n                <p className=\"listGroupText bold\">{this.state.activityUser.title}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <p className=\"listGroupText\">Name:</p>\n                <p className=\"listGroupText bold\">{this.state.activityUser.name}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'name')}>Edit</Button>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <p className=\"listGroupText\">Username:</p>\n                <p className=\"listGroupText bold\">{this.state.activityUser.username}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <p className=\"listGroupText\">Role:</p>\n                <p className=\"listGroupText bold\">{this.state.activityUser.role}</p>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <p className=\"listGroupText\">DOB:</p>\n                <p className=\"listGroupText bold\">{moment.unix(this.state.activityUser.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <p className=\"listGroupText\">Age:</p>\n                <p className=\"listGroupText bold\">{this.state.activityUser.age}</p>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                  <p className=\"listGroupText\">Gender:</p>\n                  <p className=\"listGroupText bold\">{this.state.activityUser.gender}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <p className=\"listGroupText\">Email:</p>\n                <p className=\"listGroupText bold\">{this.state.activityUser.contact.email}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <p className=\"listGroupText\">Phone:</p>\n                <p className=\"listGroupText bold\">{this.state.activityUser.contact.phone}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <p className=\"listGroupText\">Phone 2:</p>\n                <p className=\"listGroupText bold\">{this.state.activityUser.contact.phone2}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n              </ListGroup.Item>\n            </ListGroup>\n            </Col>\n            )}\n            {this.state.menuSelect === 'admin' && (\n            <Col className=\"tabCol\">\n            <Col className=\"subTabCol\">\n              <h3 className=\"\">Admin Info:</h3>\n            </Col>\n              <ListGroup className=\"profileBasicListGroup\">\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Reg No:</p>\n                  <p className=\"listGroupText bold\">{this.state.activityUser.registrationNumber}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Employment Date:</p>\n                  {this.state.activityUser.employmentDate && (\n                    <p className=\"listGroupText bold\">{moment.unix(this.state.activityUser.employmentDate.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                  )}\n\n                  {this.context.role === 'Admin' && (\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'employmentDate')}>Edit</Button>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Id:</p>\n                  <p className=\"listGroupText bold\">{this.state.activityUser._id}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">LoggedIn:</p>\n                  <p className=\"listGroupText bold\">{this.state.activityUser.loggedIn.toString()}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">ClientConnected:</p>\n                  <p className=\"listGroupText bold\">{this.state.activityUser.clientConnected.toString()}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Verified:</p>\n                  <p className=\"listGroupText bold\">{this.state.activityUser.verification.verified.toString()}</p>\n                  <p className=\"listGroupText\">Type:</p>\n                  <p className=\"listGroupText bold\">{this.state.activityUser.verification.type}</p>\n                  <p className=\"listGroupText\">Code:</p>\n                  <p className=\"listGroupText bold\">{this.state.activityUser.verification.code}</p>\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            )}\n            {this.state.menuSelect === 'address' && (\n            <Col className=\"tabCol\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Addresses:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'address')}>Filter</Button>\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'address' && (\n                <FilterAddressForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'address' && (\n                  <AddAddressForm\n                    onConfirm={this.submitAddAddressForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <UserAddressList\n                filter={this.state.filter}\n                addresses={this.state.activityUser.addresses}\n                authId={this.state.activityUser._id}\n                onDelete={this.deleteAddress}\n                canDelete={this.state.canDelete}\n                makePrimary={this.setAddressPrimary}\n              />\n            </Col>\n            )}\n            {this.state.menuSelect === 'attendance' && (\n            <Col className=\"tabCol\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Attendance:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'attendance')}>Add</Button>\n              </Col>\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'attendance' && (\n                  <AddAttendanceForm\n                    onConfirm={this.submitAddAttendanceForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\"className=\"subTabs\">\n                <Tab eventKey=\"1\" title=\"list\">\n                <Col className=\"subTabCol\">\n                  <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'attendance')}>Filter</Button>\n                </Col>\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'attendance' && (\n                  <FilterAttendanceForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                  <UserAttendanceList\n                  filter={this.state.filter}\n                  attendance={this.state.activityUser.attendance}\n                  authId={this.state.activityUser._id}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteAttendance}\n                />\n                </Tab>\n                <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                  <FullCalendar\n                    initialView=\"dayGridMonth\"\n                    plugins={[dayGridPlugin, interactionPlugin]}\n                    events={this.state.calendarAttendance}\n                    eventClick={this.viewCalendarEvent}\n                    dateClick={this.dateClick}\n                  />\n                </Tab>\n              </Tabs>\n            </Col>\n            )}\n            {this.state.menuSelect === 'leave' && (\n            <Col className=\"tabCol\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Leave:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'leave')}>Add</Button>\n              </Col>\n\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'leave' && (\n                  <AddLeaveForm\n                    onConfirm={this.submitAddLeaveForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"1\" title=\"list\">\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'leave' && (\n                  <FilterLeaveForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                <Col className=\"subTabCol\">\n                  <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'leave')}>Filter</Button>\n                </Col>\n                <UserLeaveList\n                  filter={this.state.filter}\n                  leave={this.state.activityUser.leave}\n                  authId={this.state.activityUser._id}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteLeave}\n                />\n                </Tab>\n                <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                  <h3>Calendar</h3>\n                  <FullCalendar\n                    initialView=\"dayGridMonth\"\n                    plugins={[dayGridPlugin, interactionPlugin]}\n                    events={this.state.calendarLeave}\n                    eventClick={this.viewCalendarEvent}\n                    dateClick={this.dateClick}\n                  />\n                </Tab>\n              </Tabs>\n            </Col>\n            )}\n            {this.state.menuSelect === 'image' && (\n            <Col className=\"tabCol\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Images:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'image')}>Filter</Button>\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'image' && (\n                <FilterImageForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'image' && (\n                  <AddImageForm\n                    onConfirm={this.submitAddImageForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <UserImageList\n                filter={this.state.filter}\n                images={this.state.activityUser.images}\n                authId={this.state.activityUser._id}showListDetails={this.showListDetails}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteImage}\n              />\n            </Col>\n            )}\n            {this.state.menuSelect === 'file' && (\n            <Col className=\"tabCol\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Files:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'file')}>Filter</Button>\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'file' && (\n                <FilterFileForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'file' && (\n                  <AddFileForm\n                    onConfirm={this.submitAddFileForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <UserFileList\n                filter={this.state.filter}\n                files={this.state.activityUser.files}\n                authId={this.state.activityUser._id}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteFile}\n              />\n            </Col>\n            )}\n            {this.state.menuSelect === 'appointment' && (\n            <Col className=\"tabCol\">\n              <Col className=\"subTabCol\">\n                <p className=\"\">Appointments:</p>\n              </Col>\n              <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"1\" title=\"list\">\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'appointment' && (\n                  <FilterAppointmentForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                <Col className=\"subTabCol\">\n                  <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'appointment')}>Filter</Button>\n                </Col>\n                <UserAppointmentList\n                  filter={this.state.filter}\n                  appointments={this.state.activityUser.appointments}\n                  authId={this.state.activityUser._id}\n                />\n                </Tab>\n                <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                  <FullCalendar\n                    initialView=\"dayGridMonth\"\n                    plugins={[dayGridPlugin, interactionPlugin]}\n                    events={this.state.calendarAppointments}\n                    eventClick={this.viewCalendarEvent}\n                    dateClick={this.dateClick}\n                  />\n                </Tab>\n              </Tabs>\n            </Col>\n            )}\n            {this.state.menuSelect === 'note' && (\n            <Col className=\"tabCol\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Notes:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'note')}>Filter</Button>\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'note' && (\n                <FilterNoteForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'note' && (\n                  <AddNoteForm\n                    onConfirm={this.submitAddNoteForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <UserNoteList\n                filter={this.state.filter}\n                notes={this.state.activityUser.notes}\n                authId={this.state.activityUser._id}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteNote}\n              />\n            </Col>\n            )}\n            </Col>\n          )}\n          </Col>\n        )}\n      </Row>\n\n    </div>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default MyProfilePage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './authForms.css';\n\nconst LoginForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Login</h1>\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"username\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Username</Form.Label>\n        <Form.Control type=\"username\" placeholder=\"username\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"password\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\" />\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"searchBtn loginFormBtn\">Login</Button>\n      <Button variant=\"primary\" className=\"searchBtn \" onClick={props.onStartVerification}>Verify</Button>\n      <Button variant=\"secondary\" className=\"searchBtn loginFormBtn\" onClick={props.onStartForgotPassword}>ForgotPassword</Button>\n      <Button variant=\"warning\" className=\"searchBtn loginFormBtn\">\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default LoginForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst verifyUserForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n  <h1>Verify</h1>\n  <Form.Row className=\"formRow\">\n    <Form.Group className=\"searchInput formGroup\" controlId=\"type\">\n      <Form.Label className=\"formLabel\">Type</Form.Label>\n      <Form.Control as=\"select\">\n        <option>email</option>\n      </Form.Control>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row className=\"formRow\">\n    <Form.Group as={Col} controlId=\"username\" className=\"formGroup\">\n      <Form.Label className=\"formLabel\">Username</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"...\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row className=\"formRow\">\n    <Form.Group as={Col} controlId=\"email\" className=\"formGroup\">\n      <Form.Label className=\"formLabel\">Email</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"...\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row className=\"formRow\">\n    <Form.Group as={Col} controlId=\"code\" className=\"formGroup\">\n      <Form.Label className=\"formLabel\">Code</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"...\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row className=\"formBtnRow\">\n    {props.canCancel && (\n      <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>\n      Cancel\n      </Button>\n    )}\n\n    {props.canConfirm && (\n      <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n      Verify\n      </Button>\n    )}\n  </Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default verifyUserForm;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './ForgotPasswordForm.css';\n\nconst ForgotPasswordForm = (props) => {\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n  <h1>Forgot Password</h1>\n  <Form.Row className=\"formRow\">\n    <Form.Group as={Col} controlId=\"username\" className=\"formGroup\">\n      <Form.Label className=\"formLabel\">Username</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"...\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row className=\"formRow\">\n    <Form.Group as={Col} controlId=\"email\" className=\"formGroup\">\n      <Form.Label className=\"formLabel\">Email</Form.Label>\n      <Form.Control type=\"email\" placeholder=\"...\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row className=\"formBtnRow\">\n    <Button variant=\"danger\" className=\"formButton searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    <Button variant=\"primary\" className=\"formButton searchBtn\" type=\"submit\">Request New Password</Button>\n  </Form.Row>\n</Form>\n</div>\n\n)};\n\nexport default ForgotPasswordForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from 'moment';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport LoginForm from '../../components/forms/auth/LoginForm';\nimport VerifyUserForm from '../../components/forms/auth/VerifyUserForm';\nimport ForgotPasswordForm from '../../components/forms/auth/ForgotPasswordForm';\n\nclass LoginPage extends Component {\n  state = {\n    verifying: false,\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    userSeshStore: false,\n    user: {},\n    activityA: null,\n    requestingPasswordReset: false,\n    showForm: 'login',\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...login component mounted...');;\n  }\n\n  submitLoginForm = (event) => {\n    event.preventDefault();\n    this.context.setUserAlert(\"...submitLoginForm...\")\n    console.log(\"...submitLoginForm...\");\n\n    const username = event.target.username.value;\n    const password = event.target.password.value;\n\n    if (username.trim().length === 0 || password.trim().length === 0) {\n      this.context.setUserAlert(\"...blank required fields!!!...\")\n      return;\n    }\n    let requestBody = {\n        query: `\n          {login(username:\"${username}\",password:\"${password}\")\n          {activityId,role,token,tokenExpiration,error}}`\n        };\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.login);\n      let responseAlert = '...login success!...';\n      console.log('...login success...');\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (resData.data.login.error) {\n        error = resData.data.login.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      if (resData.data.login.token !== \"\") {\n        // this.context.login(\n        //   resData.data.login.token,\n        //   resData.data.login.activityId,\n        //   resData.data.login.role,\n        //   resData.data.login.tokenExpiration\n        // );\n        const sessionObject = {\n          token: resData.data.login.token,\n          activityId: resData.data.login.activityId,\n          role: resData.data.login.role,\n          tokenExpiration: resData.data.login.tokenExpiration\n        }\n        this.context.setUserAlert(responseAlert)\n       sessionStorage.setItem('logInfo', JSON.stringify(sessionObject));\n       console.log('...session storage set...');\n       this.setState({ activityA: `login?${sessionObject.activityId}`})\n       this.logUserActivity();\n\n       this.context.login(\n         resData.data.login.token,\n         resData.data.login.activityId,\n         resData.data.login.role,\n         resData.data.login.tokenExpiration\n       );\n      }\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n  };\n\n  logUserActivity() {\n    console.log('...logUserActivity...');\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    const activityId = seshStore.activityId;\n    const token = seshStore.token;\n    const userId = activityId;\n    const request = this.state.activityA;\n    const activityDate = moment().format('YYYY-MM-DD');\n    let requestBody = {\n      query: `\n        mutation {addUserActivity(\n          activityId:\"${activityId}\",userId:\"${userId}\",\n          userInput:{\n            activityDate:\"${activityDate}\",\n            activityRequest:\"${request}\"\n          })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n      `};\n    fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log('...resData...',resData.data.addUserActivity);\n        if (resData.errors) {\n          this.context.setUserAlert(resData.errors[0].message);\n        }\n        if (resData.data.addUserActivity.error) {\n          this.context.setUserAlert(resData.data.addUserActivity.error);\n          console.log('...resDataError...',resData.data.addUserActivity.error);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  verifyUser = (event) => {\n    event.preventDefault();\n    console.log('...verify user...');\n    const email = event.target.email.value;\n    const type = event.target.type.value;\n    const code = event.target.code.value;\n    const username = event.target.username.value;\n\n    const requestBody = {\n      query: `\n        mutation {verifyUser(\n          userInput:{\n            username:\"${username}\",\n            contactEmail:\"${email}\",\n            verificationType:\"${type}\",\n            verificationCode:\"${code}\"\n          }\n        )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log('...resData...',resData.data.verifyUser);\n        let responseAlert;\n        let error = null;\n\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n\n        this.context.setUserAlert(responseAlert)\n\n        this.context.setUserAlert('Verified...Please try loggin in again..')\n        this.setState({showForm: 'login'})\n      })\n      .catch(err => {\n        this.context.setUserAlert(err)\n      });\n  }\n\n  toggleVerification = () => {\n    if (this.state.showForm === 'verify') {\n      this.setState({\n        showForm: 'login'\n      })\n    } else {\n      this.setState({\n        showForm: 'verify'\n      })\n    }\n\n  };\n  toggleForgotPassword = () => {\n    if (this.state.showForm === 'forgotPassword') {\n      this.setState({\n        showForm: 'login'\n      })\n    } else {\n      this.setState({\n        showForm: 'forgotPassword'\n      })\n    }\n\n  }\n\n  requestPasswordReset = (event) => {\n    event.preventDefault();\n    console.log('...requesting password reset...');\n    this.setState({isLoading: true})\n\n    const username = event.target.username.value;\n    const email = event.target.email.value;\n    const requestBody = {\n      query: `\n         mutation {requestPasswordReset(\n           userInput:{\n             username:\"${username}\",\n             contactEmail:\"${email}\"\n           })\n           {_id,username,contact{email}verification{verified,type,code}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log('...resData...',resData.data.requestPasswordReset)\n        if (resData.errors) {\n          this.context.setUserAlert(resData.errors[0].message);\n        } else {\n          this.context.setUserAlert('...password reset request sent...');\n          this.setState({isLoading: false, requestingPasswordReset: false});\n          this.toggleForgotPassword();\n        }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  render() {\n    return (\n      <Container className=\"authPageContainer\">\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n      {this.state.showForm === 'login' && (\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n            <LoginForm\n              onConfirm={this.submitLoginForm}\n              onStartForgotPassword={this.toggleForgotPassword}\n              onStartVerification={this.toggleVerification}\n            />\n          </Col>\n        </Row>\n      )}\n\n      {this.state.showForm === 'verify' && (\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n            <VerifyUserForm\n              canCancel\n              canConfirm\n              onCancel={this.toggleVerification}\n              onConfirm={this.verifyUser}\n            />\n          </Col>\n        </Row>\n      )}\n\n\n      {this.state.showForm === 'forgotPassword' && (\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n            <ForgotPasswordForm\n              onCancel={this.toggleForgotPassword}\n              onConfirm={this.requestPasswordReset}\n            />\n          </Col>\n        </Row>\n      )}\n\n      </Container>\n\n    );\n  }\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './authForms.css';\n\nconst SignupForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Signup</h1>\n\n    <div className=\"formDivider1\">\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"email\">\n        <Form.Label className=\"formLabel\">Email Address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"password\">\n        <Form.Label className=\"formLabel\">Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    </div>\n\n    <div className=\"formDivider2\">\n    <Form.Row className=\"formRow\">\n\n      {\n        // <Form.Group as={Col} controlId=\"role\">\n        //   <Form.Label className=\"formLabel\">Role</Form.Label>\n        //   <Form.Control as=\"select\">\n        //     <option>Admin</option>\n        //     <option>Staff</option>\n        //     <option>Nurse</option>\n        //     <option>Doctor</option>\n        //   </Form.Control>\n        // </Form.Group>\n      }\n\n      <Form.Group as={Col} controlId=\"role\">\n        <Form.Label className=\"formLabel\">Role</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Staff</option>\n          <option>Nurse</option>\n          <option>Doctor</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label className=\"formLabel\">Title</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Mr</option>\n          <option>Mrs</option>\n          <option>Ms</option>\n          <option>Dr</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"name\">\n        <Form.Label className=\"formLabel\">Name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"username\">\n        <Form.Label className=\"formLabel\">Username</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"dob\">\n        <Form.Label className=\"formLabel\">D.O.B</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"...\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"gender\">\n        <Form.Label className=\"formLabel\">Gender</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Female</option>\n          <option>Male</option>\n          <option>Prefer Not to Say</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"phone\">\n        <Form.Label className=\"formLabel\">Phone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"phone2\">\n        <Form.Label className=\"formLabel\">Phone #2</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    </div>\n\n    <div className=\"formDivider3\">\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"addressNumber\">\n        <Form.Label className=\"formLabel\">Address Number</Form.Label>\n        <Form.Control type=\"number\" placeholder=\"...\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressStreet\">\n        <Form.Label className=\"formLabel\">Address Street</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"addressTown\">\n        <Form.Label className=\"formLabel\">Address Town</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressCity\">\n        <Form.Label className=\"formLabel\">Address City</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"addressParish\">\n        <Form.Label className=\"formLabel\">Address Parish</Form.Label>\n        <Form.Control as=\"select\">\n          <option>none</option>\n          <option>Clarendon</option>\n          <option>Hanover</option>\n          <option>Kingston</option>\n          <option>Manchester</option>\n          <option>Portland</option>\n          <option>St. Andrew</option>\n          <option>St. Ann</option>\n          <option>St. Catherine</option>\n          <option>St. Elizabeth</option>\n          <option>St. James</option>\n          <option>St. Mary</option>\n          <option>St. Thomas</option>\n          <option>Trelawny</option>\n          <option>Westmoreland</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressCountry\">\n        <Form.Label className=\"formLabel\">Address Country</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"addressPostalCode\">\n        <Form.Label className=\"formLabel\">Address Postalcode</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    </div>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"loginFormBtn searchBtn\">Signup</Button>\n      <Button variant=\"warning\" className=\"loginFormBtn searchBtn\">\n        <NavLink to=\"/login\">Login</NavLink>\n      </Button>\n    </Form.Row>\n\n\n  </Form>\n</div>\n\n)};\n\nexport default SignupForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from 'moment';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport SignupForm from '../../components/forms/auth/SignupForm';\n\nclass SignUpPage extends Component {\n  state = {\n    verifying: false,\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    userSeshStore: false,\n    user: {},\n    activityA: null,\n    requestingPasswordReset: false,\n    signupStatus: null,\n    invited: false,\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...signup component mounted...');\n    // this.context.setUserAlert('...signup component mounted...')\n  }\n\n\n  submitSignupForm = (event) => {\n    event.preventDefault();\n    this.context.setUserAlert(\"...submitSignupForm...\")\n    console.log(\"...submitSignupForm...\");\n\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n    const role = event.target.role.value;\n    const name = event.target.name.value;\n    const title = event.target.title.value;\n    const username = event.target.username.value;\n    const dob = event.target.dob.value;\n    const gender = event.target.gender.value;\n    const phone = event.target.phone.value;\n    const phone2 = event.target.phone2.value;\n    const addressNumber = event.target.addressNumber.value;\n    const addressStreet = event.target.addressStreet.value;\n    const addressTown = event.target.addressTown.value;\n    const addressCity = event.target.addressCity.value;\n    const addressParish = event.target.addressParish.value;\n    const addressCountry = event.target.addressCountry.value;\n    const addressPostalCode = event.target.addressPostalCode.value;\n\n    if (email.trim().length === 0 ||\n        password.trim().length === 0 ||\n        role.trim().length === 0 ||\n        name.trim().length === 0 ||\n        username.trim().length === 0 ||\n        dob.trim().length === 0 ||\n        gender.trim().length === 0 ||\n        phone.trim().length === 0 ||\n        phone2.trim().length === 0 ||\n        addressNumber.trim().length === 0 ||\n        addressStreet.trim().length === 0 ||\n        addressTown.trim().length === 0 ||\n        addressCity.trim().length === 0 ||\n        addressParish.trim().length === 0 ||\n        addressCountry.trim().length === 0 ||\n        addressPostalCode.trim().length === 0\n        ) {\n      this.context.setUserAlert(\"...blank required fields!!!...\");\n      return;\n    }\n    let requestBody = {\n        query: `\n            mutation {createUser(\n              userInput:{\n                password:\"${password}\",\n                title:\"${title}\",\n                name:\"${name}\",\n                role:\"${role}\",\n                username:\"${username}\",\n                dob:\"${dob}\",\n                gender:\"${gender}\",\n                contactPhone:\"${phone}\",\n                contactPhone2:\"${phone2}\",\n                contactEmail:\"${email}\",\n                addressNumber:${addressNumber},\n                addressStreet:\"${addressStreet}\",\n                addressTown:\"${addressTown}\",\n                addressCity:\"${addressCity}\",\n                addressParish:\"${addressParish}\",\n                addressCountry:\"${addressCountry}\",\n                addressPostalCode:\"${addressPostalCode}\"\n              }\n            )\n            {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n          `};\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createUser);\n      let responseAlert = '...Signup success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      responseAlert = '...verificationCode: '+resData.data.createUser.verification.code+'';\n      this.context.setUserAlert(responseAlert);\n      this.setState({signupStatus: 'success'})\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n  };\n\n  submitInviteForm = (event) => {\n    event.preventDefault()\n    console.log('...checking inviteCode...');\n    this.context.setUserAlert('...checking inviteCode...')\n\n    const challenge = event.target.inviteCode.value;\n\n    let requestBody = {\n        query: `\n            query {verifyInvitation(challenge:\"${challenge}\")}\n          `};\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data);\n      let responseAlert = '...Signup success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert);\n\n      const result = resData.data.verifyInvitation;\n      if (result === 'matched') {\n        this.setState({invited: true})\n        this.context.setUserAlert('...invite code accepted...');\n      } else {\n        this.context.setUserAlert('...invite code rejected. Check & try again...');\n      }\n\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n\n\n  }\n\n\n  render() {\n    return (\n      <Container className=\"authPageContainer\">\n        {this.state.overlay === true && (\n          <LoadingOverlay\n            status={this.state.overlayStatus}\n          />\n        )}\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n          {this.state.invited !== true && (\n            <React.Fragment>\n            <Form onSubmit={this.submitInviteForm}>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"inviteCode\">\n                  <Form.Label>inviteCode</Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"inviteCode\"/>\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row className=\"formBtnRow\">\n                <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Submit</Button>\n              </Form.Row>\n            </Form>\n            </React.Fragment>\n          )}\n\n          {this.state.signupStatus !== 'success' &&\n          this.state.invited === true && (\n            <SignupForm\n              onConfirm={this.submitSignupForm}\n            />\n          )}\n          {this.state.signupStatus === 'success' && (\n            <React.Fragment>\n              <h1>SignUp Success...Proceed to Login</h1>\n              <Button variant=\"warning\" className=\"loginFormBtn\">\n                <NavLink to=\"/login\">Login</NavLink>\n              </Button>\n            </React.Fragment>\n          )}\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default SignUpPage;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { NavLink } from 'react-router-dom';\nimport './CreateUserForm.css';\n\nconst ResetPasswordForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n\n<Form onSubmit={props.onConfirm}>\n  <h1>Reset Password</h1>\n  <Form.Row className=\"formRow\">\n    <Form.Group as={Col} controlId=\"verificationCode\" className=\"formGroup\">\n      <Form.Label className=\"formLabel\">verification Code</Form.Label>\n      <Form.Control type=\"text\" value={props.verf}/>\n    </Form.Group>\n  </Form.Row>\n  <Form.Row className=\"formRow\">\n    <Form.Group as={Col} controlId=\"password\" className=\"formGroup\">\n    <Form.Label className=\"formLabel\">Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"...\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row className=\"formBtnRow\">\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n    Reset\n    </Button>\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>\n      <NavLink to=\"/landing\">Cancel</NavLink>\n    </Button>\n  </Form.Row>\n</Form>\n\n</div>\n\n)};\n\nexport default ResetPasswordForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { useParams, NavLink, Redirect } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from 'moment';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport ResetPasswordForm from '../../components/forms/auth/ResetPasswordForm';\n\nclass PasswordResetPage extends Component {\n  state = {\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    passwordResetStatus: null,\n    user: {},\n    activityA: null,\n    activityId: null,\n    verfCode: null,\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...password component mounted...');\n    console.log();\n    this.setState({\n      activityId: this.props.location.pathname.split('@')[0].split('/')[2],\n      verfCode: this.props.location.pathname.split('@')[1]\n    })\n  }\n\n\n  submitResetPasswordForm = (event) => {\n    event.preventDefault();\n    this.context.setUserAlert(\"...submitSignupForm...\")\n    console.log(\"...submitSignupForm...\");\n\n    const password = event.target.password.value;\n    const verificationCode = this.state.verfCode;\n    const userId = this.state.activityId;\n    if (password.trim().length === 0 ||\n        verificationCode.trim().length === 0\n        ) {\n      this.context.setUserAlert(\"...blank required fields!!!...\");\n      return;\n    }\n    let requestBody = {\n        query: `\n            mutation {resetUserPassword(\n              userId:\"${userId}\",\n              userInput:{\n                verificationCode:\"${verificationCode}\",\n                password:\"${password}\"\n              })\n            {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n          `};\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      console.log('...resData...',resData.data.resetUserPassword);\n      let responseAlert = '...Password Reset Success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert);\n      this.setState({passwordResetStatus: 'success'})\n      return <Redirect to=\"/login\"/>\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n  };\n\n\n  render() {\n    return (\n      <Container className=\"authPageContainer\">\n        {this.state.overlay === true && (\n          <LoadingOverlay\n            status={this.state.overlayStatus}\n          />\n        )}\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n          {this.state.passwordResetStatus !== 'success' && (\n            <ResetPasswordForm\n              onConfirm={this.submitResetPasswordForm}\n              verf={this.state.verfCode}\n            />\n          )}\n          {this.state.passwordResetStatus === 'success' && (\n            <React.Fragment>\n              <h1>Reset Success...Proceed to Login</h1>\n            </React.Fragment>\n          )}\n\n\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default PasswordResetPage;\n","import React from 'react';\n\nimport UserItem from '../../items/user/UserItem';\nimport './UserList.css';\n\nconst SearchUserList = props => {\n\n  const {...filter} = props.filter;\n  let users2 = props.users;\n  let propsUsers = [];\n\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'loggedIn') {\n    propsUsers = users2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field !== 'staff') {\n    propsUsers = users2;\n  }\n\n  let count = 0;\n\n  const users = propsUsers.map(user => {\n\n    count = propsUsers.indexOf(user)+1;\n\n    return (\n      <UserItem\n        key={count}\n        user={user}\n        canDelete={props.canDelete}\n        showDetails={props.showDetails}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{users}</ul>;\n};\n\nexport default SearchUserList;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport FullCalendar from '@fullcalendar/react';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\nimport S3 from 'react-aws-s3';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport UserAddressList from '../lists/user/UserAddressList'\nimport UserAttendanceList from '../lists/user/UserAttendanceList'\nimport UserLeaveList from '../lists/user/UserLeaveList'\nimport UserImageList from '../lists/user/UserImageList'\nimport UserFileList from '../lists/user/UserFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport UserNoteList from '../lists/user/UserNoteList'\n\nimport FilterAddressForm from '../forms/filter/FilterAddressForm';\nimport FilterAttendanceForm from '../forms/filter/FilterAttendanceForm';\nimport FilterLeaveForm from '../forms/filter/FilterLeaveForm';\nimport FilterImageForm from '../forms/filter/FilterImageForm';\nimport FilterFileForm from '../forms/filter/FilterFileForm';\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../forms/filter/FilterNoteForm';\n\nimport UpdateUserSingleFieldForm from '../forms/add/UpdateUserSingleFieldForm';\nimport AddAddressForm from '../forms/add/AddAddressForm';\nimport AddAttendanceForm from '../forms/add/AddAttendanceForm';\nimport AddLeaveForm from '../forms/add/AddLeaveForm';\nimport AddNoteForm from '../forms/add/AddNoteForm';\nimport AddImageForm from '../forms/add/AddImageForm';\nimport AddFileForm from '../forms/add/AddFileForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass UserDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    startFilter: false,\n    selectFilter: null,\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    menuSelect: 'basic',\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    calendarAttendance: null,\n    calendarLeave: null,\n    calendarAppointments: null,\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    // this.props2 = this.props;\n  }\n\ncomponentDidMount () {\n  console.log('...staff details component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getPocketVars(seshStore);\n  }\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.setState({\n    selectedUser: this.context.selectedUser,\n    menuSelect: this.props.subMenu\n  })\n\n  this.parseForCalendar({\n    attendance: this.props.user.attendance,\n    leave: this.props.user.leave,\n    appointments: this.props.user.appointments,\n  })\n}\n// componentDidUpdate () {\n//   console.log('foo',this.props.user.appointments);\n// }\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n    console.log('...retriving pocketVars..');\n    this.context.setUserAlert('...retriving pocketVars..')\n    const token = args.token;\n    const activityId = args.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")}\n          `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          this.setState({userAlert: resData.errors[0].message})\n        } else {\n          let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n          console.log('...retriving pocketVars success...');\n          this.context.setUserAlert('...retriving pocketVars success...')\n          this.setState({\n            pocketVars: pocketVarsParsed\n          });\n        }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n    }\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message)\n      }\n      if (resData.data.addUserActivity.error) {\n        this.context.setUserAlert(resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsubmitAddAddressForm = (event) => {\n  event.preventDefault();\n  console.log('...adding address...');\n  this.context.setUserAlert('...adding address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const number = event.target.number.value;\n  const street = event.target.street.value;\n  const town = event.target.town.value;\n  const city = event.target.city.value;\n  const parish = event.target.parish.value;\n  const country = event.target.country.value;\n  const postalCode = event.target.postalCode.value;\n\n  if (\n      number.trim().length === 0 ||\n      street.trim().length === 0 ||\n      city.trim().length === 0 ||\n      country.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${number},\n          addressStreet:\"${street}\",\n          addressTown:\"${town}\",\n          addressCity:\"${city}\",\n          addressParish:\"${parish}\",\n          addressCountry:\"${country}\",\n          addressPostalCode:\"${postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAddress);\n      let responseAlert = '...address add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserAddress)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserAddress,\n        activityA: `addUserAddress?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAddress = (args) => {\n  console.log('...deleting address...');\n  this.context.setUserAlert('...deleting address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\",\n          addressPrimary: ${args.primary}\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAddress);\n      let responseAlert = '...address delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserAddress)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserAddress,\n        activityA: `deleteUserAddress?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsetAddressPrimary = (args) => {\n  console.log('...setting primary address...');\n  this.context.setUserAlert('...setting primary address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n      mutation {setUserAddressPrimary(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.setUserAddressPrimary);\n      let responseAlert = '...address set primary success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.setUserAddressPrimary)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.setUserAddressPrimary,\n        activityA: `setUserAddressPrimary?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.setUserAddressPrimary;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddAttendanceForm = (event) => {\n  event.preventDefault();\n  console.log('...adding attendance...');\n  this.context.setUserAlert('...attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const attendanceDate = event.target.date.value;\n  const attendanceStatus = event.target.status.value;\n  const attendanceDescription = event.target.description.value.replace(/\\n/g, ' ');\n\n  if (\n      attendanceDate.trim().length === 0 ||\n      attendanceStatus.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addUserAttendance(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          attendanceDate:\"${attendanceDate}\",\n          attendanceStatus:\"${attendanceStatus}\",\n          attendanceDescription:\"${attendanceDescription}\"\n        })\n      {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAttendance);\n      let responseAlert = '...attendance add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserAttendance)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserAttendance,\n        activityA: `addUserAttendance?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.addUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAttendance = (args) => {\n  console.log('...deleting attendance...');\n  this.context.setUserAlert('...deleting attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserAttendance(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            attendanceDate:\"${args.date}\",\n            attendanceStatus:\"${args.status}\",\n            attendanceDescription:\"${args.description}\"\n          }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAttendance);\n      let responseAlert = '...attendance delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserAttendance)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserAttendance,\n        activityA: `deleteUserAttendance?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.deleteUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddLeaveForm = (event) => {\n  event.preventDefault();\n  console.log('...adding leave...');\n  this.context.setUserAlert('...leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const startDate = event.target.startDate.value;\n  const endDate = event.target.endDate.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n\n  if (\n      startDate.trim().length === 0 ||\n      endDate.trim().length === 0 ||\n      type.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addUserLeave(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          leaveType:\"${type}\",\n          leaveStartDate:\"${startDate}\",\n          leaveEndDate:\"${endDate}\",\n          leaveDescription:\"${description}\"\n        }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserLeave);\n      let responseAlert = '...leave add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserLeave)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserLeave,\n        activityA: `addUserLeave?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.addUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteLeave = (args) => {\n  console.log('...deleting leave...');\n  this.context.setUserAlert('...deleting leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserLeave(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            leaveType:\"${args.type}\",\n            leaveStartDate:\"${args.startDate}\",\n            leaveEndDate:\"${args.endDate}\",\n            leaveDescription:\"${args.description}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserLeave);\n      let responseAlert = '...leave delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserLeave)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserLeave,\n        activityA: `deleteUserLeave?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.deleteUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding image...');\n  this.context.setUserAlert('...image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const username = this.props.user.username;\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+userId+'/images';\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addUserImage(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          imageName:\"${imageName}\",\n          imageType:\"${imageType}\",\n          imagePath:\"${imagePath}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserImage);\n      let responseAlert = '...image add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserImage)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserImage,\n        activityA: `addUserImage?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n  console.log('...deleting image...');\n  this.context.setUserAlert('...deleting image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const username = this.props.user.username;\n\n  const filePath = 'staff/'+username+'/images';\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            imageName:\"${args.name}\",\n            imageType:\"${args.type}\",\n            imagePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserImage);\n      let responseAlert = '...image delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserImage)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserImage,\n        activityA: `deleteUserImage?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'staff/'+userId+'/images';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding file...');\n  this.context.setUserAlert('...file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  const username = this.props.user.username;\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+userId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n      mutation {addUserFile(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          fileName:\"${file2Name}\",\n          fileType:\"${file2Type}\",\n          filePath:\"${file2Path}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserFile);\n      let responseAlert = '...file add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserFile)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserFile,\n        activityA: `addUserFile?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n  console.log('...deleting file...');\n  this.context.setUserAlert('...deleting file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const username = this.props.user.username;\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserFile(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            fileName:\"${args.name}\",\n            fileType:\"${args.type}\",\n            filePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserFile);\n      let responseAlert = '...file delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserFile)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserFile,\n        activityA: `deleteUserFile?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'staff/'+userId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding note...');\n  this.context.setUserAlert('...adding note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let note = event.target.notes.value;\n\n  if (\n      note.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  note = note.replace(/\\n/g, '');\n\n  let requestBody = {\n    query: `\n      mutation {addUserNotes(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          notes:\"${note}\"\n        }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserNotes)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserNotes,\n        activityA: `addUserNotes?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n  console.log('...deleting note...');\n  this.context.setUserAlert('...deleting note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  let requestBody = {\n    query: `\n        mutation {deleteUserNote(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            note: \"${args}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserNote)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserNote,\n        activityA: `deleteUserNote?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  if (\n      query.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {updateUserSingleField(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateUserSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.updateUserSingleField)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.updateUserSingleField,\n        activityA: `updateUserSingleField?activityId:${activityId},userId:${userId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.updateUserSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\ntoggleFilter = (args) => {\n\n  this.setState({\n    startFilter: !this.state.startFilter,\n    selectFilter: args\n  })\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing staff dates for calendar...');\n  let calendarAttendance = args.attendance.map(x => ({\n      title: x.status,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        status: x.status,\n        description: x.description,\n        field: 'attendance'\n      }\n    }))\n  let calendarLeave = args.leave.map(x => ({\n      title: x.type,\n      date: moment.unix(x.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      end: moment.unix(x.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        type: x.type,\n        startDate: x.startDate,\n        endDate: x.endDate,\n        description: x.description,\n        field: 'leave'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave\n    })\n  let calendarAppointments = args.appointments.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n        field: 'appointments',\n        patient: x.patient,\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave,\n      calendarAppointments: calendarAppointments,\n    })\n}\nviewCalendarEvent = (args) => {\n\n  let input = args.event.extendedProps.props;\n  let data;\n  if (input.field === 'attendance') {\n    data = {\n      date: input.date,\n      status: input.status,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAttendance', data: data}\n    })\n  }\n  if (input.field === 'leave') {\n    data = {\n      type: input.type,\n      startDate: input.startDate,\n      endDate: input.endDate,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarLeave', data: data}\n    })\n  }\n  if (input.field === 'appointments') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      location: input.location,\n      description: input.description,\n      important: input.important,\n      patient: input.patient,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAppointment', data: data, goLink: true}\n    })\n  }\n\n}\ndateClick = (args) => {\n  console.log('dateClick',args)\n  // this.setState({\n  //   overlay: true,\n  //   overlayStatus: {type: 'calendarAppointment', data: appointment}\n  // })\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <div className=\"detailContainer\">\n\n      <Row className=\"\">\n          {\n            !this.props.user && (\n              <h3>...</h3>\n            )\n          }\n      </Row>\n      <Row className=\"\">\n        {this.props.user && (\n          <Col md={12} className=\"\">\n\n            {\n          //     this.state.startFilter === true && (\n          //   <Col>\n          //     {this.state.selectFilter === 'address' && (\n          //       <FilterAddressForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'attendance' && (\n          //       <FilterAttendanceForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'leave' && (\n          //       <FilterLeaveForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'image' && (\n          //       <FilterImageForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'file' && (\n          //       <FilterFileForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'appointment' && (\n          //       <FilterAppointmentForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'note' && (\n          //       <FilterNoteForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //   </Col>\n          // )\n        }\n\n            {this.state.updateSingleField.state === true && (\n              <UpdateUserSingleFieldForm\n                field={this.state.updateSingleField.field}\n                onConfirm={this.submitUpdateSingleFieldForm}\n                onCancel={this.cancelUpdateSingleField}\n              />\n            )}\n\n            {this.props.subMenu === 'all' && (\n              <Row className=\"tabRowAll\">\n              <ul className=\"summaryList\">\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Basic Info:</h3>\n              </Col>\n                <ListGroup className=\"profileBasicListGroup\">\n\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Title:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.title}</p>\n                    {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                    )}\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Name:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.name}</p>\n                    {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'name')}>Edit</Button>\n                    )}\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Username:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.username}</p>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                    )}\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Role:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.role}</p>\n                    {this.context.role === 'Admin' && (\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'role')}>Edit</Button>\n                    )}\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">DOB:</p>\n                    <p className=\"listGroupText bold\">{moment.unix(this.props.user.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                    )}\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Age:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.age}</p>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Gender:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.gender}</p>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                    )}\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Email:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.contact.email}</p>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                    )}\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Phone:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.contact.phone}</p>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                    )}\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Phone 2:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.contact.phone2}</p>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                    )}\n                  </ListGroup.Item>\n                </ListGroup>\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n                <Col className=\"subTabCol\">\n                  <h3 className=\"\">Admin Info:</h3>\n                </Col>\n                <ListGroup className=\"profileBasicListGroup\">\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Reg No:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.registrationNumber}</p>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Employment Date:</p>\n                    {this.props.user.employmentDate && (\n                      <p className=\"listGroupText bold\">{moment.unix(this.props.user.employmentDate.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                    )}\n                    {this.context.role === 'Admin' && (\n                      <Button variant=\"primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'employmentDate')}>Edit</Button>\n                    )}\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Id:</p>\n                    <p className=\"listGroupText bold\">{this.props.user._id}</p>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">LoggedIn:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.loggedIn.toString()}</p>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">ClientConnected:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.clientConnected.toString()}</p>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Verified:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.verification.verified.toString()}</p>\n                    <p className=\"listGroupText\">Type:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.verification.type}</p>\n                    <p className=\"listGroupText\">Code:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.verification.code}</p>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Addresses:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'address')}>Filter</Button>\n                {this.state.canDelete === true && (\n                  <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'address' && (\n                <FilterAddressForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'address' && (\n                    <AddAddressForm\n                      onConfirm={this.submitAddAddressForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <UserAddressList\n                  filter={this.state.filter}\n                  addresses={this.props.user.addresses}\n                  authId={this.context.activityId}\n                  onDelete={this.deleteAddress}\n                  canDelete={this.state.canDelete}\n                  makePrimary={this.setAddressPrimary}\n                />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n\n              <Col className=\"subTabCol\">\n              <h3>Attendance:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                {this.state.canDelete === true && (\n                  <Button variant=\"success\" onClick={this.startAdd.bind(this, 'attendance')}>Add</Button>\n                )}\n              </Col>\n\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'attendance' && (\n                  <AddAttendanceForm\n                    onConfirm={this.submitAddAttendanceForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"1\" title=\"list\">\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'attendance' && (\n                  <FilterAttendanceForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                <Col className=\"subTabCol\">\n                  <Button variant=\"primary\" onClick={this.toggleFilter.bind(this, 'attendance')}>Filter</Button>\n                </Col>\n                <UserAttendanceList\n                  filter={this.state.filter}\n                  attendance={this.props.user.attendance}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteAttendance}\n                />\n                </Tab>\n                <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                  <FullCalendar\n                    initialView=\"dayGridMonth\"\n                    plugins={[dayGridPlugin, interactionPlugin]}\n                    events={this.state.calendarAttendance}\n                    eventClick={this.viewCalendarEvent}\n                    dateClick={this.dateClick}\n                  />\n                </Tab>\n              </Tabs>\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n              <h3>Leave:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                {this.state.canDelete === true && (\n                  <Button variant=\"success\" onClick={this.startAdd.bind(this, 'leave')}>Add</Button>\n                )}\n              </Col>\n\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'leave' && (\n                  <AddLeaveForm\n                    onConfirm={this.submitAddLeaveForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"1\" title=\"list\">\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'leave' && (\n                  <FilterLeaveForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                <Col className=\"subTabCol\">\n                  <Button variant=\"primary\" onClick={this.toggleFilter.bind(this, 'leave')}>Filter</Button>\n                </Col>\n                <UserLeaveList\n                  filter={this.state.filter}\n                  leave={this.props.user.leave}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteLeave}\n                />\n                </Tab>\n                <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                  <h3>Calendar</h3>\n                  <FullCalendar\n                    initialView=\"dayGridMonth\"\n                    plugins={[dayGridPlugin, interactionPlugin]}\n                    events={this.state.calendarLeave}\n                    eventClick={this.viewCalendarEvent}\n                    dateClick={this.dateClick}\n                  />\n                </Tab>\n              </Tabs>\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n              <h3>Images:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'image')}>Filter</Button>\n                {this.state.canDelete === true && (\n                  <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'image' && (\n                <FilterImageForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'image' && (\n                  <AddImageForm\n                    onConfirm={this.submitAddImageForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <UserImageList\n                filter={this.state.filter}\n                images={this.props.user.images}\n                authId={this.context.activityId}\n                showListDetails={this.showListDetails}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteImage}\n              />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n              <h3>Files:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'file')}>Filter</Button>\n                {this.state.canDelete === true && (\n                  <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'file' && (\n                <FilterFileForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'file' && (\n                  <AddFileForm\n                    onConfirm={this.submitAddFileForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <UserFileList\n                filter={this.state.filter}\n                files={this.props.user.files}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteFile}\n              />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n              <h3>Appointments:</h3>\n              </Col>\n\n              <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"1\" title=\"list\">\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'appointment' && (\n                  <FilterAppointmentForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                <Col className=\"subTabCol\">\n                  <Button variant=\"primary\" onClick={this.toggleFilter.bind(this, 'appointment')}>Filter</Button>\n                </Col>\n                <UserAppointmentList\n                  filter={this.state.filter}\n                  appointments={this.props.user.appointments}\n                  authId={this.context.activityId}\n                />\n                </Tab>\n                <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                  <h3>Calendar</h3>\n                  <FullCalendar\n                    initialView=\"dayGridMonth\"\n                    plugins={[dayGridPlugin, interactionPlugin]}\n                    events={this.state.calendarAppointments}\n                    eventClick={this.viewCalendarEvent}\n                    dateClick={this.dateClick}\n                  />\n                </Tab>\n              </Tabs>\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n              <h3>Notes:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'note')}>Filter</Button>\n                {this.state.canDelete === true && (\n                  <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'note' && (\n                <FilterNoteForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'note' && (\n                  <AddNoteForm\n                    onConfirm={this.submitAddNoteForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <UserNoteList\n                filter={this.state.filter}\n                notes={this.props.user.notes}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteNote}\n              />\n              </Col>\n              </li>\n              </ul>\n              </Row>\n            )}\n\n            {this.props.subMenu === 'basic' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Basic Info:</h3>\n              </Col>\n              <ListGroup className=\"profileBasicListGroup\">\n\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Title:</p>\n                  <p className=\"listGroupText bold\">{this.props.user.title}</p>\n                  {this.state.canDelete === true && (\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Name:</p>\n                  <p className=\"listGroupText bold\">{this.props.user.name}</p>\n                  {this.state.canDelete === true && (\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'name')}>Edit</Button>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Username:</p>\n                  <p className=\"listGroupText bold\">{this.props.user.username}</p>\n                  {this.state.canDelete === true && (\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Role:</p>\n                  <p className=\"listGroupText bold\">{this.props.user.role}</p>\n                  {this.context.role === 'Admin' && (\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'role')}>Edit</Button>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">DOB:</p>\n                  <p className=\"listGroupText bold\">{moment.unix(this.props.user.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                  {this.state.canDelete === true && (\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Age:</p>\n                  <p className=\"listGroupText bold\">{this.props.user.age}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Gender:</p>\n                  <p className=\"listGroupText bold\">{this.props.user.gender}</p>\n                  {this.state.canDelete === true && (\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Email:</p>\n                  <p className=\"listGroupText bold\">{this.props.user.contact.email}</p>\n                  {this.state.canDelete === true && (\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Phone:</p>\n                  <p className=\"listGroupText bold\">{this.props.user.contact.phone}</p>\n                  {this.state.canDelete === true && (\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Phone 2:</p>\n                  <p className=\"listGroupText bold\">{this.props.user.contact.phone2}</p>\n                  {this.state.canDelete === true && (\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n              </Col>\n            )}\n            {this.props.subMenu === 'admin' && (\n              <Col className=\"tabCol2\">\n                <Col className=\"subTabCol\">\n                  <h3 className=\"\">Admin Info:</h3>\n                </Col>\n                <ListGroup className=\"profileBasicListGroup\">\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Reg No:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.registrationNumber}</p>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Employment Date:</p>\n                    {this.props.user.employmentDate && (\n                      <p className=\"listGroupText bold\">{moment.unix(this.props.user.employmentDate.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                    )}\n                    {this.context.role === 'Admin' && (\n                      <Button variant=\"primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'employmentDate')}>Edit</Button>\n                    )}\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Id:</p>\n                    <p className=\"listGroupText bold\">{this.props.user._id}</p>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">LoggedIn:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.loggedIn.toString()}</p>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">ClientConnected:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.clientConnected.toString()}</p>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Verified:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.verification.verified.toString()}</p>\n                    <p className=\"listGroupText\">Type:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.verification.type}</p>\n                    <p className=\"listGroupText\">Code:</p>\n                    <p className=\"listGroupText bold\">{this.props.user.verification.code}</p>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Col>\n            )}\n            {this.props.subMenu === 'address' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Addresses:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'address')}>Filter</Button>\n                {this.state.canDelete === true && (\n                  <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'address' && (\n                <FilterAddressForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'address' && (\n                    <AddAddressForm\n                      onConfirm={this.submitAddAddressForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <UserAddressList\n                  filter={this.state.filter}\n                  addresses={this.props.user.addresses}\n                  authId={this.context.activityId}\n                  onDelete={this.deleteAddress}\n                  canDelete={this.state.canDelete}\n                  makePrimary={this.setAddressPrimary}\n                />\n              </Col>\n            )}\n            {this.props.subMenu === 'attendance' && (\n              <Col className=\"tabCol2\">\n\n              <Col className=\"subTabCol\">\n              <h3>Attendance:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                {this.state.canDelete === true && (\n                  <Button variant=\"success\" onClick={this.startAdd.bind(this, 'attendance')}>Add</Button>\n                )}\n              </Col>\n\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'attendance' && (\n                  <AddAttendanceForm\n                    onConfirm={this.submitAddAttendanceForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"1\" title=\"list\">\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'attendance' && (\n                  <FilterAttendanceForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                <Col className=\"subTabCol\">\n                  <Button variant=\"primary\" onClick={this.toggleFilter.bind(this, 'attendance')}>Filter</Button>\n                </Col>\n                <UserAttendanceList\n                  filter={this.state.filter}\n                  attendance={this.props.user.attendance}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteAttendance}\n                />\n                </Tab>\n                <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                  <FullCalendar\n                    initialView=\"dayGridMonth\"\n                    plugins={[dayGridPlugin, interactionPlugin]}\n                    events={this.state.calendarAttendance}\n                    eventClick={this.viewCalendarEvent}\n                    dateClick={this.dateClick}\n                  />\n                </Tab>\n              </Tabs>\n              </Col>\n            )}\n            {this.props.subMenu === 'leave' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n              <h3>Leave:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                {this.state.canDelete === true && (\n                  <Button variant=\"success\" onClick={this.startAdd.bind(this, 'leave')}>Add</Button>\n                )}\n              </Col>\n\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'leave' && (\n                  <AddLeaveForm\n                    onConfirm={this.submitAddLeaveForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"1\" title=\"list\">\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'leave' && (\n                  <FilterLeaveForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                <Col className=\"subTabCol\">\n                  <Button variant=\"primary\" onClick={this.toggleFilter.bind(this, 'leave')}>Filter</Button>\n                </Col>\n                <UserLeaveList\n                  filter={this.state.filter}\n                  leave={this.props.user.leave}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteLeave}\n                />\n                </Tab>\n                <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                  <h3>Calendar</h3>\n                  <FullCalendar\n                    initialView=\"dayGridMonth\"\n                    plugins={[dayGridPlugin, interactionPlugin]}\n                    events={this.state.calendarLeave}\n                    eventClick={this.viewCalendarEvent}\n                    dateClick={this.dateClick}\n                  />\n                </Tab>\n              </Tabs>\n              </Col>\n            )}\n            {this.props.subMenu === 'image' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n              <h3>Images:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'image')}>Filter</Button>\n                {this.state.canDelete === true && (\n                  <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'image' && (\n                <FilterImageForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'image' && (\n                  <AddImageForm\n                    onConfirm={this.submitAddImageForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <UserImageList\n                filter={this.state.filter}\n                images={this.props.user.images}\n                authId={this.context.activityId}\n                showListDetails={this.showListDetails}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteImage}\n              />\n              </Col>\n            )}\n            {this.props.subMenu === 'file' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n              <h3>Files:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'file')}>Filter</Button>\n                {this.state.canDelete === true && (\n                  <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'file' && (\n                <FilterFileForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'file' && (\n                  <AddFileForm\n                    onConfirm={this.submitAddFileForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <UserFileList\n                filter={this.state.filter}\n                files={this.props.user.files}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteFile}\n              />\n              </Col>\n            )}\n            {this.props.subMenu === 'appointment' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n              <h3>Appointments:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" onClick={this.toggleFilter}>Filter</Button>\n              </Col>\n              <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"1\" title=\"list\">\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'appointment' && (\n                  <FilterAppointmentForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                <Col className=\"subTabCol\">\n                  <Button variant=\"primary\" onClick={this.toggleFilter.bind(this, 'appointment')}>Filter</Button>\n                </Col>\n                <UserAppointmentList\n                  filter={this.state.filter}\n                  appointments={this.props.user.appointments}\n                  authId={this.context.activityId}\n                />\n                </Tab>\n                <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                  <h3>Calendar</h3>\n                  <FullCalendar\n                    initialView=\"dayGridMonth\"\n                    plugins={[dayGridPlugin, interactionPlugin]}\n                    events={this.state.calendarAppointments}\n                    eventClick={this.viewCalendarEvent}\n                    dateClick={this.dateClick}\n                  />\n                </Tab>\n              </Tabs>\n              </Col>\n            )}\n            {this.props.subMenu === 'note' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n              <h3>Notes:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'note')}>Filter</Button>\n                {this.state.canDelete === true && (\n                  <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'note' && (\n                <FilterNoteForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'note' && (\n                  <AddNoteForm\n                    onConfirm={this.submitAddNoteForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <UserNoteList\n                filter={this.state.filter}\n                notes={this.props.user.notes}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteNote}\n              />\n              </Col>\n            )}\n          </Col>\n        )}\n      </Row>\n    </div>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default UserDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterUserForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"staff\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>username</option>\n          <option>title</option>\n          <option>role</option>\n          <option>dob</option>\n          <option>age</option>\n          <option>gender</option>\n          <option>loggedIn</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterUserForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport UserList from '../../components/lists/user/UserList';\nimport SearchUserList from '../../components/lists/user/SearchUserList';\nimport UserDetail from '../../components/details/UserDetail';\n\nimport FilterUserForm from '../../components/forms/filter/FilterUserForm';\nimport UserSearchForm from '../../components/forms/search/UserSearchForm';\n\nimport FloatMenu from '../../components/floatMenu/FloatMenu';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './staff.css';\n\nclass StaffPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    searchUsers: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menuStaff',\n    startFilter: false,\n    selectFilter: null,\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    menuSelect: 'list',\n    subMenuState: false,\n    subMenu: 'all',\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    canDelete: false,\n    fromGoLink: null,\n    goLinkId: null,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all users component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    if (this.props.location.state) {\n      if (this.props.location.state.user) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.user\n        })\n      }\n    }\n    this.getAllUsers(seshStore);\n    if (this.props.selectedUser) {\n      console.log('...found existing user selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedUser: this.props.selectedUser\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id,name},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      console.log('...all users retrieval success!...');\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkUser = resData.data.getAllUsers.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedUser: goLinkUser,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n        activityA: `getAllUsers?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message);\n      }\n      if (resData.data.error) {\n        this.context.setUserAlert(resData.data.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchUsers = (event) => {\n  event.preventDefault();\n  console.log('...searching users...');\n  this.context.setUserAlert('...searching users...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'age' ||\n      field === 'dob' ||\n      field === 'employmentDate' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'attendance.date' ||\n      field === 'leave.startDate' ||\n      field === 'leave.endDate'\n    ) {\n      regex = false;\n  }\n  console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getUsersByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getUsersByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getUsersByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getUsersByField);\n      }\n\n      let responseAlert = '...staff search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchUsers: resData.data.getUsersByFieldRegex,\n          activityA: `getUsersByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n        this.context.activityUser = resData.data.getUsersByFieldRegex;\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchUsers: resData.data.getUsersByField,\n          activityA: `getUsersByField?activityId:${activityId},userId:${userId}`\n        });\n        this.context.activityUser = resData.data.getUsersByField;\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\ntoggleFilter = () => {\n  this.setState({\n    startFilter: !this.state.startFilter,\n  })\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n  if (args === 'detail' && this.state.selectedUser) {\n    this.setState({\n      subMenuState: true\n    })\n  } else {\n    this.setState({\n      subMenuState: false\n    })\n  }\n}\nsubMenuSelect = (args) => {\n  this.setState({\n    subMenu: args\n  })\n}\n\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nshowDetails = (args) => {\n  this.setState({\n    showDetails: true,\n    selectedUser: args,\n    tabKey: 'detail',\n    menuSelect: 'detail',\n    subMenuState: true\n  })\n  this.props.selectUser(args);\n  this.props.sendSocketNotification({userId:args._id,data:`${this.context.activityId} is watching you...`});\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nupdateUser = (args) => {\n  console.log('...updating user...');\n  this.setState({\n    selectedUser: args\n  })\n  this.props.selectUser(args);\n}\ndeleteUser = (args) => {\n  console.log('...deleteing user...',args);\n  this.context.setUserAlert('...deleteing user...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteUserById(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\"\n      )\n      {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserById);\n      let responseAlert = '...delete user success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteUserById?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllUsers({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\nclearSearch = () => {\n  this.setState({\n    searchUsers: null\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n    <FloatMenu\n      state={this.state.sideCol}\n      menuSelect={this.menuSelect}\n      subMenuState={this.state.subMenuState}\n      subMenu={this.state.subMenu}\n      subMenuSelect={this.subMenuSelect}\n      page='staff'\n      role={this.context.role}\n    />\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <div className=\"topContainer\">\n      <div className=\"headTop\">\n        <Row className=\"\">\n          <h1>Staff:\n          {this.state.showDetails === true &&\n            this.state.selectedUser &&\n            this.state.tabKey === 'detail' && (\n              this.state.selectedUser.name\n            )}</h1>\n        </Row>\n        <Row className=\"\">\n            {this.state.isLoading ? (\n              <Image src={loadingGif} className=\"loadingGif\" fluid />\n            ):(\n              <p>.</p>\n            )}\n        </Row>\n      </div>\n\n      <Row className=\"\">\n        {this.state.users && (\n          <Col md={12} className=\"\">\n\n          {this.state.startFilter === true && (\n            <Col>\n              <FilterUserForm\n                onCancel={this.toggleFilter}\n                onConfirm={this.submitFilterForm}\n              />\n            </Col>\n          )}\n          {this.state.menuSelect === 'list' && (\n            <Col className=\"tabCol\">\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter}>Filter</Button>\n                <Button variant=\"warning\" className=\"searchBtn\" onClick={this.resetFilter}>Reset Filter</Button>\n              </Col>\n              <UserList\n                filter={this.state.filter}\n                users={this.state.users}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                showDetails={this.showDetails}\n                onDelete={this.deleteUser}\n              />\n            </Col>\n          )}\n          {this.state.menuSelect === 'search' && (\n            <Col className=\"tabCol\">\n\n              <Col className=\"subTabCol\">\n              <h3>Search</h3>\n                <Row className=\"\">\n                  <UserSearchForm\n                    onConfirm={this.searchUsers}\n                    onCancel={this.clearSearch}\n                  />\n                </Row>\n                <Row>\n                  {this.state.searchUsers && (\n                    <Button variant=\"primary\" className=\"centered_btn\" onClick={this.toggleFilter}>Filter</Button>\n                  )}\n                </Row>\n                <Row className=\"\">\n                  {this.state.searchUsers && (\n                    <SearchUserList\n                      filter={this.state.filter}\n                      users={this.state.searchUsers}\n                      authId={this.context.activityId}\n                      showDetails={this.showDetails}\n                    />\n                  )}\n                </Row>\n              </Col>\n            </Col>\n          )}\n          {this.state.menuSelect === 'detail' && (\n            <Col className=\"tabCol tabColDetail\">\n              {this.state.showDetails === false &&\n                !this.state.selectedUser &&(\n                <h3>Select a Staff Member to see details</h3>\n              )}\n              {this.state.showDetails === true &&\n                this.state.selectedUser && (\n                  <UserDetail\n                    user={this.state.selectedUser}\n                    updateUser={this.updateUser}\n                    subMenu={this.state.subMenu}\n                  />\n              )}\n            </Col>\n          )}\n\n          </Col>\n        )}\n      </Row>\n    </div>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default StaffPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './createForms.css';\nimport moment from 'moment';\n\nconst CreatePatientForm = (props) => {\n  const today = moment().format('YYYY-MM-DD')\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Create Patient Form</h1>\n    <p> \" * \" indicates required fields...</p>\n\n    <div className=\"formDivider1\">\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"title\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Title *</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Mr</option>\n          <option>Mrs</option>\n          <option>Ms</option>\n          <option>Dr</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"name\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">First Name *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"lastName\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Last Name *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"username\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">username *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"role\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">role </Form.Label>\n        <Form.Control type=\"text\" value=\"...\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"contactEmail\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">email *</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"dob\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">dob *</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"...\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"gender\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">gender *</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Female</option>\n          <option>Male</option>\n          <option>Prefer Not to Say</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n    <Form.Group as={Col} controlId=\"contactPhone\" className=\"formGroup\">\n      <Form.Label className=\"formLabel\">phone *</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"...\"/>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"contactPhone2\" className=\"formGroup\">\n      <Form.Label className=\"formLabel\">phone2</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"...\"/>\n    </Form.Group>\n    </Form.Row>\n    </div>\n\n    <div className=\"formDivider2\">\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"addressNumber\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">addressNumber</Form.Label>\n        <Form.Control type=\"number\" placeholder=\"...\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressStreet\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">addressStreet</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"addressTown\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">addressTown</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressCity\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">addressCity</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"addressParish\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">addressParish</Form.Label>\n        <Form.Control as=\"select\">\n          <option>none</option>\n          <option>Clarendon</option>\n          <option>Hanover</option>\n          <option>Kingston</option>\n          <option>Manchester</option>\n          <option>Portland</option>\n          <option>St. Andrew</option>\n          <option>St. Ann</option>\n          <option>St. Catherine</option>\n          <option>St. Elizabeth</option>\n          <option>St. James</option>\n          <option>St. Mary</option>\n          <option>St. Thomas</option>\n          <option>Trelawny</option>\n          <option>Westmoreland</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressCountry\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">addressCountry</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n    <Form.Group as={Col} controlId=\"addressPostalCode\" className=\"formGroup\">\n      <Form.Label className=\"formLabel\">addressPostalCode</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"...\"/>\n    </Form.Group>\n    </Form.Row>\n    </div>\n\n    <div className=\"formDivider3\">\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"referralDate\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">referralDate: YYYY-MM-DD</Form.Label>\n        <Form.Control type=\"date\" placeholder={today}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"referralReason\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">referralReason</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"referralPhysicianName\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">referralPhysicianName</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"referralPhysicianPhone\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">referralPhysicianPhone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"referralPhysicianEmail\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">referralPhysicianEmail</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"...\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"referralPhysicianAddress\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">referralPhysicianAddress</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"attendingPhysician\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">attendingPhysician</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    </div>\n\n    <div className=\"formDivider1\">\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"occupationRole\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">occupationRole</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"occupationEmployerName\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">occupationEmployerName</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"occupationEmployerEmail\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">occupationEmployerEmail</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"...\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"occupationEmployerPhone\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">occupationEmployerPhone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n    <Form.Group as={Col} controlId=\"occupationEmployerAddress\" className=\"formGroup\">\n      <Form.Label className=\"formLabel\">occupationEmployerAddress</Form.Label>\n      <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"...\"/>\n    </Form.Group>\n\n\n    </Form.Row>\n    </div>\n\n    <div className=\"formDivider2\">\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"insuranceCompany\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">insuranceCompany</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Guardian</option>\n          <option>Sagicor</option>\n          <option>Canopy</option>\n          <option>Other</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"insurancePolicyNumber\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">insurancePolicyNumber</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"insuranceExpiryDate\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">insuranceExpiryDate</Form.Label>\n        <Form.Control type=\"date\" placeholder={today}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"insuranceDescription\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">insuranceDescription</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"insuranceSubscriberCompany\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">insuranceSubscriberCompany</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"insuranceSubscriberDescription\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">insuranceSubscriberDescription</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    </div>\n\n    {\n      // <Form.Row className=\"formRow\">\n      //   <Form.Group as={Col} controlId=\"active\">\n      //     <Form.Label>Active</Form.Label>\n      //     <Form.Control type=\"checkbox\" />\n      //   </Form.Group>\n      // </Form.Row>\n    }\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"loginFormBtn searchBtn\">Create</Button>\n      <Button variant=\"danger\" className=\"loginFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default CreatePatientForm;\n","import React from 'react';\n\nimport PatientItem from '../../items/patient/PatientItem';\nimport './UserList.css';\n\nconst SearchPatientList = props => {\n\n  const {...filter} = props.filter;\n  let patients2 = props.patients;\n  let propsPatients = [];\n\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'loggedIn') {\n    propsPatients = patients2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field === 'patient' && filter.key === 'active') {\n    propsPatients = patients2.filter(x => x.active === filter.value);\n  }\n\n  if (filter.field !== 'patient') {\n    propsPatients = patients2;\n  }\n\n  let count = 0;\n\n  const patients = propsPatients.map(patient => {\n\n    count = propsPatients.indexOf(patient)+1;\n\n    return (\n      <PatientItem\n        key={count}\n        patient={patient}\n        canDelete={props.canDelete}\n        showDetails={props.showDetails}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{patients}</ul>;\n};\n\nexport default SearchPatientList;\n","export default __webpack_public_path__ + \"static/media/letterhead.5b835992.jpg\";","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { PDFViewer, Page, Text, View, Document, StyleSheet, Image } from '@react-pdf/renderer';\nimport moment from 'moment';\nimport loadingGif from '../../assets/loading.gif';\nimport letterHead from '../../assets/letterhead.jpg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport \"./pdfview.css\"\n\n\nconst styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35,\n  },\n  title: {\n    fontSize: 24,\n    textAlign: 'center',\n    fontFamily: 'Times-Roman'\n  },\n  author: {\n    fontSize: 12,\n    textAlign: 'center',\n    marginBottom: 40,\n  },\n  subtitle: {\n    fontSize: 18,\n    margin: 12,\n    fontFamily: 'Times-Roman'\n  },\n  text: {\n    margin: 12,\n    fontSize: 14,\n    textAlign: 'justify',\n    fontFamily: 'Times-Roman'\n  },\n  image: {\n    // marginVertical: 15,\n    // marginHorizontal: 100,\n  },\n  header: {\n    fontSize: 12,\n    marginBottom: 20,\n    textAlign: 'center',\n    color: 'grey',\n  },\n  pageNumber: {\n    position: 'absolute',\n    fontSize: 12,\n    bottom: 30,\n    left: 0,\n    right: 0,\n    textAlign: 'center',\n    color: 'grey',\n  },\n\n  page: {\n    flexDirection: 'row',\n    backgroundColor: '#E4E4E4'\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1\n  }\n\n});\n\n\n\nconst PdfView = (props) =>{\n\nreturn (\n  <div className=\"pdfViewBg\">\n    <div className=\"pdfView\">\n\n    <Col className=\"pdfViewClose\">\n    <Button variant=\"outline-danger\" size=\"sm\" class=\"centered_btn\" onClick={props.close}>X</Button>\n    </Col>\n    <Col className=\"pdfViewCol\">\n    <h3>Document Generator</h3>\n    </Col>\n\n    <PDFViewer className=\"viewer\">\n\n    {props.pdfViewData.type === 'test' && (\n      <Document>\n        <Page style={styles.body}>\n          <Image\n            style={styles.image}\n            src={letterHead}\n          />\n\n          <Text style={styles.title}>{props.pdfViewData.type}</Text>\n          <Text style={styles.author}>Miguel de Cervantes</Text>\n\n\n          <Text style={styles.subtitle}>\n            Patient name: {props.patient.name}\n          </Text>\n          <Text style={styles.text}>\n            En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha\n            mucho tiempo que vivía un hidalgo de los de lanza en astillero, adarga\n            antigua, rocín flaco y galgo corredor. Una olla de algo más vaca que\n            carnero, salpicón las más noches, duelos y quebrantos los sábados,\n            lentejas los viernes, algún palomino de añadidura los domingos,\n            consumían las tres partes de su hacienda. El resto della concluían sayo\n            de velarte, calzas de velludo para las fiestas con sus pantuflos de lo\n            mismo, los días de entre semana se honraba con su vellori de lo más\n            fino. Tenía en su casa una ama que pasaba de los cuarenta, y una sobrina\n            que no llegaba a los veinte, y un mozo de campo y plaza, que así\n            ensillaba el rocín como tomaba la podadera. Frisaba la edad de nuestro\n            hidalgo con los cincuenta años, era de complexión recia, seco de carnes,\n            enjuto de rostro; gran madrugador y amigo de la caza. Quieren decir que\n            tenía el sobrenombre de Quijada o Quesada (que en esto hay alguna\n            diferencia en los autores que deste caso escriben), aunque por\n            conjeturas verosímiles se deja entender que se llama Quijana; pero esto\n            importa poco a nuestro cuento; basta que en la narración dél no se salga\n            un punto de la verdad\n          </Text>\n          <Text style={styles.text}>\n            _________________________________________________________\n          </Text>\n          <Text style={styles.text}>\n            Con estas y semejantes razones perdía el pobre caballero el juicio, y\n            desvelábase por entenderlas, y desentrañarles el sentido, que no se lo\n            sacara, ni las entendiera el mismo Aristóteles, si resucitara para sólo\n            ello. No estaba muy bien con las heridas que don Belianis daba y\n            recibía, porque se imaginaba que por grandes maestros que le hubiesen\n            curado, no dejaría de tener el rostro y todo el cuerpo lleno de\n            cicatrices y señales; pero con todo alababa en su autor aquel acabar su\n            libro con la promesa de aquella inacabable aventura, y muchas veces le\n            vino deseo de tomar la pluma, y darle fin al pie de la letra como allí\n            se promete; y sin duda alguna lo hiciera, y aun saliera con ello, si\n            otros mayores y continuos pensamientos no se lo estorbaran. Tuvo muchas\n            veces competencia con el cura de su lugar (que era hombre docto graduado\n            en Sigüenza), sobre cuál había sido mejor caballero, Palmerín de\n            Inglaterra o Amadís de Gaula; mas maese Nicolás, barbero del mismo\n            pueblo, decía que ninguno llegaba al caballero del Febo, y que si alguno\n            se le podía comparar, era don Galaor, hermano de Amadís de Gaula, porque\n            tenía muy acomodada condición para todo; que no era caballero\n            melindroso, ni tan llorón como su hermano, y que en lo de la valentía no\n            le iba en zaga.\n          </Text>\n          <Text style={styles.text}>\n            En resolución, él se enfrascó tanto en su lectura, que se le pasaban las\n            noches leyendo de claro en claro, y los días de turbio en turbio, y así,\n            del poco dormir y del mucho leer, se le secó el cerebro, de manera que\n            vino a perder el juicio. Llenósele la fantasía de todo aquello que leía\n            en los libros, así de encantamientos, como de pendencias, batallas,\n            desafíos, heridas, requiebros, amores, tormentas y disparates\n            imposibles, y asentósele de tal modo en la imaginación que era verdad\n            toda aquella máquina de aquellas soñadas invenciones que leía, que para\n            él no había otra historia más cierta en el mundo.\n          </Text>\n          <Text style={styles.subtitle} break>\n            Capítulo II: Que trata de la primera salida que de su tierra hizo el\n            ingenioso Don Quijote\n          </Text>\n\n          <Text style={styles.text}>\n            Hechas, pues, estas prevenciones, no quiso aguardar más tiempo a poner\n            en efeto su pensamiento, apretándole a ello la falta que él pensaba que\n            hacía en el mundo su tardanza, según eran los agravios que pensaba\n            deshacer, tuertos que enderezar, sinrazones que emendar y abusos que\n            mejorar y deudas que satisfacer. Y así, sin dar parte a persona alguna\n            de su intención y sin que nadie le viese, una mañana, antes del día, que\n            era uno de los calurosos del mes de Julio, se armó de todas sus armas,\n            subió sobre Rocinante, puesta su mal compuesta celada, embrazó su\n            adarga, tomó su lanza y por la puerta falsa de un corral salió al campo\n            con grandísimo contento y alborozo de ver con cuánta facilidad había\n            dado principio a su buen deseo. Mas apenas se vio en el campo cuando le\n            asaltó un pensamiento terrible, y tal, que por poco le hiciera dejar la\n            comenzada empresa; y fue que le vino a la memoria que no era armado\n            caballero, y que, conforme a ley de caballería, ni podía ni debía tomar\n            armas con ningún caballero; y puesto que lo fuera, había de llevar armas\n            blancas, como novel caballero, sin empresa en el escudo, hasta que por\n            su esfuerzo la ganase. Estos pensamientos le hicieron titubear en su\n            propósito; mas pudiendo más su locura que otra razón alguna, propuso de\n            hacerse armar caballero del primero que topase, a imitación de otros\n            muchos que así lo hicieron, según él había leído en los libros que tal\n            le tenían. En lo de las armas blancas, pensaba limpiarlas de manera, en\n            teniendo lugar, que lo fuesen más que un arminio; y con esto se quietó18\n            y prosiguió su camino, sin llevar otro que aquel que su caballo quería,\n            creyendo que en aquello consistía la fuerza de las aventuras\n          </Text>\n          <Text style={styles.text}>\n            Yendo, pues, caminando nuestro flamante aventurero, iba hablando consigo\n            mesmo, y diciendo: —¿Quién duda, sino que en los venideros tiempos,\n            cuando salga a luz la verdadera historia de mis famosos hechos, que el\n            sabio que los escribiere no ponga, cuando llegue a contar esta mi\n            primera salida tan de mañana, desta manera?: Apenas había el rubicundo\n            Apolo tendido por la faz de la ancha y espaciosa tierra las doradas\n            hebras de sus hermosos cabellos, y apenas los pequeños y pintados\n            pajarillos con sus arpadas lenguas habían saludado con dulce y meliflua\n            armonía la venida de la rosada Aurora, que, dejando la blanda cama del\n            celoso marido, por las puertas y balcones del manchego horizonte a los\n            mortales se mostraba, cuando el famoso caballero don Quijote de la\n            Mancha, dejando las ociosas plumas, subió sobre su famoso caballo\n            Rocinante y comenzó a caminar por el antiguo y conocido Campo de\n            Montiel.\n          </Text>\n          <Text style={styles.text}>\n            Y era la verdad que por él caminaba; y añadió diciendo: —Dichosa edad y\n            siglo dichoso aquel adonde saldrán a luz las famosas hazañas mías,\n            dignas de entallarse en bronces, esculpirse en mármoles y pintarse en\n            tablas, para memoria en lo futuro. ¡Oh tú, sabio encantador, quienquiera\n            que seas, a quien ha de tocar el ser coronista desta peregrina historia!\n            Ruégote que no te olvides de mi buen Rocinante, compañero eterno mío en\n            todos mis caminos y carreras.\n          </Text>\n          <Text style={styles.text}>\n            Luego volvía diciendo, como si verdaderamente fuera enamorado: —¡Oh\n            princesa Dulcinea, señora deste cautivo corazón! Mucho agravio me\n            habedes fecho en despedirme y reprocharme con el riguroso afincamiento\n            de mandarme no parecer ante la vuestra fermosura. Plégaos, señora, de\n            membraros deste vuestro sujeto corazón, que tantas cuitas por vuestro\n            amor padece. Con estos iba ensartando otros disparates, todos al modo de\n            los que sus libros le habían enseñado, imitando en cuanto podía su\n            lenguaje. Con esto caminaba tan despacio, y el sol entraba tan apriesa y\n            con tanto ardor, que fuera bastante a derretirle los sesos, si algunos\n            tuviera\n          </Text>\n          <Text style={styles.text}>\n            Casi todo aquel día caminó sin acontecerle cosa que de contar fuese, de\n            lo cual se desesperaba, porque quisiera topar luego luego con quien\n            hacer experiencia del valor de su fuerte brazo. Autores hay que dicen\n            que la primera aventura que le avino fue la del Puerto Lápice, otros\n            dicen que la de los molinos de viento; pero lo que yo he podido\n            averiguar en este caso, y lo que he hallado escrito en los anales de la\n            Mancha, es que él anduvo todo aquel día, y, al anochecer, su rocín y él\n            se hallaron cansados y muertos de hambre, y que, mirando a todas partes\n            por ver si descubriría algún castillo o alguna majada de pastores donde\n            recogerse y adonde pudiese remediar su mucha hambre y necesidad, vio, no\n            lejos del camino por donde iba, una venta,que fue como si viera una\n            estrella que, no a los portales, sino a los alcázares de su redención le\n            encaminaba. Diose priesa a caminar, y llegó a ella a tiempo que\n            anochecía.\n          </Text>\n        </Page>\n      </Document>\n    )}\n\n    {props.pdfViewData.type === 'referral' && (\n      <Document>\n        <Page style={styles.body}>\n          <Image\n            style={styles.image}\n            src={letterHead}\n          />\n\n          <Text style={styles.title}>{props.pdfViewData.type}</Text>\n          <Text style={styles.author}>Miguel de Cervantes</Text>\n\n\n          <Text style={styles.subtitle}>\n            Capítulo I: Que trata de la condición y ejercicio del famoso hidalgo D.\n            Quijote de la Mancha\n          </Text>\n          <Text style={styles.text}>\n            En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha\n            mucho tiempo que vivía un hidalgo de los de lanza en astillero, adarga\n            antigua, rocín flaco y galgo corredor.\n          </Text>\n          <Text style={styles.text}>\n            _________________________________________________________\n          </Text>\n          <Text style={styles.text}>\n            Con estas y semejantes razones perdía el pobre caballero el juicio, y\n            desvelábase por entenderlas, y desentrañarles el sentido, que no se lo\n            sacara, ni las entendiera el mismo\n          </Text>\n          <Text style={styles.text}>\n            En resolución, él se enfrascó tanto en su lectura, que se le pasaban las\n            noches leyendo de claro en claro, y los días de turbio en turbio, y así,\n            del poco dormir y del mucho leer, se\n          </Text>\n\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'admissionReminder' && (\n      <Document>\n        <Page style={styles.body}>\n          <Image\n            style={styles.image}\n            src={letterHead}\n          />\n\n          <Text style={styles.title}>{props.pdfViewData.type}</Text>\n          <Text style={styles.author}>Miguel de Cervantes</Text>\n\n\n          <Text style={styles.subtitle}>\n            Capítulo I: Que trata de la condición y ejercicio del famoso hidalgo D.\n            Quijote de la Mancha\n          </Text>\n          <Text style={styles.text}>\n            En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha\n            mucho tiempo que vivía un hidalgo de los de lanza en astillero, adarga\n            antigua, rocín flaco y galgo corredor.\n          </Text>\n          <Text style={styles.text}>\n            _________________________________________________________\n          </Text>\n          <Text style={styles.text}>\n            Es, pues, de saber, que este sobredicho hidalgo, los ratos que estaba\n            ocioso (que eran los más del año) se daba a leer libros de caballerías\n            con tanta afición y gusto, que olvidó\n          </Text>\n\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'sickNote' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'insurance' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'diagnosisTesting' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'prescription' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'treatmentConsent' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'treatmentInstructions' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'unfitToFly' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n\n    </PDFViewer>\n\n    </div>\n  </div>\n)\n\n}\n\nexport default PdfView;\n","import React from 'react';\n\nimport AddressItem from '../../items/user/AddressItem';\nimport './UserList.css';\n\nconst PatientAddressList = props => {\n\n  const {...filter} = props.filter;\n  let addresses2 = props.addresses;\n  let propsAddresses = [];\n\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number > b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number < b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street > b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street < b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town > b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town < b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city > b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city < b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish > b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish < b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country > b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country < b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode > b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode < b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'primary') {\n    propsAddresses = addresses2.filter(x => x.primary === filter.value);\n  }\n  if (filter.field !== 'address') {\n    propsAddresses = addresses2;\n  }\n\n  let count = 0;\n\n  const addresses = propsAddresses.map(address => {\n\n    count = propsAddresses.indexOf(address)+1;\n\n    return (\n      <AddressItem\n        key={count}\n        address={address}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        makePrimary={props.makePrimary}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{addresses}</ul>;\n};\n\nexport default PatientAddressList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst NextOfKinItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Name: <span className=\"bold\">{props.nextOfKin.name}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Relation: <span className=\"bold\">{props.nextOfKin.relation}</span>\n          </Card.Text>\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.nextOfKin.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Relation: <span className=\"bold\">{props.nextOfKin.relation}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Email: <span className=\"bold\">{props.nextOfKin.contact.email}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Phone: <span className=\"bold\">{props.nextOfKin.contact.phone}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Phone2: <span className=\"bold\">{props.nextOfKin.contact.phone2}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.nextOfKin)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default NextOfKinItem;\n","import React from 'react';\n\nimport NextOfKinItem from '../../items/patient/NextOfKinItem';\nimport './UserList.css';\n\nconst PatientNextOfKinList = props => {\n\n  const {...filter} = props.filter;\n  let nextOfKin2 = props.nextOfKin;\n  let propsNextOfKin = [];\n\n  if (filter.field === 'nextOfKin' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'nextOfKin' && filter.key === 'name' && filter.value === 'Descending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'nextOfKin' && filter.key === 'relation' && filter.value === 'Ascending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.relation > b.relation) ? 1 : -1);\n  }\n  if (filter.field === 'nextOfKin' && filter.key === 'relation' && filter.value === 'Descending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.relation < b.relation) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'nextOfKin') {\n    propsNextOfKin = nextOfKin2;\n  }\n\n  let count = 0;\n\n  const nextOfKin = propsNextOfKin.map(nextOfKinItem => {\n    // console.log('nok',nextOfKinItem);\n    count = propsNextOfKin.indexOf(nextOfKinItem)+1;\n\n    return (\n      <NextOfKinItem\n        key={count}\n        nextOfKin={nextOfKinItem}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        makePrimary={props.makePrimary}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{nextOfKin}</ul>;\n};\n\nexport default PatientNextOfKinList;\n","import React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst AttachmentItem = props => {\n\n  const [deleteState, setDeleteState] = useState(false);\n  const handleDeleteStateChange = () => {\n    if (deleteState === true) {\n      setDeleteState(false);\n    }\n    if (deleteState === false) {\n      setDeleteState(true);\n    }\n   }\n\n  return (\n    <li key={props.key} className=\"\">\n\n        <Row>\n\n          <a href={props.attachment} target=\"_blank\" rel=\"noopener noreferrer\">{props.attachment}</a>\n\n          {props.canDelete === true && (\n            <OverlayTrigger\n              key={'top'}\n              placement={'top'}\n              overlay={\n                <Popover id={`popover-positioned-${'top'}`}>\n                  <Popover.Content>\n                    <strong>Delete!?</strong>\n                  </Popover.Content>\n                </Popover>\n              }\n            >\n              <FontAwesomeIcon icon={faEraser} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n            </OverlayTrigger>\n\n          )}\n\n          {props.canDelete === true &&\n             deleteState === true && (\n            <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, {\n              type: props.type,\n              attachment: props.attachment,\n              item: props.item\n            })}>Delete</Button>\n          )}\n        </Row>\n\n    </li>\n  )\n}\n\nexport default AttachmentItem;\n","import React from 'react';\n\nimport AttachmentItem from '../../items/patient/AttachmentItem';\nimport './UserList.css';\n\nconst PatientAttachmentList = props => {\n\n  let count = 0;\n\n  const attachments = props.attachments.map(attachment => {\n    count = props.attachments.indexOf(attachment)+1;\n\n    return (\n      <AttachmentItem\n        key={count}\n        item={props.item}\n        attachment={attachment}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        type={props.type}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{attachments}</ul>;\n};\n\nexport default PatientAttachmentList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './PatientItem.css';\n\nconst AllergyItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.allergy.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.allergy.type}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.allergy.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.allergy.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.allergy.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                attachments:\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Add Attachment</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'allergy',data:props.allergy})}/>\n                </OverlayTrigger>\n\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.allergy}\n                attachments={props.allergy.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"allergy\"\n              />\n              </li>\n\n              {props.canDelete === true && (\n                <li>\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.allergy)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AllergyItem;\n","import React from 'react';\n\nimport AllergyItem from '../../items/patient/AllergyItem';\nimport './UserList.css';\n\nconst PatientAllergyList = props => {\n\n  const {...filter} = props.filter;\n  let allergies2 = props.allergies;\n  let propsAllergies = [];\n\n  if (filter.field === 'allergy' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsAllergies = allergies2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'allergy' && filter.key === 'title' && filter.value === 'Descending') {\n    propsAllergies = allergies2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'allergy' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsAllergies = allergies2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'allergy' && filter.key === 'type' && filter.value === 'Descending') {\n    propsAllergies = allergies2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'allergy') {\n    propsAllergies = allergies2;\n  }\n\n  let count = 0;\n\n  const allergies = propsAllergies.map(allergy => {\n    count = propsAllergies.indexOf(allergy)+1;\n\n    return (\n      <AllergyItem\n        key={count}\n        allergy={allergy}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{allergies}</ul>;\n};\n\nexport default PatientAllergyList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './PatientItem.css';\n\nconst MedicationItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.medication.title}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.medication.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.medication.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.medication.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments:\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Add Attachment</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'medication',data:props.medication})}/>\n                </OverlayTrigger>\n\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.medication}\n                attachments={props.medication.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"medication\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.medication)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default MedicationItem;\n","import React from 'react';\n\nimport MedicationItem from '../../items/patient/MedicationItem';\nimport './UserList.css';\n\nconst PatientMedicationList = props => {\n\n  const {...filter} = props.filter;\n  let medication2 = props.medication;\n  let propsMedication = [];\n\n  if (filter.field === 'medication' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsMedication = medication2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'medication' && filter.key === 'title' && filter.value === 'Descending') {\n    propsMedication = medication2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'medication' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsMedication = medication2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'medication' && filter.key === 'type' && filter.value === 'Descending') {\n    propsMedication = medication2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'medication') {\n    propsMedication = medication2;\n  }\n\n  let count = 0;\n\n  const medication = propsMedication.map(medicationItem => {\n    count = propsMedication.indexOf(medicationItem)+1;\n\n    return (\n      <MedicationItem\n        key={count}\n        medication={medicationItem}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{medication}</ul>;\n};\n\nexport default PatientMedicationList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst ComorbidityItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.comorbidity.title}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Title as=\"h3\">{`Popover ${'top'}`}</Popover.Title>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.comorbidity.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.comorbidity.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.comorbidity.description}</span>\n              </Card.Text>\n              </li>\n\n              {props.canDelete === true && (\n                <li>\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Title as=\"h3\">{`Popover ${'top'}`}</Popover.Title>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.comorbidity)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default ComorbidityItem;\n","import React from 'react';\n\nimport ComorbidityItem from '../../items/patient/ComorbidityItem';\nimport './UserList.css';\n\nconst PatientComorbidityList = props => {\n\n  const {...filter} = props.filter;\n  let comorbidity2 = props.comorbidities;\n  let propsComormidity = [];\n\n  if (filter.field === 'comorbidity' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsComormidity = comorbidity2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'comorbidity' && filter.key === 'title' && filter.value === 'Descending') {\n    propsComormidity = comorbidity2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'comorbidity' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsComormidity = comorbidity2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'comorbidity' && filter.key === 'type' && filter.value === 'Descending') {\n    propsComormidity = comorbidity2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'comorbidity') {\n    propsComormidity = comorbidity2;\n  }\n\n  let count = 0;\n\n  const comorbidities = propsComormidity.map(comorbidityItem => {\n    count = propsComormidity.indexOf(comorbidityItem)+1;\n\n    return (\n      <ComorbidityItem\n        key={count}\n        comorbidity={comorbidityItem}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{comorbidities}</ul>;\n};\n\nexport default PatientComorbidityList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst ImageItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n          <a href={props.image.path} target=\"_blank\" rel=\"noopener noreferrer\">{props.image.name}</a>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.image.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.image.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.image.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.image)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n\n};\n\nexport default ImageItem;\n","import React from 'react';\n\nimport ImageItem from '../../items/patient/ImageItem';\nimport './UserList.css';\n\nconst PatientImageList = props => {\n\n  const {...filter} = props.filter;\n  let images2 = props.images;\n  let propsImages = [];\n\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'image') {\n    propsImages = images2;\n  }\n\n  let count = 0;\n\n  const images = propsImages.map(image => {\n\n    count = propsImages.indexOf(image)+1;\n\n    return (\n      <ImageItem\n        key={count}\n        image={image}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"imageList\">{images}</ul>;\n};\n\nexport default PatientImageList;\n","import React from 'react';\n\nimport FileItem from '../../items/patient/FileItem';\nimport './UserList.css';\n\nconst UserFileList = props => {\n\n  const {...filter} = props.filter;\n  let files2 = props.files;\n  let propsFiles = [];\n\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'file') {\n    propsFiles = files2;\n  }\n\n  let count = 0;\n\n  const files = propsFiles.map(file => {\n\n    count = propsFiles.indexOf(file)+1;\n\n    return (\n      <FileItem\n        key={count}\n        file={file}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{files}</ul>;\n};\n\nexport default UserFileList;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst NoteItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Note: <span className=\"bold\">{props.note}</span>\n          </Card.Text>\n\n          {props.canDelete === true && (\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>Delete!?</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n          )}\n\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.note)}>Delete</Button>\n              )}\n            </Row>\n            )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\n\nimport NoteItem from '../../items/patient/NoteItem';\nimport './UserList.css';\n\nconst PatientNoteList = props => {\n\n  const {...filter} = props.filter;\n  let notes2 = props.notes;\n  let propsNotes = [];\n\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Ascending') {\n    propsNotes = notes2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Descending') {\n    propsNotes = notes2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'note') {\n    propsNotes = notes2;\n  }\n\n  let count = 0;\n\n  const notes = propsNotes.map(note => {\n\n    count = propsNotes.indexOf(note)+1;\n\n    return (\n      <NoteItem\n        key={count}\n        note={note}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{notes}</ul>;\n};\n\nexport default PatientNoteList;\n","import React, { useState } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst TagItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Tag: <span className=\"bold\">{props.tag}</span>\n          </Card.Text>\n\n          {props.canDelete === true && (\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>Delete!?</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.tag)}>Delete</Button>\n              )}\n            </Row>\n            )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default TagItem;\n","import React from 'react';\n\nimport TagItem from '../../items/patient/TagItem';\nimport './UserList.css';\n\nconst PatientTagList = props => {\n\n  const {...filter} = props.filter;\n  let tags2 = props.tags;\n  let propsTags = [];\n\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Ascending') {\n    propsTags = tags2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Descending') {\n    propsTags = tags2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'tag') {\n    propsTags = tags2;\n  }\n\n  let count = 0;\n\n  const tags = propsTags.map(tag => {\n\n    count = propsTags.indexOf(tag)+1;\n\n    return (\n      <TagItem\n        key={count}\n        tag={tag}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{tags}</ul>;\n};\n\nexport default PatientTagList;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from 'react-router-dom';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './visitItem.css';\n\nconst VisitItem = props => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n  }\n\n  const [deleteState, setDeleteState] = useState(false);\n  const handleDeleteStateChange = () => {\n    if (deleteState === true) {\n      setDeleteState(false);\n    }\n    if (deleteState === false) {\n      setDeleteState(true);\n    }\n   }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Date: <span className=\"bold\">{moment.unix(props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Time: <span className=\"bold\">{props.visit.time}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.visit.title}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {!props.patientPage && (\n            <OverlayTrigger\n\n              placement={'top'}\n              overlay={\n                <Popover id={`popover-positioned-${'top'}`}>\n                  <Popover.Content>\n                    <strong>Go to Visit Details</strong>\n                  </Popover.Content>\n                </Popover>\n              }\n            >\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.visit)}/>\n            </OverlayTrigger>\n\n          )}\n\n          {props.patientPage && (\n            <Link\n              to={{\n                pathname: \"/visits\",\n                state: {visit: props.visit._id}\n              }}\n            >\n            <OverlayTrigger\n\n              placement={'top'}\n              overlay={\n                <Popover id={`popover-positioned-${'top'}`}>\n                  <Popover.Content>\n                    <strong>Go to Visit Details</strong>\n                  </Popover.Content>\n                </Popover>\n              }\n            >\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </OverlayTrigger>\n\n            </Link>\n          )}\n\n          {props.canDelete && (\n            <OverlayTrigger\n\n              placement={'top'}\n              overlay={\n                <Popover id={`popover-positioned-${'top'}`}>\n                  <Popover.Content>\n                    <strong>Delete!?</strong>\n                  </Popover.Content>\n                </Popover>\n              }\n            >\n              <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n            </OverlayTrigger>\n\n          )}\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Id: <span className=\"bold\">{props.visit._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                type: <span className=\"bold\">{props.visit.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                subType: <span className=\"bold\">{props.visit.subType}</span>\n              </Card.Text>\n              </li>\n              {!props.patientPage && (\n                <li>\n                <Card.Text className=\"cardText\">\n                  Patient:\n                </Card.Text>\n                </li>\n              )}\n              {!props.patientPage && (\n                <li>\n                <Card.Text className=\"cardText\">\n                  Id: <span className=\"bold\">{props.visit.patient._id}</span>\n                </Card.Text>\n                </li>\n              )}\n              {!props.patientPage && (\n                <li>\n                <Card.Text className=\"cardText\">\n                  Name: <span className=\"bold\">{props.visit.patient.name}</span>\n                </Card.Text>\n                </li>\n              )}\n\n\n            </ul>\n            </Row>\n          )}\n          {deleteState === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.visit)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default VisitItem;\n","import React from 'react';\n\nimport VisitItem from '../../items/visit/VisitItem';\nimport './visitList.css';\n\nconst VisitList = props => {\n\n  const {...filter} = props.filter;\n  let visits2 = props.visits;\n  let propsVisits = [];\n\n  if (filter.field === 'visit' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'title' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'date' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'time' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.time > b.time) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'time' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.time < b.time) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'type' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'subType' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.subType > b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'subType' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.subType < b.subType) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'visit') {\n    propsVisits = visits2;\n  }\n\n  let count = 0;\n\n  const visits = propsVisits.map(visit => {\n\n    count = propsVisits.indexOf(visit)+1;\n\n    return (\n      <VisitItem\n        key={count}\n        visit={visit}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        patientPage={props.patientPage}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{visits}</ul>;\n};\n\nexport default VisitList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAllergyForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"allergy\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n          <option>type</option>\n          <option>title</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAllergyForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterMedicationForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"medication\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterMedicationForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterComorbidityForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"comorbidity\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterComorbidityForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterNextOfKinForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"nextOfKin\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>relation</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterNextOfKinForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterVisitForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"visit\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n          <option>title</option>\n          <option>type</option>\n          <option>subType</option>\n          <option>date</option>\n          <option>time</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterVisitForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterTagForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"tag\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n          <option>tag</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterTagForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst UpdatePatientSingleFieldForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Update Single Field</h4>\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"field\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control type=\"text\" value={props.field}/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"query\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">New Data</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"(Date format = YYYY-MM-DD!!)\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn searchBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default UpdatePatientSingleFieldForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddTagForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Tags</h4>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"tags\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Tags</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...tag,tag,tag...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddTagForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddNextOfKinForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Next of Kin</h4>\n    <p>Required fields are denoted by a ' * '</p>\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"name\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Name * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"relation\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Relation (select) * </Form.Label>\n        <Form.Control as=\"select\">\n          <option>Mother</option>\n          <option>Father</option>\n          <option>Brother</option>\n          <option>Sister</option>\n          <option>Grandfather</option>\n          <option>Grandmother</option>\n          <option>Uncle</option>\n          <option>Aunt</option>\n          <option>Niece</option>\n          <option>Uncle</option>\n          <option>Cousin</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"email\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Email</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"phone\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Phone * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"phone2\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Phone #2</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddNextOfKinForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddAllergyForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Allergy</h4>\n    <p>Required fields are denoted by a ' * '</p>\n\n    {\n      // <Form.Row className=\"formRow\">\n      //   <Form.Group as={Col} controlId=\"title\" className=\"formGroup\">\n      //     <Form.Label className=\"formLabel\">Title</Form.Label>\n      //     <Form.Control type=\"text\" placeholder=\"\"/>\n      //   </Form.Group>\n      //\n      // </Form.Row>\n    }\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"type\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Type (select) * </Form.Label>\n        <Form.Control as=\"select\">\n          <option>Food</option>\n          <option>Drug</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"description\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Description * </Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Attachment</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAllergyForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddMedicationForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Medication</h4>\n    <p>Required fields are denoted by a ' * '</p>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"title\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Name * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"type\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Type * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"description\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Attachment</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"...\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddMedicationForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddComorbidityForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Comorbidity</h4>\n    <p>Required fields are denoted by a ' * '</p>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"title\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Name * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"type\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Type * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"description\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddComorbidityForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddAttachmentForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Attachment</h4>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"attachment\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Attachment</Form.Label>\n        <Form.Control type=\"textarea\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} className=\"formGroup\">\n        <Form.Label className=\"formLabel\">File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAttachmentForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink, Link } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport moment from 'moment';\n\nimport FullCalendar from '@fullcalendar/react';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\nimport S3 from 'react-aws-s3';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\nimport PdfView from '../pdfView/PdfView';\n\nimport PatientAddressList from '../lists/patient/PatientAddressList';\nimport PatientNextOfKinList from '../lists/patient/PatientNextOfKinList'\nimport PatientAllergyList from '../lists/patient/PatientAllergyList'\nimport PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientComorbidityList from '../lists/patient/PatientComorbidityList'\nimport PatientImageList from '../lists/patient/PatientImageList'\nimport PatientFileList from '../lists/patient/PatientFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport PatientNoteList from '../lists/patient/PatientNoteList'\nimport PatientTagList from '../lists/patient/PatientTagList'\nimport VisitList from '../lists/visit/VisitList'\n\nimport FilterAddressForm from '../forms/filter/FilterAddressForm';\nimport FilterAllergyForm from '../forms/filter/FilterAllergyForm';\nimport FilterMedicationForm from '../forms/filter/FilterMedicationForm';\nimport FilterComorbidityForm from '../forms/filter/FilterComorbidityForm';\nimport FilterNextOfKinForm from '../forms/filter/FilterNextOfKinForm';\nimport FilterVisitForm from '../forms/filter/FilterVisitForm';\nimport FilterImageForm from '../forms/filter/FilterImageForm';\nimport FilterFileForm from '../forms/filter/FilterFileForm';\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../forms/filter/FilterNoteForm';\nimport FilterTagForm from '../forms/filter/FilterTagForm';\n\nimport UpdatePatientSingleFieldForm from '../forms/add/UpdatePatientSingleFieldForm';\nimport AddAddressForm from '../forms/add/AddAddressForm';\nimport AddAttendanceForm from '../forms/add/AddAttendanceForm';\nimport AddLeaveForm from '../forms/add/AddLeaveForm';\nimport AddNoteForm from '../forms/add/AddNoteForm';\nimport AddTagForm from '../forms/add/AddTagForm';\nimport AddImageForm from '../forms/add/AddImageForm';\nimport AddFileForm from '../forms/add/AddFileForm';\nimport AddNextOfKinForm from '../forms/add/AddNextOfKinForm';\nimport AddAllergyForm from '../forms/add/AddAllergyForm';\nimport AddMedicationForm from '../forms/add/AddMedicationForm';\nimport AddComorbidityForm from '../forms/add/AddComorbidityForm';\nimport AddAttachmentForm from '../forms/add/AddAttachmentForm';\n\nimport FloatMenu from '../../components/floatMenu/FloatMenu';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass PatientDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    startFilter: false,\n    selectFilter: null,\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    menuSelect: 'basic',\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    selectedPatient: this.props.patient,\n    addAttachmentForm: false,\n    addAttachmentArgs: null,\n    calendarAppointments: null,\n    calendarVisits: null,\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n    showPdfView: false,\n    showPdfData: {\n      type: null,\n      data: null\n    }\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.propsPatient = this.props.patient;\n  }\n\ncomponentDidMount () {\n  console.log('...patient details component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getPocketVars(seshStore);\n  }\n  this.setState({\n    selectedPatient: this.context.selectedPatient,\n    menuSelect: this.props.subMenu\n  })\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.parseForCalendar({\n    appointments: this.props.patient.appointments,\n    visits: this.props.patient.visits,\n  })\n\n}\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n    console.log('...retriving pocketVars..');\n    this.context.setUserAlert('...retriving pocketVars..')\n    const token = args.token;\n    const activityId = args.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")}\n          `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          this.setState({userAlert: resData.errors[0].message})\n        } else {\n          let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n          console.log('...retriving pocketVars success...');\n          this.context.setUserAlert('...retriving pocketVars success...')\n          this.setState({\n            pocketVars: pocketVarsParsed\n          });\n        }\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.context.setUserAlert(err);\n      });\n    }\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsubmitAddAddressForm = (event) => {\n  event.preventDefault();\n  console.log('...adding address...');\n  this.context.setUserAlert('...adding address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const number = event.target.number.value;\n  const street = event.target.street.value;\n  const town = event.target.town.value;\n  const city = event.target.city.value;\n  const parish = event.target.parish.value;\n  const country = event.target.country.value;\n  const postalCode = event.target.postalCode.value;\n\n  if (\n      number.trim().length === 0 ||\n      street.trim().length === 0 ||\n      city.trim().length === 0 ||\n      country.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientAddress(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          addressNumber:${number},\n          addressStreet:\"${street}\",\n          addressTown:\"${town}\",\n          addressCity:\"${city}\",\n          addressParish:\"${parish}\",\n          addressCountry:\"${country}\",\n          addressPostalCode:\"${postalCode}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientAddress);\n      let responseAlert = '...address add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientAddress)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientAddress,\n        activityA: `addPatientAddress?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAddress = (args) => {\n  console.log('...deleting address...');\n  this.context.setUserAlert('...deleting address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientAddress(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\",\n          addressPrimary:${args.primary}\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientAddress);\n      let responseAlert = '...address delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientAddress)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientAddress,\n        activityA: `deletePatientAddress?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsetAddressPrimary = (args) => {\n  console.log('...setting primary address...');\n  this.context.setUserAlert('...setting primary address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {setPatientAddressPrimary(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\"\n        })\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.setPatientAddressPrimary);\n      let responseAlert = '...address set primary success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.setPatientAddressPrimary)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.setPatientAddressPrimary,\n        activityA: `setPatientAddressPrimary?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.setPatientAddressPrimary;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddNextOfKinForm = (event) => {\n  event.preventDefault();\n  console.log('...add next of kin...');\n  this.context.setUserAlert('...adding next of kin...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const name = event.target.name.value;\n  const relation = event.target.relation.value;\n  const email = event.target.email.value;\n  const phone = event.target.phone.value;\n  const phone2 = event.target.phone2.value;\n\n  if (\n      name.trim().length === 0 ||\n      relation.trim().length === 0 ||\n      phone.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientNextOfKin(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          nextOfKinName:\"${name}\",\n          nextOfKinRelation:\"${relation}\",\n          nextOfKinContactEmail:\"${email}\",\n          nextOfKinContactPhone1:\"${phone}\",\n          nextOfKinContactPhone2:\"${phone2}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientNextOfKin);\n      let responseAlert = '...next of kin add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientNextOfKin)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientNextOfKin,\n        activityA: `addPatientNextOfKin?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientNextOfKin;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNextOfKin = (args) => {\n  console.log('...deleting next of kin...');\n  this.context.setUserAlert('...deleting next of kin....')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientNextOfKin(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          nextOfKinName:\"${args.name}\",\n          nextOfKinRelation:\"${args.relation}\",\n          nextOfKinContactEmail:\"${args.contact.email}\",\n          nextOfKinContactPhone1:\"${args.contact.phone1}\",\n          nextOfKinContactPhone2:\"${args.contact.phone2}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      console.log('...resData...',resData.data.deletePatientNextOfKin);\n      let responseAlert = '...next of kin delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientNextOfKin)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientNextOfKin,\n        activityA: `deletePatientNextOfKin?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientNextOfKin;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddAllergyForm = (event) => {\n  event.preventDefault();\n  console.log('...add allergy...');\n  this.context.setUserAlert('...adding allergy...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const title = this.props.patient.name+\"_allergy_\"+moment().format(\"YYYY-MM-DD, h:mm:ss a\");\n  const type = event.target.type.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n\n  if (\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/allergy/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'allergy attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'allergy attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientAllergy(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          allergyType:\"${type}\",\n          allergyTitle:\"${title}\",\n          allergyDescription:\"${description}\",\n          allergyAttachment:\"${file2Path}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientAllergy);\n      let responseAlert = '...allergy add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientAllergy)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientAllergy,\n        activityA: `addPatientAllergy?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientAllergy;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAllergy = (args) => {\n  console.log('...deleting allergy...');\n  this.context.setUserAlert('...deleting allergy...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientAllergy(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          allergyType:\"${args.type}\",\n          allergyTitle:\"${args.title}\",\n          allergyDescription:\"${args.description}\",\n          allergyAttachments:\"${args.attachments}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientAllergy);\n      let responseAlert = '...allergy delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientAllergy)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientAllergy,\n        activityA: `deletePatientAllergy?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientAllergy;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'patient/'+patientId+'/allergy/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/patient/'+patientId+'/allergy/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `allergy attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddMedicationForm = (event) => {\n  event.preventDefault();\n  console.log('...add medication...');\n  this.context.setUserAlert('...adding medication...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const title = this.props.patient.name+\"_medication_\"+moment().format(\"YYYY-MM-DD, h:mm:ss a\");\n  const type = event.target.type.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n\n  if (\n      title.trim().length === 0 ||\n      type.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/medication/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'medication attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'medication attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'medication attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'medication attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientMedication(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          medicationType:\"${type}\",\n          medicationTitle:\"${title}\",\n          medicationDescription:\"${description}\",\n          medicationAttachment:\"${file2Path}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientMedication);\n      let responseAlert = '...medication add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientMedication)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientMedication,\n        activityA: `addPatientMedication?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientMedication;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteMedication = (args) => {\n  console.log('...deleting medication...');\n  this.context.setUserAlert('...deleting medication...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientMedication(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          medicationType:\"${args.type}\",\n          medicationTitle:\"${args.title}\",\n          medicationDescription:\"${args.description}\",\n          medicationAttachments:\"${args.attachments}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientMedication);\n      let responseAlert = '...medication delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientMedication)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientMedication,\n        activityA: `deletePatientMedication?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientMedication;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'patient/'+patientId+'/medication/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/patient/'+patientId+'/medication/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `medication attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddComorbidityForm = (event) => {\n  event.preventDefault();\n  console.log('...add comorbidities...');\n  this.context.setUserAlert('...adding comorbidities...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const title = this.props.patient.name+\"_comorbidity_\"+moment().format(\"YYYY-MM-DD, h:mm:ss a\");\n  const type = event.target.type.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n\n  if (\n      title.trim().length === 0 ||\n      type.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientComorbidity(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          comorbidityType:\"${type}\",\n          comorbidityTitle:\"${title}\",\n          comorbidityDescription:\"${description}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientComorbidity);\n      let responseAlert = '...Comorbidity add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientComorbidity)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientComorbidity,\n        activityA: `addPatientComorbidity?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientComorbidity;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteComorbidity = (args) => {\n  console.log('...deleting medication...',args);\n  this.context.setUserAlert('...deleting medication...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientComorbidity(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          comorbidityType:\"${args.type}\",\n          comorbidityTitle:\"${args.title}\",\n          comorbidityDescription:\"${args.description}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientComorbidity);\n      let responseAlert = '...Comorbidity delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientComorbidity)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientComorbidity,\n        activityA: `deletePatientComorbidity?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientComorbidity;\n      this.logUserActivity({activityId: activityId,token: token});\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartAddAttachment = (args) => {\n  console.log('...start add attachment...');\n  this.setState({\n    addAttachmentForm: true,\n    addAttachmentArgs: args\n  })\n}\ncancelAddAttachment = () => {\n  this.setState({\n    addAttachmentForm: false\n  })\n}\naddAttachment = (event) => {\n  event.preventDefault();\n  console.log('...adding attachment...');\n  this.context.setUserAlert('...adding attachment...');\n  this.setState({\n    isLoading: true,\n    addAttachmentForm: false\n  })\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n  let args = this.state.addAttachmentArgs;\n  let field = args.field;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/'+field+'/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading allergy attachment ...\")\n    console.log('...s3 uploading allergy attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: `${field} attachment`,\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: `${field} attachment`,\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: `${field} attachment`,\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: `${field} attachment`,\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let allergyTitle;\n  let allergyType;\n  let allergyDescription;\n  let allergyAttachment;\n  let medicationTitle;\n  let medicationType;\n  let medicationDescription;\n  let medicationAttachment;\n\n  if (field === 'allergy') {\n    allergyTitle = args.data.title;\n    allergyType = args.data.type;\n    allergyDescription = args.data.description;\n    allergyAttachment = file2Path;\n  }\n  if (field === 'medication') {\n    medicationTitle = args.data.title;\n    medicationType = args.data.type;\n    medicationDescription = args.data.description;\n    medicationAttachment = file2Path;\n  }\n\n  let requestBody;\n  if (field === 'allergy') {\n    requestBody = {\n      query: `\n        mutation {addPatientAllergyAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            allergyType:\"${allergyType}\",\n            allergyTitle:\"${allergyTitle}\",\n            allergyDescription:\"${allergyDescription}\",\n            allergyAttachment:\"${file2Path}\"\n          })\n          {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (field === 'medication') {\n    requestBody = {\n      query: `\n        mutation {addPatientMedicationAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            medicationType:\"${medicationType}\",\n            medicationTitle:\"${medicationTitle}\",\n            medicationDescription:\"${medicationDescription}\",\n            medicationAttachment:\"${file2Path}\"\n          })\n          {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n\n\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'allergy') {\n        // console.log('...resData...',resData.data.addPatientAllergyAttachment);\n      }\n      if (field === 'medication') {\n        // console.log('...resData...',resData.data.addPatientMedicationAttachment);\n      }\n\n      let responseAlert = '...add attachment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'allergy') {\n        this.props.updatePatient(resData.data.addPatientAllergyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.addPatientAllergyAttachment,\n          activityA: `addPatientAllergyAttachmentRegex?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n      if (field === 'medication') {\n        this.props.updatePatient(resData.data.addPatientMedicationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.addPatientMedicationAttachment,\n          activityA: `addPatientMedicationAttachment?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ndeleteAttachment = (args) => {\n  console.log('...deleting attachment...');\n  this.context.setUserAlert('...adding attachment...');\n  this.setState({isLoading: true})\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n\n  const field = args.type;\n  const attachment = args.attachment;\n  const item = args.item;\n\n  let requestBody;\n\n  if (field === 'allergy') {\n    let allergyType = item.type;\n    let allergyTitle = item.title;\n    let allergyDescription = item.description;\n    let allergyAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deletePatientAllergyAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            allergyType:\"${allergyType}\",\n            allergyTitle:\"${allergyTitle}\",\n            allergyDescription:\"${allergyDescription}\",\n            allergyAttachment:\"${allergyAttachment}\"\n          })\n          {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (field === 'medication') {\n    let medicationType = item.type;\n    let medicationTitle = item.title;\n    let medicationDescription = item.description;\n    let medicationAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deletePatientMedicationAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            medicationType:\"${medicationType}\",\n            medicationTitle:\"${medicationTitle}\",\n            medicationDescription:\"${medicationDescription}\",\n            medicationAttachment:\"${medicationAttachment}\"\n          })\n          {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'allergy') {\n        // console.log('...resData...',resData.data.deletePatientAllergyAttachment);\n      }\n      if (field === 'medication') {\n        // console.log('...resData...',resData.data.deletePatientMedicationAttachment);\n      }\n\n      let responseAlert = '...delete attachment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'allergy') {\n        this.props.updatePatient(resData.data.deletePatientAllergyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.deletePatientAllergyAttachment,\n          activityA: `deletePatientAllergyAttachment?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n      if (field === 'medication') {\n        this.props.updatePatient(resData.data.deletePatientMedicationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.deletePatientMedicationAttachment,\n          activityA: `deletePatientMedicationAttachment?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'patient/'+patientId+'/'+field+'/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/patient/'+patientId+'/'+field+'/attachments/';\n      const filename = attachment;\n      const filename2 = filename.replace(filePath2,'');\n      console.log('1:',filePath);\n      console.log('2:',filename);\n      console.log('3:',filename2);\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachment..')\n      console.log('...s3 deleting attachment..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `${field} attachment`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: `${field} attachment`,\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename2, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding image...');\n  this.context.setUserAlert('...adding image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  const patientName = this.props.patient.name;\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/images';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientImage(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          imageName:\"${imageName}\",\n          imageType:\"${imageType}\",\n          imagePath:\"${imagePath}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientImage);\n      let responseAlert = '...image add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientImage)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientImage,\n        activityA: `addPatientImage?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n  console.log('...deleting image...');\n  this.context.setUserAlert('...deleting image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n\n  const filePath = 'patient/'+patientId+'/images';\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n    mutation {deletePatientImage(\n      activityId:\"${activityId}\",\n      patientId:\"${patientId}\",\n      patientInput:{\n        imageName:\"${args.name}\",\n        imageType:\"${args.type}\",\n        imagePath:\"${args.path}\"\n      })\n    {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientImage);\n      let responseAlert = '...image delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientImage)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientImage,\n        activityA: `deletePatientImage?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding file...');\n  this.context.setUserAlert('...adding file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  const patientName = this.props.patient.name;\n\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientFile(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          fileName:\"${file2Name}\",\n          fileType:\"${file2Type}\",\n          filePath:\"${file2Path}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientFile);\n      let responseAlert = '...file add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientFile)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientFile,\n        activityA: `addPatientFile?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n  console.log('...deleting file...');\n  this.context.setUserAlert('...deleting file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n\n  let requestBody = {\n    query: `\n    mutation {deletePatientFile(\n      activityId:\"${activityId}\",\n      patientId:\"${patientId}\",\n      patientInput:{\n        fileName:\"${args.name}\",\n        fileType:\"${args.type}\",\n        filePath:\"${args.path}\"\n      })\n    {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientFile);\n      let responseAlert = '...file delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientFile)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientFile,\n        activityA: `deletePatientFile?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'patient/'+patientId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding notes...');\n  this.context.setUserAlert('...adding notes...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const notes = event.target.notes.value.replace(/\\n/g, '');\n\n  if (\n      notes.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientNotes(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          notes:\"${notes}\",\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientNotes)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientNotes,\n        activityA: `addPatientNotes?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n  console.log('...deleting note...');\n  this.context.setUserAlert('...deleting note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientNote(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          note:\"${args}\"\n        })\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientNote)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientNote,\n        activityA: `deletePatientNote?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddTagForm = (event) => {\n  event.preventDefault();\n  console.log('...adding tags...');\n  this.context.setUserAlert('...adding tags...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const tags = event.target.tags.value.replace(/\\n/g, '');\n\n  if (\n      tags.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientTags(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          tags:\"${tags}\",\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientTags);\n      let responseAlert = '...tags add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientTags)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientTags,\n        activityA: `addPatientTags?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientTags;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteTag = (args) => {\n  console.log('...deleting tag...');\n  this.context.setUserAlert('...deleting tag...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientTag(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          tag:\"${args}\"\n        })\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientTag);\n      let responseAlert = '...tag delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientTag)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientTag,\n        activityA: `deletePatienTag?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientTag;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  if (\n      query.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n    mutation {updatePatientSingleField(\n      activityId:\"${activityId}\",\n      patientId:\"${patientId}\",\n      field:\"${field}\",\n      query:\"${query}\"\n    )\n    {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updatePatientSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.updatePatientSingleField)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.updatePatientSingleField,\n        activityA: `updatePatientSingleField?activityId:${activityId},patientId:${patientId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.updatePatientSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\ntoggleFilter = (args) => {\n  this.setState({\n    startFilter: !this.state.startFilter,\n    selectFilter: args\n  })\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing patient dates for calendar...');\n\n  let calendarAppointments = args.appointments.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n        field: 'appointments'\n      }\n    }))\n  let calendarVisits = args.visits.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        field: 'visits'\n      }\n    }))\n    this.setState({\n      calendarAppointments: calendarAppointments,\n      calendarVisits: calendarVisits,\n    })\n}\nviewCalendarEvent = (args) => {\n\n  let input = args.event.extendedProps.props;\n  let data;\n\n  if (input.field === 'appointments') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      location: input.location,\n      description: input.description,\n      important: input.important,\n      patient: this.props.patient,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAppointment', data: data, goLink: true}\n    })\n  }\n  if (input.field === 'visits') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      patient: this.props.patient,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarVisit', data: data, goLink: true}\n    })\n  }\n\n}\ndateClick = (args) => {\n  console.log('dateClick',args)\n  if (this.props.subMenu === 'appointment') {\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'dateClickAppointmentPatient', data: {\n        date: args.dateStr,\n        patient: this.props.patient,\n      }}\n    })\n  }\n  // if (this.props.subMenu === 'visit') {\n  //   this.setState({\n  //     overlay: true,\n  //     overlayStatus: {type: 'dateClickVisitPatient', data: {\n  //       date: args.dateStr,\n  //       patient: this.props.patient,\n  //     }}\n  //   })\n  // }\n\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\nshowPdfView = (args) => {\n  this.setState({\n    showPdfView: true,\n    showPdfData: {\n      type: args.type,\n      data: args.data\n    }\n  })\n}\n\nclosePdfView = () => {\n  this.setState({\n    showPdfView: false,\n    showPdfData: {\n      type: null,\n      data: null\n    }\n  })\n}\nnew = (args) => {\n  console.log('new: ',args)\n\n  // <Link\n  //   to={{\n  //     pathname: \"/appointments\",\n  //     state: {appointment: props.appointment._id}\n  //   }}\n  // >\n  // </Link>\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <div className=\"detailContainer\">\n\n      <Row className=\"\">\n        {!this.props.patient && (\n          <h3>...</h3>\n        )}\n      </Row>\n\n      <Row className=\"\">\n        {this.props.patient && (\n          <Col md={12} className=\"\">\n            {\n            //   this.state.startFilter === true && (\n            //   <Col>\n            //     {this.selectFilter === 'address' && (\n            //       <FilterAddressForm\n            //         onCancel={this.toggleFilter}\n            //         onConfirm={this.submitFilterForm}\n            //       />\n            //     )}\n            //     {this.selectFilter === 'nextOfKin' && (\n            //       <FilterNextOfKinForm\n            //         onCancel={this.toggleFilter}\n            //         onConfirm={this.submitFilterForm}\n            //       />\n            //     )}\n            //     {this.selectFilter === 'allergy' && (\n            //       <FilterAllergyForm\n            //         onCancel={this.toggleFilter}\n            //         onConfirm={this.submitFilterForm}\n            //       />\n            //     )}\n            //     {this.selectFilter === 'medication' && (\n            //       <FilterMedicationForm\n            //         onCancel={this.toggleFilter}\n            //         onConfirm={this.submitFilterForm}\n            //       />\n            //     )}\n            //     {this.selectFilter === 'comorbidities' && (\n            //       <FilterComorbidityForm\n            //         onCancel={this.toggleFilter}\n            //         onConfirm={this.submitFilterForm}\n            //       />\n            //     )}\n            //     {this.selectFilter === 'image' && (\n            //       <FilterImageForm\n            //         onCancel={this.toggleFilter}\n            //         onConfirm={this.submitFilterForm}\n            //       />\n            //     )}\n            //     {this.selectFilter === 'file' && (\n            //       <FilterFileForm\n            //         onCancel={this.toggleFilter}\n            //         onConfirm={this.submitFilterForm}\n            //       />\n            //     )}\n            //     {this.selectFilter === 'appointment' && (\n            //       <FilterAppointmentForm\n            //         onCancel={this.toggleFilter}\n            //         onConfirm={this.submitFilterForm}\n            //       />\n            //     )}\n            //     {this.selectFilter === 'visit' && (\n            //       <FilterVisitForm\n            //         onCancel={this.toggleFilter}\n            //         onConfirm={this.submitFilterForm}\n            //       />\n            //     )}\n            //     {this.selectFilter === 'note' && (\n            //       <FilterNoteForm\n            //         onCancel={this.toggleFilter}\n            //         onConfirm={this.submitFilterForm}\n            //       />\n            //     )}\n            //     {this.selectFilter === 'tag' && (\n            //       <FilterTagForm\n            //         onCancel={this.toggleFilter}\n            //         onConfirm={this.submitFilterForm}\n            //       />\n            //     )}\n            //   </Col>\n            // )\n          }\n\n            {this.state.updateSingleField.state === true && (\n              <UpdatePatientSingleFieldForm\n                field={this.state.updateSingleField.field}\n                onConfirm={this.submitUpdateSingleFieldForm}\n                onCancel={this.cancelUpdateSingleField}\n              />\n            )}\n            {this.props.subMenu === 'all' && (\n              <Row className=\"tabRowAll\">\n              <ul className=\"summaryList\">\n              <li className=\"summaryListItem\">\n              <Col className=\"subTabCol\">\n              <Link\n                to={{\n                  pathname: \"/appointments\",\n                  state: {newAppointment: this.props.patient}\n                }}\n              >\n              <Button variant=\"primary\" className=\"searchBtn\" onClick={this.new.bind(this, 'appointment')}>New Appointment</Button>\n              </Link>\n              <Link\n                to={{\n                  pathname: \"/visits\",\n                  state: {newVisit: this.props.patient}\n                }}\n              >\n              <Button variant=\"primary\" className=\"searchBtn\" onClick={this.new.bind(this, 'visit')}>New Visit</Button>\n              </Link>\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Basic Info:</h3>\n              </Col>\n              <ListGroup className=\"profileBasicListGroup\">\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Title:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.title}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Fisrt Name:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.name}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'name')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Last Name:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.lastName}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'lastName')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Username:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.username}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">DOB:</p>\n                  <p className=\"listGroupText bold\">{moment.unix(this.props.patient.dob.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Age:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.age}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Gender:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.gender}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Email:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.contact.email}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Phone:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.contact.phone}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Phone 2:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.contact.phone2}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Role:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.role}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'role')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText underlined\">Registration:</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Date:</p>\n                  <p className=\"listGroupText bold\">{moment.unix(this.props.patient.registration.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Number:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.registration.number}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText underlined\">Referral:</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Date:</p>\n                  {this.props.patient.referral.date && (\n                    <p className=\"listGroupText bold\">{moment.unix(this.props.patient.referral.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                  )}\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.date')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Reason:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.referral.reason}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.reason')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Referral Physician:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.referral.physician.name}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.name')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Referral Physician Contact:</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Email:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.referral.physician.email}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.email')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Phone:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.referral.physician.phone}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.phone')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                <p className=\"listGroupText\">Attending Physician:</p>\n                <p className=\"listGroupText bold\">{this.props.patient.attendingPhysician}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'attendingPhysician')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                <p className=\"listGroupText\">Occupation:</p>\n                <p className=\"listGroupText bold\">{this.props.patient.occupation.role}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.role')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Employer:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.name}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.name')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Contact:</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Phone:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.phone}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.phone')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Email:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.email}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.email')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                <p className=\"listGroupText\">Address:</p>\n                <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.address}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.address')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText underlined\">Insurance:</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Company:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.insurance.company}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.company')}>Edit</Button>\n                  <p className=\"listGroupText\">Number:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.insurance.policyNumber}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.policyNumber')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                <p className=\"listGroupText\">Description:</p>\n                <p className=\"listGroupText bold\">{this.props.patient.insurance.description}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.description')}>Edit</Button>\n                </ListGroup.Item>\n                {this.props.patient.insurance.expiryDate && (\n                  <ListGroup.Item>\n                  <p className=\"listGroupText\">Expiry:</p>\n                  <p className=\"listGroupText bold\">{moment.unix(this.props.patient.insurance.expiryDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.expiryDate')}>Edit</Button>\n                  </ListGroup.Item>\n                )}\n                <ListGroup.Item>\n                <p className=\"listGroupText underlined\">Subscriber:</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                <p className=\"listGroupText\">Company:</p>\n                <p className=\"listGroupText bold\">{this.props.patient.insurance.subscriber.company}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.subscriber.company')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                <p className=\"listGroupText\">Description:</p>\n                <p className=\"listGroupText bold\">{this.props.patient.insurance.subscriber.description}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.subscriber.description')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Date of Death:</p>\n                  <p className=\"listGroupText bold\">{moment.unix(this.props.patient.expiryDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'expiryDate')}>Edit</Button>\n                </ListGroup.Item>\n              </ListGroup>\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Comorbidities:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'comorbidities')}>Filter</Button>\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'comorbidity')}>Add</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'comorbidities' && (\n                <FilterComorbidityForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'comorbidity' && (\n                    <AddComorbidityForm\n                      onConfirm={this.submitAddComorbidityForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <PatientComorbidityList\n                  filter={this.state.filter}\n                  comorbidities={this.props.patient.comorbidities}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteComorbidity}\n                />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Admin Info:</h3>\n              </Col>\n              <ListGroup className=\"profileBasicListGroup\">\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Id:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient._id}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">LoggedIn:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.loggedIn.toString()}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">ClientConnected:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.clientConnected.toString()}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Verified:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.verification.verified.toString()}</p>\n                  <p className=\"listGroupText\">Type:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.verification.type}</p>\n                  <p className=\"listGroupText\">Code:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.verification.code}</p>\n                </ListGroup.Item>\n              </ListGroup>\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Addresses:</h3>\n              </Col>\n                <Col className=\"subTabCol\">\n                  <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'address')}>Filter</Button>\n                  <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n                </Col>\n                {this.state.startFilter &&\n                  this.state.selectFilter === 'address' && (\n                  <FilterAddressForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'address' && (\n                    <AddAddressForm\n                      onConfirm={this.submitAddAddressForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <PatientAddressList\n                  filter={this.state.filter}\n                  addresses={this.props.patient.addresses}\n                  authId={this.context.activityId}\n                  onDelete={this.deleteAddress}\n                  canDelete={this.state.canDelete}\n                  makePrimary={this.setAddressPrimary}\n                />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Next of Kin:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'nextOfKin')}>Filter</Button>\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'nextOfKin')}>Add</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'nextOfKin' && (\n                <FilterNextOfKinForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'nextOfKin' && (\n                    <AddNextOfKinForm\n                      onConfirm={this.submitAddNextOfKinForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <PatientNextOfKinList\n                  filter={this.state.filter}\n                  nextOfKin={this.props.patient.nextOfKin}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteNextOfKin}\n                />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Allergies:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'allergy')}>Filter</Button>\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'allergy')}>Add</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'allergy' && (\n                <FilterAllergyForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'allergy' && (\n                    <AddAllergyForm\n                      onConfirm={this.submitAddAllergyForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                {this.state.addAttachmentForm === true && (\n                  <AddAttachmentForm\n                    onCancel={this.cancelAddAttachment}\n                    onConfirm={this.addAttachment}\n                  />\n                )}\n                <PatientAllergyList\n                  filter={this.state.filter}\n                  allergies={this.props.patient.allergies}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteAllergy}\n                  onAddAttachment={this.startAddAttachment}\n                  deleteAttachment={this.deleteAttachment}\n                />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Medication:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'medication')}>Filter</Button>\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'medication')}>Add</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'medication' && (\n                <FilterMedicationForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'medication' && (\n                    <AddMedicationForm\n                      onConfirm={this.submitAddMedicationForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                {this.state.addAttachmentForm === true && (\n                  <AddAttachmentForm\n                    onCancel={this.cancelAddAttachment}\n                    onConfirm={this.addAttachment}\n                  />\n                )}\n                <PatientMedicationList\n                  filter={this.state.filter}\n                  medication={this.props.patient.medication}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteMedication}\n                  onAddAttachment={this.startAddAttachment}\n                  deleteAttachment={this.deleteAttachment}\n                />\n              </Col>\n              </li>\n\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Images:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'image')}>Filter</Button>\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'image' && (\n                <FilterImageForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'image' && (\n                    <AddImageForm\n                      onConfirm={this.submitAddImageForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <PatientImageList\n                  filter={this.state.filter}\n                  images={this.props.patient.images}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteImage}\n                />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Files:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'file')}>Filter</Button>\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'file' && (\n                <FilterFileForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'file' && (\n                    <AddFileForm\n                      onConfirm={this.submitAddFileForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <PatientFileList\n                  filter={this.state.filter}\n                  files={this.props.patient.files}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteFile}\n                />\n              </Col>\n              </li>\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Appointments:</h3>\n              </Col>\n\n                <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                  <Tab eventKey=\"1\" title=\"list\">\n                  {this.state.startFilter &&\n                    this.state.selectFilter === 'appointment' && (\n                    <FilterAppointmentForm\n                      onCancel={this.toggleFilter}\n                      onConfirm={this.submitFilterForm}\n                    />\n                  )}\n                  <Col className=\"subTabCol\">\n                    <Button variant=\"primary\" onClick={this.toggleFilter.bind(this, 'appointment')}>Filter</Button>\n                  </Col>\n                  <UserAppointmentList\n                    filter={this.state.filter}\n                    appointments={this.props.patient.appointments}\n                    authId={this.context.activityId}\n                  />\n                  </Tab>\n                  <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                    <FullCalendar\n                      initialView=\"dayGridMonth\"\n                      plugins={[dayGridPlugin, interactionPlugin]}\n                      events={this.state.calendarAppointments}\n                      eventClick={this.viewCalendarEvent}\n                      dateClick={this.dateClick}\n                    />\n                  </Tab>\n                </Tabs>\n              </Col>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Visits:</h3>\n              </Col>\n                <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                  <Tab eventKey=\"1\" title=\"list\">\n                  {this.state.startFilter &&\n                    this.state.selectFilter === 'visit' && (\n                    <FilterVisitForm\n                      onCancel={this.toggleFilter}\n                      onConfirm={this.submitFilterForm}\n                    />\n                  )}\n                  <Col className=\"subTabCol\">\n                    <Button variant=\"primary\" onClick={this.toggleFilter.bind(this, 'visit')}>Filter</Button>\n                  </Col>\n                  <VisitList\n                    filter={this.state.filter}\n                    visits={this.props.patient.visits}\n                    authId={this.context.activityId}\n                    patientPage={true}\n                  />\n                  </Tab>\n                  <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                    <FullCalendar\n                      initialView=\"dayGridMonth\"\n                      plugins={[dayGridPlugin, interactionPlugin]}\n                      events={this.state.calendarVisits}\n                      eventClick={this.viewCalendarEvent}\n                      dateClick={this.dateClick}\n                    />\n                  </Tab>\n                </Tabs>\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Notes:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'note')}>Filter</Button>\n                {this.context.role === 'Admin' && (\n                  <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'note' && (\n                <FilterNoteForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'note' && (\n                    <AddNoteForm\n                      onConfirm={this.submitAddNoteForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <PatientNoteList\n                  filter={this.state.filter}\n                  notes={this.props.patient.notes}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteNote}\n                />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Tags:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'tag')}>Filter</Button>\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'tag')}>Add</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'tag' && (\n                <FilterTagForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'tag' && (\n                    <AddTagForm\n                      onConfirm={this.submitAddTagForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <PatientTagList\n                  filter={this.state.filter}\n                  tags={this.props.patient.tags}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteTag}\n                />\n              </Col>\n              </li>\n              </ul>\n              </Row>\n            )}\n\n            {this.props.subMenu === 'basic' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Basic Info:</h3>\n              </Col>\n              <ListGroup className=\"profileBasicListGroup\">\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Title:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.title}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Fisrt Name:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.name}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'name')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Last Name:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.lastName}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'lastName')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Username:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.username}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">DOB:</p>\n                  <p className=\"listGroupText bold\">{moment.unix(this.props.patient.dob.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Age:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.age}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Gender:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.gender}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Email:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.contact.email}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Phone:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.contact.phone}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Phone 2:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.contact.phone2}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Role:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.role}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'role')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText underlined\">Registration:</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Date:</p>\n                  <p className=\"listGroupText bold\">{moment.unix(this.props.patient.registration.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Number:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.registration.number}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText underlined\">Referral:</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Date:</p>\n                  {this.props.patient.referral.date && (\n                    <p className=\"listGroupText bold\">{moment.unix(this.props.patient.referral.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                  )}\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.date')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Reason:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.referral.reason}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.reason')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Referral Physician:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.referral.physician.name}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.name')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Referral Physician Contact:</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Email:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.referral.physician.email}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.email')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Phone:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.referral.physician.phone}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.phone')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                <p className=\"listGroupText\">Attending Physician:</p>\n                <p className=\"listGroupText bold\">{this.props.patient.attendingPhysician}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'attendingPhysician')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                <p className=\"listGroupText\">Occupation:</p>\n                <p className=\"listGroupText bold\">{this.props.patient.occupation.role}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.role')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Employer:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.name}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.name')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Contact:</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Phone:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.phone}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.phone')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Email:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.email}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.email')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                <p className=\"listGroupText\">Address:</p>\n                <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.address}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.address')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText underlined\">Insurance:</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Company:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.insurance.company}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.company')}>Edit</Button>\n                  <p className=\"listGroupText\">Number:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.insurance.policyNumber}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.policyNumber')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                <p className=\"listGroupText\">Description:</p>\n                <p className=\"listGroupText bold\">{this.props.patient.insurance.description}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.description')}>Edit</Button>\n                </ListGroup.Item>\n                {this.props.patient.insurance.expiryDate && (\n                  <ListGroup.Item>\n                  <p className=\"listGroupText\">Expiry:</p>\n                  <p className=\"listGroupText bold\">{moment.unix(this.props.patient.insurance.expiryDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.expiryDate')}>Edit</Button>\n                  </ListGroup.Item>\n                )}\n                <ListGroup.Item>\n                <p className=\"listGroupText underlined\">Subscriber:</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                <p className=\"listGroupText\">Company:</p>\n                <p className=\"listGroupText bold\">{this.props.patient.insurance.subscriber.company}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.subscriber.company')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                <p className=\"listGroupText\">Description:</p>\n                <p className=\"listGroupText bold\">{this.props.patient.insurance.subscriber.description}</p>\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.subscriber.description')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Date of Death:</p>\n                  <p className=\"listGroupText bold\">{moment.unix(this.props.patient.expiryDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'expiryDate')}>Edit</Button>\n                </ListGroup.Item>\n              </ListGroup>\n              </Col>\n            )}\n            {this.props.subMenu === 'admin' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Admin Info:</h3>\n              </Col>\n              <ListGroup className=\"profileBasicListGroup\">\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Id:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient._id}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">LoggedIn:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.loggedIn.toString()}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">ClientConnected:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.clientConnected.toString()}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Verified:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.verification.verified.toString()}</p>\n                  <p className=\"listGroupText\">Type:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.verification.type}</p>\n                  <p className=\"listGroupText\">Code:</p>\n                  <p className=\"listGroupText bold\">{this.props.patient.verification.code}</p>\n                </ListGroup.Item>\n              </ListGroup>\n              </Col>\n            )}\n            {this.props.subMenu === 'address' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Addresses:</h3>\n              </Col>\n                <Col className=\"subTabCol\">\n                  <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'address')}>Filter</Button>\n                  <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n                </Col>\n                {this.state.startFilter &&\n                  this.state.selectFilter === 'address' && (\n                  <FilterAddressForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'address' && (\n                    <AddAddressForm\n                      onConfirm={this.submitAddAddressForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <PatientAddressList\n                  filter={this.state.filter}\n                  addresses={this.props.patient.addresses}\n                  authId={this.context.activityId}\n                  onDelete={this.deleteAddress}\n                  canDelete={this.state.canDelete}\n                  makePrimary={this.setAddressPrimary}\n                />\n              </Col>\n            )}\n            {this.props.subMenu === 'nextOfKin' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Next of Kin:</h3>\n            </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'nextOfKin')}>Filter</Button>\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'nextOfKin')}>Add</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'nextOfKin' && (\n                <FilterNextOfKinForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'nextOfKin' && (\n                    <AddNextOfKinForm\n                      onConfirm={this.submitAddNextOfKinForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <PatientNextOfKinList\n                  filter={this.state.filter}\n                  nextOfKin={this.props.patient.nextOfKin}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteNextOfKin}\n                />\n              </Col>\n            )}\n            {this.props.subMenu === 'allergy' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Allergies:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'allergy')}>Filter</Button>\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'allergy')}>Add</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'allergy' && (\n                <FilterAllergyForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'allergy' && (\n                    <AddAllergyForm\n                      onConfirm={this.submitAddAllergyForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                {this.state.addAttachmentForm === true && (\n                  <AddAttachmentForm\n                    onCancel={this.cancelAddAttachment}\n                    onConfirm={this.addAttachment}\n                  />\n                )}\n                <PatientAllergyList\n                  filter={this.state.filter}\n                  allergies={this.props.patient.allergies}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteAllergy}\n                  onAddAttachment={this.startAddAttachment}\n                  deleteAttachment={this.deleteAttachment}\n                />\n              </Col>\n            )}\n            {this.props.subMenu === 'medication' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Medication:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'medication')}>Filter</Button>\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'medication')}>Add</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'medication' && (\n                <FilterMedicationForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'medication' && (\n                    <AddMedicationForm\n                      onConfirm={this.submitAddMedicationForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                {this.state.addAttachmentForm === true && (\n                  <AddAttachmentForm\n                    onCancel={this.cancelAddAttachment}\n                    onConfirm={this.addAttachment}\n                  />\n                )}\n                <PatientMedicationList\n                  filter={this.state.filter}\n                  medication={this.props.patient.medication}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteMedication}\n                  onAddAttachment={this.startAddAttachment}\n                  deleteAttachment={this.deleteAttachment}\n                />\n              </Col>\n            )}\n            {this.props.subMenu === 'comorbidities' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Comorbidities:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'comorbidities')}>Filter</Button>\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'comorbidity')}>Add</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'comorbidities' && (\n                <FilterComorbidityForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'comorbidity' && (\n                    <AddComorbidityForm\n                      onConfirm={this.submitAddComorbidityForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <PatientComorbidityList\n                  filter={this.state.filter}\n                  comorbidities={this.props.patient.comorbidities}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteComorbidity}\n                />\n              </Col>\n            )}\n            {this.props.subMenu === 'image' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Images:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'image')}>Filter</Button>\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'image' && (\n                <FilterImageForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'image' && (\n                    <AddImageForm\n                      onConfirm={this.submitAddImageForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <PatientImageList\n                  filter={this.state.filter}\n                  images={this.props.patient.images}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteImage}\n                />\n              </Col>\n            )}\n            {this.props.subMenu === 'file' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Files:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'file')}>Filter</Button>\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'file' && (\n                <FilterFileForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'file' && (\n                    <AddFileForm\n                      onConfirm={this.submitAddFileForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <PatientFileList\n                  filter={this.state.filter}\n                  files={this.props.patient.files}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteFile}\n                />\n              </Col>\n            )}\n            {this.props.subMenu === 'appointment' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Appointments:</h3>\n              </Col>\n\n                <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                  <Tab eventKey=\"1\" title=\"list\">\n                  {this.state.startFilter &&\n                    this.state.selectFilter === 'appointment' && (\n                    <FilterAppointmentForm\n                      onCancel={this.toggleFilter}\n                      onConfirm={this.submitFilterForm}\n                    />\n                  )}\n                  <Col className=\"subTabCol\">\n                    <Button variant=\"primary\" onClick={this.toggleFilter.bind(this, 'appointment')}>Filter</Button>\n                  </Col>\n                  <UserAppointmentList\n                    filter={this.state.filter}\n                    appointments={this.props.patient.appointments}\n                    authId={this.context.activityId}\n                  />\n                  </Tab>\n                  <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                    <FullCalendar\n                      initialView=\"dayGridMonth\"\n                      plugins={[dayGridPlugin, interactionPlugin]}\n                      events={this.state.calendarAppointments}\n                      eventClick={this.viewCalendarEvent}\n                      dateClick={this.dateClick}\n                    />\n                  </Tab>\n                </Tabs>\n              </Col>\n            )}\n            {this.props.subMenu === 'visit' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Visits:</h3>\n              </Col>\n\n                <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                  <Tab eventKey=\"1\" title=\"list\">\n                  {this.state.startFilter &&\n                    this.state.selectFilter === 'visit' && (\n                    <FilterVisitForm\n                      onCancel={this.toggleFilter}\n                      onConfirm={this.submitFilterForm}\n                    />\n                  )}\n                  <Col className=\"subTabCol\">\n                    <Button variant=\"primary\" onClick={this.toggleFilter.bind(this, 'visit')}>Filter</Button>\n                  </Col>\n                  <VisitList\n                    filter={this.state.filter}\n                    visits={this.props.patient.visits}\n                    authId={this.context.activityId}\n                    patientPage={true}\n                  />\n                  </Tab>\n                  <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                    <FullCalendar\n                      initialView=\"dayGridMonth\"\n                      plugins={[dayGridPlugin, interactionPlugin]}\n                      events={this.state.calendarVisits}\n                      eventClick={this.viewCalendarEvent}\n                      dateClick={this.dateClick}\n                    />\n                  </Tab>\n                </Tabs>\n              </Col>\n            )}\n            {this.props.subMenu === 'note' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Notes:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'note')}>Filter</Button>\n                {this.context.role === 'Admin' && (\n                  <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'note' && (\n                <FilterNoteForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'note' && (\n                    <AddNoteForm\n                      onConfirm={this.submitAddNoteForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <PatientNoteList\n                  filter={this.state.filter}\n                  notes={this.props.patient.notes}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteNote}\n                />\n              </Col>\n            )}\n            {this.props.subMenu === 'tag' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Tags:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'tag')}>Filter</Button>\n                <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'tag')}>Add</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'tag' && (\n                <FilterTagForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'tag' && (\n                    <AddTagForm\n                      onConfirm={this.submitAddTagForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <PatientTagList\n                  filter={this.state.filter}\n                  tags={this.props.patient.tags}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteTag}\n                />\n              </Col>\n            )}\n            {this.props.subMenu === 'doc' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Document Generator:</h3>\n              </Col>\n                <Row className=\"displayPaneHeadRow\">\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Test</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'test', data: 'abc_xyz'})}>Create</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Referral</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'referral', data: 'abc_xyz'})}>Create</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">admissionReminder</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'admissionReminder', data: 'abc_xyz'})}>Create</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">sickNote</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'sickNote', data: 'abc_xyz'})}>Create</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">insurance</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'insurance', data: 'abc_xyz'})}>Create</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">diagnosisTesting</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'diagnosisTesting', data: 'abc_xyz'})}>Create</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">prescription</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'prescription', data: 'abc_xyz'})}>Create</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">treatmentConsent</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'treatmentConsent', data: 'abc_xyz'})}>Create</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">treatmentInstructions</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'treatmentInstructions', data: 'abc_xyz'})}>Create</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">unfitToFly</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'unfitToFly', data: 'abc_xyz'})}>Create</Button>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Row>\n                {this.state.showPdfView === true && (\n                  <PdfView\n                    pdfViewData={this.state.showPdfData}\n                    close={this.closePdfView}\n                    patient={this.props.patient}\n                  />\n                )}\n              </Col>\n            )}\n          </Col>\n        )}\n\n      </Row>\n    </div>\n    </React.Fragment>\n  );\n}\n\n}\n\nexport default PatientDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterPatientForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"patient\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n          <option>active</option>\n          <option>name</option>\n          <option>username</option>\n          <option>title</option>\n          <option>role</option>\n          <option>dob</option>\n          <option>age</option>\n          <option>gender</option>\n          <option>registration.date</option>\n          <option>registration.number</option>\n          <option>contact.email</option>\n          <option>contact.phone</option>\n          <option>contact.phone2</option>\n          <option>addresses.number</option>\n          <option>addresses.street</option>\n          <option>addresses.town</option>\n          <option>addresses.city</option>\n          <option>addresses.parish</option>\n          <option>addresses.country</option>\n          <option>addresses.postalCode</option>\n          <option>addresses.primary</option>\n          <option>verification.verified</option>\n          <option>expiryDate</option>\n          <option>loggedIn</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterPatientForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport CreatePatientForm from '../../components/forms/create/CreatePatientForm';\nimport PatientList from '../../components/lists/patient/PatientList';\nimport SearchPatientList from '../../components/lists/patient/SearchPatientList';\nimport PatientDetail from '../../components/details/PatientDetail';\n\nimport FilterPatientForm from '../../components/forms/filter/FilterPatientForm';\nimport PatientSearchForm from '../../components/forms/search/PatientSearchForm';\n\nimport FloatMenu from '../../components/floatMenu/FloatMenu';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './patient.css';\n\nclass PatientPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    patients: null,\n    searchPatients: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    canDelete: false,\n    sideCol: 'menuPatient',\n    startFilter: false,\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    menuSelect: 'list',\n    subMenuState: false,\n    subMenu: 'all',\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    selectedPatient: null,\n    creatingPatient: false,\n    newPatient: null,\n    fromGoLink: null,\n    goLinkId: null,\n    tabKey: 'list',\n    dateClickPatientSelect: false,\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all patients component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    if (this.props.location.state) {\n      if (this.props.location.state.patient) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.patient\n        })\n        if (this.props.location.state) {\n          if (this.props.location.state.selectPatient) {\n            this.setState({\n              dateClickPatientSelect: true\n            })\n          }\n        }\n      }\n    }\n    this.getAllPatients(seshStore);\n    if (this.props.selectedPatient) {\n      console.log('...found existing Patient selection... loading...');\n      this.setState({\n        showDetails: true,\n        // subMenuState: true,\n        selectedPatient: this.props.selectedPatient\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n        activityA: `getAllPatients?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n\n      if (this.state.fromGoLink === true) {\n        let goLinkPatient = resData.data.getAllPatients.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedPatient: goLinkPatient,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      if (this.state.dateClickPatientSelect.true) {\n        this.setState({\n          menuSelect: 'list',\n          dateClickPatientSelect: false\n        })\n      }\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message);\n      }\n      if (resData.data.error) {\n        this.context.setUserAlert(resData.data.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchPatients = (event) => {\n  event.preventDefault();\n  console.log('...searching patients...');\n  this.context.setUserAlert('...searching patients...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.context.activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'active' ||\n      field === 'age' ||\n      field === 'dob' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'registration.date' ||\n      field === 'expiryDate' ||\n      field === 'referral.date' ||\n      field === 'insurance.expiryDate' ||\n      field === 'insurance.expiryDate'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getPatientsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getPatientsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getPatientsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getPatientsByField);\n      }\n\n      let responseAlert = '...patient search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchPatients: resData.data.getPatientsByFieldRegex,\n          activityA: `getPatientsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchPatients: resData.data.getPatientsByField,\n          activityA: `getPatientsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nonStartCreateNewPatient = () => {\n  this.setState({\n    creatingPatient: true\n  })\n}\ncancelCreateNewPatient = () => {\n  this.setState({\n    creatingPatient: false\n  })\n}\nsubmitCreateNewPatientForm = (event) => {\n  event.preventDefault();\n  console.log('...creating new patient...');\n  this.context.setUserAlert('...creating new patient...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n\n  const active = false;\n  // const active = event.target.active.checked;\n  const title = event.target.title.value;\n  const name = event.target.name.value;\n  const lastName = event.target.lastName.value;\n  const username = event.target.username.value;\n  const dob = event.target.dob.value;\n  const role = event.target.role.value;\n  const gender = event.target.gender.value;\n  const contactEmail = event.target.contactEmail.value;\n  const contactPhone = event.target.contactPhone.value;\n  const contactPhone2 = event.target.contactPhone2.value;\n  let addressNumber = event.target.addressNumber.value;\n  if (addressNumber === '') {\n    addressNumber = 0;\n  }\n  const addressStreet = event.target.addressStreet.value;\n  const addressTown = event.target.addressTown.value;\n  const addressCity = event.target.addressCity.value;\n  const addressParish = event.target.addressParish.value;\n  const addressCountry = event.target.addressCountry.value;\n  const addressPostalCode = event.target.addressPostalCode.value;\n  const referralDate = event.target.referralDate.value;\n  const referralReason = event.target.referralReason.value.replace(/\\n/g, ' ');\n  const referralPhysicianName = event.target.referralPhysicianName.value;\n  const referralPhysicianPhone = event.target.referralPhysicianPhone.value;\n  const referralPhysicianEmail = event.target.referralPhysicianEmail.value;\n  const referralPhysicianAddress = event.target.referralPhysicianAddress.value.replace(/\\n/g, ' ');\n  const attendingPhysician = event.target.attendingPhysician.value;\n  const occupationRole = event.target.occupationRole.value;\n  const occupationEmployerName = event.target.occupationEmployerName.value;\n  const occupationEmployerEmail = event.target.occupationEmployerEmail.value;\n  const occupationEmployerPhone = event.target.occupationEmployerPhone.value;\n  const occupationEmployerAddress = event.target.occupationEmployerAddress.value.replace(/\\n/g, ' ');\n  const insuranceCompany = event.target.insuranceCompany.value;\n  const insurancePolicyNumber = event.target.insurancePolicyNumber.value;\n  const insuranceDescription = event.target.insuranceDescription.value.replace(/\\n/g, ' ');\n  const insuranceExpiryDate = event.target.insuranceExpiryDate.value;\n  const insuranceSubscriberCompany = event.target.insuranceSubscriberCompany.value;\n  const insuranceSubscriberDescription = event.target.insuranceSubscriberDescription.value.replace(/\\n/g, ' ');\n\n  if (\n\n      title.trim().length === 0 ||\n      name.trim().length === 0 ||\n      username.trim().length === 0 ||\n      dob.trim().length === 0 ||\n      role.trim().length === 0 ||\n      gender.trim().length === 0 ||\n      contactEmail.trim().length === 0 ||\n      contactPhone.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n\n  let requestBody = {\n    query: `\n      mutation {createPatient(\n        activityId:\"${activityId}\",\n        patientInput:{\n          active:${active},\n          username:\"${username}\",\n          dob:\"${dob}\",\n          title:\"${title}\",\n          name:\"${name}\",\n          lastName:\"${lastName}\",\n          role:\"${role}\",\n          gender:\"${gender}\",\n          contactEmail:\"${contactEmail}\",\n          contactPhone:\"${contactPhone}\",\n          contactPhone2:\"${contactPhone2}\",\n          addressNumber:${addressNumber},\n          addressStreet:\"${addressStreet}\",\n          addressTown:\"${addressTown}\",\n          addressCity:\"${addressCity}\",\n          addressParish:\"${addressParish}\",\n          addressCountry:\"${addressCountry}\",\n          addressPostalCode:\"${addressPostalCode}\",\n          referralDate:\"${referralDate}\",\n          referralReason:\"${referralReason}\",\n          referralPhysicianName:\"${referralPhysicianName}\",\n          referralPhysicianEmail:\"${referralPhysicianEmail}\",\n          referralPhysicianPhone:\"${referralPhysicianPhone}\",\n          attendingPhysician:\"${attendingPhysician}\",\n          occupationRole:\"${occupationRole}\",\n          occupationEmployerName:\"${occupationEmployerName}\",\n          occupationEmployerPhone:\"${occupationEmployerPhone}\",\n          occupationEmployerEmail:\"${occupationEmployerEmail}\",\n          occupationEmployerAddress:\"${occupationEmployerAddress}\",\n          insuranceCompany:\"${insuranceCompany}\",\n          insurancePolicyNumber:\"${insurancePolicyNumber}\",\n          insuranceDescription:\"${insuranceDescription}\",\n          insuranceExpiryDate:\"${insuranceExpiryDate}\",\n          insuranceSubscriberCompany:\"${insuranceSubscriberCompany}\",\n          insuranceSubscriberDescription:\"${insuranceSubscriberDescription}\"\n        })\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createPatient);\n      let responseAlert = '...create patient success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        showDetails: true,\n        creatingPatient: false,\n        tabKey: 'detail',\n        selectedPatient: resData.data.createPatient,\n        newPatient: resData.data.createPatient,\n        activityA: `createPatient?activityId:${activityId},patientId:${resData.data.createPatient._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'))\n      this.getAllPatients(seshStore);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\ntoggleFilter = () => {\n  this.setState({\n    startFilter: !this.state.startFilter\n  })\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n  if (args === 'detail' && this.state.selectedPatient) {\n    this.setState({\n      subMenuState: true\n    })\n  } else {\n    this.setState({\n      subMenuState: false\n    })\n  }\n}\nsubMenuSelect = (args) => {\n  this.setState({\n    subMenu: args\n  })\n}\n\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nshowDetails = (args) => {\n\n  this.setState({\n    showDetails: true,\n    selectedPatient: args,\n    tabKey: 'detail',\n    menuSelect: 'detail',\n    subMenuState: true\n  })\n  this.props.selectPatient(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nupdatePatient = (args) => {\n  console.log('...updating selected patient...');\n  this.setState({\n    selectedPatient: args\n  })\n  this.props.selectPatient(args)\n}\ndeletePatient = (args) => {\n  console.log('...deleteing patient...',args);\n  this.context.setUserAlert('...deleteing patient...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientById(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientById);\n      let responseAlert = '...delete patient success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deletePatientById?activityId:${activityId},patientId:${patientId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllPatients({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\nclearSearch = () => {\n  this.setState({\n    searchPatients: null\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n    <FloatMenu\n      state={this.state.sideCol}\n      menuSelect={this.menuSelect}\n      subMenuState={this.state.subMenuState}\n      subMenu={this.state.subMenu}\n      subMenuSelect={this.subMenuSelect}\n      page='patient'\n      role={this.context.role}\n    />\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <div className=\"topContainer\">\n      <div className=\"headTop\">\n        <Row className=\"\">\n          <h1>Patients:\n          {this.state.showDetails === true &&\n            this.state.selectedPatient &&\n            this.state.tabKey === 'detail' && (\n                this.state.selectedPatient.name\n            )}\n            </h1>\n        </Row>\n        <Row className=\"\">\n            {this.state.isLoading ? (\n              <Image src={loadingGif} className=\"loadingGif\" fluid />\n            ):(\n              <p>.</p>\n            )}\n        </Row>\n      </div>\n\n      <Row className=\"\">\n        {this.state.patients && (\n          <Col lg={12} className=\"\">\n\n          {this.state.startFilter === true && (\n            <Col>\n              <FilterPatientForm\n                onCancel={this.toggleFilter}\n                onConfirm={this.submitFilterForm}\n              />\n            </Col>\n          )}\n\n          {this.state.menuSelect === 'list' && (\n            <Col className=\"tabCol\">\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter}>Filter</Button>\n                <Button variant=\"warning\" className=\"searchBtn\" onClick={this.resetFilter}>Reset</Button>\n              </Col>\n              <PatientList\n                filter={this.state.filter}\n                patients={this.state.patients}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                showDetails={this.showDetails}\n                onDelete={this.deletePatient}\n              />\n            </Col>\n          )}\n\n          {this.state.menuSelect === 'search' && (\n            <Col className=\"tabCol\">\n              <Col className=\"subTabCol\">\n                <h3>Search Patient</h3>\n                <Row className=\"\">\n                  <PatientSearchForm\n                    onConfirm={this.searchPatients}\n                    onCancel={this.clearSearch}\n                  />\n                </Row>\n                <Row>\n                  {this.state.searchPatients && (\n                    <Button variant=\"primary\" className=\"centered_btn\" onClick={this.toggleFilter}>Filter</Button>\n                  )}\n                </Row>\n                <Row className=\"\">\n                  {this.state.searchPatients && (\n                    <SearchPatientList\n                      filter={this.state.filter}\n                      patients={this.state.searchPatients}\n                      authId={this.context.activityId}\n                      showDetails={this.showDetails}\n                    />\n                  )}\n                </Row>\n              </Col>\n            </Col>\n          )}\n          {this.state.menuSelect === 'detail' && (\n            <Col className=\"tabCol tabColDetail\">\n            {this.state.showDetails === false &&\n              !this.state.selectedPatient &&(\n              <h3>Select a Patient to see details</h3>\n            )}\n            {this.state.showDetails === true &&\n              this.state.selectedPatient && (\n              <PatientDetail\n                patient={this.state.selectedPatient}\n                updatePatient={this.updatePatient}\n                subMenu={this.state.subMenu}\n              />\n            )}\n            </Col>\n          )}\n          {this.state.menuSelect === 'new' && (\n            <Col className=\"tabCol\">\n              {this.state.creatingPatient === false && (\n                <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={this.onStartCreateNewPatient}>Create New</Button>\n              )}\n              {this.state.creatingPatient === true && (\n                <CreatePatientForm\n                  onConfirm={this.submitCreateNewPatientForm}\n                  onCancel={this.cancelCreateNewPatient}\n                />\n              )}\n              {this.state.newPatient && (\n                <Row>\n                  <h3>Review New Patient</h3>\n                  {this.state.newPatient.username}\n                </Row>\n              )}\n            </Col>\n          )}\n          </Col>\n        )}\n      </Row>\n    </div>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default PatientPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './createForms.css';\n\nconst CreateAppointmentForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Create New</h1>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"patientId\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Patient: {props.patient.username}</Form.Label>\n        <Form.Control type=\"text\" value={props.patient._id}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n\n      {\n        // <Form.Group as={Col} controlId=\"title\">\n        //   <Form.Label className=\"formLabel\">Title</Form.Label>\n        //   <Form.Control type=\"text\" placeholder=\"title\"/>\n        // </Form.Group>\n\n        // <Form.Group as={Col} controlId=\"subType\">\n        //   <Form.Label className=\"formLabel\">Sub-type</Form.Label>\n        //   <Form.Control type=\"text\" placeholder=\"subType\"/>\n        // </Form.Group>\n      }\n\n      <Form.Group as={Col} controlId=\"type\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>new_unreferred</option>\n          <option>referral</option>\n          <option>follow_up</option>\n        </Form.Control>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"important\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Important ?</Form.Label>\n        <Form.Control type=\"checkbox\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      { !props.preFillDate && (\n        <Form.Group as={Col} controlId=\"date\" className=\"formGroup\">\n          <Form.Label className=\"formLabel\">Date</Form.Label>\n          <Form.Control type=\"date\" placeholder=\"...\"/>\n        </Form.Group>\n      )}\n\n      { props.preFillDate && (\n        <Form.Group as={Col} controlId=\"date\" className=\"formGroup\">\n          <Form.Label className=\"formLabel\">Date</Form.Label>\n          <Form.Control type=\"date\" placeholder=\"...\" value={props.preFillDate}/>\n        </Form.Group>\n      )}\n\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"time\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Time</Form.Label>\n        <Form.Control type=\"time\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"location\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Location</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"description\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"loginFormBtn searchBtn\">Create</Button>\n      <Button variant=\"danger\" className=\"loginFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default CreateAppointmentForm;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './AppointmentItem.css';\n\nconst NoteItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Note: <span className=\"bold\">{props.note}</span>\n          </Card.Text>\n\n          {props.canDelete === true && (\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.note)}>Delete</Button>\n              )}\n            </Row>\n            )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\n\nimport NoteItem from '../../items/appointment/NoteItem';\nimport './AppointmentList.css';\n\nconst AppointmentNoteList = props => {\n\n  const {...filter} = props.filter;\n  let notes2 = props.notes;\n  let propsNotes = [];\n\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Ascending') {\n    propsNotes = notes2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Descending') {\n    propsNotes = notes2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'note') {\n    propsNotes = notes2;\n  }\n\n  let count = 0;\n\n  const notes = propsNotes.map(note => {\n\n    count = propsNotes.indexOf(note)+1;\n\n    return (\n      <NoteItem\n        key={count}\n        note={note}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{notes}</ul>;\n};\n\nexport default AppointmentNoteList;\n","import React, { useState } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './AppointmentItem.css';\n\nconst TagItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Tag: <span className=\"bold\">{props.tag}</span>\n          </Card.Text>\n\n          {props.canDelete === true && (\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>Delete!?</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.tag)}>Delete</Button>\n              )}\n            </Row>\n            )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default TagItem;\n","import React from 'react';\n\nimport TagItem from '../../items/appointment/TagItem';\nimport './AppointmentList.css';\n\nconst AppointmentTagList = props => {\n\n  const {...filter} = props.filter;\n  let tags2 = props.tags;\n  let propsTags = [];\n\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Ascending') {\n    propsTags = tags2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Descending') {\n    propsTags = tags2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'tag') {\n    propsTags = tags2;\n  }\n\n  let count = 0;\n\n  const tags = propsTags.map(tag => {\n\n    count = propsTags.indexOf(tag)+1;\n\n    return (\n      <TagItem\n        key={count}\n        tag={tag}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{tags}</ul>;\n};\n\nexport default AppointmentTagList;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport UserList from '../../lists/user/UserList';\nimport './addForms.css';\n\nconst AddUserForm = (props) => {\n\n  const [user, setUser] = useState(\"\");\n  const handleSetUser = (args) => {\n    setUser(args);\n   }\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Staff</h4>\n\n    <Form.Row className=\"formRow\">\n      <UserList\n        users={props.users}\n        selectUser={handleSetUser}\n        filter={props.filter}\n      />\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"user\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">User</Form.Label>\n        <Form.Control type=\"text\" value={user._id}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddUserForm;\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport AddToCalendar from 'react-add-to-calendar';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport PatientAddressList from '../lists/patient/PatientAddressList';\nimport PatientNextOfKinList from '../lists/patient/PatientNextOfKinList'\nimport PatientAllergyList from '../lists/patient/PatientAllergyList'\nimport PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientImageList from '../lists/patient/PatientImageList'\nimport PatientFileList from '../lists/patient/PatientFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport AppointmentNoteList from '../lists/appointment/AppointmentNoteList'\nimport AppointmentTagList from '../lists/appointment/AppointmentTagList'\nimport UserList from '../lists/user/UserList'\n\n\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../forms/filter/FilterNoteForm';\nimport FilterTagForm from '../forms/filter/FilterTagForm';\nimport FilterUserForm from '../forms/filter/FilterUserForm';\n\nimport UpdatePatientSingleFieldForm from '../forms/add/UpdatePatientSingleFieldForm';\n\nimport AddUserForm from '../forms/add/AddUserForm';\nimport AddNoteForm from '../forms/add/AddNoteForm';\nimport AddTagForm from '../forms/add/AddTagForm';\nimport loadingGif from '../../assets/loading.gif';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faBath\n} from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass AppointmentDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    startFilter: false,\n    selectFilter: null,\n    menuSelected: null,\n    menuSelect: 'basic',\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: this.props.appointment,\n    addAttachmentForm: false,\n    addAttachmentArgs: null,\n    showAddConsultantForm: false,\n    users: null,\n    calEvent: {\n      title: this.props.appointment.title,\n      description: this.props.appointment.description,\n      location: this.props.appointment.location,\n      startTime: moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.appointment.time+':00-05:00',\n      endTime: moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.appointment.time+':00-05:00',\n    },\n  };\n  static contextType = AuthContext;\n\nconstructor(props) {\n  super(props);\n  this.propsPatient = this.props.appointment;\n}\n\ncomponentDidMount () {\n  console.log('...appointment details component mounted...');\n  // console.log(moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.appointment.time+':00-05:00');\n  let seshStore;\n  if (sessionStorage.getItem('logInfo')) {\n    seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n  }\n  this.setState({\n    selectedPatient: this.context.selectedPatient\n  })\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.getAllUsers(seshStore);\n}\ncomponentWillUnmount() {\n\n}\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n        activityA: `getAllUsers?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding notes...');\n  this.context.setUserAlert('...adding notes...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const notes = event.target.notes.value.replace(/\\n/g, '');\n\n  if (\n      notes.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addAppointmentNotes(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          notes:\"${notes}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addAppointmentNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.addAppointmentNotes)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.addAppointmentNotes,\n        activityA: `addAppointmentNotes?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.addAppointmentNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n\n  console.log('...deleting notes...');\n  this.context.setUserAlert('...deleting notes...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const note = args;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentNote(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          note:\"${note}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.deleteAppointmentNote)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.deleteAppointmentNote,\n        activityA: `deleteAppointmentNote?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.deleteAppointmentNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddTagForm = (event) => {\n  event.preventDefault();\n  console.log('...adding tags...');\n  this.context.setUserAlert('...adding tags...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const tags = event.target.tags.value.replace(/\\n/g, '');\n\n  if (\n      tags.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addAppointmentTags(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          tags:\"${tags}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addAppointmentTags);\n      let responseAlert = '...tags add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.addAppointmentTags)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.addAppointmentTags,\n        activityA: `addAppointmentTags?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.addAppointmentTags;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteTag = (args) => {\n\n  console.log('...deleting tags...');\n  this.context.setUserAlert('...deleting tags...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const tag = args;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentTag(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          tag:\"${tag}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentTag);\n      let responseAlert = '...tag delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.deleteAppointmentTag)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.deleteAppointmentTag,\n        activityA: `deleteAppointmentTag?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.deleteAppointmentTag;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddUserForm = (event) => {\n  event.preventDefault();\n  console.log('...adding consultant...');\n  this.context.setUserAlert('...adding consultant...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = event.target.user.value;\n  const appointmentId = this.props.appointment._id;\n\n  if (\n      consultantId.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  const userRole = this.state.users.filter(x => x._id === consultantId)[0].role;\n  if (userRole !== 'Doctor' && userRole !== 'Nurse') {\n    console.log('...please choose a Doctor or Nurse to add please...');\n    this.context.setUserAlert('...please choose a Doctor or Nurse to add please...')\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addAppointmentConsultant(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addAppointmentConsultant);\n      let responseAlert = '...add consultant success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.addAppointmentConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `addAppointmentConsultant?activityId:${activityId},appointmentId:${appointmentId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteConsultant = (args) => {\n  console.log('...deleting consultant...');\n  this.context.setUserAlert('...deleting consultant...')\n  this.setState({isLoading: true});\n  //\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = args._id;\n  const appointmentId = this.props.appointment._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentConsultant(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentConsultant);\n      let responseAlert = '...delete consultant success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.deleteAppointmentConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteAppointmentConsultant?activityId:${activityId},appointmentId:${appointmentId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdatePatient = () => {\n  console.log('show update patient select list');\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  if (\n      query.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {updateAppointmentSingleField(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateAppointmentSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.updateAppointmentSingleField)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.updateAppointmentSingleField,\n        activityA: `updateAppointmentSingleField?activityId:${activityId},appointmentId:${appointmentId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.updateAppointmentSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\ntoggleFilter = (args) => {\n  this.setState({\n    startFilter: !this.state.startFilter,\n    selectFilter: args\n  })\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <div className=\"topContainer\">\n\n      <Row className=\"\">\n        {!this.props.appointment && (\n          <h3>...</h3>\n        )}\n      </Row>\n\n      <Row className=\"\">\n        {this.props.appointment && (\n          <Col md={12} className=\"\">\n            {\n          //     this.state.startFilter === true && (\n          //   <Col>\n          //     {this.state.selectFilter === 'consultant' && (\n          //       <FilterUserForm\n          //         onCancel={this.toggleSideCol}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'note' && (\n          //       <FilterNoteForm\n          //         onCancel={this.toggleSideCol}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'tag' && (\n          //       <FilterTagForm\n          //         onCancel={this.toggleSideCol}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //   </Col>\n          // )\n        }\n\n            {this.state.updateSingleField.state === true && (\n              <UpdatePatientSingleFieldForm\n                field={this.state.updateSingleField.field}\n                onConfirm={this.submitUpdateSingleFieldForm}\n                onCancel={this.cancelUpdateSingleField}\n              />\n            )}\n            {this.props.subMenu === 'all' && (\n              <Row className=\"tabRowAll\">\n              <ul className=\"summaryList\">\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Basic Info:</h3>\n              </Col>\n              <ListGroup className=\"profileBasicListGroup\">\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Title:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.title}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Type:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.type}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'type')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">subType:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.subType}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'subType')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Date:</p>\n                  <p className=\"listGroupText bold\">{moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Time:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.time}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'time')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Location:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.location}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'location')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Description:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.description}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'description')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Important:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.important.toString()}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'important')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">In Progress:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.inProgress.toString()}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'inProgress')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Attended:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.attended.toString()}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'attended')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText underlined\">Patient:</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Name:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.patient.title}</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.patient.name}</p>\n                  <Link\n                    to={{\n                      pathname: \"/patients\",\n                      state: {patient: this.props.appointment.patient._id}\n                    }}\n                  >\n                  <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                  </Link>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                <p className=\"listGroupText\">Id:</p>\n                <p className=\"listGroupText bold\">{this.props.appointment.patient._id}</p>\n                </ListGroup.Item>\n                {this.props.appointment.visit && (\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Visit:</p>\n                    <p className=\"listGroupText bold\">{this.props.appointment.visit._id}</p>\n                  </ListGroup.Item>\n                )}\n                <ListGroup.Item>\n                  <AddToCalendar event={this.state.calEvent} />\n                </ListGroup.Item>\n              </ListGroup>\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Admin Info:</h3>\n              </Col>\n              <ListGroup className=\"profileBasicListGroup\">\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Id:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment._id}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Creator:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.creator._id}</p>\n                </ListGroup.Item>\n              </ListGroup>\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Consultants:</h3>\n              </Col>\n                <Col className=\"subTabCol\">\n                  <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'consultant')}>Filter</Button>\n                  <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'consultant')}>Add</Button>\n                </Col>\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'consultant' && (\n                  <FilterUserForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'consultant' &&\n                  this.state.users && (\n                    <AddUserForm\n                      onConfirm={this.submitAddUserForm}\n                      onCancel={this.cancelAdd}\n                      filter={this.state.filter}\n                      users={this.state.users}\n                    />\n                )}\n                <UserList\n                  filter={this.state.filter}\n                  authId={this.context.activityId}\n                  users={this.props.appointment.consultants}\n                  appointmentPage={true}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteConsultant}\n                />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Notes:</h3>\n              </Col>\n                <Col className=\"subTabCol\">\n                  <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'note')}>Filter</Button>\n                  <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                </Col>\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'note' && (\n                  <FilterNoteForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'note' && (\n                    <AddNoteForm\n                      onConfirm={this.submitAddNoteForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <AppointmentNoteList\n                  filter={this.state.filter}\n                  notes={this.props.appointment.notes}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteNote}\n                />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Tags:</h3>\n              </Col>\n                <Col className=\"subTabCol\">\n                  <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'tag')}>Filter</Button>\n                  <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'tag')}>Add</Button>\n                </Col>\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'tag' && (\n                  <FilterTagForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'tag' && (\n                    <AddTagForm\n                      onConfirm={this.submitAddTagForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <AppointmentTagList\n                  filter={this.state.filter}\n                  tags={this.props.appointment.tags}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteTag}\n                />\n              </Col>\n              </li>\n              </ul>\n              </Row>\n            )}\n            {this.props.subMenu === 'basic' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Basic Info:</h3>\n              </Col>\n              <ListGroup className=\"profileBasicListGroup\">\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Title:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.title}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Type:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.type}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'type')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">subType:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.subType}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'subType')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Date:</p>\n                  <p className=\"listGroupText bold\">{moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Time:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.time}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'time')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Location:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.location}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'location')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Description:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.description}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'description')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Important:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.important.toString()}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'important')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">In Progress:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.inProgress.toString()}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'inProgress')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Attended:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.attended.toString()}</p>\n                  <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'attended')}>Edit</Button>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText underlined\">Patient:</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Name:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.patient.title}</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.patient.name}</p>\n                  <Link\n                    to={{\n                      pathname: \"/patients\",\n                      state: {patient: this.props.appointment.patient._id}\n                    }}\n                  >\n                  <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                  </Link>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                <p className=\"listGroupText\">Id:</p>\n                <p className=\"listGroupText bold\">{this.props.appointment.patient._id}</p>\n                </ListGroup.Item>\n                {this.props.appointment.visit && (\n                  <ListGroup.Item>\n                    <p className=\"listGroupText\">Visit:</p>\n                    <p className=\"listGroupText bold\">{this.props.appointment.visit._id}</p>\n                  </ListGroup.Item>\n                )}\n                <ListGroup.Item>\n                  <AddToCalendar event={this.state.calEvent} />\n                </ListGroup.Item>\n              </ListGroup>\n              </Col>\n            )}\n            {this.props.subMenu === 'admin' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Admin Info:</h3>\n              </Col>\n              <ListGroup className=\"profileBasicListGroup\">\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Id:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment._id}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Creator:</p>\n                  <p className=\"listGroupText bold\">{this.props.appointment.creator._id}</p>\n                </ListGroup.Item>\n              </ListGroup>\n              </Col>\n            )}\n            {this.props.subMenu === 'consultant' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Consultants:</h3>\n              </Col>\n                <Col className=\"subTabCol\">\n                  <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'consultant')}>Filter</Button>\n                  <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'consultant')}>Add</Button>\n                </Col>\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'consultant' && (\n                  <FilterUserForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'consultant' &&\n                  this.state.users && (\n                    <AddUserForm\n                      onConfirm={this.submitAddUserForm}\n                      onCancel={this.cancelAdd}\n                      filter={this.state.filter}\n                      users={this.state.users}\n                    />\n                )}\n                <UserList\n                  filter={this.state.filter}\n                  authId={this.context.activityId}\n                  users={this.props.appointment.consultants}\n                  appointmentPage={true}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteConsultant}\n                />\n              </Col>\n            )}\n            {this.props.subMenu === 'note' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Notes:</h3>\n              </Col>\n                <Col className=\"subTabCol\">\n                  <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'note')}>Filter</Button>\n                  <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                </Col>\n\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'note' && (\n                  <FilterNoteForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'note' && (\n                    <AddNoteForm\n                      onConfirm={this.submitAddNoteForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <AppointmentNoteList\n                  filter={this.state.filter}\n                  notes={this.props.appointment.notes}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteNote}\n                />\n              </Col>\n            )}\n            {this.props.subMenu === 'tag' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Tags:</h3>\n              </Col>\n                <Col className=\"subTabCol\">\n                  <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'tag')}>Filter</Button>\n                  <Button variant=\"success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'tag')}>Add</Button>\n                </Col>\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'tag' && (\n                  <FilterTagForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'tag' && (\n                    <AddTagForm\n                      onConfirm={this.submitAddTagForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                <AppointmentTagList\n                  filter={this.state.filter}\n                  tags={this.props.appointment.tags}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteTag}\n                />\n              </Col>\n            )}\n          </Col>\n        )}\n      </Row>\n    </div>\n    </React.Fragment>\n  );\n}\n\n}\n\nexport default AppointmentDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSearch,\n}\nfrom '@fortawesome/free-solid-svg-icons';\nimport {\n  faYoutube\n}\nfrom '@fortawesome/free-brands-svg-icons';\nimport './searchForms.css';\n\nconst AppointmentSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"field\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Search Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>type</option>\n        <option>subType</option>\n        <option>date</option>\n        <option>time</option>\n        <option>checkinTime</option>\n        <option>seenTime</option>\n        <option>location</option>\n        <option>description</option>\n        <option>inProgress</option>\n        <option>attended</option>\n        <option>important</option>\n        <option>notes</option>\n        <option>tags</option>\n        </Form.Control>\n      </Form.Group>\n\n\n\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"query\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Search Query</Form.Label>\n        <Form.Control type=\"text\" className=\"fontAwesome\" placeholder=\"...\"/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Search</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AppointmentSearchForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport CreateAppointmentForm from '../../components/forms/create/CreateAppointmentForm';\nimport AppointmentList from '../../components/lists/appointment/AppointmentList';\nimport PatientList from '../../components/lists/patient/PatientList';\n// import SearchAppointmentList from '../../components/lists/appointment/SearchAppointmentList';\nimport AppointmentDetail from '../../components/details/AppointmentDetail';\n\nimport FilterAppointmentForm from '../../components/forms/filter/FilterAppointmentForm';\nimport AppointmentSearchForm from '../../components/forms/search/AppointmentSearchForm';\nimport PatientSearchForm from '../../components/forms/search/PatientSearchForm';\n\nimport FullCalendar from '@fullcalendar/react';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\n\nimport FloatMenu from '../../components/floatMenu/FloatMenu';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './appointment.css';\n\nclass AppointmentPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    patients: null,\n    canDelete: false,\n    appointments: null,\n    searchAppointments: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menuAppointment',\n    startFilter: false,\n    filter: {\n      calendar: false,\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    menuSelect: 'list',\n    subMenuState: false,\n    subMenu: 'all',\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    creatingAppointment: false,\n    newAppointment: null,\n    calendarAppointments: null,\n    fromGoLink: null,\n    goLinkId: null,\n    sublistSearch: false,\n    tabKey: 'list',\n    preFillDate: null,\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all appointments component mounted...');\n\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n\n    this.getAllPatients(seshStore);\n    if (this.props.location.state) {\n      if (this.props.location.state.appointment) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.appointment\n        })\n      }\n    }\n    this.getAllAppointments(seshStore);\n    if (this.props.selectedAppointment) {\n      console.log('...found existing Appointment selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedAppointment: this.props.selectedAppointment\n      })\n    }\n    if (\n      this.props.location.state &&\n      this.props.location.state.newAppointment) {\n      console.log('...creating a new appt from patient detail...')\n      this.setState({\n        creatingAppointment: true,\n        selectedPatient: this.props.location.state.newAppointment,\n        menuSelect: 'new'\n      })\n    }\n    if (\n      this.props.location.state &&\n      this.props.location.state.newAppointmentDate) {\n      console.log('...creating a new appt from patient date click...')\n      this.setState({\n        creatingAppointment: true,\n        selectedPatient: this.props.location.state.newAppointmentDate.patient,\n        preFillDate: this.props.location.state.newAppointmentDate.date,\n        menuSelect: 'new'\n      })\n    }\n\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllAppointments (args) {\n  console.log('...retrieving all appointments...');\n  this.context.setUserAlert('...retrieving all appointments...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllAppointments(\n        activityId:\"${activityId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllAppointments);\n      let responseAlert = '...all appointments retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkAppointment = resData.data.getAllAppointments.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedAppointment: goLinkAppointment,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        appointments: resData.data.getAllAppointments,\n        activityA: `getAllAppointments?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.parseForCalendar(resData.data.getAllAppointments)\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n        activityA: `getAllPatients?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message)\n      }\n      if (resData.data.addUserActivity.error) {\n        this.context.setUserAlert(resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchAppointments = (event) => {\n  event.preventDefault();\n  console.log('...searching appointments...');\n  this.context.setUserAlert('...searching appointments...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'date' ||\n      field === 'inProgress' ||\n      field === 'attended' ||\n      field === 'important' ||\n      field === 'important'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getAppointmentsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n      query {getAppointmentsByField(\n        activityId:\"${activityId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getAppointmentsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getAppointmentsByField);\n      }\n\n      let responseAlert = '...appointment search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchAppointments: resData.data.getAppointmentsByFieldRegex,\n          activityA: `getAppointmentsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchAppointments: resData.data.getAppointmentsByField,\n          activityA: `getAppointmentsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nonStartCreateNewAppointment = () => {\n  this.setState({\n    creatingAppointment: true\n  })\n}\ncancelCreateNewAppointment = () => {\n  this.setState({\n    creatingAppointment: false,\n    selectedPatient: null\n  })\n}\nsubmitCreateNewAppointmentForm = (event) => {\n  event.preventDefault();\n  console.log('...creating new appointment...');\n  this.context.setUserAlert('...creating new appointment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.state.selectedPatient._id;\n\n  const title = this.state.selectedPatient.name+'_appointment_'+event.target.date.value;\n  const type = event.target.type.value;\n  const subType = '';\n  const date = event.target.date.value;\n  const time = event.target.time.value;\n  const location = event.target.location.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n  const important = event.target.important.checked;\n\n  if (\n      title.trim().length === 0 ||\n      date.trim().length === 0 ||\n      time.trim().length === 0 ||\n      location.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    return;\n  }\n  console.log('foo',date);\n\n  if (date < moment().format('YYYY-MM-DD')) {\n    console.log('...ummm no! Please pick a date today or in the future...');\n    this.context.setUserAlert('...ummm no! Please pick a date today or in the future...')\n    this.setState({isLoading:false})\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {createAppointment(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        appointmentInput:{\n          title:\"${title}\",\n          type:\"${type}\",\n          subType:\"${subType}\",\n          date:\"${date}\",\n          time:\"${time}\",\n          location:\"${location}\",\n          description:\"${description}\",\n          important:${important}\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createAppointment);\n      let responseAlert = '...create appointment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        showDetails: true,\n        creatingAppointment: false,\n        selectedAppointment: resData.data.createAppointment,\n        newAppointment: resData.data.createAppointment,\n        tabKey: 'detail',\n        activityA: `createAppointment?activityId:${activityId},appointmentId:${resData.data.createAppointment._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'))\n      this.getAllAppointments(seshStore);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\ntoggleFilter = (args) => {\n  if (args === 'calendar') {\n    this.setState({\n      filter: {\n        calendar: !this.state.calendar,\n        field: this.state.field,\n        key: this.state.key,\n        value: this.state.value\n      }\n    })\n  }\n  this.setState({\n    startFilter: !this.state.startFilter\n  })\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n  if (args === 'detail' && this.state.selectedAppointment) {\n    this.setState({\n      subMenuState: true\n    })\n  } else {\n    this.setState({\n      subMenuState: false\n    })\n  }\n}\nsubMenuSelect = (args) => {\n  this.setState({\n    subMenu: args\n  })\n}\n\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      calendar: this.state.filter.calendar,\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n}\n\nshowDetails = (args) => {\n  this.setState({\n    showDetails: true,\n    selectedAppointment: args,\n    overlay: false,\n    tabKey: 'detail',\n    menuSelect: 'detail',\n    subMenuState: true\n  })\n  this.props.selectAppointment(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\nselectPatient = (args) => {\n  this.setState({\n    selectedPatient: args\n  })\n\n}\n\nupdateAppointment = (args) => {\n  console.log('...updating selected appointment...');\n  this.setState({\n    selectedAppointment: args\n  })\n  this.props.selectAppointment(args);\n}\ndeleteAppointment = (args) => {\n  console.log('...deleteing appointment...',args);\n  this.context.setUserAlert('...deleteing appointment...')\n\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentById(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentById);\n      let responseAlert = '...delete appointment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteAppointmentById?activityId:${activityId},appointmentId:${appointmentId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllAppointments({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing appointments for calendar...');\n  let calendarAppointments = args.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n      }\n    }))\n\n    this.setState({\n      calendarAppointments: calendarAppointments,\n    })\n\n}\nviewCalendarEvent = (args) => {\n  console.log('...viewing calendar appointment...');\n  const appointment = this.state.appointments.filter(x => x._id === args.event.extendedProps.props._id)[0];\n  this.setState({\n    overlay: true,\n    overlayStatus: {type: 'calendarAppointment', data: appointment}\n  })\n}\ndateClick = (args) => {\n  console.log('dateClick')\n  this.setState({\n    overlay: true,\n    overlayStatus: {type: 'dateClickAppointment', data: args.dateStr}\n  })\n}\n\nstartCreateDateClickAppt = () => {\n  this.setState({\n    overlay: false,\n    menuSelect: 'new',\n    creatingAppointment: true,\n    preFillDate: this.state.overlayStatus.data\n  })\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\nstartSublistSearch = () => {\n  this.setState({\n    sublistSearch: true\n  })\n}\ncancelSublistSearch = () => {\n  this.setState({\n    sublistSearch: false,\n  })\n  this.getAllPatients({activityId: this.context.activityId,token: this.context.token});\n}\nsubmitSublistSearchForm = (event) => {\n  event.preventDefault()\n  console.log('...searching patient sublist...');\n  this.context.setUserAlert('...searching patient sublist...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'active' ||\n      field === 'age' ||\n      field === 'dob' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'registration.date' ||\n      field === 'expiryDate' ||\n      field === 'referral.date' ||\n      field === 'insurance.expiryDate' ||\n      field === 'insurance.expiryDate'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getPatientsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getPatientsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getPatientsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getPatientsByField);\n      }\n\n      let responseAlert = '...patient search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          patients: resData.data.getPatientsByFieldRegex,\n          activityA: `getPatientsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          patients: resData.data.getPatientsByField,\n          activityA: `getPatientsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null,\n      calendar: false\n    }\n  })\n}\nclearSearch = () => {\n  this.setState({\n    searchAppointments: null\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    <FloatMenu\n      state={this.state.sideCol}\n      menuSelect={this.menuSelect}\n      subMenuState={this.state.subMenuState}\n      subMenu={this.state.subMenu}\n      subMenuSelect={this.subMenuSelect}\n      page='appointment'\n      role={this.context.role}\n    />\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        selectCalendarDetails={this.showDetails}\n        toggleOverlay={this.toggleOverlay}\n        startCreateDateClickAppt={this.startCreateDateClickAppt}\n      />\n    )}\n\n    <div className=\"topContainer\">\n      <div className=\"headTop\">\n        <Row className=\"\">\n          <h1>Appointments:\n          {\n            this.state.showDetails === true &&\n            this.state.selectedAppointment &&\n            this.state.tabKey === 'detail' && (\n              this.state.selectedAppointment.title\n            )}\n          </h1>\n        </Row>\n        <Row className=\"\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Row>\n      </div>\n\n      <Row className=\"\">\n        {this.state.appointments && (\n          <Col md={12} className=\"\">\n\n          {this.state.startFilter === true && (\n            <Col>\n              <FilterAppointmentForm\n                onCancel={this.toggleFilter}\n                onConfirm={this.submitFilterForm}\n              />\n            </Col>\n          )}\n\n          {this.state.menuSelect === 'list' && (\n\n            <Col className=\"tabCol tabRowAppt\">\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter}>Filter</Button>\n                <Button variant=\"warning\" className=\"searchBtn\" onClick={this.resetFilter}>Reset</Button>\n              </Col>\n              <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"1\" title=\"list\">\n                  <AppointmentList\n                    filter={this.state.filter}\n                    appointments={this.state.appointments}\n                    authId={this.context.activityId}\n                    canDelete={this.state.canDelete}\n                    showDetails={this.showDetails}\n                    onDelete={this.deleteAppointment}\n                  />\n                </Tab>\n                <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                  <FullCalendar\n                    initialView=\"dayGridMonth\"\n                    plugins={[dayGridPlugin, interactionPlugin]}\n                    events={this.state.calendarAppointments}\n                    dateClick={this.dateClick}\n                    eventClick={this.viewCalendarEvent}\n                  />\n                </Tab>\n              </Tabs>\n            </Col>\n          )}\n          {this.state.menuSelect === 'search' && (\n            <Col className=\"tabCol\">\n              <Col className=\"subTabCol\">\n                <h3>Search:</h3>\n                <Row className=\"\">\n                  <AppointmentSearchForm\n                    onConfirm={this.searchAppointments}\n                    onCancel={this.clearSearch}\n                  />\n                </Row>\n                <Row>\n                  {this.state.searchAppointments && (\n                    <Button variant=\"primary\" className=\"centered_btn\" onClick={this.toggleFilter}>Filter</Button>\n                  )}\n                </Row>\n                <Row className=\"\">\n                  {this.state.searchAppointments && (\n                    <AppointmentList\n                      filter={this.state.filter}\n                      appointments={this.state.searchAppointments}\n                      authId={this.context.activityId}\n                      showDetails={this.showDetails}\n                    />\n                  )}\n                </Row>\n              </Col>\n            </Col>\n          )}\n          {this.state.menuSelect === 'detail' && (\n            <Col className=\"tabCol tabColDetail\">\n              {this.state.showDetails === false &&\n                !this.state.selectedAppointment &&(\n                <h3>Select a Appointment to see details</h3>\n              )}\n              {this.state.showDetails === true &&\n                this.state.selectedAppointment && (\n                <AppointmentDetail\n                  appointment={this.state.selectedAppointment}\n                  updateAppointment={this.updateAppointment}\n                  subMenu={this.state.subMenu}\n                />\n              )}\n            </Col>\n          )}\n          {this.state.menuSelect === 'new' && (\n            <Col className=\"tabCol\">\n            {this.state.creatingAppointment === false && (\n              <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={this.onStartCreateNewAppointment}>Create New</Button>\n            )}\n            {this.state.creatingAppointment === true &&\n              this.state.patients &&\n              !this.state.selectedPatient && (\n              <Col className=\"subTabCol\">\n              <h3>Select a Patient</h3>\n              <Row className=\"\">\n              <Button variant=\"success\" className=\"patientSublistSearchBtn\" onClick={this.startSublistSearch}>Search</Button>\n              </Row>\n              <Row className=\"\">\n              {this.state.sublistSearch === true && (\n                <PatientSearchForm\n                  onCancel={this.cancelSublistSearch}\n                  onConfirm={this.submitSublistSearchForm}\n                />\n              )}\n              </Row>\n              <Row className=\"\">\n              <PatientList\n                filter={this.state.filter}\n                patients={this.state.patients}\n                authId={this.context.activityId}\n                onSelect={this.selectPatient}\n                appointmentPage={true}\n              />\n              </Row>\n              </Col>\n            )}\n            {this.state.creatingAppointment === true &&\n              this.state.selectedPatient && (\n              <Row>\n                <CreateAppointmentForm\n                  onConfirm={this.submitCreateNewAppointmentForm}\n                  onCancel={this.cancelCreateNewAppointment}\n                  patient={this.state.selectedPatient}\n                  preFillDate={this.state.preFillDate}\n                />\n              </Row>\n            )}\n            {this.state.newAppointment && (\n              <Row>\n                <h3>Review New Appointment {this.state.newAppointment._id}</h3>\n              </Row>\n            )}\n            </Col>\n          )}\n          </Col>\n        )}\n      </Row>\n    </div>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default AppointmentPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './createForms.css';\n\nconst CreateVisitForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Create Visit Form</h1>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"appointmentId\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Appointment: {props.appointment.title}</Form.Label>\n        <Form.Control type=\"text\" value={props.appointment._id}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n    {\n      // <Form.Group as={Col} controlId=\"title\">\n      //   <Form.Label className=\"formLabel\">Title</Form.Label>\n      //   <Form.Control type=\"text\" placeholder=\"title\"/>\n      // </Form.Group>\n    }\n\n      <Form.Group as={Col} controlId=\"type\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"loginFormBtn\">Create</Button>\n      <Button variant=\"danger\" className=\"loginFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default CreateVisitForm;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst ComplaintItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.complaint.title}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.complaint.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.complaint.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Anamnesis: <span className=\"bold\">{props.complaint.anamnesis}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments:\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Add Attachment</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'complaint',data:props.complaint})}/>\n                </OverlayTrigger>\n\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.complaint}\n                attachments={props.complaint.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"complaint\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.complaint)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default ComplaintItem;\n","import React from 'react';\n\nimport ComplaintItem from '../../items/visit/ComplaintItem';\nimport './visitList.css';\n\nconst VisitComplaintList = props => {\n\n  const {...filter} = props.filter;\n  let complaints2 = props.complaints;\n  let propsComplaints = [];\n\n  if (filter.field === 'complaint' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsComplaints = complaints2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'title' && filter.value === 'Descending') {\n    propsComplaints = complaints2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsComplaints = complaints2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'description' && filter.value === 'Descending') {\n    propsComplaints = complaints2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'anamnesis' && filter.value === 'Ascending') {\n    propsComplaints = complaints2.sort((a, b) => (a.anamnesis > b.anamnesis) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'anamnesis' && filter.value === 'Descending') {\n    propsComplaints = complaints2.sort((a, b) => (a.anamnesis < b.anamnesis) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'complaint') {\n    propsComplaints = complaints2;\n  }\n\n  let count = 0;\n\n  const complaints = propsComplaints.map(complaint => {\n\n    count = propsComplaints.indexOf(complaint)+1;\n\n    return (\n      <ComplaintItem\n        key={count}\n        complaint={complaint}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{complaints}</ul>;\n};\n\nexport default VisitComplaintList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst SurveyItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.survey.title}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.survey.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.survey.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments:\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Add Attachment</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'survey',data:props.survey})}/>\n                </OverlayTrigger>\n\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.survey}\n                attachments={props.survey.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"survey\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.survey)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default SurveyItem;\n","import React from 'react';\n\nimport SurveyItem from '../../items/visit/SurveyItem';\nimport './visitList.css';\n\nconst VisitSurveyList = props => {\n\n  const {...filter} = props.filter;\n  let surveys2 = props.surveys;\n  let propsSurveys = [];\n\n  if (filter.field === 'survey' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsSurveys = surveys2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'survey' && filter.key === 'title' && filter.value === 'Descending') {\n    propsSurveys = surveys2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'survey' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsSurveys = surveys2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'survey' && filter.key === 'description' && filter.value === 'Descending') {\n    propsSurveys = surveys2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'survey') {\n    propsSurveys = surveys2;\n  }\n\n  let count = 0;\n\n  const surveys = propsSurveys.map(survey => {\n\n    count = propsSurveys.indexOf(survey)+1;\n\n    return (\n      <SurveyItem\n        key={count}\n        survey={survey}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{surveys}</ul>;\n};\n\nexport default VisitSurveyList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst SystematicInquiryItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.systematicInquiry.title}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.systematicInquiry.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.systematicInquiry.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments:\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Add Attachment</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'systematicInquiry',data:props.systematicInquiry})}/>\n                </OverlayTrigger>\n\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.systematicInquiry}\n                attachments={props.systematicInquiry.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"systematicInquiry\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.systematicInquiry)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default SystematicInquiryItem;\n","import React from 'react';\n\nimport SystematicInquiryItem from '../../items/visit/SystematicInquiryItem';\nimport './visitList.css';\n\nconst VisitSystematicInquiryList = props => {\n\n  const {...filter} = props.filter;\n  let systematicInquirys2 = props.systematicInquiry;\n  let propsSystematicInquirys = [];\n\n  if (filter.field === 'systematicInquiry' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'systematicInquiry' && filter.key === 'title' && filter.value === 'Descending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'systematicInquiry' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'systematicInquiry' && filter.key === 'description' && filter.value === 'Descending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'systematicInquiry') {\n    propsSystematicInquirys = systematicInquirys2;\n  }\n\n  let count = 0;\n\n  const systematicInquirys = propsSystematicInquirys.map(systematicInquiry => {\n\n    count = propsSystematicInquirys.indexOf(systematicInquiry)+1;\n\n    return (\n      <SystematicInquiryItem\n        key={count}\n        systematicInquiry={systematicInquiry}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{systematicInquirys}</ul>;\n};\n\nexport default VisitSystematicInquiryList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport {\n  faEye,\n  faTrashAlt\n } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst VitalsItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Pulse Rate: <span className=\"bold\">{props.vitals.pr}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Respiratory Rate: <span className=\"bold\">{props.vitals.rr}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n            <li>\n            <Card.Text className=\"cardText\">\n              Pulse Rate: <span className=\"bold\">{props.vitals.pr}</span>\n            </Card.Text>\n            </li>\n            <li>\n            <Card.Text className=\"cardText\">\n              Respiratory Rate: <span className=\"bold\">{props.vitals.rr}</span>\n            </Card.Text>\n            </li>\n            <li>\n            <Card.Text className=\"cardText\">\n              Temperature: <span className=\"bold\">{props.vitals.temp}</span>\n            </Card.Text>\n            </li>\n            <li>\n            <Card.Text className=\"cardText\">\n              PS02: <span className=\"bold\">{props.vitals.ps02}</span>\n            </Card.Text>\n            </li>\n            <li>\n            <Card.Text className=\"cardText\">\n              Height : <span className=\"bold\">{props.vitals.heightValue}</span>  <span className=\"bold\">{props.vitals.heightUnit}</span>\n            </Card.Text>\n            </li>\n            <li>\n            <Card.Text className=\"cardText\">\n              Weight : <span className=\"bold\">{props.vitals.weightValue}</span>  <span className=\"bold\">{props.vitals.weightUnit}</span>\n            </Card.Text>\n            </li>\n            <li>\n            <Card.Text className=\"cardText\">\n              BMI : <span className=\"bold\">{props.vitals.bmi}</span>\n            </Card.Text>\n            </li>\n            <li>\n            <Card.Text className=\"cardText\">\n              Urine\n            </Card.Text>\n            <Card.Text className=\"cardText\">\n              Type: <span className=\"bold\">{props.vitals.urine.type}</span> Value: <span className=\"bold\">{props.vitals.urine.value}</span>\n            </Card.Text>\n            </li>\n            <li>\n            {props.canDelete === true && (\n              <OverlayTrigger\n                key={'top'}\n                placement={'top'}\n                overlay={\n                  <Popover id={`popover-positioned-${'top'}`}>\n                    <Popover.Content>\n                      <strong>Delete!?</strong>\n                    </Popover.Content>\n                  </Popover>\n                }\n              >\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n              </OverlayTrigger>\n\n            )}\n            </li>\n            {deleteState === true && (\n              <li>\n              <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.vitals)}>Delete</Button>\n              </li>\n            )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default VitalsItem;\n","import React from 'react';\n\nimport VitalsItem from '../../items/visit/VitalsItem';\nimport './visitList.css';\n\nconst VisitVitalsList = props => {\n\n  const {...filter} = props.filter;\n  let vitals2 = props.vitals;\n  let propsVitals = [];\n\n  if (filter.field === 'vitals' && filter.key === 'pr' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.pr > b.pr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'pr' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.pr < b.pr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp1' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp1 > b.bp1) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp1' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp1 < b.bp1) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp2' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp2 > b.bp2) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp2' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp2 < b.bp2) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'rr' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.rr > b.rr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'rr' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.rr < b.rr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'temp' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.temp > b.temp) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'temp' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.temp < b.temp) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'ps02' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.ps02 > b.ps02) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'ps02' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.ps02 < b.ps02) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'heightValue' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.heightValue > b.heightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'heightValue' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.heightValue < b.heightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'weightValue' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.weightValue > b.weightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'weightValue' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.weightValue < b.weightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bmi' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.bmi > b.bmi) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bmi' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.bmi < b.bmi) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.type' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.type > b.urine.type) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.type' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.type < b.urine.type) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.value' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.value > b.urine.value) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.value' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.value < b.urine.value) ? 1 : -1);\n  }\n  // if (filter.field === 'vitals' && filter.key === 'role') {\n  //   propsVitals = vitals2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'vitals') {\n    propsVitals = vitals2;\n  }\n\n  let count = 0;\n\n  const vitals = propsVitals.map(vitalsItem => {\n\n    count = propsVitals.indexOf(vitalsItem)+1;\n\n    return (\n      <VitalsItem\n        key={count}\n        vitals={vitalsItem}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{vitals}</ul>;\n};\n\nexport default VisitVitalsList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst ExaminationItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            General: <span className=\"bold\">{props.examination.general}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Area: <span className=\"bold\">{props.examination.area}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                General: <span className=\"bold\">{props.examination.general}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Area: <span className=\"bold\">{props.examination.area}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                type: <span className=\"bold\">{props.examination.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                measure: <span className=\"bold\">{props.examination.measure}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                value: <span className=\"bold\">{props.examination.value}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                description: <span className=\"bold\">{props.examination.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                 followUp: <span className=\"bold\">{props.examination.followUp === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments:\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Add Attachment</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'examination',data:props.examination})}/>\n                </OverlayTrigger>\n\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.examination}\n                attachments={props.examination.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"examination\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.examination)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default ExaminationItem;\n","import React from 'react';\n\nimport ExaminationItem from '../../items/visit/ExaminationItem';\nimport './visitList.css';\n\nconst VisitExaminationList = props => {\n\n  const {...filter} = props.filter;\n  let examinations2 = props.examination;\n  let propsExaminations = [];\n\n  if (filter.field === 'examination' && filter.key === 'general' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.general > b.general) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'general' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.general < b.general) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'area' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.area > b.area) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'area' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.area < b.area) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'type' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'measure' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.measure > b.measure) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'measure' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.measure < b.measure) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'value' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.value > b.value) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'value' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.value < b.value) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'description' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'followUp') {\n    propsExaminations = examinations2.filter(x => x.followUp === filter.value);\n  }\n  if (filter.field !== 'examination') {\n    propsExaminations = examinations2;\n  }\n\n  let count = 0;\n\n  const examinations = propsExaminations.map(examination => {\n\n    count = propsExaminations.indexOf(examination)+1;\n\n    return (\n      <ExaminationItem\n        key={count}\n        examination={examination}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{examinations}</ul>;\n};\n\nexport default VisitExaminationList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst InvestigationItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.investigation.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.investigation.type}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.investigation.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.investigation.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.investigation.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments:\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Add Attachment</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'investigation',data:props.investigation})}/>\n                </OverlayTrigger>\n\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.investigation}\n                attachments={props.investigation.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"investigation\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.investigation)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default InvestigationItem;\n","import React from 'react';\n\nimport InvestigationItem from '../../items/visit/InvestigationItem';\nimport './visitList.css';\n\nconst VisitInvestigationList = props => {\n\n  const {...filter} = props.filter;\n  let investigations2 = props.investigation;\n  let propsInvestigations = [];\n\n  if (filter.field === 'investigation' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'investigation' && filter.key === 'title' && filter.value === 'Descending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'investigation' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'investigation' && filter.key === 'description' && filter.value === 'Descending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'investigation') {\n    propsInvestigations = investigations2;\n  }\n\n  let count = 0;\n\n  const investigations = propsInvestigations.map(investigation => {\n\n    count = propsInvestigations.indexOf(investigation)+1;\n\n    return (\n      <InvestigationItem\n        key={count}\n        investigation={investigation}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{investigations}</ul>;\n};\n\nexport default VisitInvestigationList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst DiagnosisItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.diagnosis.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.diagnosis.type}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.diagnosis.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.diagnosis.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.diagnosis.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments:\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Add Attachment</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'diagnosis',data:props.diagnosis})}/>\n                </OverlayTrigger>\n\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.diagnosis}\n                attachments={props.diagnosis.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"diagnosis\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.diagnosis)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default DiagnosisItem;\n","import React from 'react';\n\nimport DiagnosisItem from '../../items/visit/DiagnosisItem';\nimport './visitList.css';\n\nconst VisitDiagnosisList = props => {\n\n  const {...filter} = props.filter;\n  let diagnosis2 = props.diagnosis;\n  let propsDiagnosis = [];\n\n  if (filter.field === 'diagnosis' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'title' && filter.value === 'Descending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'type' && filter.value === 'Descending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'description' && filter.value === 'Descending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'diagnosis') {\n    propsDiagnosis = diagnosis2;\n  }\n\n  let count = 0;\n\n  const diagnoses = propsDiagnosis.map(diagnosis => {\n\n    count = propsDiagnosis.indexOf(diagnosis)+1;\n\n    return (\n      <DiagnosisItem\n        key={count}\n        diagnosis={diagnosis}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{diagnoses}</ul>;\n};\n\nexport default VisitDiagnosisList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst TreatmentItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.treatment.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.treatment.type}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.treatment.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.treatment.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.treatment.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Dose: <span className=\"bold\">{props.treatment.dose}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Frequency: <span className=\"bold\">{props.treatment.frequency}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments:\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Add Attachment</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'treatment',data:props.treatment})}/>\n                </OverlayTrigger>\n\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.treatment}\n                attachments={props.treatment.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"treatment\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.treatment)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default TreatmentItem;\n","import React from 'react';\n\nimport TreatmentItem from '../../items/visit/TreatmentItem';\nimport './visitList.css';\n\nconst VisitTreatmentList = props => {\n\n  const {...filter} = props.filter;\n  let treatment2 = props.treatment;\n  let propsTreatment = [];\n\n  if (filter.field === 'treatment' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'title' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'type' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'dose' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.dose > b.dose) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'dose' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.dose < b.dose) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'frequency' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.frequency > b.frequency) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'frequency' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.frequency < b.frequency) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'description' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'treatment') {\n    propsTreatment = treatment2;\n  }\n\n  let count = 0;\n\n  const treatments = propsTreatment.map(treatment => {\n\n    count = propsTreatment.indexOf(treatment)+1;\n\n    return (\n      <TreatmentItem\n        key={count}\n        treatment={treatment}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{treatments}</ul>;\n};\n\nexport default VisitTreatmentList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst BillingItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.billing.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.billing.type}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.billing.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.billing.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.billing.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Notes: <span className=\"bold\">{props.billing.notes}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Amount: <span className=\"bold\">{props.billing.amount}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Paid: <span className=\"bold\">{props.billing.paid === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}</span>\n                {props.billing.paid === false && (\n                  <span onClick={props.updateBillingPaid.bind(this, props.billing)}>Update?</span>\n                )}\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments:\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Add Attachment</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'billing',data:props.billing})}/>\n                </OverlayTrigger>\n\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.billing}\n                attachments={props.billing.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"billing\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.billing)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default BillingItem;\n","import React from 'react';\n\nimport BillingItem from '../../items/visit/BillingItem';\nimport './visitList.css';\n\nconst VisitBillingList = props => {\n\n  const {...filter} = props.filter;\n  let billing2 = props.billing;\n  let propsBilling = [];\n\n  if (filter.field === 'billing' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'title' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'type' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'amount' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.amount > b.amount) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'amount' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.amount < b.amount) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'description' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'notes' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.notes > b.notes) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'notes' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.notes < b.notes) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'paid') {\n    propsBilling = billing2.filter(x => x.paid === filter.value);\n  }\n  if (filter.field !== 'billing') {\n    propsBilling = billing2;\n  }\n\n  let count = 0;\n\n  const billings = propsBilling.map(billing => {\n\n    count = propsBilling.indexOf(billing)+1;\n\n    return (\n      <BillingItem\n        key={count}\n        billing={billing}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n        updateBillingPaid={props.updateBillingPaid}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{billings}</ul>;\n};\n\nexport default VisitBillingList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport {\n  faEye,\n  faTrashAlt\n } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst VigilanceItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            number: <span className=\"bold\">{props.key}</span>\n          </Card.Text>\n\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Popover id={`popover-positioned-${'top'}`}>\n                <Popover.Content>\n                  <strong>More Info</strong>\n                </Popover.Content>\n              </Popover>\n            }\n          >\n            <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <h5>chronicIllness:</h5>\n              </li>\n              <li>\n              <p>Diabetes</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.diabetes.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.diabetes.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.diabetes.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>High BloodPressure</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.hbp.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.hbp.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.hbp.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>Dyslipidemia</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.dyslipidemia.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.dyslipidemia.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.dyslipidemia.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>Cad</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.cad.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.cad.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.cad.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <h5>Lifestyle</h5>\n              </li>\n              <li>\n              <p>Weight</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.weight.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.weight.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.weight.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>Diet</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.diet.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.diet.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.diet.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>Smoking</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.smoking.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.smoking.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.smoking.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>SubstanceAbuse</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.substanceAbuse.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.substanceAbuse.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.substanceAbuse.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>Exercise</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.exercise.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.exercise.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.exercise.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>Allergies</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.allergies.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.allergies.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.allergies.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>Asthma</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.asthma.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.asthma.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.asthma.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <h5>Screening :</h5>\n              </li>\n              <li>\n              <p>Breast</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.breast.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.breast.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.breast.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>Prostate</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.prostate.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.prostate.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.prostate.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>Cervix</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.cervix.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.cervix.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.cervix.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>Colon</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.colon.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.colon.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.colon.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>Dental</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.dental.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.dental.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.dental.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <h5>Vaccines :</h5>\n              </li>\n              <li>\n              <p>Influenza</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.influenza.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.influenza.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.influenza.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>Varicella</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.varicella.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.varicella.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.varicella.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>HPV</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.hpv.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.hpv.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.hpv.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>MMR</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.mmr.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.mmr.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.mmr.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>Tetanus</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.tetanus.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.tetanus.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.tetanus.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>Pneumovax</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.pneumovax.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.pneumovax.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.pneumovax.comment}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <p>Other</p>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Other: <span className=\"bold\">{props.vigilance.vaccines.other.name}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.other.medication.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.other.testing.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.other.comment}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.vigilance)}>Delete</Button>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default VigilanceItem;\n","import React from 'react';\n\nimport VigilanceItem from '../../items/visit/VigilanceItem';\nimport './visitList.css';\n\nconst VisitVigilanceList = props => {\n\n  const {...filter} = props.filter;\n  let vigilance2 = props.vigilance;\n  let propsVigilance = [];\n\n  if (filter.field === 'vigilance' && filter.key === 'chronicIllness.diabetes.medication') {\n    propsVigilance = vigilance2.filter(x => x.chronicIllness.diabetes.medication === filter.value)\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'vigilance') {\n    propsVigilance = vigilance2;\n  }\n\n  let count = 0;\n\n  const vigilances = propsVigilance.map(vigilance => {\n\n    count = propsVigilance.indexOf(vigilance)+1;\n\n    return (\n      <VigilanceItem\n        key={count}\n        vigilance={vigilance}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{vigilances}</ul>;\n};\n\nexport default VisitVigilanceList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst ImageItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n        <Card.Text className=\"cardText\">\n        <a href={props.image.path} target=\"_blank\" rel=\"noopener noreferrer\">{props.image.name}</a>\n        </Card.Text>\n\n        <OverlayTrigger\n          key={'top'}\n          placement={'top'}\n          overlay={\n            <Popover id={`popover-positioned-${'top'}`}>\n              <Popover.Content>\n                <strong>More Info</strong>\n              </Popover.Content>\n            </Popover>\n          }\n        >\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n        </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.image.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.image.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.image.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.image)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n\n};\n\nexport default ImageItem;\n","import React from 'react';\n\nimport ImageItem from '../../items/visit/ImageItem';\nimport './visitList.css';\n\nconst VisitImageList = props => {\n\n  const {...filter} = props.filter;\n  let images2 = props.images;\n  let propsImages = [];\n\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'image') {\n    propsImages = images2;\n  }\n\n  let count = 0;\n\n  const images = propsImages.map(image => {\n\n    count = propsImages.indexOf(image)+1;\n\n    return (\n      <ImageItem\n        key={count}\n        image={image}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"imageList\">{images}</ul>;\n};\n\nexport default VisitImageList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst FileItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n        <Card.Text className=\"cardText\">\n        <a href={props.file.path} target=\"_blank\" rel=\"noopener noreferrer\">{props.file.name}</a>\n        </Card.Text>\n\n        <OverlayTrigger\n          key={'top'}\n          placement={'top'}\n          overlay={\n            <Popover id={`popover-positioned-${'top'}`}>\n              <Popover.Content>\n                <strong>More Info</strong>\n              </Popover.Content>\n            </Popover>\n          }\n        >\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n        </OverlayTrigger>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.file.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.file.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.file.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <OverlayTrigger\n                  key={'top'}\n                  placement={'top'}\n                  overlay={\n                    <Popover id={`popover-positioned-${'top'}`}>\n                      <Popover.Content>\n                        <strong>Delete!?</strong>\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </OverlayTrigger>\n\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.file)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default FileItem;\n","import React from 'react';\n\nimport FileItem from '../../items/visit/FileItem';\nimport './visitList.css';\n\nconst VisitFileList = props => {\n\n  const {...filter} = props.filter;\n  let files2 = props.files;\n  let propsFiles = [];\n\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'file') {\n    propsFiles = files2;\n  }\n\n  let count = 0;\n\n  const files = propsFiles.map(file => {\n\n    count = propsFiles.indexOf(file)+1;\n\n    return (\n      <FileItem\n        key={count}\n        file={file}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{files}</ul>;\n};\n\nexport default VisitFileList;\n","import React from 'react';\n// import { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterComplaintForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"complaint\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>description</option>\n        <option>anamnesis</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterComplaintForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterSurveyForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"survey\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterSurveyForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterSystematicInquiryForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"systematicInquiry\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterSystematicInquiryForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterDiagnosisForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"diagnosis\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterDiagnosisForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterVitalsForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"vitals\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n        <option>pr</option>\n        <option>bp1</option>\n        <option>bp2</option>\n        <option>rr</option>\n        <option>temp</option>\n        <option>ps02</option>\n        <option>heightUnit</option>\n        <option>heightValue</option>\n        <option>weightUnit</option>\n        <option>weightValue</option>\n        <option>bmi</option>\n        <option>urine.type</option>\n        <option>urine.value</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterVitalsForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterExaminationForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"examination\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n        <option>general</option>\n        <option>area</option>\n        <option>type</option>\n        <option>measure</option>\n        <option>value</option>\n        <option>description</option>\n        <option>followUp</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterExaminationForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterInvestigationForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"investigation\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterInvestigationForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterTreatmentForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"treatment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        <option>dose</option>\n        <option>frequency</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterTreatmentForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterBillingForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"billing\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"key\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Field to Filter</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        <option>amount</option>\n        <option>paid</option>\n        <option>notes</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Filter Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Filter</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterBillingForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddComplaintForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Complaint</h4>\n    <p>required feilds are denoted by a ' * '</p>\n\n    {\n      // <Form.Row className=\"formRow\">\n      //   <Form.Group as={Col} controlId=\"title\" className=\"formGroup\">\n      //     <Form.Label className=\"formLabel\">Title * </Form.Label>\n      //     <Form.Control type=\"text\" placeholder=\"\"/>\n      //   </Form.Group>\n      // </Form.Row>\n    }\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"description\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Description * </Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"anamnesis\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Anamnesis * </Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Attachment</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"...\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddComplaintForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddSurveyForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Survey</h4>\n    <p>required feilds are denoted by a ' * '</p>\n\n    {\n      // <Form.Row className=\"formRow\">\n      //   <Form.Group as={Col} controlId=\"title\" className=\"formGroup\">\n      //     <Form.Label className=\"formLabel\">Title * </Form.Label>\n      //     <Form.Control type=\"text\" placeholder=\"\"/>\n      //   </Form.Group>\n      // </Form.Row>\n    }\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"description\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Description * </Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Attachment</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"...\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddSurveyForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddSystematicInquiryForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add SystematicInquiry</h4>\n    <p>required feilds are denoted by a ' * '</p>\n\n    {\n      // <Form.Row className=\"formRow\">\n      //   <Form.Group as={Col} controlId=\"title\" className=\"formGroup\">\n      //     <Form.Label className=\"formLabel\">Title * </Form.Label>\n      //     <Form.Control type=\"text\" placeholder=\"\"/>\n      //   </Form.Group>\n      // </Form.Row>\n    }\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"description\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Description * </Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Attachment</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"...\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddSystematicInquiryForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus\n} from '@fortawesome/free-solid-svg-icons';\n\nconst AddVitalsForm = (props) => {\n\n  const [weightUnit, setState] = useState('Lbs');\n  const handleStateChange = (args) => {\n    // setState(args)\n    if (args === 'M') {\n      setState('Kg');\n    }\n    if (args === 'In') {\n      setState('Lbs');\n    }\n   }\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Vitals</h4>\n    <p>required feilds are denoted by a ' * '</p>\n\n    <div className=\"formDivider1\">\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"pr\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Pulse Rate * </Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"...\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"rr\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Respiratory Rate * </Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"bp1\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Blood Pressure (top) * </Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"...\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"bp2\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Blood Pressure (bottom) * </Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n    <Form.Group as={Col} controlId=\"temp\" className=\"formGroup\">\n      <Form.Label className=\"formLabel\">Temperature * </Form.Label>\n      <Form.Control type=\"number\" step='0.001' placeholder=\"...\"/>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"ps02\" className=\"formGroup\">\n      <Form.Label className=\"formLabel\">PS-02 * </Form.Label>\n      <Form.Control type=\"number\" step='0.001' placeholder=\"...\"/>\n    </Form.Group>\n    </Form.Row>\n    </div>\n\n    <div className=\"formDivider2\">\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"heightUnit\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Height: Unit * </Form.Label>\n        <Form.Control as=\"select\" onChange={e => handleStateChange(e.target.value)}>\n          <option>In</option>\n          <option>M</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"heightValue\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Height: Value * </Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"weightUnit\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Weight: Unit * </Form.Label>\n        <Form.Control type=\"text\" value={weightUnit}/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"weightValue\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Weight: Value * </Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    {\n      // <Form.Row>\n      //   <Form.Group as={Col} controlId=\"bmi\">\n      //     <Form.Label>BMI</Form.Label>\n      //     <Form.Control type=\"number\" step='0.001' placeholder=\"bmi\"/>\n      //   </Form.Group>\n      // </Form.Row>\n    }\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"urineType\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Urine: Type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"urineValue\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Urine: Value</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    </div>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddVitalsForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddExaminationForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Examination</h4>\n    <p>required feilds are denoted by a ' * '</p>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"general\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">General * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"area\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Area * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"type\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Type * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"measure\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Measure * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"value\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Value * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"description\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"followUp\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">FollowUp ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} className=\"formGroup\">\n        <Form.Label className=\"formLabel\">File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"...\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddExaminationForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddInvestigationForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Investigation</h4>\n    <p>required feilds are denoted by a ' * '</p>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"type\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Type * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"description\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Description * </Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} className=\"formGroup\">\n        <Form.Label className=\"formLabel\">File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"...\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddInvestigationForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddDiagnosisForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Diagnosis</h4>\n    <p>required feilds are denoted by a ' * '</p>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"title\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Title * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"type\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Type </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"description\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Description * </Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Attachment</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"...\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddDiagnosisForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddTreatmentForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Treatment</h4>\n    <p>required feilds are denoted by a ' * '</p>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"title\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Title * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"type\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Type * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"description\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Description * </Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"dose\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Dose * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"frequency\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Frequency * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Attachment</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"...\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddTreatmentForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddBillingForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Billing</h4>\n    <p>required feilds are denoted by a ' * '</p>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"type\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Type * </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"description\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Description * </Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"amount\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Amount * </Form.Label>\n        <Form.Control type=\"number\" step=\"0.001\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"paid\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Paid ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"notes\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Notes</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} className=\"formGroup\">\n        <Form.Label className=\"formLabel\">File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"...\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddBillingForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddVigilanceForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h3>Add Vigilance</h3>\n\n    <div className=\"formDivider1\">\n    <h4>Chronic Illness:</h4>\n    <p className=\"underlined\">Diabetes</p>\n    <Form.Row>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDiabetesMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDiabetesTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDiabetesComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">HBP</p>\n    <Form.Row>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessHbpMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessHbpTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessHbpComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">Dyslipidemia</p>\n    <Form.Row>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDyslipidemiaMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDyslipidemiaTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDyslipidemiaComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">Cad</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessCadMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessCadTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessCadComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    </div>\n\n    <div className=\"formDivider2\">\n    <h4>Lifestyle:</h4>\n    <p className=\"underlined\">Weight</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleWeightMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleWeightTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleWeightComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">Diet</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleDietMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleDietTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleDietComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">Smoking</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSmokingMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSmokingTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSmokingComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">SubstanceAbuse</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSubstanceAbuseMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSubstanceAbuseTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSubstanceAbuseComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">Exercise</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleExerciseMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleExerciseTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleExerciseComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">Allergies</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAllergiesMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAllergiesTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAllergiesComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">Asthma</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAsthmaMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAsthmaTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAsthmaComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    </div>\n\n    <div className=\"formDivider3\">\n    <h4>Screening:</h4>\n    <p className=\"underlined\">Breast</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningBreastMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningBreastTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningBreastComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">Prostate</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningProstateMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningProstateTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningProstateComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">Cervix</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningCervixMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningCervixTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningCervixComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">Colon</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningColonMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningColonTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningColonComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">Dental</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningDentalMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningDentalTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningDentalComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    </div>\n\n    <div className=\"formDivider1\">\n    <h4>Vaccines</h4>\n    <p className=\"underlined\">Influenza</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesInfluenzaMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesInfluenzaTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesInfluenzaComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">Varicella</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesVaricellaMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesVaricellaTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesVaricellaComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">Hpv</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesHpvMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesHpvTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesHpvComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">Mmr</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesMmrMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesMmrTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesMmrComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">Tetanus</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesTetanusMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesTetanusTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesTetanusComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">Pneumovax</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesPneumovaxMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesPneumovaxTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesPneumovaxComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <p className=\"underlined\">Other</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherName\">\n        <Form.Label className=\"formLabel\">Name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"...\"/>\n      </Form.Group>\n    </Form.Row>\n    </div>\n\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"danger\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddVigilanceForm;\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport AddToCalendar from 'react-add-to-calendar';\nimport S3 from 'react-aws-s3';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport PatientAddressList from '../lists/patient/PatientAddressList';\nimport PatientNextOfKinList from '../lists/patient/PatientNextOfKinList'\nimport PatientAllergyList from '../lists/patient/PatientAllergyList'\nimport PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientImageList from '../lists/patient/PatientImageList'\nimport PatientFileList from '../lists/patient/PatientFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport AppointmentNoteList from '../lists/appointment/AppointmentNoteList'\nimport VisitComplaintList from '../lists/visit/VisitComplaintList'\nimport VisitSurveyList from '../lists/visit/VisitSurveyList'\nimport VisitSystematicInquiryList from '../lists/visit/VisitSystematicInquiryList'\nimport VisitVitalsList from '../lists/visit/VisitVitalsList'\nimport VisitExaminationList from '../lists/visit/VisitExaminationList'\nimport VisitInvestigationList from '../lists/visit/VisitInvestigationList'\nimport VisitDiagnosisList from '../lists/visit/VisitDiagnosisList'\nimport VisitTreatmentList from '../lists/visit/VisitTreatmentList'\nimport VisitBillingList from '../lists/visit/VisitBillingList'\nimport VisitVigilanceList from '../lists/visit/VisitVigilanceList'\nimport VisitImageList from '../lists/visit/VisitImageList'\nimport VisitFileList from '../lists/visit/VisitFileList'\nimport UserList from '../lists/user/UserList'\n\n\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterComplaintForm from '../forms/filter/FilterComplaintForm';\nimport FilterSurveyForm from '../forms/filter/FilterSurveyForm';\nimport FilterSystematicInquiryForm from '../forms/filter/FilterSystematicInquiryForm';\nimport FilterDiagnosisForm from '../forms/filter/FilterDiagnosisForm';\nimport FilterVitalsForm from '../forms/filter/FilterVitalsForm';\nimport FilterExaminationForm from '../forms/filter/FilterExaminationForm';\nimport FilterInvestigationForm from '../forms/filter/FilterInvestigationForm';\nimport FilterTreatmentForm from '../forms/filter/FilterTreatmentForm';\nimport FilterBillingForm from '../forms/filter/FilterBillingForm';\nimport FilterImageForm from '../forms/filter/FilterImageForm';\nimport FilterFileForm from '../forms/filter/FilterFileForm';\nimport FilterUserForm from '../forms/filter/FilterUserForm';\n\nimport UpdatePatientSingleFieldForm from '../forms/add/UpdatePatientSingleFieldForm';\n\nimport AddUserForm from '../forms/add/AddUserForm';\nimport AddAttachmentForm from '../forms/add/AddAttachmentForm';\nimport AddImageForm from '../forms/add/AddImageForm';\nimport AddFileForm from '../forms/add/AddFileForm';\nimport AddComplaintForm from '../forms/add/AddComplaintForm';\nimport AddSurveyForm from '../forms/add/AddSurveyForm';\nimport AddSystematicInquiryForm from '../forms/add/AddSystematicInquiryForm';\nimport AddVitalsForm from '../forms/add/AddVitalsForm';\nimport AddExaminationForm from '../forms/add/AddExaminationForm';\nimport AddInvestigationForm from '../forms/add/AddInvestigationForm';\nimport AddDiagnosisForm from '../forms/add/AddDiagnosisForm';\nimport AddTreatmentForm from '../forms/add/AddTreatmentForm';\nimport AddBillingForm from '../forms/add/AddBillingForm';\nimport AddVigilanceForm from '../forms/add/AddVigilanceForm';\n\n// import PatientAllergyList from '../lists/patient/PatientAllergyList'\n// import PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientComorbidityList from '../lists/patient/PatientComorbidityList'\nimport FilterAllergyForm from '../forms/filter/FilterAllergyForm';\nimport FilterMedicationForm from '../forms/filter/FilterMedicationForm';\nimport FilterComorbidityForm from '../forms/filter/FilterComorbidityForm';\n\nimport loadingGif from '../../assets/loading.gif';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faBath\n} from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass VisitDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    startFilter: false,\n    selectFilter: null,\n    menuSelected: null,\n    menuSelect: 'basic',\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    selectedPatient: null,\n    selectedVisit: null,\n    selectedAppointment: null,\n    addAttachmentForm: false,\n    addAttachmentArgs: null,\n    showAddConsultantForm: false,\n    users: null,\n    calEvent: {\n      title: this.props.visit.title,\n      description: this.props.visit.appointment.description,\n      location: this.props.visit.appointment.location,\n      startTime: moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.visit.time+':00-05:00',\n      endTime: moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.visit.time+':00-05:00',\n    },\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.propsVisit = this.props.visit;\n  }\n\ncomponentDidMount () {\n  console.log('...visit details component mounted...',this.props.visit.patient);\n  let seshStore;\n  if (sessionStorage.getItem('logInfo')) {\n    seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getPocketVars(seshStore);\n  }\n  if (this.context.role === 'Admin' ||\n      this.context.role === 'Doctor' ||\n      this.context.role === 'Nurse'\n    ) {\n    this.setState({\n      canDelete: true\n    })\n  }\n\n  this.getAllUsers(seshStore);\n}\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n  console.log('...retriving pocketVars..');\n  this.context.setUserAlert('...retriving pocketVars..')\n  const token = args.token;\n  const activityId = args.activityId;\n  const requestBody = {\n        query:`\n          query {getPocketVars(\n            activityId:\"${activityId}\")}\n        `};\n\n  fetch('http://localhost:8088/graphql', {\n    method: 'POST',\n    body: JSON.stringify(requestBody),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + token\n    }\n  })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (resData.errors) {\n        this.setState({userAlert: resData.errors[0].message})\n      } else {\n        let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n        console.log('...retriving pocketVars success...');\n        this.context.setUserAlert('...retriving pocketVars success...')\n        this.setState({\n          pocketVars: pocketVarsParsed\n        });\n      }\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n    });\n  }\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message)\n      }\n      if (resData.data.addUserActivity.error) {\n        this.context.setUserAlert(resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n        activityA: `getAllUsers?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nsubmitAddComplaintForm = (event) => {\n  event.preventDefault();\n  console.log('...adding complaint...');\n  this.context.setUserAlert('...adding complaint...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = this.props.visit.patient.name+'_complaint_'+moment().format('YYYY-MM-DD, h:mm:ss a');\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n  const anamnesis = event.target.anamnesis.value.replace(/\\n/g, ' ');\n  // const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0 ||\n      anamnesis.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/complaint/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'complaint attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'complaint attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'complaint attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'complaint attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitComplaint(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${title}\",\n            complaintDescription:\"${description}\",\n            complaintAnamnesis:\"${anamnesis}\",\n            complaintAttachment:\"${file2Path}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitComplaint);\n      let responseAlert = '...complaint add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitComplaint)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitComplaint,\n        activityA: `addVisitComplaint?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitComplaint;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteComplaint = (args) => {\n\n  console.log('...deleting complaint...');\n  this.context.setUserAlert('...deleting complaint...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = args.title;\n  const description = args.description;\n  const anamnesis = args.anamnesis;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitComplaint(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${title}\",\n            complaintDescription:\"${description}\",\n            complaintAnamnesis:\"${anamnesis}\",\n            complaintAttachments:\"${attachments}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitComplaint);\n      let responseAlert = '...complaint delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitComplaint)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitComplaint,\n        activityA: `deleteVisitComplaint?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitComplaint;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/complaint/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/complaint/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `complaint attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddSurveyForm = (event) => {\n  event.preventDefault();\n  console.log('...adding survey...');\n  this.context.setUserAlert('...adding survey...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = this.props.visit.patient.name+'_survey_'+moment().format('YYYY-MM-DD, h:mm:ss a');\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n  // const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/survey/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'survey attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'survey attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'survey attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'survey attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitSurvey(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          surveyTitle:\"${title}\",\n          surveyDescription:\"${description}\",\n          surveyAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitSurvey);\n      let responseAlert = '...survey add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitSurvey)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitSurvey,\n        activityA: `addVisitSurvey?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitSurvey;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteSurvey = (args) => {\n\n  console.log('...deleting survey...');\n  this.context.setUserAlert('...deleting survey...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = args.title;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitSurvey(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          surveyTitle:\"${title}\",\n          surveyDescription:\"${description}\",\n          surveyAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitSurvey);\n      let responseAlert = '...survey delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitSurvey)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitSurvey,\n        activityA: `deleteVisitSurvey?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitSurvey;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/survey/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/survey/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `survey attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddSystematicInquiryForm = (event) => {\n  event.preventDefault();\n  console.log('...adding systematicInquiry...');\n  this.context.setUserAlert('...adding systematicInquiry...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = this.props.visit.patient.name+'_systematicInquiry_'+moment().format('YYYY-MM-DD, h:mm:ss a');\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n\n  // const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/systematicInquiry/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'systematicInquiry attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'systematicInquiry attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'systematicInquiry attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'systematicInquiry attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitSysInquiry(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          systematicInquiryTitle:\"${title}\",\n          systematicInquiryDescription:\"${description}\",\n          systematicInquiryAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitSysInquiry);\n      let responseAlert = '...systematicInquiry add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitSysInquiry)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitSysInquiry,\n        activityA: `addVisitSysInquiry?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitSysInquiry;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteSystematicInquiry = (args) => {\n\n  console.log('...deleting systematicInquiry...');\n  this.context.setUserAlert('...deleting systematicInquiry...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = args.title;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitSysInquiry(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          systematicInquiryTitle:\"${title}\",\n          systematicInquiryDescription:\"${description}\",\n          systematicInquiryAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitSysInquiry);\n      let responseAlert = '...sys inquiry delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitSysInquiry)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitSysInquiry,\n        activityA: `deleteVisitSysInquiry?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitSysInquiry;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/systematicInquiry/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/systematicInquiry/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `systematicInquiry attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddVitalsForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Vitals...');\n  this.context.setUserAlert('...adding Vitals...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const pr = event.target.pr.value;\n  const bp1 = event.target.bp1.value;\n  const bp2 = event.target.bp2.value;\n  const rr = event.target.rr.value;\n  const temp = event.target.temp.value;\n  const ps02 = event.target.ps02.value;\n  const heightUnit = event.target.heightUnit.value;\n  const heightValue = event.target.heightValue.value;\n  const weightUnit = event.target.weightUnit.value;\n  const weightValue = event.target.weightValue.value;\n  let bmi = 0;\n  const urineType = event.target.urineType.value;\n  const urineValue = event.target.urineValue.value;\n  if (heightUnit === 'M' ) {\n    bmi = weightValue/(heightValue**2)\n  }\n  if (heightUnit === 'In' ) {\n    bmi = 703 * (weightValue/(heightValue**2))\n  }\n  bmi = bmi.toFixed(2)\n  console.log('bmi',bmi);\n\n  if (\n      pr.trim().length === 0 ||\n      bp1.trim().length === 0 ||\n      bp2.trim().length === 0 ||\n      rr.trim().length === 0 ||\n      temp.trim().length === 0 ||\n      ps02.trim().length === 0 ||\n      heightUnit.trim().length === 0 ||\n      heightValue.trim().length === 0 ||\n      weightUnit.trim().length === 0 ||\n      weightValue.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitVitals(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          vitalsPr:${pr},\n          vitalsBp1:${bp1},\n          vitalsBp2:${bp2},\n          vitalsRr:${rr},\n          vitalsTemp:${temp},\n          vitalsPs02:${ps02},\n          vitalsHeightUnit:\"${heightUnit}\",\n          vitalsHeightValue:${heightValue},\n          vitalsWeightUnit:\"${weightUnit}\",\n          vitalsWeightValue:${weightValue},\n          vitalsBmi:${bmi},\n          vitalsUrineType:\"${urineType}\",\n          vitalsUrineValue:\"${urineValue}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitVitals);\n      let responseAlert = '...Vitals add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitVitals)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitVitals,\n        activityA: `addVisitVitals?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitVitals;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteVitals = (args) => {\n\n  console.log('...deleting Vitals...');\n  this.context.setUserAlert('...deleting Vitals...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const pr = args.pr;\n  const bp1 = args.bp1;\n  const bp2 = args.bp2;\n  const rr = args.rr;\n  const temp = args.temp;\n  const ps02 = args.ps02;\n  const heightUnit = args.heightUnit;\n  const heightValue = args.heightValue;\n  const weightUnit = args.weightUnit;\n  const weightValue = args.weightValue;\n  const bmi = args.bmi;\n  const urineType = args.urine.type;\n  const urineValue = args.urine.value;\n\n  let requestBody = {\n    query: `\n    mutation {deleteVisitVitals(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        vitalsPr:${pr},\n        vitalsBp1:${bp1},\n        vitalsBp2:${bp2},\n        vitalsRr:${rr},\n        vitalsTemp:${temp},\n        vitalsPs02:${ps02},\n        vitalsHeightUnit:\"${heightUnit}\",\n        vitalsHeightValue:${heightValue},\n        vitalsWeightUnit:\"${weightUnit}\",\n        vitalsWeightValue:${weightValue},\n        vitalsBmi:${bmi},\n        vitalsUrineType:\"${urineType}\",\n        vitalsUrineValue:\"${urineValue}\"\n      })\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitVitals);\n      let responseAlert = '...vitals delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitVitals)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitVitals,\n        activityA: `deleteVisitVitals?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitVitals;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddExaminationForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Examination...');\n  this.context.setUserAlert('...adding Examination...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const general = event.target.general.value;\n  const area = event.target.area.value;\n  const type = event.target.type.value;\n  const measure = event.target.measure.value;\n  const value = event.target.value.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n  const followUp = event.target.followUp.checked;\n  // const attachment = event.target.attachment.value;\n\n  if (\n      general.trim().length === 0 ||\n      area.trim().length === 0 ||\n      type.trim().length === 0 ||\n      measure.trim().length === 0 ||\n      value.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/examination/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'examination attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'examination attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'examination attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'examination attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitExamination(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          examinationGeneral:\"${general}\",\n          examinationArea:\"${area}\",\n          examinationType:\"${type}\",\n          examinationMeasure:\"${measure}\",\n          examinationValue:\"${value}\",\n          examinationDescription:\"${description}\",\n          examinationFollowUp:${followUp},\n          examinationAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitExamination);\n      let responseAlert = '...Examination add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitExamination)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitExamination,\n        activityA: `addVisitExamination?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitExamination;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteExamination = (args) => {\n\n  console.log('...deleting Examination...');\n  this.context.setUserAlert('...deleting Examination...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const general = args.general;\n  const area = args.area;\n  const type = args.type;\n  const measure = args.measure;\n  const value = args.value;\n  const description = args.description;\n  const followUp = args.followUp;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitExamination(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          examinationGeneral:\"${general}\",\n          examinationArea:\"${area}\",\n          examinationType:\"${type}\",\n          examinationMeasure:\"${measure}\",\n          examinationValue:\"${value}\",\n          examinationDescription:\"${description}\",\n          examinationFollowUp:${followUp},\n          examinationAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitExamination);\n      let responseAlert = '...Examination delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitExamination)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitExamination,\n        activityA: `deleteVisitExamination?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitExamination;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/examination/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/examination/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `examination attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddInvestigationForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Investigation...');\n  this.context.setUserAlert('...adding Investigation...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = this.props.visit.patient.name+'_investigation_'+moment().format('YYYY-MM-DD, h:mm:ss a');\n  const type = event.target.type.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n  // const attachment = event.target.attachment.value;\n\n  if (\n      type.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/investigation/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'investigation attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'investigation attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'investigation attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'investigation attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitInvestigation(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          investigationTitle:\"${title}\",\n          investigationType:\"${type}\",\n          investigationDescription:\"${description}\",\n          investigationAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitInvestigation);\n      let responseAlert = '...Investigation add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitInvestigation)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitInvestigation,\n        activityA: `addVisitInvestigation?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitInvestigation;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteInvestigation = (args) => {\n\n  console.log('...deleting Investigation...');\n  this.context.setUserAlert('...deleting Investigation...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitInvestigation(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          investigationTitle:\"${title}\",\n          investigationType:\"${type}\",\n          investigationDescription:\"${description}\",\n          investigationAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitInvestigation);\n      let responseAlert = '...Investigation delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitInvestigation)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitInvestigation,\n        activityA: `deleteVisitInvestigation?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitInvestigation;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/investigation/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/investigation/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `investigation attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddDiagnosisForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Diagnosis...');\n  this.context.setUserAlert('...adding Diagnosis...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = this.props.visit.patient.name+'_diagnosis_'+moment().format('YYYY-MM-DD, h:mm:ss a');\n  const type = event.target.type.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n  // const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/diagnosis/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'diagnosis attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'diagnosis attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'diagnosis attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'diagnosis attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitDiagnosis(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          diagnosisTitle:\"${title}\",\n          diagnosisType:\"${type}\",\n          diagnosisDescription:\"${description}\",\n          diagnosisAttachment:\"${file2Path}\"\n        })\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitDiagnosis);\n      let responseAlert = '...Diagnosis add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitDiagnosis)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitDiagnosis,\n        activityA: `addVisitDiagnosis?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitDiagnosis;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteDiagnosis = (args) => {\n\n  console.log('...deleting Diagnosis...');\n  this.context.setUserAlert('...deleting Diagnosis...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitDiagnosis(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          diagnosisTitle:\"${title}\",\n          diagnosisType:\"${type}\",\n          diagnosisDescription:\"${description}\",\n          diagnosisAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitDiagnosis);\n      let responseAlert = '...Diagnosis delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitDiagnosis)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitDiagnosis,\n        activityA: `deleteVisitDiagnosis?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitDiagnosis;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/diagnosis/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/diagnosis/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `diagnosis attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddTreatmentForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Treatment...');\n  this.context.setUserAlert('...adding Treatment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = this.props.visit.patient.name+'_treatment_'+moment().format('YYYY-MM-DD, h:mm:ss a');\n  const type = event.target.type.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n  const dose = event.target.dose.value;\n  const frequency = event.target.frequency.value;\n  // const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      type.trim().length === 0 ||\n      description.trim().length === 0 ||\n      dose.trim().length === 0 ||\n      frequency.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/treatment/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'treatment attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'treatment attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'treatment attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'treatment attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n        mutation {addVisitTreatment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${type}\",\n            treatmentTitle:\"${title}\",\n            treatmentDescription:\"${description}\",\n            treatmentDose:\"${dose}\",\n            treatmentFrequency:\"${frequency}\",\n            treatmentAttachment:\"${file2Path}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitTreatment);\n      let responseAlert = '...Treatment add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitTreatment)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitTreatment,\n        activityA: `addVisitTreatment?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitTreatment;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteTreatment = (args) => {\n\n  console.log('...deleting Treatment...');\n  this.context.setUserAlert('...deleting Treatment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const dose = args.dose;\n  const frequency = args.frequency;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n        mutation {deleteVisitTreatment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${type}\",\n            treatmentTitle:\"${title}\",\n            treatmentDescription:\"${description}\",\n            treatmentDose:\"${dose}\",\n            treatmentFrequency:\"${frequency}\",\n            treatmentAttachments:\"${attachments}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitTreatment);\n      let responseAlert = '...Treatment delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitTreatment)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitTreatment,\n        activityA: `deleteVisitTreatment?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitTreatment;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/treatment/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/treatment/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `treatment attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddBillingForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Billing...',event.target.amount.value.trim().length);\n  this.context.setUserAlert('...adding Billing...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = this.props.visit.patient.name+'_billing_'+moment().format('YYYY-MM-DD, h:mm:ss a');\n  const type = event.target.type.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n  const amount = event.target.amount.value;\n  const paid = event.target.paid.checked;\n  const notes = event.target.notes.value.replace(/\\n/g, ' ');\n  // const attachment = event.target.attachment.value;\n\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0 ||\n      parseFloat(amount) <= 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/billing/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'billing attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'billing attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'billing attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'billing attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n        mutation {addVisitBilling(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${title}\",\n            billingType:\"${type}\",\n            billingDescription:\"${description}\",\n            billingAmount:${amount},\n            billingPaid:${paid},\n            billingAttachment:\"${file2Path}\",\n            billingNotes:\"${notes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitBilling);\n      let responseAlert = '...Billing add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitBilling)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitBilling,\n        activityA: `addVisitBilling?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitBilling;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nupdateBillingPaid = (args) => {\n  console.log('...updating billing paid...');\n  this.context.setUserAlert('...updating billing paid...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n    mutation {updateVisitBillingPaid(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        billingTitle:\"${args.title}\",\n        billingType:\"${args.type}\",\n        billingDescription:\"${args.description}\",\n        billingAmount:${args.amount},\n        billingPaid:${args.paid},\n        billingNotes:\"${args.notes}\"\n      })\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateVisitBillingPaid);\n      let responseAlert = '...billing update success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.updateVisitBillingPaid)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.updateVisitBillingPaid,\n        activityA: `updateVisitBillingPaid?activityId:${activityId},visitId:${visitId}`,\n      });\n      this.context.selectedVisit = resData.data.updateVisitBillingPaid;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ndeleteBilling = (args) => {\n\n  console.log('...deleting Billing...',args);\n  this.context.setUserAlert('...deleting Billing...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const amount = args.amount;\n  const paid = args.paid;\n  const notes = args.notes;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n        mutation {deleteVisitBilling(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${title}\",\n            billingType:\"${type}\",\n            billingDescription:\"${description}\",\n            billingAmount:${amount},\n            billingPaid:${paid},\n            billingAttachments:\"${attachments}\",\n            billingNotes:\"${notes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitBilling);\n      let responseAlert = '...Billing delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitBilling)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitBilling,\n        activityA: `deleteVisitBilling?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitBilling;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/billing/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/billing/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `billing attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Image...');\n  this.context.setUserAlert('...adding Image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/images';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n        mutation {addVisitImage(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            imageName:\"${imageName}\",\n            imageType:\"${imageType}\",\n            imagePath:\"${imagePath}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitImage);\n      let responseAlert = '...Image add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitImage)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitImage,\n        activityA: `addVisitImage?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n\n  console.log('...deleting Image...',args);\n  this.context.setUserAlert('...deleting Image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const name = args.name;\n  const type = args.type;\n  const path = args.path;\n\n  let requestBody = {\n    query: `\n    mutation {deleteVisitImage(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        imageName:\"${name}\",\n        imageType:\"${type}\",\n        imagePath:\"${path}\"\n      })\n    {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitImage);\n      let responseAlert = '...Image delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitImage)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitImage,\n        activityA: `deleteVisitImage?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'visit/'+visitId+'/images';\n      const filename = args.name;\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding File...');\n  this.context.setUserAlert('...adding File...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n        mutation {addVisitFile(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            fileName:\"${file2Name}\",\n            fileType:\"${file2Type}\",\n            filePath:\"${file2Path}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitFile);\n      let responseAlert = '...File add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitFile)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitFile,\n        activityA: `addVisitFile?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n\n  console.log('...deleting File...',args);\n  this.context.setUserAlert('...deleting File...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const name = args.name;\n  const type = args.type;\n  const path = args.path;\n\n  let requestBody = {\n    query: `\n    mutation {deleteVisitFile(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        fileName:\"${name}\",\n        fileType:\"${type}\",\n        filePath:\"${path}\"\n      })\n    {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitFile);\n      let responseAlert = '...File delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitFile)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitFile,\n        activityA: `deleteVisitFile?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'visit/'+visitId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddVigilanceForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Vigilance...');\n  this.context.setUserAlert('...adding Vigilance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n    mutation {addVisitVigilance(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        vigilanceChronicIllnessDiabetesMedication:${event.target.vigilanceChronicIllnessDiabetesMedication.checked},\n        vigilanceChronicIllnessDiabetesTesting:${event.target.vigilanceChronicIllnessDiabetesTesting.checked},\n        vigilanceChronicIllnessDiabetesComment:\"${event.target.vigilanceChronicIllnessDiabetesComment.value}\",\n        vigilanceChronicIllnessHbpMedication:${event.target.vigilanceChronicIllnessHbpMedication.checked},\n        vigilanceChronicIllnessHbpTesting:${event.target.vigilanceChronicIllnessHbpTesting.checked},\n        vigilanceChronicIllnessHbpComment:\"${event.target.vigilanceChronicIllnessHbpComment.value}\",\n        vigilanceChronicIllnessDyslipidemiaMedication:${event.target.vigilanceChronicIllnessDyslipidemiaMedication.checked},\n        vigilanceChronicIllnessDyslipidemiaTesting:${event.target.vigilanceChronicIllnessDyslipidemiaTesting.checked},\n        vigilanceChronicIllnessDyslipidemiaComment:\"${event.target.vigilanceChronicIllnessDyslipidemiaComment.value}\",\n        vigilanceChronicIllnessCadMedication:${event.target.vigilanceChronicIllnessCadMedication.checked},\n        vigilanceChronicIllnessCadTesting:${event.target.vigilanceChronicIllnessCadTesting.checked},\n        vigilanceChronicIllnessCadComment:\"${event.target.vigilanceChronicIllnessCadComment.value}\",\n        vigilanceLifestyleWeightMedication:${event.target.vigilanceLifestyleWeightMedication.checked},\n        vigilanceLifestyleWeightTesting:${event.target.vigilanceLifestyleWeightTesting.checked},\n        vigilanceLifestyleWeightComment:\"${event.target.vigilanceLifestyleWeightComment.value}\",\n        vigilanceLifestyleDietMedication:${event.target.vigilanceLifestyleDietMedication.checked},\n        vigilanceLifestyleDietTesting:${event.target.vigilanceLifestyleDietTesting.checked},\n        vigilanceLifestyleDietComment:\"${event.target.vigilanceLifestyleDietComment.value}\",\n        vigilanceLifestyleSmokingMedication:${event.target.vigilanceLifestyleSmokingMedication.checked},\n        vigilanceLifestyleSmokingTesting:${event.target.vigilanceLifestyleSmokingTesting.checked},\n        vigilanceLifestyleSmokingComment:\"${event.target.vigilanceLifestyleSmokingComment.value}\",\n        vigilanceLifestyleSubstanceAbuseMedication:${event.target.vigilanceLifestyleSubstanceAbuseMedication.checked},\n        vigilanceLifestyleSubstanceAbuseTesting:${event.target.vigilanceLifestyleSubstanceAbuseTesting.checked},\n        vigilanceLifestyleSubstanceAbuseComment:\"${event.target.vigilanceLifestyleSubstanceAbuseComment.value}\",\n        vigilanceLifestyleExerciseMedication:${event.target.vigilanceLifestyleExerciseMedication.checked},\n        vigilanceLifestyleExerciseTesting:${event.target.vigilanceLifestyleExerciseTesting.checked},\n        vigilanceLifestyleExerciseComment:\"${event.target.vigilanceLifestyleExerciseComment.value}\",\n        vigilanceLifestyleAllergiesMedication:${event.target.vigilanceLifestyleAllergiesMedication.checked},\n        vigilanceLifestyleAllergiesTesting:${event.target.vigilanceLifestyleAllergiesTesting.checked},\n        vigilanceLifestyleAllergiesComment:\"${event.target.vigilanceLifestyleAllergiesComment.value}\",\n        vigilanceLifestyleAsthmaMedication:${event.target.vigilanceLifestyleAsthmaMedication.checked},\n        vigilanceLifestyleAsthmaTesting:${event.target.vigilanceLifestyleAsthmaTesting.checked},\n        vigilanceLifestyleAsthmaComment:\"${event.target.vigilanceLifestyleAsthmaComment.value}\",\n        vigilanceScreeningBreastMedication:${event.target.vigilanceScreeningBreastMedication.checked},\n        vigilanceScreeningBreastTesting:${event.target.vigilanceScreeningBreastTesting.checked},\n        vigilanceScreeningBreastComment:\"${event.target.vigilanceScreeningBreastComment.value}\",\n        vigilanceScreeningProstateMedication:${event.target.vigilanceScreeningProstateMedication.checked},\n        vigilanceScreeningProstateTesting:${event.target.vigilanceScreeningProstateTesting.checked},\n        vigilanceScreeningProstateComment:\"${event.target.vigilanceScreeningProstateComment.value}\",\n        vigilanceScreeningCervixMedication:${event.target.vigilanceScreeningCervixMedication.checked},\n        vigilanceScreeningCervixTesting:${event.target.vigilanceScreeningCervixTesting.checked},\n        vigilanceScreeningCervixComment:\"${event.target.vigilanceScreeningCervixComment.value}\",\n        vigilanceScreeningColonMedication:${event.target.vigilanceScreeningColonMedication.checked},\n        vigilanceScreeningColonTesting:${event.target.vigilanceScreeningColonTesting.checked},\n        vigilanceScreeningColonComment:\"${event.target.vigilanceScreeningColonComment.value}\",\n        vigilanceScreeningDentalMedication:${event.target.vigilanceScreeningDentalMedication.checked},\n        vigilanceScreeningDentalTesting:${event.target.vigilanceScreeningDentalTesting.checked},\n        vigilanceScreeningDentalComment:\"${event.target.vigilanceScreeningDentalComment.value}\",\n        vigilanceVaccinesInfluenzaMedication:${event.target.vigilanceVaccinesInfluenzaMedication.checked},\n        vigilanceVaccinesInfluenzaTesting:${event.target.vigilanceVaccinesInfluenzaTesting.checked},\n        vigilanceVaccinesInfluenzaComment:\"${event.target.vigilanceVaccinesInfluenzaComment.value}\",\n        vigilanceVaccinesVaricellaMedication:${event.target.vigilanceVaccinesVaricellaMedication.checked},\n        vigilanceVaccinesVaricellaTesting:${event.target.vigilanceVaccinesVaricellaTesting.checked},\n        vigilanceVaccinesVaricellaComment:\"${event.target.vigilanceVaccinesVaricellaComment.value}\",\n        vigilanceVaccinesHpvMedication:${event.target.vigilanceVaccinesHpvMedication.checked},\n        vigilanceVaccinesHpvTesting:${event.target.vigilanceVaccinesHpvTesting.checked},\n        vigilanceVaccinesHpvComment:\"${event.target.vigilanceVaccinesHpvComment.value}\",\n        vigilanceVaccinesMmrMedication:${event.target.vigilanceVaccinesMmrMedication.checked},\n        vigilanceVaccinesMmrTesting:${event.target.vigilanceVaccinesMmrTesting.checked},\n        vigilanceVaccinesMmrComment:\"${event.target.vigilanceVaccinesMmrComment.value}\",\n        vigilanceVaccinesTetanusMedication:${event.target.vigilanceVaccinesTetanusMedication.checked},\n        vigilanceVaccinesTetanusTesting:${event.target.vigilanceVaccinesTetanusTesting.checked},\n        vigilanceVaccinesTetanusComment:\"${event.target.vigilanceVaccinesTetanusComment.value}\",\n        vigilanceVaccinesPneumovaxMedication:${event.target.vigilanceVaccinesPneumovaxMedication.checked},\n        vigilanceVaccinesPneumovaxTesting:${event.target.vigilanceVaccinesPneumovaxTesting.checked},\n        vigilanceVaccinesPneumovaxComment:\"${event.target.vigilanceVaccinesPneumovaxComment.value}\",\n        vigilanceVaccinesOtherName:\"${event.target.vigilanceVaccinesOtherName.value}\",\n        vigilanceVaccinesOtherMedication:${event.target.vigilanceVaccinesOtherMedication.checked},\n        vigilanceVaccinesOtherTesting:${event.target.vigilanceVaccinesOtherTesting.checked},\n        vigilanceVaccinesOtherComment:\"${event.target.vigilanceVaccinesOtherComment.value}\"\n      })\n    {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitVigilance);\n      let responseAlert = '...Vigilance add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitVigilance)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitVigilance,\n        activityA: `addVisitVigilance?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitVigilance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteVigilance = (args) => {\n\n  console.log('...deleting Vigilance...');\n  this.context.setUserAlert('...deleting Vigilance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n        mutation {deleteVisitVigilance(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            vigilanceChronicIllnessDiabetesMedication:${args.chronicIllness.diabetes.medication},\n            vigilanceChronicIllnessDiabetesTesting:${args.chronicIllness.diabetes.testing},\n            vigilanceChronicIllnessDiabetesComment:\"${args.chronicIllness.diabetes.comment}\",\n            vigilanceChronicIllnessHbpMedication:${args.chronicIllness.hbp.medication},\n            vigilanceChronicIllnessHbpTesting:${args.chronicIllness.hbp.testing},\n            vigilanceChronicIllnessHbpComment:\"${args.chronicIllness.hbp.comment}\",\n            vigilanceChronicIllnessDyslipidemiaMedication:${args.chronicIllness.dyslipidemia.medication},\n            vigilanceChronicIllnessDyslipidemiaTesting:${args.chronicIllness.dyslipidemia.testing},\n            vigilanceChronicIllnessDyslipidemiaComment:\"${args.chronicIllness.dyslipidemia.comment}\",\n            vigilanceChronicIllnessCadMedication:${args.chronicIllness.cad.medication},\n            vigilanceChronicIllnessCadTesting:${args.chronicIllness.cad.testing},\n            vigilanceChronicIllnessCadComment:\"${args.chronicIllness.cad.comment}\",\n            vigilanceLifestyleWeightMedication:${args.lifestyle.weight.medication},\n            vigilanceLifestyleWeightTesting:${args.lifestyle.weight.testing},\n            vigilanceLifestyleWeightComment:\"${args.lifestyle.weight.comment}\",\n            vigilanceLifestyleDietMedication:${args.lifestyle.diet.medication},\n            vigilanceLifestyleDietTesting:${args.lifestyle.diet.testing},\n            vigilanceLifestyleDietComment:\"${args.lifestyle.diet.comment}\",\n            vigilanceLifestyleSmokingMedication:${args.lifestyle.smoking.medication},\n            vigilanceLifestyleSmokingTesting:${args.lifestyle.smoking.testing},\n            vigilanceLifestyleSmokingComment:\"${args.lifestyle.smoking.comment}\",\n            vigilanceLifestyleSubstanceAbuseMedication:${args.lifestyle.substanceAbuse.medication},\n            vigilanceLifestyleSubstanceAbuseTesting:${args.lifestyle.substanceAbuse.testing},\n            vigilanceLifestyleSubstanceAbuseComment:\"${args.lifestyle.substanceAbuse.comment}\",\n            vigilanceLifestyleExerciseMedication:${args.lifestyle.exercise.medication},\n            vigilanceLifestyleExerciseTesting:${args.lifestyle.exercise.testing},\n            vigilanceLifestyleExerciseComment:\"${args.lifestyle.exercise.comment}\",\n            vigilanceLifestyleAllergiesMedication:${args.lifestyle.allergies.medication},\n            vigilanceLifestyleAllergiesTesting:${args.lifestyle.allergies.testing},\n            vigilanceLifestyleAllergiesComment:\"${args.lifestyle.allergies.comment}\",\n            vigilanceLifestyleAsthmaMedication:${args.lifestyle.asthma.medication},\n            vigilanceLifestyleAsthmaTesting:${args.lifestyle.asthma.testing},\n            vigilanceLifestyleAsthmaComment:\"${args.lifestyle.asthma.comment}\",\n            vigilanceScreeningBreastMedication:${args.screening.breast.medication},\n            vigilanceScreeningBreastTesting:${args.screening.breast.testing},\n            vigilanceScreeningBreastComment:\"${args.screening.breast.comment}\",\n            vigilanceScreeningProstateMedication:${args.screening.prostate.medication},\n            vigilanceScreeningProstateTesting:${args.screening.prostate.testing},\n            vigilanceScreeningProstateComment:\"${args.screening.prostate.comment}\",\n            vigilanceScreeningCervixMedication:${args.screening.cervix.medication},\n            vigilanceScreeningCervixTesting:${args.screening.cervix.testing},\n            vigilanceScreeningCervixComment:\"${args.screening.cervix.comment}\",\n            vigilanceScreeningColonMedication:${args.screening.colon.medication},\n            vigilanceScreeningColonTesting:${args.screening.colon.testing},\n            vigilanceScreeningColonComment:\"${args.screening.colon.comment}\",\n            vigilanceScreeningDentalMedication:${args.screening.dental.medication},\n            vigilanceScreeningDentalTesting:${args.screening.dental.testing},\n            vigilanceScreeningDentalComment:\"${args.screening.dental.comment}\",\n            vigilanceVaccinesInfluenzaMedication:${args.vaccines.influenza.medication},\n            vigilanceVaccinesInfluenzaTesting:${args.vaccines.influenza.testing},\n            vigilanceVaccinesInfluenzaComment:\"${args.vaccines.influenza.comment}\",\n            vigilanceVaccinesVaricellaMedication:${args.vaccines.varicella.medication},\n            vigilanceVaccinesVaricellaTesting:${args.vaccines.varicella.testing},\n            vigilanceVaccinesVaricellaComment:\"${args.vaccines.varicella.comment}\",\n            vigilanceVaccinesHpvMedication:${args.vaccines.hpv.medication},\n            vigilanceVaccinesHpvTesting:${args.vaccines.hpv.testing},\n            vigilanceVaccinesHpvComment:\"${args.vaccines.hpv.comment}\",\n            vigilanceVaccinesMmrMedication:${args.vaccines.mmr.medication},\n            vigilanceVaccinesMmrTesting:${args.vaccines.mmr.testing},\n            vigilanceVaccinesMmrComment:\"${args.vaccines.mmr.comment}\",\n            vigilanceVaccinesTetanusMedication:${args.vaccines.tetanus.medication},\n            vigilanceVaccinesTetanusTesting:${args.vaccines.tetanus.testing},\n            vigilanceVaccinesTetanusComment:\"${args.vaccines.tetanus.comment}\",\n            vigilanceVaccinesPneumovaxMedication:${args.vaccines.pneumovax.medication},\n            vigilanceVaccinesPneumovaxTesting:${args.vaccines.pneumovax.testing},\n            vigilanceVaccinesPneumovaxComment:\"${args.vaccines.pneumovax.comment}\",\n            vigilanceVaccinesOtherName:\"${args.vaccines.other.name}\",\n            vigilanceVaccinesOtherMedication:${args.vaccines.other.medication},\n            vigilanceVaccinesOtherTesting:${args.vaccines.other.testing},\n            vigilanceVaccinesOtherComment:\"${args.vaccines.other.comment}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitVigilance);\n      let responseAlert = '...Vigilance delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitVigilance)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitVigilance,\n        activityA: `deleteVisitFile?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitVigilance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddUserForm = (event) => {\n  event.preventDefault();\n  console.log('...adding consultant...');\n  this.context.setUserAlert('...adding consultant...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = event.target.user.value;\n  const visitId = this.props.visit._id;\n\n  if (\n      consultantId.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  const userRole = this.state.users.filter(x => x._id === consultantId)[0].role;\n  if (userRole !== 'Doctor' && userRole !== 'Nurse') {\n    console.log('...please choose a Doctor or Nurse to add please...');\n    this.context.setUserAlert('...please choose a Doctor or Nurse to add please...')\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitConsultant(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitConsultant);\n      let responseAlert = '...add consultant success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `addVisitConsultant?activityId:${activityId},visitId:${visitId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteConsultant = (args) => {\n  console.log('...deleting consultant...');\n  this.context.setUserAlert('...deleting consultant...')\n  this.setState({isLoading: true});\n  //\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = args._id;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitConsultant(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitConsultant);\n      let responseAlert = '...delete consultant success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteVisitConsultant?activityId:${activityId},visitId:${visitId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartAddAttachment = (args) => {\n  console.log('...start add attachment...');\n  this.setState({\n    addAttachmentForm: true,\n    addAttachmentArgs: args\n  })\n}\ncancelAddAttachment = () => {\n  this.setState({\n    addAttachmentForm: false\n  })\n}\naddAttachment = (event) => {\n  event.preventDefault();\n  console.log('...adding attachment...');\n  this.context.setUserAlert('...adding attachment...');\n  this.setState({\n    isLoading: true,\n    addAttachmentForm: false\n  })\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  let args = this.state.addAttachmentArgs;\n  let field = args.field;\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/'+field+'/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading allergy attachment ...\")\n    console.log('...s3 uploading allergy attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: `${field} attachment`,\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: `${field} attachment`,\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody;\n\n  if (field === 'complaint') {\n    let complaintTitle = args.data.title;\n    let complaintDescription = args.data.description;\n    let complaintAnamnesis = args.data.anamnesis;\n    let complaintAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitComplaintAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${complaintTitle}\",\n            complaintDescription:\"${complaintDescription}\",\n            complaintAnamnesis:\"${complaintAnamnesis}\",\n            complaintAttachment:\"${complaintAttachment}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'survey') {\n    let surveyTitle = args.data.title;\n    let surveyDescription = args.data.description;\n    let surveyAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitSurveyAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            surveyTitle:\"${surveyTitle}\",\n            surveyDescription:\"${surveyDescription}\",\n            surveyAttachment:\"${surveyAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'systematicInquiry') {\n    let systematicInquiryTitle = args.data.title;\n    let systematicInquiryDescription = args.data.description;\n    let systematicInquiryAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitSysInquiryAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            systematicInquiryTitle:\"${systematicInquiryTitle}\",\n            systematicInquiryDescription:\"${systematicInquiryDescription}\",\n            systematicInquiryAttachment:\"${systematicInquiryAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'examination') {\n    let examinationGeneral = args.data.general;\n    let examinationArea = args.data.area;\n    let examinationType = args.data.type;\n    let examinationMeasure = args.data.measure;\n    let examinationValue = args.data.value;\n    let examinationDescription = args.data.description;\n    let examinationFollowUp = args.data.followUp;\n    let examinationAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitExaminationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            examinationGeneral:\"${examinationGeneral}\",\n            examinationArea:\"${examinationArea}\",\n            examinationType:\"${examinationType}\",\n            examinationMeasure:\"${examinationMeasure}\",\n            examinationValue:\"${examinationValue}\",\n            examinationDescription:\"${examinationDescription}\",\n            examinationFollowUp:${examinationFollowUp},\n            examinationAttachment:\"${examinationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'investigation') {\n    let investigationTitle = args.data.title;\n    let investigationType = args.data.type;\n    let investigationDescription = args.data.description;\n    let investigationAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitInvestigationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            investigationTitle:\"${investigationTitle}\",\n            investigationType:\"${investigationType}\",\n            investigationDescription:\"${investigationDescription}\",\n            investigationAttachment:\"${investigationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'diagnosis') {\n    let diagnosisTitle = args.data.title;\n    let diagnosisType = args.data.type;\n    let diagnosisDescription = args.data.description;\n    let diagnosisAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitDiagnosisAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            diagnosisTitle:\"${diagnosisTitle}\",\n            diagnosisType:\"${diagnosisType}\",\n            diagnosisDescription:\"${diagnosisDescription}\",\n            diagnosisAttachment:\"${diagnosisAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'treatment') {\n    let treatmentType = args.data.type;\n    let treatmentTitle = args.data.title;\n    let treatmentDescription = args.data.description;\n    let treatmentDose = args.data.dose;\n    let treatmentFrequency = args.data.frequency;\n    let treatmentAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitTreatmentAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${treatmentType}\",\n            treatmentTitle:\"${treatmentTitle}\",\n            treatmentDescription:\"${treatmentDescription}\",\n            treatmentDose:\"${treatmentDose}\",\n            treatmentFrequency:\"${treatmentFrequency}\",\n            treatmentAttachment:\"${treatmentAttachment}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'billing') {\n    let billingAmount = args.data.amount;\n    let billingPaid = args.data.paid;\n    let billingTitle = args.data.title;\n    let billingType = args.data.type;\n    let billingDescription = args.data.description;\n    let billingNotes = args.data.notes;\n    let billingAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitBillingAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${billingTitle}\",\n            billingType:\"${billingType}\",\n            billingDescription:\"${billingDescription}\",\n            billingAmount:${billingAmount},\n            billingPaid:${billingPaid},\n            billingAttachment:\"${billingAttachment}\",\n            billingNotes:\"${billingNotes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'complaint') {\n        // console.log('...resData...',resData.data.addVisitComplaintAttachment);\n      }\n      if (field === 'survey') {\n        // console.log('...resData...',resData.data.addVisitSurveyAttachment);\n      }\n      if (field === 'systematicInquiry') {\n        // console.log('...resData...',resData.data.addVisitSysInquiryAttachment);\n      }\n      if (field === 'examination') {\n        // console.log('...resData...',resData.data.addVisitExaminationAttachment);\n      }\n      if (field === 'investigation') {\n        // console.log('...resData...',resData.data.addVisitInvestigationAttachment);\n      }\n      if (field === 'diagnosis') {\n        // console.log('...resData...',resData.data.addVisitDiagnosisAttachment);\n      }\n      if (field === 'treatment') {\n        // console.log('...resData...',resData.data.addVisitTreatmentAttachment);\n      }\n      if (field === 'billing') {\n        // console.log('...resData...',resData.data.addVisitBillingAttachment);\n      }\n\n      let responseAlert = '...add attachment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'complaint') {\n        this.props.updateVisit(resData.data.addVisitComplaintAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitComplaintAttachment,\n          activityA: `addVisitComplaintAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'survey') {\n        this.props.updateVisit(resData.data.addVisitSurveyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitSurveyAttachment,\n          activityA: `addVisitSurveyAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'systematicInquiry') {\n        this.props.updateVisit(resData.data.addVisitSysInquiryAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitSysInquiryAttachment,\n          activityA: `addVisitSysInquiryAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'examination') {\n        this.props.updateVisit(resData.data.addVisitExaminationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitExaminationAttachment,\n          activityA: `addVisitExaminationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'investigation') {\n        this.props.updateVisit(resData.data.addVisitInvestigationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitInvestigationAttachment,\n          activityA: `addVisitInvestigationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'diagnosis') {\n        this.props.updateVisit(resData.data.addVisitDiagnosisAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitDiagnosisAttachment,\n          activityA: `addVisitDiagnosisAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'treatment') {\n        this.props.updateVisit(resData.data.addVisitTreatmentAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitTreatmentAttachment,\n          activityA: `addVisitTreatmentAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'billing') {\n        this.props.updateVisit(resData.data.addVisitBillingAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitBillingAttachment,\n          activityA: `addVisitBillingAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ndeleteAttachment = (args) => {\n  console.log('...deleting attachment...', args.type);\n  this.context.setUserAlert('...adding attachment...');\n  // this.setState({isLoading: true})\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const field = args.type;\n  const attachment = args.attachment;\n  const item = args.item;\n\n  let requestBody;\n\n  if (field === 'complaint') {\n    let complaintTitle = item.title;\n    let complaintDescription = item.description;\n    let complaintAnamnesis = item.anamnesis;\n    let complaintAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitComplaintAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${complaintTitle}\",\n            complaintDescription:\"${complaintDescription}\",\n            complaintAnamnesis:\"${complaintAnamnesis}\",\n            complaintAttachment:\"${complaintAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'survey') {\n    let surveyTitle = item.title;\n    let surveyDescription = item.description;\n    let surveyAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitSurveyAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            surveyTitle:\"${surveyTitle}\",\n            surveyDescription:\"${surveyDescription}\",\n            surveyAttachment:\"${surveyAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'systematicInquiry') {\n    let systematicInquiryTitle = item.title;\n    let systematicInquiryDescription = item.description;\n    let systematicInquiryAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitSysInquiryAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            systematicInquiryTitle:\"${systematicInquiryTitle}\",\n            systematicInquiryDescription:\"${systematicInquiryDescription}\",\n            systematicInquiryAttachment:\"${systematicInquiryAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'examination') {\n    let examinationGeneral = item.general;\n    let examinationArea = item.area;\n    let examinationType = item.type;\n    let examinationMeasure = item.measure;\n    let examinationValue = item.value;\n    let examinationDescription = item.description;\n    let examinationFollowUp = item.followUp;\n    let examinationAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitExaminationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            examinationGeneral:\"${examinationGeneral}\",\n            examinationArea:\"${examinationArea}\",\n            examinationType:\"${examinationType}\",\n            examinationMeasure:\"${examinationMeasure}\",\n            examinationValue:\"${examinationValue}\",\n            examinationDescription:\"${examinationDescription}\",\n            examinationFollowUp:${examinationFollowUp},\n            examinationAttachment:\"${examinationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'investigation') {\n    let investigationTitle = item.title;\n    let investigationType = item.type;\n    let investigationDescription = item.description;\n    let investigationAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitInvestigationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            investigationTitle:\"${investigationTitle}\",\n            investigationType:\"${investigationType}\",\n            investigationDescription:\"${investigationDescription}\",\n            investigationAttachment:\"${investigationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'diagnosis') {\n    let diagnosisTitle = item.title;\n    let diagnosisType = item.type;\n    let diagnosisDescription = item.description;\n    let diagnosisAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitDiagnosisAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            diagnosisTitle:\"${diagnosisTitle}\",\n            diagnosisType:\"${diagnosisType}\",\n            diagnosisDescription:\"${diagnosisDescription}\",\n            diagnosisAttachment:\"${diagnosisAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'treatment') {\n\n    let treatmentType = item.type;\n    let treatmentTitle = item.title;\n    let treatmentDescription = item.description;\n    let treatmentDose = item.dose;\n    let treatmentFrequency = item.frequency;\n    let treatmentAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitTreatmentAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${treatmentType}\",\n            treatmentTitle:\"${treatmentTitle}\",\n            treatmentDescription:\"${treatmentDescription}\",\n            treatmentDose:\"${treatmentDose}\",\n            treatmentFrequency:\"${treatmentFrequency}\",\n            treatmentAttachment:\"${treatmentAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'billing') {\n\n    let billingTitle = item.title;\n    let billingType = item.type;\n    let billingDescription = item.description;\n    let billingAmount = item.amount;\n    let billingPaid = item.paid;\n    let billingAttachment = attachment;\n    let billingNotes = item.notes;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitBillingAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${billingTitle}\",\n            billingType:\"${billingType}\",\n            billingDescription:\"${billingDescription}\",\n            billingAmount:${billingAmount},\n            billingPaid:${billingPaid},\n            billingAttachment:\"${billingAttachment}\",\n            billingNotes:\"${billingNotes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'complaint') {\n        // console.log('...resData...',resData.data.deleteVisitComplaintAttachment);\n      }\n      if (field === 'survey') {\n        // console.log('...resData...',resData.data.deleteVisitSurveyAttachment);\n      }\n      if (field === 'systematicInquiry') {\n        // console.log('...resData...',resData.data.deleteVisitSysInquiryAttachment);\n      }\n      if (field === 'examination') {\n        // console.log('...resData...',resData.data.deleteVisitExaminationAttachment);\n      }\n      if (field === 'investigation') {\n        // console.log('...resData...',resData.data.deleteVisitInvestigationAttachment);\n      }\n      if (field === 'diagnosis') {\n        // console.log('...resData...',resData.data.deleteVisitDiagnosisAttachment);\n      }\n      if (field === 'treatment') {\n        // console.log('...resData...',resData.data.deleteVisitTreatmentAttachment);\n      }\n      if (field === 'billing') {\n        // console.log('...resData...',resData.data.deleteVisitBillingAttachment);\n      }\n\n      let responseAlert = '...delete attachment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'complaint') {\n        this.props.updateVisit(resData.data.deleteVisitComplaintAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitComplaintAttachment,\n          activityA: `deleteVisitComplaintAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'survey') {\n        this.props.updateVisit(resData.data.deleteVisitSurveyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitSurveyAttachment,\n          activityA: `deleteVisitSurveyAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'systematicInquiry') {\n        this.props.updateVisit(resData.data.deleteVisitSysInquiryAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitSysInquiryAttachment,\n          activityA: `deleteVisitSysInquiryAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'examination') {\n        this.props.updateVisit(resData.data.deleteVisitExaminationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitExaminationAttachment,\n          activityA: `deleteVisitExaminationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'investigation') {\n        this.props.updateVisit(resData.data.deleteVisitInvestigationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitInvestigationAttachment,\n          activityA: `deleteVisitInvestigationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'diagnosis') {\n        this.props.updateVisit(resData.data.deleteVisitDiagnosisAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitDiagnosisAttachment,\n          activityA: `deleteVisitDiagnosisAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'treatment') {\n        this.props.updateVisit(resData.data.deleteVisitTreatmentAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitTreatmentAttachment,\n          activityA: `deleteVisitTreatmentAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'billing') {\n        this.props.updateVisit(resData.data.deleteVisitBillingAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitBillingAttachment,\n          activityA: `deleteVisitBillingAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'visit/'+visitId+'/'+field+'/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/'+field+'/attachments/';\n      const filename = attachment;\n      const filename2 = filename.replace(filePath2,'');\n      console.log('1:',filePath);\n      console.log('2:',filename);\n      console.log('3:',filename2);\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachment..')\n      console.log('...s3 deleting attachment..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `${field} attachment`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: `${field} attachment`,\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename2, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  if (\n      query.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {updateVisitSingleField(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateVisitSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.updateVisitSingleField)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.updateVisitSingleField,\n        activityA: `updateVisitSingleField?activityId:${activityId},visitId:${visitId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.updateVisitSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\ntoggleFilter = (args) => {\n  this.setState({\n    startFilter: !this.state.startFilter,\n    selectFilter: args\n  })\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ncompleteVisit = () => {\n  console.log('...completing visit...');\n  this.context.setUserAlert('...completing visit...')\n  this.setState({isLoading: true})\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n      mutation {completeVisitById(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\"\n      )\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.completeVisitById);\n      let responseAlert = '...visit completed!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.completeVisitById)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.completeVisitById,\n        activityA: `completeVisitById?activityId:${activityId},visitId:${visitId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.completeVisitById;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <div className=\"topContainer\">\n      <Row className=\"\">\n        {!this.props.visit && (\n          <h3>...</h3>\n        )}\n      </Row>\n\n      <Row className=\"\">\n        {this.props.visit && (\n          <Col md={12} className=\"\">\n            {\n          //     this.state.startFilter === true && (\n          //   <Col>\n          //     {this.state.selectFilter === 'consultant' && (\n          //       <FilterUserForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'complaint' && (\n          //       <FilterComplaintForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'survey' && (\n          //       <FilterSurveyForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'systematicInquiry' && (\n          //       <FilterSystematicInquiryForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'vitals' && (\n          //       <FilterVitalsForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'examination' && (\n          //       <FilterExaminationForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'investigation' && (\n          //       <FilterInvestigationForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'diagnosis' && (\n          //       <FilterDiagnosisForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'treatment' && (\n          //       <FilterTreatmentForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'billing' && (\n          //       <FilterBillingForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'vigilance' && (\n          //       <h3>Filter vigilance form</h3>\n          //     )}\n          //     {this.state.selectFilter === 'image' && (\n          //       <FilterImageForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //     {this.state.selectFilter === 'file' && (\n          //       <FilterFileForm\n          //         onCancel={this.toggleFilter}\n          //         onConfirm={this.submitFilterForm}\n          //       />\n          //     )}\n          //   </Col>\n          // )\n        }\n            {this.state.updateSingleField.state === true && (\n              <UpdatePatientSingleFieldForm\n                field={this.state.updateSingleField.field}\n                onConfirm={this.submitUpdateSingleFieldForm}\n                onCancel={this.cancelUpdateSingleField}\n              />\n            )}\n            {this.props.subMenu === 'all' && (\n              <Row className=\"tabRowAll\">\n              <ul className=\"summaryList\">\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Basic Info:</h3>\n              </Col>\n              <ListGroup className=\"profileBasicListGroup\">\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Title:</p>\n                  <p className=\"listGroupText bold\">{this.props.visit.title}</p>\n                  {this.context.role !== 'Staff' && (\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Type:</p>\n                  <p className=\"listGroupText bold\">{this.props.visit.type}</p>\n                  {this.context.role !== 'Staff' && (\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'type')}>Edit</Button>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">subType:</p>\n                  <p className=\"listGroupText bold\">{this.props.visit.subType}</p>\n                  {this.context.role !== 'Staff' && (\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'subType')}>Edit</Button>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Date:</p>\n                  <p className=\"listGroupText bold\">{moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Time:</p>\n                  <p className=\"listGroupText bold\">{this.props.visit.time}</p>\n                  {this.context.role !== 'Staff' && (\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'time')}>Edit</Button>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText underlined\">Patient:</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Name:</p>\n                  <p className=\"listGroupText bold\">{this.props.visit.patient.title}</p>\n                  <p className=\"listGroupText bold\">{this.props.visit.patient.name}</p>\n                  <Link\n                    to={{\n                      pathname: \"/patients\",\n                      state: {patient: this.props.visit.patient._id}\n                    }}\n                  >\n                  <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                  </Link>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                <p className=\"listGroupText\">Attending Physician:</p>\n                <p className=\"listGroupText bold\">{this.props.visit.patient.attendingPhysician}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText underlined\">Appointment:</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Title:</p>\n                  <p className=\"listGroupText bold\">{this.props.visit.appointment.title}</p>\n                  <Link\n                    to={{\n                      pathname: \"/appointments\",\n                      state: {appointment: this.props.visit.appointment._id}\n                    }}\n                  >\n                  <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                  </Link>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                <p className=\"listGroupText\">Date:</p>\n                <p className=\"listGroupText bold\">{moment.unix(this.props.visit.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                </ListGroup.Item>\n              </ListGroup>\n              </Col>\n              </li>\n\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Comorbidities:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'comorbidities')}>Filter</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'comorbidities' && (\n                <FilterComorbidityForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                <PatientComorbidityList\n                  filter={this.state.filter}\n                  comorbidities={this.props.visit.patient.comorbidities}\n                  authId={this.context.activityId}\n                />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Allergies:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'allergy')}>Filter</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'allergy' && (\n                <FilterAllergyForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                <PatientAllergyList\n                  filter={this.state.filter}\n                  allergies={this.props.visit.patient.allergies}\n                  authId={this.context.activityId}\n                />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Medication:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'medication')}>Filter</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'medication' && (\n                <FilterMedicationForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                <PatientMedicationList\n                  filter={this.state.filter}\n                  medication={this.props.visit.patient.medication}\n                  authId={this.context.activityId}\n                />\n              </Col>\n              </li>\n\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Admin Info:</h3>\n              </Col>\n              <ListGroup className=\"profileBasicListGroup\">\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Id:</p>\n                  <p className=\"listGroupText bold\">{this.props.visit._id}</p>\n                </ListGroup.Item>\n              </ListGroup>\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Consultants:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'consultant')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'consultant')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'consultant' && (\n                <FilterUserForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'consultant' &&\n                this.state.users && (\n                  <AddUserForm\n                    onConfirm={this.submitAddUserForm}\n                    onCancel={this.cancelAdd}\n                    filter={this.state.filter}\n                    users={this.state.users}\n                  />\n              )}\n              <UserList\n                filter={this.state.filter}\n                authId={this.context.activityId}\n                users={this.props.visit.consultants}\n                visitPage={true}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteConsultant}\n              />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Complaints:</h3>\n              </Col>\n                <Col className=\"subTabCol\">\n                  <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'complaint')}>Filter</Button>\n                  {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'complaint')}>Add</Button>\n                  )}\n                </Col>\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'complaint' && (\n                  <FilterComplaintForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'complaint' && (\n                    <AddComplaintForm\n                      onConfirm={this.submitAddComplaintForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                {this.state.addAttachmentForm === true && (\n                  <AddAttachmentForm\n                    onCancel={this.cancelAddAttachment}\n                    onConfirm={this.addAttachment}\n                  />\n                )}\n                <VisitComplaintList\n                  filter={this.state.filter}\n                  complaints={this.props.visit.complaints}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteComplaint}\n                  onAddAttachment={this.startAddAttachment}\n                  deleteAttachment={this.deleteAttachment}\n                />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Surveys:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'survey')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'survey')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'survey' && (\n                <FilterSurveyForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'survey' && (\n                  <AddSurveyForm\n                    onConfirm={this.submitAddSurveyForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              {this.state.addAttachmentForm === true && (\n                <AddAttachmentForm\n                  onCancel={this.cancelAddAttachment}\n                  onConfirm={this.addAttachment}\n                />\n              )}\n              <VisitSurveyList\n                filter={this.state.filter}\n                surveys={this.props.visit.surveys}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteSurvey}\n                onAddAttachment={this.startAddAttachment}\n                deleteAttachment={this.deleteAttachment}\n              />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Systematic Inquiries:</h3>\n              </Col>\n                <Col className=\"subTabCol\">\n                  <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'systematicInquiry')}>Filter</Button>\n                  {this.context.role !== 'Staff' && (\n                    <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'systematicInquiry')}>Add</Button>\n                  )}\n                </Col>\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'systematicInquiry' && (\n                  <FilterSystematicInquiryForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'systematicInquiry' && (\n                    <AddSystematicInquiryForm\n                      onConfirm={this.submitAddSystematicInquiryForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                {this.state.addAttachmentForm === true && (\n                  <AddAttachmentForm\n                    onCancel={this.cancelAddAttachment}\n                    onConfirm={this.addAttachment}\n                  />\n                )}\n                <VisitSystematicInquiryList\n                  filter={this.state.filter}\n                  systematicInquiry={this.props.visit.systematicInquiry}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteSystematicInquiry}\n                  onAddAttachment={this.startAddAttachment}\n                  deleteAttachment={this.deleteAttachment}\n                />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Vitals:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'vitals')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'vitals')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'vitals' && (\n                <FilterVitalsForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'vitals' && (\n                  <AddVitalsForm\n                    onConfirm={this.submitAddVitalsForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <VisitVitalsList\n                filter={this.state.filter}\n                vitals={this.props.visit.vitals}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteVitals}\n              />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Examinations:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'examination')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'examination')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'examination' && (\n                <FilterExaminationForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'examination' && (\n                  <AddExaminationForm\n                    onConfirm={this.submitAddExaminationForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              {this.state.addAttachmentForm === true && (\n                <AddAttachmentForm\n                  onCancel={this.cancelAddAttachment}\n                  onConfirm={this.addAttachment}\n                />\n              )}\n              <VisitExaminationList\n                filter={this.state.filter}\n                examination={this.props.visit.examination}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteExamination}\n                onAddAttachment={this.startAddAttachment}\n                deleteAttachment={this.deleteAttachment}\n              />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Investigations:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'investigation')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'investigation')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'investigation' && (\n                <FilterInvestigationForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'investigation' && (\n                  <AddInvestigationForm\n                    onConfirm={this.submitAddInvestigationForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              {this.state.addAttachmentForm === true && (\n                <AddAttachmentForm\n                  onCancel={this.cancelAddAttachment}\n                  onConfirm={this.addAttachment}\n                />\n              )}\n              <VisitInvestigationList\n                filter={this.state.filter}\n                investigation={this.props.visit.investigation}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteInvestigation}\n                onAddAttachment={this.startAddAttachment}\n                deleteAttachment={this.deleteAttachment}\n              />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Diagnoses:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'diagnosis')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'diagnosis')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'diagnosis' && (\n                <FilterDiagnosisForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'diagnosis' && (\n                  <AddDiagnosisForm\n                    onConfirm={this.submitAddDiagnosisForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              {this.state.addAttachmentForm === true && (\n                <AddAttachmentForm\n                  onCancel={this.cancelAddAttachment}\n                  onConfirm={this.addAttachment}\n                />\n              )}\n              <VisitDiagnosisList\n                filter={this.state.filter}\n                diagnosis={this.props.visit.diagnosis}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteDiagnosis}\n                onAddAttachment={this.startAddAttachment}\n                deleteAttachment={this.deleteAttachment}\n              />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Treatments:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'treatment')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'treatment')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'treatment' && (\n                <FilterTreatmentForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'treatment' && (\n                  <AddTreatmentForm\n                    onConfirm={this.submitAddTreatmentForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              {this.state.addAttachmentForm === true && (\n                <AddAttachmentForm\n                  onCancel={this.cancelAddAttachment}\n                  onConfirm={this.addAttachment}\n                />\n              )}\n              <VisitTreatmentList\n                filter={this.state.filter}\n                treatment={this.props.visit.treatment}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteTreatment}\n                onAddAttachment={this.startAddAttachment}\n                deleteAttachment={this.deleteAttachment}\n              />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Billing:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button className=\"searchBtn\" variant=\"outline-primary\" onClick={this.toggleFilter.bind(this, 'billing')}>Filter</Button>\n                <Button className=\"searchBtn\" variant=\"outline-success\" onClick={this.startAdd.bind(this, 'billing')}>Add</Button>\n                <Button className=\"searchBtn\" variant=\"outline-primary\" size=\"sm\" onClick={this.completeVisit}>Complete Visit</Button>\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'billing' && (\n                <FilterBillingForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'billing' && (\n                  <AddBillingForm\n                    onConfirm={this.submitAddBillingForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              {this.state.addAttachmentForm === true && (\n                <AddAttachmentForm\n                  onCancel={this.cancelAddAttachment}\n                  onConfirm={this.addAttachment}\n                />\n              )}\n              <VisitBillingList\n                filter={this.state.filter}\n                billing={this.props.visit.billing}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteBilling}\n                onAddAttachment={this.startAddAttachment}\n                deleteAttachment={this.deleteAttachment}\n                updateBillingPaid={this.updateBillingPaid}\n              />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Vigilance:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'vigilance')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'vigilance')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'vigilance' && (\n                <h3>Filter vigilance form</h3>\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'vigilance' && (\n                  <AddVigilanceForm\n                    onConfirm={this.submitAddVigilanceForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <VisitVigilanceList\n                filter={this.state.filter}\n                vigilance={this.props.visit.vigilance}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteVigilance}\n              />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Images:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'image')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'image' && (\n                <FilterImageForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'image' && (\n                  <AddImageForm\n                    onConfirm={this.submitAddImageForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <VisitImageList\n                filter={this.state.filter}\n                images={this.props.visit.images}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteImage}\n              />\n              </Col>\n              </li>\n              <li className=\"summaryListItem\">\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Files:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'file')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'file' && (\n                <FilterFileForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'file' && (\n                  <AddFileForm\n                    onConfirm={this.submitAddFileForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <VisitFileList\n                filter={this.state.filter}\n                files={this.props.visit.files}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteFile}\n              />\n              </Col>\n              </li>\n              </ul>\n              </Row>\n            )}\n            {this.props.subMenu === 'basic' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Basic Info:</h3>\n              </Col>\n              <ListGroup className=\"profileBasicListGroup\">\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Title:</p>\n                  <p className=\"listGroupText bold\">{this.props.visit.title}</p>\n                  {this.context.role !== 'Staff' && (\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Type:</p>\n                  <p className=\"listGroupText bold\">{this.props.visit.type}</p>\n                  {this.context.role !== 'Staff' && (\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'type')}>Edit</Button>\n                  )}\n                  <p className=\"listGroupText\">subType:</p>\n                  <p className=\"listGroupText bold\">{this.props.visit.subType}</p>\n                  {this.context.role !== 'Staff' && (\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'subType')}>Edit</Button>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Date:</p>\n                  <p className=\"listGroupText bold\">{moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                  <p className=\"listGroupText\">Time:</p>\n                  <p className=\"listGroupText bold\">{this.props.visit.time}</p>\n                  {this.context.role !== 'Staff' && (\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'time')}>Edit</Button>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Patient:</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Name:</p>\n                  <p className=\"listGroupText bold\">{this.props.visit.patient.title}</p>\n                  <p className=\"listGroupText bold\">{this.props.visit.patient.name}</p>\n                  <Link\n                    to={{\n                      pathname: \"/patients\",\n                      state: {patient: this.props.visit.patient._id}\n                    }}\n                  >\n                  <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                  </Link>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                <p className=\"listGroupText\">Attending Physician:</p>\n                <p className=\"listGroupText bold\">{this.props.visit.patient.attendingPhysician}</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Appointment:</p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Title:</p>\n                  <p className=\"listGroupText bold\">{this.props.visit.appointment.title}</p>\n                  <p className=\"listGroupText\">Date:</p>\n                  <p className=\"listGroupText bold\">{moment.unix(this.props.visit.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                  <Link\n                    to={{\n                      pathname: \"/appointments\",\n                      state: {appointment: this.props.visit.appointment._id}\n                    }}\n                  >\n                  <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                  </Link>\n                </ListGroup.Item>\n              </ListGroup>\n              </Col>\n            )}\n\n            {this.props.subMenu === 'allergy' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Allergies:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'allergy')}>Filter</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'allergy' && (\n                <FilterAllergyForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                <PatientAllergyList\n                  filter={this.state.filter}\n                  allergies={this.props.visit.patient.allergies}\n                  authId={this.context.activityId}\n                />\n              </Col>\n            )}\n            {this.props.subMenu === 'medication' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Medication:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'medication')}>Filter</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'medication' && (\n                <FilterMedicationForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                <PatientMedicationList\n                  filter={this.state.filter}\n                  medication={this.props.visit.patient.medication}\n                  authId={this.context.activityId}\n                />\n              </Col>\n            )}\n            {this.props.subMenu === 'comorbidities' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Comorbidities:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'comorbidities')}>Filter</Button>\n              </Col>\n              {this.state.startFilter &&\n                this.state.selectFilter === 'comorbidities' && (\n                <FilterComorbidityForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n                <PatientComorbidityList\n                  filter={this.state.filter}\n                  comorbidities={this.props.visit.patient.comorbidities}\n                  authId={this.context.activityId}\n                />\n              </Col>\n            )}\n\n            {this.props.subMenu === 'admin' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Admin Info:</h3>\n              </Col>\n              <ListGroup className=\"profileBasicListGroup\">\n                <ListGroup.Item>\n                  <p className=\"listGroupText\">Id:</p>\n                  <p className=\"listGroupText bold\">{this.props.visit._id}</p>\n                </ListGroup.Item>\n              </ListGroup>\n              </Col>\n            )}\n            {this.props.subMenu === 'consultant' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Consultants:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'consultant')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'consultant')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'consultant' && (\n                <FilterUserForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'consultant' &&\n                this.state.users && (\n                  <AddUserForm\n                    onConfirm={this.submitAddUserForm}\n                    onCancel={this.cancelAdd}\n                    filter={this.state.filter}\n                    users={this.state.users}\n                  />\n              )}\n              <UserList\n                filter={this.state.filter}\n                authId={this.context.activityId}\n                users={this.props.visit.consultants}\n                visitPage={true}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteConsultant}\n              />\n              </Col>\n            )}\n            {this.props.subMenu === 'complaint' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Complaints:</h3>\n              </Col>\n                <Col className=\"subTabCol\">\n                  <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'complaint')}>Filter</Button>\n                  {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'complaint')}>Add</Button>\n                  )}\n                </Col>\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'complaint' && (\n                  <FilterComplaintForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'complaint' && (\n                    <AddComplaintForm\n                      onConfirm={this.submitAddComplaintForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                {this.state.addAttachmentForm === true && (\n                  <AddAttachmentForm\n                    onCancel={this.cancelAddAttachment}\n                    onConfirm={this.addAttachment}\n                  />\n                )}\n                <VisitComplaintList\n                  filter={this.state.filter}\n                  complaints={this.props.visit.complaints}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteComplaint}\n                  onAddAttachment={this.startAddAttachment}\n                  deleteAttachment={this.deleteAttachment}\n                />\n              </Col>\n            )}\n            {this.props.subMenu === 'survey' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Surveys:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'survey')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'survey')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'survey' && (\n                <FilterSurveyForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'survey' && (\n                  <AddSurveyForm\n                    onConfirm={this.submitAddSurveyForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              {this.state.addAttachmentForm === true && (\n                <AddAttachmentForm\n                  onCancel={this.cancelAddAttachment}\n                  onConfirm={this.addAttachment}\n                />\n              )}\n              <VisitSurveyList\n                filter={this.state.filter}\n                surveys={this.props.visit.surveys}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteSurvey}\n                onAddAttachment={this.startAddAttachment}\n                deleteAttachment={this.deleteAttachment}\n              />\n              </Col>\n            )}\n            {this.props.subMenu === 'systematicInquiry' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Systematic Inquiries:</h3>\n              </Col>\n                <Col className=\"subTabCol\">\n                  <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'systematicInquiry')}>Filter</Button>\n                  {this.context.role !== 'Staff' && (\n                    <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'systematicInquiry')}>Add</Button>\n                  )}\n                </Col>\n                {this.state.startFilter === true &&\n                  this.state.selectFilter === 'systematicInquiry' && (\n                  <FilterSystematicInquiryForm\n                    onCancel={this.toggleFilter}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.adding.state === true &&\n                  this.state.adding.field === 'systematicInquiry' && (\n                    <AddSystematicInquiryForm\n                      onConfirm={this.submitAddSystematicInquiryForm}\n                      onCancel={this.cancelAdd}\n                    />\n                )}\n                {this.state.addAttachmentForm === true && (\n                  <AddAttachmentForm\n                    onCancel={this.cancelAddAttachment}\n                    onConfirm={this.addAttachment}\n                  />\n                )}\n                <VisitSystematicInquiryList\n                  filter={this.state.filter}\n                  systematicInquiry={this.props.visit.systematicInquiry}\n                  authId={this.context.activityId}\n                  canDelete={this.state.canDelete}\n                  onDelete={this.deleteSystematicInquiry}\n                  onAddAttachment={this.startAddAttachment}\n                  deleteAttachment={this.deleteAttachment}\n                />\n              </Col>\n            )}\n            {this.props.subMenu === 'vitals' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Vitals:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'vitals')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'vitals')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'vitals' && (\n                <FilterVitalsForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'vitals' && (\n                  <AddVitalsForm\n                    onConfirm={this.submitAddVitalsForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <VisitVitalsList\n                filter={this.state.filter}\n                vitals={this.props.visit.vitals}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteVitals}\n              />\n              </Col>\n            )}\n            {this.props.subMenu === 'examination' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Examinations:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'examination')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'examination')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'examination' && (\n                <FilterExaminationForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'examination' && (\n                  <AddExaminationForm\n                    onConfirm={this.submitAddExaminationForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              {this.state.addAttachmentForm === true && (\n                <AddAttachmentForm\n                  onCancel={this.cancelAddAttachment}\n                  onConfirm={this.addAttachment}\n                />\n              )}\n              <VisitExaminationList\n                filter={this.state.filter}\n                examination={this.props.visit.examination}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteExamination}\n                onAddAttachment={this.startAddAttachment}\n                deleteAttachment={this.deleteAttachment}\n              />\n              </Col>\n            )}\n            {this.props.subMenu === 'investigation' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Investigations:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'investigation')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'investigation')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'investigation' && (\n                <FilterInvestigationForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'investigation' && (\n                  <AddInvestigationForm\n                    onConfirm={this.submitAddInvestigationForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              {this.state.addAttachmentForm === true && (\n                <AddAttachmentForm\n                  onCancel={this.cancelAddAttachment}\n                  onConfirm={this.addAttachment}\n                />\n              )}\n              <VisitInvestigationList\n                filter={this.state.filter}\n                investigation={this.props.visit.investigation}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteInvestigation}\n                onAddAttachment={this.startAddAttachment}\n                deleteAttachment={this.deleteAttachment}\n              />\n              </Col>\n            )}\n            {this.props.subMenu === 'diagnosis' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Diagnoses:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'diagnosis')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'diagnosis')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'diagnosis' && (\n                <FilterDiagnosisForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'diagnosis' && (\n                  <AddDiagnosisForm\n                    onConfirm={this.submitAddDiagnosisForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              {this.state.addAttachmentForm === true && (\n                <AddAttachmentForm\n                  onCancel={this.cancelAddAttachment}\n                  onConfirm={this.addAttachment}\n                />\n              )}\n              <VisitDiagnosisList\n                filter={this.state.filter}\n                diagnosis={this.props.visit.diagnosis}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteDiagnosis}\n                onAddAttachment={this.startAddAttachment}\n                deleteAttachment={this.deleteAttachment}\n              />\n              </Col>\n            )}\n            {this.props.subMenu === 'treatment' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Treatments:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'treatment')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'treatment')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'treatment' && (\n                <FilterTreatmentForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'treatment' && (\n                  <AddTreatmentForm\n                    onConfirm={this.submitAddTreatmentForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              {this.state.addAttachmentForm === true && (\n                <AddAttachmentForm\n                  onCancel={this.cancelAddAttachment}\n                  onConfirm={this.addAttachment}\n                />\n              )}\n              <VisitTreatmentList\n                filter={this.state.filter}\n                treatment={this.props.visit.treatment}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteTreatment}\n                onAddAttachment={this.startAddAttachment}\n                deleteAttachment={this.deleteAttachment}\n              />\n              </Col>\n            )}\n            {this.props.subMenu === 'billing' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Billing:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button className=\"searchBtn\" variant=\"outline-primary\" onClick={this.toggleFilter.bind(this, 'billing')}>Filter</Button>\n                <Button className=\"searchBtn\" variant=\"outline-success\" onClick={this.startAdd.bind(this, 'billing')}>Add</Button>\n                <Button className=\"searchBtn\" variant=\"outline-primary\" size=\"sm\" onClick={this.completeVisit}>Complete Visit</Button>\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'billing' && (\n                <FilterBillingForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'billing' && (\n                  <AddBillingForm\n                    onConfirm={this.submitAddBillingForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              {this.state.addAttachmentForm === true && (\n                <AddAttachmentForm\n                  onCancel={this.cancelAddAttachment}\n                  onConfirm={this.addAttachment}\n                />\n              )}\n              <VisitBillingList\n                filter={this.state.filter}\n                billing={this.props.visit.billing}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteBilling}\n                onAddAttachment={this.startAddAttachment}\n                deleteAttachment={this.deleteAttachment}\n                updateBillingPaid={this.updateBillingPaid}\n              />\n              </Col>\n            )}\n            {this.props.subMenu === 'vigilance' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Vigilance:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'vigilance')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'vigilance')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'vigilance' && (\n                <h3>Filter vigilance form</h3>\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'vigilance' && (\n                  <AddVigilanceForm\n                    onConfirm={this.submitAddVigilanceForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <VisitVigilanceList\n                filter={this.state.filter}\n                vigilance={this.props.visit.vigilance}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteVigilance}\n              />\n              </Col>\n            )}\n            {this.props.subMenu === 'image' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Images:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'image')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'image' && (\n                <FilterImageForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'image' && (\n                  <AddImageForm\n                    onConfirm={this.submitAddImageForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <VisitImageList\n                filter={this.state.filter}\n                images={this.props.visit.images}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteImage}\n              />\n              </Col>\n            )}\n            {this.props.subMenu === 'file' && (\n              <Col className=\"tabCol2\">\n              <Col className=\"subTabCol\">\n                <h3 className=\"\">Files:</h3>\n              </Col>\n              <Col className=\"subTabCol\">\n                <Button variant=\"outline-primary\" className=\"searchBtn\" onClick={this.toggleFilter.bind(this, 'file')}>Filter</Button>\n                {this.context.role !== 'Staff' && (\n                  <Button variant=\"outline-success\" className=\"searchBtn\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                )}\n              </Col>\n              {this.state.startFilter === true &&\n                this.state.selectFilter === 'file' && (\n                <FilterFileForm\n                  onCancel={this.toggleFilter}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.adding.state === true &&\n                this.state.adding.field === 'file' && (\n                  <AddFileForm\n                    onConfirm={this.submitAddFileForm}\n                    onCancel={this.cancelAdd}\n                  />\n              )}\n              <VisitFileList\n                filter={this.state.filter}\n                files={this.props.visit.files}\n                authId={this.context.activityId}\n                canDelete={this.state.canDelete}\n                onDelete={this.deleteFile}\n              />\n              </Col>\n            )}\n          </Col>\n        )}\n      </Row>\n    </div>\n    </React.Fragment>\n  );\n}\n\n}\n\nexport default VisitDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst VisitSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"field\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Search Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>date</option>\n        <option>time</option>\n        <option>title</option>\n        <option>type</option>\n        <option>subType</option>\n        </Form.Control>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row className=\"formRow\">\n      <Form.Group as={Col} controlId=\"query\" className=\"formGroup\">\n        <Form.Label className=\"formLabel\">Search Query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"YYYY-MM-DD\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn searchBtn\">Search</Button>\n      <Button variant=\"danger\" className=\"filterFormBtn searchBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default VisitSearchForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport CreateVisitForm from '../../components/forms/create/CreateVisitForm';\nimport VisitList from '../../components/lists/visit/VisitList';\nimport PatientList from '../../components/lists/patient/PatientList';\nimport AppointmentList from '../../components/lists/appointment/AppointmentList';\n// import SearchAppointmentList from '../../components/lists/appointment/SearchAppointmentList';\nimport VisitDetail from '../../components/details/VisitDetail';\n\nimport FilterVisitForm from '../../components/forms/filter/FilterVisitForm';\nimport VisitSearchForm from '../../components/forms/search/VisitSearchForm';\nimport AppointmentSearchForm from '../../components/forms/search/AppointmentSearchForm';\n\nimport FullCalendar from '@fullcalendar/react';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\n// import '../../calendar.scss'\n\nimport FloatMenu from '../../components/floatMenu/FloatMenu';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './visit.css';\n\nclass VisitPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    patients: null,\n    appointments: null,\n    canDelete: false,\n    visits: null,\n    searchVisits: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menuVisit',\n    startFilter: false,\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    menuSelect: 'list',\n    subMenuState: false,\n    subMenu: 'all',\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    selectedVisit: null,\n    creatingVisit: false,\n    newVisit: null,\n    calendarVisits: null,\n    calendarAppointments: null,\n    fromGoLink: null,\n    goLinkId: null,\n    sublistSearch: false,\n    tabKey: 'list',\n    newVisitPatient: false,\n    otfAppt: false,\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all visits component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    if (this.props.location.state) {\n      if (this.props.location.state.visit) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.visit\n        })\n      }\n    }\n    this.getAllVisits(seshStore);\n    this.getAllAppointments(seshStore);\n    // this.getAllPatients(seshStore);\n    if (this.props.selectedVisit) {\n      console.log('...found existing visit selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedVisit: this.props.selectedVisit\n      })\n    }\n    // if (this.props.location.state &&\n    //     this.props.location.state.newVisit ) {\n    //     this.newVisitPatient();\n    // }\n  }\n}\ncomponentWillUnmount() {\n\n}\ncomponentDidUpdate () {\n}\n\ngetAllVisits (args) {\n  console.log('...retrieving all visits...');\n  this.context.setUserAlert('...retrieving all visits...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllVisits(\n        activityId:\"${activityId}\"\n      )\n      {_id,date,time,title,type,subType,\n        patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description}},\n        consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllVisits);\n      let responseAlert = '...visits loaded!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkVisit = resData.data.getAllVisits.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedVisit: goLinkVisit,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        visits: resData.data.getAllVisits,\n        activityA: `getAllVisits?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.parseForCalendar(resData.data.getAllVisits)\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\ngetAllAppointments (args) {\n  console.log('...retrieving all appointments...');\n  this.context.setUserAlert('...retrieving all appointments...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllAppointments(\n        activityId:\"${activityId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllAppointments);\n      let responseAlert = '...appointments loaded...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        appointments: resData.data.getAllAppointments,\n        activityA: `getAllAppointments?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.parseForCalendarAppts(resData.data.getAllAppointments)\n\n      if (this.props.location.state &&\n          this.props.location.state.newVisit ) {\n            console.log('foo')\n          this.newVisitPatient({dateClick: false});\n      }\n      if (this.props.location.state &&\n          this.props.location.state.newVisitDate ) {\n            console.log('bar')\n          this.newVisitPatient({dateClick: true});\n      }\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},comorbidities{type,title,description},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...patients loaded...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n        activityA: `getAllPatients?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message);\n      }\n      if (resData.data.error) {\n        this.context.setUserAlert(resData.data.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchVisits = (event) => {\n  event.preventDefault();\n  console.log('...searching visits...');\n  this.context.setUserAlert('...searching visits...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'date') {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n      query {getVisitsByFieldRegex(\n        activityId:\"${activityId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getVisitsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getVisitsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getVisitsByField);\n      }\n\n      let responseAlert = '...visit search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchVisits: resData.data.getVisitsByFieldRegex,\n          activityA: `getVisitsByFieldRegex?activityId:${activityId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchVisits: resData.data.getVisitsByField,\n          activityA: `getVisitsByField?activityId:${activityId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nnewVisitPatient = (args) => {\n  console.log('...new Visit from patient details...');\n  this.context.setUserAlert('...creating new appointment...')\n  this.setState({\n    isLoading: true,\n    otfAppt: true\n  });\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patient = this.props.location.state.newVisit;\n  const today = moment().format('YYYY-MM-DD,h:mm a')\n\n  const title = patient.name+'appt'+today;\n  const type = 'new_unreferred';\n  const subType = '';\n  const date = today.split(',')[0];\n  const time = today.split(',')[1];\n  const location = '';\n  const description = 'appointment on-the-fly';\n  const important = false;\n\n  let requestBody = {\n    query: `\n      mutation {createAppointment(\n        activityId:\"${activityId}\",\n        patientId:\"${patient._id}\",\n        appointmentInput:{\n          title:\"${title}\",\n          type:\"${type}\",\n          subType:\"${subType}\",\n          date:\"${date}\",\n          time:\"${time}\",\n          location:\"${location}\",\n          description:\"${description}\",\n          important:${important}\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id,name},consultants{_id,name},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createAppointment);\n      let responseAlert = '...create appointment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `createAppointment?activityId:${activityId},appointmentId:${resData.data.createAppointment._id}`,\n        creatingVisit: true,\n        selectedAppointment: resData.data.createAppointment,\n        menuSelect: 'new',\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\nonStartCreateNewVisit = () => {\n  this.setState({\n    creatingVisit: true\n  })\n}\ncancelCreateNewVisit = () => {\n  this.setState({\n    creatingVisit: false,\n    selectedAppointment: null\n  })\n  if (this.state.otfAppt === true) {\n    console.log('...cleaning up on the fly appointment...');\n    this.deleteOtfAppointment()\n  }\n}\nsubmitCreateNewVisitForm = (event) => {\n  event.preventDefault();\n  console.log('...creating new visit...',this.state.selectedAppointment.patient);\n  this.context.setUserAlert('...creating new visit...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.state.selectedAppointment._id;\n\n  const title = this.state.selectedAppointment.patient.name+'visit'+this.state.selectedAppointment.date;\n  const type = event.target.type.value;\n  const subType = '';\n\n  if (\n      // title.trim().length === 0 ||\n      type.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank required fields!!!...\")\n    return;\n  }\n\n  const tooEarly = moment().format('YYYY-MM-DD') < moment.unix(this.state.selectedAppointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD');\n  const tooLate = moment().format('YYYY-MM-DD') > moment.unix(this.state.selectedAppointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD');\n\n  if (tooEarly === true) {\n    console.log('...appointment for this visit is in the future...please wait or create a new appointment...');\n    this.context.setUserAlert('...appointment for this visit is in the future...please wait or create a new appointment...')\n    this.setState({isLoading: false})\n    return\n  }\n  if (tooLate === true) {\n    console.log('...appointment for this visit has already gone... please create a new appointment...');\n    this.context.setUserAlert('...appointment for this visit has already gone... please create a new appointment...')\n    this.setState({isLoading: false})\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {createVisit(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        visitInput:{\n          title:\"${title}\",\n          type:\"${type}\",\n          subType:\"${subType}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createVisit);\n      let responseAlert = '...create visit success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        showDetails: true,\n        creatingVisit: false,\n        selectedVisit: resData.data.createVisit,\n        newVisit: resData.data.createVisit,\n        otfAppt: false,\n        // tabKey: 'detail',\n        menuSelect: 'detail',\n        activityA: `createVisit?activityId:${activityId},visitId:${resData.data.createVisit._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'))\n      this.getAllVisits(seshStore);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ndeleteOtfAppointment = () => {\n  console.log('...deleting otf appointment...');\n  this.context.setUserAlert('...deleting otf appointment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.state.selectedAppointment._id;\n  // console.log('foo',appointmentId);\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentById(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentById);\n      let responseAlert = '...delete appointment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteAppointment?activityId:${activityId},visitId:${resData.data.deleteAppointmentById._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\ntoggleFilter = () => {\n  this.setState({\n    startFilter: !this.state.startFilter\n  })\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n  if (args === 'detail' && this.state.selectedVisit) {\n    this.setState({\n      subMenuState: true\n    })\n  } else {\n    this.setState({\n      subMenuState: false\n    })\n  }\n}\nsubMenuSelect = (args) => {\n  this.setState({\n    subMenu: args\n  })\n}\n\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nselectAppointment = (args) => {\n  this.setState({\n    selectedAppointment: args\n  })\n}\nselectCalendarAppointment = (args) => {\n  this.setState({\n    selectedAppointment: args.event.extendedProps.props\n  })\n}\n\nshowDetails = (args) => {\n  this.setState({\n    showDetails: true,\n    selectedVisit: args,\n    overlay: false,\n    tabKey: 'detail',\n    menuSelect: 'detail',\n    subMenuState: true\n  })\n  this.props.selectVisit(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\nupdateVisit = (args) => {\n  console.log('...updating selected visit...');\n  this.setState({\n    selectedVisit: args\n  })\n  this.props.selectVisit(args);\n}\n\ndeleteVisit = (args) => {\n  console.log('...deleteing visit...');\n  this.context.setUserAlert('...deleteing visit...')\n\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitById(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitById);\n      let responseAlert = '...delete visit success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteVisitById?activityId:${activityId},visitId:${visitId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllVisits({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing visits for calendar...');\n  let calendarVisits = args.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        title: x.title,\n        type: x.type,\n        date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n        time: x.time,\n        subType: x.subType,\n      }\n    }))\n    this.setState({\n      calendarVisits: calendarVisits\n    })\n}\nparseForCalendarAppts = (args) => {\n  console.log('...parsing appointments for calendar...');\n  let calendarAppointments = args.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n      }\n    }))\n    this.setState({\n      calendarAppointments: calendarAppointments\n    })\n\n}\n\nviewCalendarEvent = (args) => {\n  console.log('...viewing calendar visit...');\n  const visit = this.state.visits.filter(x => x._id === args.event.extendedProps.props._id)[0];\n  this.setState({\n    overlay: true,\n    overlayStatus: {type: 'calendarVisit', data: visit}\n  })\n}\ndateClick = (args) => {\n  console.log('dateClick',args)\n  // this.setState({\n  //   overlay: true,\n  //   overlayStatus: {type: 'dateClickVisit', data: args.dateStr}\n  // })\n}\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\nstartSublistSearch = () => {\n  this.setState({\n    sublistSearch: true\n  })\n}\ncancelSublistSearch = () => {\n  this.setState({\n    sublistSearch: false,\n  })\n  this.getAllAppointments({activityId: this.context.activityId,token: this.context.token});\n}\nsubmitSublistSearchForm = (event) => {\n  event.preventDefault();\n  console.log('...searching appointments...');\n  this.context.setUserAlert('...searching appointments...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'date' ||\n      field === 'inProgress' ||\n      field === 'attended' ||\n      field === 'important' ||\n      field === 'important'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getAppointmentsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n      query {getAppointmentsByField(\n        activityId:\"${activityId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getAppointmentsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getAppointmentsByField);\n      }\n\n      let responseAlert = '...appointment search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          appointments: resData.data.getAppointmentsByFieldRegex,\n          activityA: `getAppointmentsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n        this.parseForCalendarAppts(resData.data.getAppointmentsByFieldRegex)\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          appointments: resData.data.getAppointmentsByField,\n          activityA: `getAppointmentsByField?activityId:${activityId},userId:${userId}`\n        });\n        this.parseForCalendarAppts(resData.data.getAppointmentsByField)\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\nclearSearch = () => {\n  this.setState({\n    searchVisits: null\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    <FloatMenu\n      state={this.state.sideCol}\n      menuSelect={this.menuSelect}\n      subMenuState={this.state.subMenuState}\n      subMenu={this.state.subMenu}\n      subMenuSelect={this.subMenuSelect}\n      page='visit'\n      role={this.context.role}\n    />\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        selectCalendarDetails={this.showDetails}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <div className=\"topContainer\">\n      <div className=\"headTop\">\n        <Row className=\"\">\n          <h1>Visits:\n          {this.state.showDetails === true &&\n            this.state.selectedVisit &&\n            this.state.tabKey === 'detail' && (\n                this.state.selectedVisit.title\n            )}\n          </h1>\n        </Row>\n        <Row className=\"\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Row>\n      </div>\n\n      <Row className=\"\">\n\n        {this.state.visits && (\n          <Col md={12} className=\"\">\n\n          {this.state.startFilter === true && (\n            <Col>\n              <FilterVisitForm\n                onCancel={this.toggleFilter}\n                onConfirm={this.submitFilterForm}\n              />\n            </Col>\n          )}\n\n          {this.state.menuSelect === 'list' && (\n            <Col className=\"tabCol tabRowAppt\">\n            <Col className=\"subTabCol\">\n              <Button variant=\"primary\" className=\"searchBtn\" onClick={this.toggleFilter}>Filter</Button>\n              <Button variant=\"warning\" className=\"searchBtn\" onClick={this.resetFilter}>Reset</Button>\n            </Col>\n              <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"1\" title=\"list\">\n                  <VisitList\n                    filter={this.state.filter}\n                    visits={this.state.visits}\n                    authId={this.context.activityId}\n                    canDelete={this.state.canDelete}\n                    showDetails={this.showDetails}\n                    onDelete={this.deleteVisit}\n                  />\n                </Tab>\n                <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                  <FullCalendar\n                    initialView=\"dayGridMonth\"\n                    plugins={[dayGridPlugin, interactionPlugin, bootstrapPlugin]}\n                    events={this.state.calendarVisits}\n                    eventClick={this.viewCalendarEvent}\n                    dateClick={this.dateClick}\n                  />\n                </Tab>\n              </Tabs>\n            </Col>\n          )}\n          {this.state.menuSelect === 'search' && (\n            <Col className=\"tabCol\">\n              <Col className=\"subTabCol\">\n                <h3>Search</h3>\n                <Row className=\"\">\n                  <VisitSearchForm\n                    onConfirm={this.searchVisits}\n                    onCancel={this.clearSearch}\n                  />\n                </Row>\n                <Row>\n                  {this.state.searchVisits && (\n                    <Button variant=\"primary\" onClick={this.toggleFilter} className=\"centered_btn\">Filter</Button>\n                  )}\n                </Row>\n                <Row className=\"\">\n                  {this.state.searchVisits && (\n                    <VisitList\n                      filter={this.state.filter}\n                      visits={this.state.searchVisits}\n                      authId={this.context.activityId}\n                      showDetails={this.showDetails}\n                    />\n                  )}\n                </Row>\n              </Col>\n            </Col>\n          )}\n          {this.state.menuSelect === 'detail' && (\n            <Col className=\"tabCol tabColDetail\">\n              {this.state.showDetails === false &&\n                !this.state.selectedVisit &&(\n                <h3>Select a Visit to see details</h3>\n              )}\n              {this.state.showDetails === true &&\n                this.state.selectedVisit && (\n                  <VisitDetail\n                    visit={this.state.selectedVisit}\n                    updateVisit={this.updateVisit}\n                    subMenu={this.state.subMenu}\n                  />\n              )}\n            </Col>\n          )}\n          {this.state.menuSelect === 'new' && (\n            <Col className=\"tabCol\">\n              {this.state.creatingVisit === false && (\n                <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={this.onStartCreateNewVisit}>Create New</Button>\n              )}\n              {this.state.creatingVisit === true &&\n                this.state.appointments &&\n                !this.state.selectedAppointment && (\n                <Col className=\"\">\n                <Col className=\"subTabCol\">\n                <h3>\n                Choose an Appointment\n                </h3>\n                <Button variant=\"secondary\" className=\"patientSublistSearchBtn\" onClick={this.startSublistSearch}>Search</Button>\n                </Col>\n                <Row className=\"\">\n                {this.state.sublistSearch === true && (\n                  <AppointmentSearchForm\n                    onCancel={this.cancelSublistSearch}\n                    onConfirm={this.submitSublistSearchForm}\n                  />\n                )}\n                </Row>\n                <Col className=\"subTabCol\">\n                <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                  <Tab eventKey=\"1\" title=\"list\">\n                    <AppointmentList\n                      filter={this.state.filter}\n                      appointments={this.state.appointments}\n                      authId={this.context.activityId}\n                      onSelect={this.selectAppointment}\n                      visitPage={true}\n                    />\n                  </Tab>\n                  <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                    <h3>Calendar</h3>\n                    <FullCalendar\n                      initialView=\"dayGridMonth\"\n                      plugins={[dayGridPlugin, interactionPlugin]}\n                      events={this.state.calendarAppointments}\n                      eventClick={this.selectCalendarAppointment}\n                      dateClick={this.dateClick}\n                    />\n                  </Tab>\n                </Tabs>\n                </Col>\n                </Col>\n              )}\n              {this.state.creatingVisit === true &&\n                this.state.selectedAppointment && (\n                <Row>\n                  <CreateVisitForm\n                    onConfirm={this.submitCreateNewVisitForm}\n                    onCancel={this.cancelCreateNewVisit}\n                    appointment={this.state.selectedAppointment}\n                  />\n                </Row>\n              )}\n              {this.state.newVisit && (\n                <Row>\n                  <h3>Review New Visit {this.state.newVisit._id}</h3>\n                </Row>\n              )}\n            </Col>\n          )}\n          </Col>\n        )}\n      </Row>\n    </div>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default VisitPage;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport AlertBox from './components/alertBox/AlertBox';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport LandingPage from './pages/landing/Landing';\nimport HomePage from './pages/landing/Home';\nimport MyProfilePage from './pages/profile/Profile';\nimport LoginPage from './pages/auth/Login';\nimport SignupPage from './pages/auth/Signup';\nimport PasswordResetPage from './pages/auth/PasswordReset';\nimport StaffPage from './pages/staff/Staff';\nimport PatientPage from './pages/patient/Patients';\nimport AppointmentPage from './pages/appointment/Appointment';\nimport VisitPage from './pages/visit/Visit';\n\nimport AuthContext from './context/auth-context';\nimport io from 'socket.io-client';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    activityId: null,\n    role: null,\n    context: this.context,\n    sessionStorageAuth: JSON.parse(sessionStorage.getItem('logInfo')),\n    sessionCookiePresent: false,\n    passwordResetState: 'incomplete',\n    passwordResetMessage: '...',\n    userAlert: null,\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    selectedVisit: null,\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.sessionStorageAuth = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.socket = io('http://localhost:9099');\n  }\n\n  login = (token, activityId, role, tokenExpiration) => {\n    console.log('...context login...');\n    this.setState({\n      token: token,\n      activityId: activityId,\n      role: role,\n      sessionStorageAuth: {\n        token: token,\n        activityId: activityId,\n        role: role,\n        tokenExpiration: tokenExpiration\n      },\n    });\n    this.sessionStorageAuth = {\n      token: token,\n      activityId: activityId,\n      role: role,\n      tokenExpiration: tokenExpiration\n    }\n    this.context.token = token;\n    this.context.activityId = activityId;\n    this.context.role = role;\n    this.userOnline();\n  };\n\n  logout = () => {\n      this.logout2();\n  };\n\n  componentDidMount() {\n    console.log('1:',this.socket);\n    // console.log('2:',this.socket2);\n    console.log('...app component mounted...');\n    if (sessionStorage.getItem('logInfo') && this.state.token === null) {\n      console.log('...sessionStorageFound...');\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n      this.login(\n        seshStore.token,\n        seshStore.activityId,\n        seshStore.role,\n        seshStore.tokenExpiration,\n      )\n    }\n    if (!this.sessionStorageAuth) {\n      console.log('...noSessionStorageFound...');\n    }\n    this.socket.emit('unauthorizedClientConnect');\n    console.log(\"socket listening....\");\n\n    this.socket.on('admin_msg', function(data) {\n      console.log('...receiving admin msg client...',data);\n      adminMessage(data);\n    });\n    this.socket.on('receive_notification', function(data) {\n      console.log('...receiving notification client...',data);\n      sendNotification(data);\n    });\n\n    // this.socket.on('conversation private post', function(data) {\n    //   console.log(\"you got a new message..\",data);\n      // addMessage(data);\n    // });\n    const sendNotification = data => {\n      // console.log('notification user alert',data);\n      this.setState({\n        userAlert: data.msg })\n    };\n    const adminMessage = data => {\n      // console.log('admin message user alert',data);\n      this.setState({\n        userAlert: data.msg.msg })\n    };\n\n  }\n\n\n  sendSocketMessage (msgObject) {\n    const message = msgObject;\n    console.log(\"sending socket message  \",'message',message,'this.socket',this.socket);\n    this.setState({userAlert: \"sending socket message  \"+'message'+message+'this.socket'+this.socket})\n    let conversationId = null;\n    if (this.context.receiver === null || this.context.receiver === undefined) {\n      console.log(\"select someone to msg 1st...\");\n      this.setState({userAlert: \"select someone to msg 1st...\"});\n      return\n    }\n    else {\n      conversationId = this.context.receiver._id;\n    }\n\n    this.socket.emit('send message', {\n      room: 'msg'+conversationId,\n      message: message\n    });\n    this.socket.on(\"MESSAGE_SENT\", function(data) {\n\n      addMessage(data)\n    })\n\n    const addMessage = data => {\n      this.setState({ userAlert: data.msg})\n    };\n  };\n\n  sendSocketAdminMessage = (args) => {\n    // console.log('...sending admin msg client...');\n    this.socket.emit('admin_msg', {msg: args})\n  }\n  sendSocketNotification = (args) => {\n    let notificationId = args.userId;\n    // console.log('...sending socket notification client...');\n    this.socket.emit('send_notification', {\n      room:'msg_'+notificationId,\n      data: args.data\n    })\n  }\n\n\n  componentWillUnmount() {\n    console.log('...app component un-mounting...');\n  }\n\n  logout2 () {\n    console.log('...logging you out...');\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n        query{logout(\n          activityId:\"${activityId}\")\n        {_id,loggedIn}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        this.setState({\n           token: null,\n           activityId: null,\n           role: null,\n           sessionCookiePresent: null,\n           sessionStorageAuth: null,\n        });\n        this.sessionStorageAuth = null;\n        sessionStorage.clear();\n        this.context = {\n          token: null,\n          activityId: null,\n          activityA: null,\n          activityUser: null,\n          role: null,\n          userId: null,\n          user: {},\n          users:[],\n          selectedUser: null,\n          selectedPatient: null,\n          selectedAppointment: null,\n          selectedVisit: null,\n          sender: null,\n          receiver: null,\n          userAlert: \"...\",\n          file: null,\n          fancyDate: null,\n          login: this.login,\n          logout: this.logout,\n          setUserAlert: this.setUserAlert,\n          userOnline: this.userOnline,\n        };\n        this.setState({userAlert: '...logout success...'});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  userOnline = () => {\n    console.log('...domesticating socket client...');\n    this.socket.emit('notification_subscribe', {\n      user: this.context.activityId,\n      room:'msg_'+this.context.activityId\n    });\n\n    if (this.context.role === 'Admin') {\n      this.socket.emit('admin_subscribe')\n    }\n  }\n\n  passwordReset = (event) => {\n    event.preventDefault();\n    console.log('...reset password submission...');\n      const params = event.target.formGridParams.value.split('@');\n      const verificationCode = params[1];\n      const userId = params[0];\n      const password = event.target.formGridPassword.value;\n      // console.log('params',params);\n\n      const requestBody = {\n        query:`\n          mutation {resetUserPassword(\n            userId:\"${userId}\",\n            verification:\"${verificationCode}\",\n            userInput:{\n              password:\"${password}\"\n            })\n            {_id,password,verification{verified}}}\n        `};\n\n      fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log('passwordReset',resData);\n          if (resData.errors) {\n            this.setState({passwordResetState: 'error', passwordResetMessage: resData.errors[0].message+'..if not, try making a new reset request..' })\n          } else {\n            this.setState({passwordResetState: 'complete' })\n          }\n\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({passwordResetState: 'error', passwordResetMessage: err })\n        });\n  }\n  cancelPasswordReset = () => {\n    this.setState({passwordResetState: 'cancelled'})\n  }\n\n  setUserAlert = (args) => {\n    // console.log('...setUserAlert...',args);\n    if (args === 'Unauthenticated!') {\n      this.setState({userAlert: '...token expired! Logging you out...'})\n\n      this.logout2()\n    }\n    this.setState({userAlert: args})\n  }\n\n  selectUser = (args) => {\n    console.log('...updating top-level selected user...');\n    this.setState({\n      selectedUser: args\n    })\n  }\n  selectPatient = (args) => {\n    console.log('...updating top-level selected patient...');\n    this.setState({\n      selectedPatient: args\n    })\n  }\n  selectAppointment = (args) => {\n    console.log('...updating top-level selected appointment...');\n    this.setState({\n      selectedAppointment: args\n    })\n  }\n  selectVisit = (args) => {\n    console.log('...updating top-level selected visit...');\n    this.setState({\n      selectedVisit: args\n    })\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              activityId: this.state.activityId,\n              activityA: null,\n              activityUser: null,\n              role: this.state.role,\n              userId: null,\n              user: {},\n              users:[],\n              selectedUser: null,\n              selectedPatient: null,\n              selectedAppointment: null,\n              selectedVisit: null,\n              sender: null,\n              receiver: null,\n              userAlert: \"...\",\n              file: null,\n              fancyDate: null,\n              login: this.login,\n              logout: this.logout,\n              setUserAlert: this.setUserAlert,\n              userOnline: this.userOnline,\n            }}\n          >\n            <MainNavigation\n              role={this.state.role}\n            />\n            <AlertBox\n              authId={this.context.activityId}\n              alert={this.state.userAlert}\n            />\n            <main className=\"main-content\">\n              <Switch>\n\n              {this.state.sessionStorageAuth && (\n                <Redirect from=\"/login\" to=\"/home\" exact />\n              )}\n\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/home\" render={(props) => <HomePage {...props}\n                  title=\"home\"\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/profile\" render={(props) => <MyProfilePage {...props}\n                  title=\"profile\"\n                  sendSocketAdminMessage={this.sendSocketAdminMessage}\n                  sendSocketNotification={this.sendSocketNotification}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/staff\" render={(props) => <StaffPage {...props}\n                  title=\"staff\"\n                  selectedUser={this.state.selectedUser}\n                  selectUser={this.selectUser}\n                  sendSocketAdminMessage={this.sendSocketAdminMessage}\n                  sendSocketNotification={this.sendSocketNotification}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/patients\" render={(props) => <PatientPage {...props}\n                  title=\"patients\"\n                  selectedPatient={this.state.selectedPatient}\n                  selectPatient={this.selectPatient}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/appointments\" render={(props) => <AppointmentPage {...props}\n                  title=\"appointments\"\n                  selectedAppointment={this.state.selectedAppointment}\n                  selectAppointment={this.selectAppointment}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/visits\" render={(props) => <VisitPage {...props}\n                  title=\"visits\"\n                  selectedVisit={this.state.selectedVisit}\n                  selectVisit={this.selectVisit}\n                />}/>\n              )}\n\n              {this.state.sessionStorageAuth && (\n                <Redirect from=\"/\" to=\"/home\" exact />\n              )}\n              {this.state.sessionStorageAuth && (\n                <Redirect from=\"*\" to=\"/home\" exact />\n              )}\n\n\n\n              {!this.state.sessionStorageAuth && (\n                <Route path=\"/landing\" render={(props) => <LandingPage {...props}\n                  title=\"landing\"\n                />}/>\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Route path=\"/login\" render={(props) => <LoginPage {...props}\n                  title=\"login\"\n                />}/>\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Route path=\"/signup\" render={(props) => <SignupPage {...props}\n                  title=\"signup\"\n                  setUserAlert={this.setUserAlert}\n                />}/>\n              )}\n\n              <Route path=\"/passwordReset/:params\" render={(props) => <PasswordResetPage {...props}\n                passwordReset={this.passwordReset}\n                cancelPasswordReset={this.cancelPasswordReset}\n                resetState={this.state.passwordResetState}\n                message={this.state.passwordResetMessage}\n                />}\n              />\n\n              {!this.state.sessionStorageAuth && (\n                <Redirect from=\"/home\" to=\"/landing\" exact />\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Redirect from=\"/\" to=\"/landing\" exact />\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Redirect from=\"*\" to=\"/landing\" exact />\n              )}\n\n              </Switch>\n            </main>\n\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import \"@fullcalendar/daygrid/main.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}