{"version":3,"sources":["assets/letterhead.jpg","logo.svg","assets/loading.gif","components/alertBox/AlertBox.js","context/auth-context.js","components/Navigation/MainNavigation.js","components/overlay/LoadingOverlay.js","pages/landing/Landing.js","components/items/patient/PatientItem.js","components/lists/patient/PatientList.js","components/items/appointment/AppointmentItem.js","components/lists/appointment/AppointmentList.js","components/items/queue/QueueSlotItem.js","components/lists/queue/QueueSlotList.js","components/items/queue/QueueItem.js","components/forms/search/PatientSearchForm.js","components/forms/search/UserSearchForm.js","components/items/user/UserItem.js","components/lists/user/UserList.js","pages/landing/Home.js","components/items/user/AddressItem.js","components/lists/user/UserAddressList.js","components/items/user/AttendanceItem.js","components/lists/user/UserAttendanceList.js","components/items/user/LeaveItem.js","components/lists/user/UserLeaveList.js","components/items/user/ImageItem.js","components/lists/user/UserImageList.js","components/items/patient/FileItem.js","components/lists/user/UserFileList.js","components/items/user/AppointmentItem.js","components/lists/user/UserAppointmentList.js","components/items/user/NoteItem.js","components/lists/user/UserNoteList.js","components/forms/filter/FilterAddressForm.js","components/forms/filter/FilterAttendanceForm.js","components/forms/filter/FilterLeaveForm.js","components/forms/filter/FilterImageForm.js","components/forms/filter/FilterFileForm.js","components/forms/filter/FilterAppointmentForm.js","components/forms/filter/FilterNoteForm.js","components/forms/add/UpdateUserSingleFieldForm.js","components/forms/add/AddAddressForm.js","components/forms/add/AddAttendanceForm.js","components/forms/add/AddLeaveForm.js","components/forms/add/AddNoteForm.js","components/forms/add/AddImageForm.js","components/forms/add/AddFileForm.js","pages/profile/Profile.js","components/forms/auth/LoginForm.js","components/forms/auth/VerifyUserForm.js","components/forms/auth/ForgotPasswordForm.js","pages/auth/Login.js","components/forms/auth/SignupForm.js","pages/auth/Signup.js","components/forms/auth/ResetPasswordForm.js","pages/auth/PasswordReset.js","components/lists/user/SearchUserList.js","components/details/UserDetail.js","components/forms/filter/FilterUserForm.js","pages/staff/Staff.js","components/forms/create/CreatePatientForm.js","components/lists/patient/SearchPatientList.js","components/pdfView/PdfView.js","components/lists/patient/PatientAddressList.js","components/items/patient/NextOfKinItem.js","components/lists/patient/PatientNextOfKinList.js","components/items/patient/AttachmentItem.js","components/lists/patient/PatientAttachmentList.js","components/items/patient/AllergyItem.js","components/lists/patient/PatientAllergyList.js","components/items/patient/MedicationItem.js","components/lists/patient/PatientMedicationList.js","components/items/patient/ImageItem.js","components/lists/patient/PatientImageList.js","components/lists/patient/PatientFileList.js","components/items/patient/NoteItem.js","components/lists/patient/PatientNoteList.js","components/items/patient/TagItem.js","components/lists/patient/PatientTagList.js","components/items/visit/VisitItem.js","components/lists/visit/VisitList.js","components/forms/filter/FilterAllergyForm.js","components/forms/filter/FilterMedicationForm.js","components/forms/filter/FilterNextOfKinForm.js","components/forms/filter/FilterVisitForm.js","components/forms/filter/FilterTagForm.js","components/forms/add/UpdatePatientSingleFieldForm.js","components/forms/add/AddTagForm.js","components/forms/add/AddNextOfKinForm.js","components/forms/add/AddAllergyForm.js","components/forms/add/AddMedicationForm.js","components/forms/add/AddAttachmentForm.js","components/details/PatientDetail.js","components/forms/filter/FilterPatientForm.js","pages/patient/Patients.js","components/forms/create/CreateAppointmentForm.js","components/items/appointment/NoteItem.js","components/lists/appointment/AppointmentNoteList.js","components/items/appointment/TagItem.js","components/lists/appointment/AppointmentTagList.js","components/forms/add/AddUserForm.js","components/details/AppointmentDetail.js","components/forms/search/AppointmentSearchForm.js","pages/appointment/Appointment.js","components/forms/create/CreateVisitForm.js","components/items/visit/ComplaintItem.js","components/lists/visit/VisitComplaintList.js","components/items/visit/SurveyItem.js","components/lists/visit/VisitSurveyList.js","components/items/visit/SystematicInquiryItem.js","components/lists/visit/VisitSystematicInquiryList.js","components/items/visit/VitalsItem.js","components/lists/visit/VisitVitalsList.js","components/items/visit/ExaminationItem.js","components/lists/visit/VisitExaminationList.js","components/items/visit/InvestigationItem.js","components/lists/visit/VisitInvestigationList.js","components/items/visit/DiagnosisItem.js","components/lists/visit/VisitDiagnosisList.js","components/items/visit/TreatmentItem.js","components/lists/visit/VisitTreatmentList.js","components/items/visit/BillingItem.js","components/lists/visit/VisitBillingList.js","components/items/visit/VigilanceItem.js","components/lists/visit/VisitVigilanceList.js","components/items/visit/ImageItem.js","components/lists/visit/VisitImageList.js","components/items/visit/FileItem.js","components/lists/visit/VisitFileList.js","components/forms/filter/FilterComplaintForm.js","components/forms/filter/FilterSurveyForm.js","components/forms/filter/FilterSystematicInquiryForm.js","components/forms/filter/FilterDiagnosisForm.js","components/forms/filter/FilterVitalsForm.js","components/forms/filter/FilterExaminationForm.js","components/forms/filter/FilterInvestigationForm.js","components/forms/filter/FilterTreatmentForm.js","components/forms/filter/FilterBillingForm.js","components/forms/add/AddComplaintForm.js","components/forms/add/AddSurveyForm.js","components/forms/add/AddSystematicInquiryForm.js","components/forms/add/AddVitalsForm.js","components/forms/add/AddExaminationForm.js","components/forms/add/AddInvestigationForm.js","components/forms/add/AddDiagnosisForm.js","components/forms/add/AddTreatmentForm.js","components/forms/add/AddBillingForm.js","components/forms/add/AddVigilanceForm.js","components/details/VisitDetail.js","components/forms/search/VisitSearchForm.js","pages/visit/Visit.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AlertBox","props","alert","useState","state","setState","handleStateChange","console","log","className","icon","faMinusSquare","onClick","faPlusSquare","Alert","variant","React","createContext","token","activityId","activityA","activityUser","role","userId","user","users","selectedUser","selectedPatient","selectedAppointment","selectedVisit","userAlert","file","fancyDate","login","tokenExpiration","logout","setUserAlert","args","userOnline","mainNavigation","Consumer","context","Fragment","to","LoadingOverlay","Row","toggleOverlay","status","type","Button","Container","ListGroup","Item","selectCalendarDetails","faExternalLinkAlt","bind","data","goLink","pathname","appointment","_id","moment","unix","date","substr","add","format","time","title","subType","location","important","faCheckSquare","faBan","description","visit","startDate","endDate","Image","src","loadingGif","fluid","action","target","LandingPage","overlay","overlayStatus","isGuest","this","Col","Component","PatientItem","deleteState","setDeleteState","key","count","Card","Body","Text","patient","username","faEye","appointmentPage","showDetails","homePage","faUserPlus","onSelect","canDelete","faTrashAlt","name","dob","age","gender","onDelete","PatientList","filter","patients2","patients","propsPatients","field","value","sort","a","b","registration","x","loggedIn","active","map","indexOf","AppointmentItem","visitPage","faCalendarPlus","checkinTime","seenTime","inProgress","toString","attended","AppointmentList","appointments2","appointments","propsAppointments","QueueSlotItem","queueSlot","number","seen","slotSeen","slotUnseen","consultant","QueueSlotList","queueSlots","QueueItem","queue","creator","slots","PatientSearchForm","Form","onSubmit","onConfirm","Group","as","controlId","Label","Control","placeholder","onCancel","UserSearchForm","UserItem","selectUser","faBatteryThreeQuarters","faBatteryEmpty","UserList","users2","propsUsers","HomePage","isLoading","seshStore","todayAppointments","weekImportantAppointments","recentPatients","queueToday","addingQueueSlot","queueSlotAddStage","sublistPatientSearch","sublistUserSearch","loadHome","getAppointmentsToday","getAppointmentsImportantWeek","getRecentPatients","getQueueToday","getAllPatients","getAllUsers","requestBody","query","fetch","method","body","JSON","stringify","headers","Authorization","then","res","Error","json","resData","responseAlert","errors","message","error","catch","err","getAppointmentsImportantNextWeek","submitFilterForm","event","preventDefault","startAddQueueSlot","cancelAddQueueSlot","createQueue","submitQueueSlotAddPatient","queuePatients","existingPatient","includes","selectPatient","submitQueueSlotAddConsultant","queueId","patientId","consultantId","addQueueSlot","queueSlotSeen","slotNumber","queueSlotUnseen","deleteQueSlot","deleteQueueSlot","startPatientSearch","cancelSublistPatientSearch","submitSublistPatientSearchForm","regex","getPatientsByFieldRegex","getPatientsByField","logUserActivity","startUserSearch","cancelSublistUserSearch","submitSublistUserSearchForm","getUsersByFieldRegex","getUsersByField","sessionStorage","getItem","parse","size","md","authId","contextType","AuthContext","AddressItem","address","town","country","street","city","parish","primary","makePrimary","UserAddressList","addresses2","addresses","propsAddresses","postalCode","AttendanceItem","attendance","UserAttendanceList","attendance2","propsAttendance","attendanceItem","LeaveItem","leave","UserLeaveList","leave2","propsLeave","leaveItem","ImageItem","href","image","path","rel","UserImageList","images2","images","propsImages","FileItem","PatientFileList","files2","files","propsFiles","UserAppointmentList","NoteItem","note","UserNoteList","notes2","notes","propsNotes","FilterAddressForm","hidden","FilterLeaveForm","FilterImageForm","FilterFileForm","FilterAppointmentForm","FilterNoteForm","UpdateUserSingleFieldForm","AddAddressForm","AddAttendanceForm","Date","rows","AddLeaveForm","AddNoteForm","AddImageForm","id","onChange","e","_currentValue","AddFileForm","MyProfilePage","profileLoaded","sideCol","menuSelected","adding","updateSingleField","calendarAttendance","calendarLeave","calendarAppointments","pocketVars","s3State","submitAddAddressForm","addUserAddress","deleteAddress","deleteUserAddress","setAddressPrimary","setUserAddressPrimary","submitAddAttendanceForm","attendanceDate","attendanceStatus","attendanceDescription","addUserAttendance","parseForCalendar","deleteAttendance","deleteUserAttendance","submitAddLeaveForm","addUserLeave","deleteLeave","deleteUserLeave","addUseLeavce","submitAddImageForm","imageName","imageType","imagePath","fileInput","fileName","filePath","fileType","split","config","bucketName","dirName","region","accessKeyId","s3","secretAccessKey","s3Url","ReactS3Client","S3","uploadFile","statusText","addUserImage","deleteImage","deleteUserImage","filename","deleteFile","response","submitAddFileForm","file2Name","file2Type","file2Path","addUserFile","deleteUserFile","submitAddNoteForm","addUserNotes","deleteNote","deleteUserNote","submitUpdateSingleFieldForm","updateUserSingleField","startUpdateSingleField","cancelUpdateSingleField","toggleSideCol","menuSelect","startAdd","cancelAdd","end","viewCalendarEvent","input","extendedProps","socket","io","getThisUser","getPocketVars","pocketVarsParsed","getUserById","sendSocketAdminMessage","request","activityDate","addUserActivity","Tab","defaultActiveKey","Nav","Link","eventKey","FilterAttendanceForm","Content","Pane","contact","email","phone","phone2","registrationNumber","employmentDate","clientConnected","verification","verified","code","Tabs","defaultView","plugins","dayGridPlugin","events","eventClick","showListDetails","LoginForm","onStartVerification","onStartForgotPassword","verifyUserForm","canCancel","canConfirm","ForgotPasswordForm","LoginPage","verifying","activeTab","userSeshStore","requestingPasswordReset","showForm","submitLoginForm","password","trim","length","sessionObject","setItem","verifyUser","toggleVerification","toggleForgotPassword","requestPasswordReset","VerifyUserForm","SignupForm","SignUpPage","signupStatus","invited","submitSignupForm","addressNumber","addressStreet","addressTown","addressCity","addressParish","addressCountry","addressPostalCode","createUser","submitInviteForm","challenge","inviteCode","verifyInvitation","ResetPasswordForm","verf","PasswordResetPage","passwordResetStatus","verfCode","submitResetPasswordForm","verificationCode","resetUserPassword","SearchUserList","UserDetail","updateUser","replace","FilterUserForm","StaffPage","searchUsers","fromGoLink","goLinkId","tabKey","sendSocketNotification","deleteUser","resetFilter","goLinkUser","activeKey","CreatePatientForm","today","SearchPatientList","styles","StyleSheet","create","paddingTop","paddingBottom","paddingHorizontal","fontSize","textAlign","fontFamily","author","marginBottom","subtitle","margin","text","header","color","pageNumber","position","bottom","left","right","page","flexDirection","backgroundColor","section","padding","flexGrow","PdfView","class","close","pdfViewData","style","letterHead","break","PatientAddressList","NextOfKinItem","nextOfKin","relation","PatientNextOfKinList","nextOfKin2","propsNextOfKin","nextOfKinItem","AttachmentItem","attachment","faEraser","item","PatientAttachmentList","attachments","AllergyItem","allergy","onAddAttachment","deleteAttachment","PatientAllergyList","allergies2","allergies","propsAllergies","MedicationItem","medication","PatientMedicationList","medication2","propsMedication","medicationItem","PatientImageList","UserFileList","PatientNoteList","TagItem","tag","PatientTagList","tags2","tags","propsTags","VisitItem","patientPage","VisitList","visits2","visits","propsVisits","FilterAllergyForm","FilterMedicationForm","FilterNextOfKinForm","FilterVisitForm","FilterTagForm","UpdatePatientSingleFieldForm","AddTagForm","AddNextOfKinForm","AddAllergyForm","AddMedicationForm","AddAttachmentForm","PatientDetail","addAttachmentForm","addAttachmentArgs","calendarVisits","showPdfView","showPdfData","updatePatient","addPatientAddress","deletePatientAddress","setPatientAddressPrimary","submitAddNextOfKinForm","addPatientNextOfKin","deleteNextOfKin","phone1","deletePatientNextOfKin","submitAddAllergyForm","addPatientAllergy","deleteAllergy","deletePatientAllergy","preAttachments","filePath2","index","preAttachment","filename2","submitAddMedicationForm","addPatientMedication","deleteMedication","deletePatientMedication","startAddAttachment","cancelAddAttachment","addAttachment","allergyTitle","allergyType","allergyDescription","medicationTitle","medicationType","medicationDescription","addPatientAllergyAttachment","addPatientMedicationAttachment","allergyAttachment","medicationAttachment","deletePatientAllergyAttachment","deletePatientMedicationAttachment","addPatientImage","deletePatientImage","addPatientFile","deletePatientFile","addPatientNotes","deletePatientNote","submitAddTagForm","addPatientTags","deleteTag","deletePatientTag","updatePatientSingleField","closePdfView","propsPatient","lastName","referral","reason","physician","attendingPhysician","occupation","employer","insurance","company","policyNumber","expiryDate","subscriber","FilterPatientForm","PatientPage","searchPatients","creatingPatient","newPatient","onStartCreateNewPatient","cancelCreateNewPatient","submitCreateNewPatientForm","checked","contactEmail","contactPhone","contactPhone2","referralDate","referralReason","referralPhysicianName","referralPhysicianPhone","referralPhysicianEmail","referralPhysicianAddress","occupationRole","occupationEmployerName","occupationEmployerEmail","occupationEmployerPhone","occupationEmployerAddress","insuranceCompany","insurancePolicyNumber","insuranceDescription","insuranceExpiryDate","insuranceSubscriberCompany","insuranceSubscriberDescription","createPatient","deletePatient","goLinkPatient","lg","CreateAppointmentForm","AppointmentNoteList","AppointmentTagList","AddUserForm","setUser","AppointmentDetail","showAddConsultantForm","calEvent","startTime","endTime","appointmentId","updateAppointment","addAppointmentNotes","deleteAppointmentNote","addAppointmentTags","deleteAppointmentTag","submitAddUserForm","userRole","addAppointmentConsultant","deleteConsultant","deleteAppointmentConsultant","startUpdatePatient","updateAppointmentSingleField","consultants","AppointmentSearchForm","AppointmentPage","searchAppointments","creatingAppointment","newAppointment","sublistSearch","getAppointmentsByFieldRegex","getAppointmentsByField","onStartCreateNewAppointment","cancelCreateNewAppointment","submitCreateNewAppointmentForm","createAppointment","getAllAppointments","selectAppointment","deleteAppointment","startSublistSearch","cancelSublistSearch","submitSublistSearchForm","goLinkAppointment","CreateVisitForm","ComplaintItem","complaint","anamnesis","VisitComplaintList","complaints2","complaints","propsComplaints","SurveyItem","survey","VisitSurveyList","surveys2","surveys","propsSurveys","SystematicInquiryItem","systematicInquiry","VisitSystematicInquiryList","systematicInquirys2","propsSystematicInquirys","systematicInquirys","VitalsItem","vitals","pr","rr","bp1","bp2","temp","ps02","heightValue","heightUnit","weightValue","weightUnit","bmi","urine","VisitVitalsList","vitals2","propsVitals","vitalsItem","ExaminationItem","examination","general","area","measure","followUp","VisitExaminationList","examinations2","propsExaminations","examinations","InvestigationItem","investigation","VisitInvestigationList","investigations2","propsInvestigations","investigations","DiagnosisItem","diagnosis","VisitDiagnosisList","diagnosis2","propsDiagnosis","diagnoses","TreatmentItem","treatment","dose","frequency","VisitTreatmentList","treatment2","propsTreatment","treatments","BillingItem","billing","amount","paid","updateBillingPaid","VisitBillingList","billing2","propsBilling","billings","VigilanceItem","vigilance","chronicIllness","diabetes","testing","comment","hbp","dyslipidemia","cad","lifestyle","weight","diet","smoking","substanceAbuse","exercise","asthma","screening","breast","prostate","cervix","colon","dental","vaccines","influenza","varicella","hpv","mmr","tetanus","pneumovax","other","VisitVigilanceList","vigilance2","propsVigilance","vigilances","VisitImageList","VisitFileList","FilterComplaintForm","FilterSurveyForm","FilterSystematicInquiryForm","FilterDiagnosisForm","FilterVitalsForm","FilterExaminationForm","FilterInvestigationForm","FilterTreatmentForm","FilterBillingForm","AddComplaintForm","AddSurveyForm","AddSystematicInquiryForm","AddVitalsForm","step","AddExaminationForm","AddInvestigationForm","AddDiagnosisForm","AddTreatmentForm","AddBillingForm","AddVigilanceForm","VisitDetail","submitAddComplaintForm","visitId","updateVisit","addVisitComplaint","deleteComplaint","deleteVisitComplaint","submitAddSurveyForm","addVisitSurvey","deleteSurvey","deleteVisitSurvey","submitAddSystematicInquiryForm","addVisitSysInquiry","deleteSystematicInquiry","deleteVisitSysInquiry","submitAddVitalsForm","urineType","urineValue","toFixed","addVisitVitals","deleteVitals","deleteVisitVitals","submitAddExaminationForm","addVisitExamination","deleteExamination","deleteVisitExamination","submitAddInvestigationForm","addVisitInvestigation","deleteInvestigation","deleteVisitInvestigation","submitAddDiagnosisForm","addVisitDiagnosis","deleteDiagnosis","deleteVisitDiagnosis","submitAddTreatmentForm","addVisitTreatment","deleteTreatment","deleteVisitTreatment","submitAddBillingForm","addVisitBilling","updateVisitBillingPaid","deleteBilling","deleteVisitBilling","addVisitImage","deleteVisitImage","addVisitFile","deleteVisitFile","submitAddVigilanceForm","vigilanceChronicIllnessDiabetesMedication","vigilanceChronicIllnessDiabetesTesting","vigilanceChronicIllnessDiabetesComment","vigilanceChronicIllnessHbpMedication","vigilanceChronicIllnessHbpTesting","vigilanceChronicIllnessHbpComment","vigilanceChronicIllnessDyslipidemiaMedication","vigilanceChronicIllnessDyslipidemiaTesting","vigilanceChronicIllnessDyslipidemiaComment","vigilanceChronicIllnessCadMedication","vigilanceChronicIllnessCadTesting","vigilanceChronicIllnessCadComment","vigilanceLifestyleWeightMedication","vigilanceLifestyleWeightTesting","vigilanceLifestyleWeightComment","vigilanceLifestyleDietMedication","vigilanceLifestyleDietTesting","vigilanceLifestyleDietComment","vigilanceLifestyleSmokingMedication","vigilanceLifestyleSmokingTesting","vigilanceLifestyleSmokingComment","vigilanceLifestyleSubstanceAbuseMedication","vigilanceLifestyleSubstanceAbuseTesting","vigilanceLifestyleSubstanceAbuseComment","vigilanceLifestyleExerciseMedication","vigilanceLifestyleExerciseTesting","vigilanceLifestyleExerciseComment","vigilanceLifestyleAllergiesMedication","vigilanceLifestyleAllergiesTesting","vigilanceLifestyleAllergiesComment","vigilanceLifestyleAsthmaMedication","vigilanceLifestyleAsthmaTesting","vigilanceLifestyleAsthmaComment","vigilanceScreeningBreastMedication","vigilanceScreeningBreastTesting","vigilanceScreeningBreastComment","vigilanceScreeningProstateMedication","vigilanceScreeningProstateTesting","vigilanceScreeningProstateComment","vigilanceScreeningCervixMedication","vigilanceScreeningCervixTesting","vigilanceScreeningCervixComment","vigilanceScreeningColonMedication","vigilanceScreeningColonTesting","vigilanceScreeningColonComment","vigilanceScreeningDentalMedication","vigilanceScreeningDentalTesting","vigilanceScreeningDentalComment","vigilanceVaccinesInfluenzaMedication","vigilanceVaccinesInfluenzaTesting","vigilanceVaccinesInfluenzaComment","vigilanceVaccinesVaricellaMedication","vigilanceVaccinesVaricellaTesting","vigilanceVaccinesVaricellaComment","vigilanceVaccinesHpvMedication","vigilanceVaccinesHpvTesting","vigilanceVaccinesHpvComment","vigilanceVaccinesMmrMedication","vigilanceVaccinesMmrTesting","vigilanceVaccinesMmrComment","vigilanceVaccinesTetanusMedication","vigilanceVaccinesTetanusTesting","vigilanceVaccinesTetanusComment","vigilanceVaccinesPneumovaxMedication","vigilanceVaccinesPneumovaxTesting","vigilanceVaccinesPneumovaxComment","vigilanceVaccinesOtherName","vigilanceVaccinesOtherMedication","vigilanceVaccinesOtherTesting","vigilanceVaccinesOtherComment","addVisitVigilance","deleteVigilance","deleteVisitVigilance","addVisitConsultant","deleteVisitConsultant","complaintTitle","complaintDescription","complaintAnamnesis","complaintAttachment","surveyTitle","surveyDescription","surveyAttachment","systematicInquiryTitle","systematicInquiryDescription","systematicInquiryAttachment","examinationGeneral","examinationArea","examinationType","examinationMeasure","examinationValue","examinationDescription","examinationFollowUp","examinationAttachment","investigationTitle","investigationType","investigationDescription","investigationAttachment","diagnosisTitle","diagnosisType","diagnosisDescription","diagnosisAttachment","treatmentType","treatmentTitle","treatmentDescription","treatmentDose","treatmentFrequency","treatmentAttachment","billingAmount","billingPaid","billingTitle","billingType","billingDescription","billingNotes","billingAttachment","addVisitComplaintAttachment","addVisitSurveyAttachment","addVisitSysInquiryAttachment","addVisitExaminationAttachment","addVisitInvestigationAttachment","addVisitDiagnosisAttachment","addVisitTreatmentAttachment","addVisitBillingAttachment","deleteVisitComplaintAttachment","deleteVisitSurveyAttachment","deleteVisitSysInquiryAttachment","deleteVisitExaminationAttachment","deleteVisitInvestigationAttachment","deleteVisitDiagnosisAttachment","deleteVisitTreatmentAttachment","deleteVisitBillingAttachment","updateVisitSingleField","completeVisit","completeVisitById","propsVisit","VisitSearchForm","VisitPage","searchVisits","creatingVisit","newVisit","getVisitsByFieldRegex","getVisitsByField","onStartCreateNewVisit","cancelCreateNewVisit","submitCreateNewVisitForm","tooEarly","tooLate","createVisit","getAllVisits","selectVisit","deleteVisit","goLinkVisit","intitialView","App","sessionStorageAuth","sessionCookiePresent","passwordResetState","passwordResetMessage","logout2","emit","msg","notificationId","room","passwordReset","params","formGridParams","formGridPassword","cancelPasswordReset","on","adminMessage","sendNotification","msgObject","conversationId","receiver","undefined","addMessage","clear","sender","Provider","from","exact","render","Home","Staff","Appointment","Visit","Landing","Login","Signup","PasswordReset","resetState","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.b33c00c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/letterhead.f5e81252.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.8631702d.gif\";","import React, {useState} from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faMinusSquare,\n  faPlusSquare\n} from '@fortawesome/free-solid-svg-icons';\n\nimport './alertBox.css'\n\nconst AlertBox = (props) => {\n  let alert = \"Alerts shown here\";\n\n  if (props.alert !== null) {\n    alert = '\"'+props.alert+'\"';\n  }\n  const [state, setState] = useState('alertBoxOpen');\n  const handleStateChange = () => {\n    console.log('foooo');\n    if (state === 'alertBoxClosed') {\n      setState('alertBoxOpen');\n    }\n    if (state === 'alertBoxOpen') {\n      setState('alertBoxClosed');\n    }\n   }\n\nreturn (\n  <div className={state}>\n  {state === 'alertBoxOpen' ? (\n    <FontAwesomeIcon icon={faMinusSquare} className=\"listIcon\" onClick={handleStateChange}/>\n  ):(\n    <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={handleStateChange}/>\n  )}\n\n  <Alert variant=\"warning\">\n  <p className=\"alertBoxText\">{alert}</p>\n  </Alert>\n  </div>\n)\n\n}\n\nexport default AlertBox;\n","import React from 'react';\n\nexport default React.createContext({\n    token: null,\n    activityId: null,\n    activityA: null,\n    activityUser: null,\n    role: null,\n    userId: null,\n    user: {},\n    users:[],\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    selectedVisit: null,\n    userAlert: \"...\",\n    file: null,\n    fancyDate: null,\n    login: (token, activityId, role, tokenExpiration) => {},\n    logout: () => {},\n    setUserAlert: (args) => {},\n    userOnline: () => {},\n});\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n// import Button from 'react-bootstrap/Button';\n\nimport AuthContext from '../../context/auth-context';\nimport './MainNavigation.css';\n\n\nconst mainNavigation = props => (\n  <AuthContext.Consumer>\n    {context => {\n      return (\n        <header className=\"main-navigation\">\n          <div className=\"main-navigation__logo\">\n            <h1>MBJ ENT EMR V2.0.1</h1>\n          </div>\n          <nav className=\"main-navigation__items\">\n            <ul>\n              {!context.token && (\n                <React.Fragment>\n                <li>\n                  <NavLink to=\"/landing\">Landing</NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/login\">Login</NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/signup\">Signup</NavLink>\n                </li>\n                </React.Fragment>\n              )}\n              {context.token && (\n                <React.Fragment>\n                  <li>\n                    <NavLink to=\"/home\">Home</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/profile\">Profile</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/staff\">Staff</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/patients\">Patients</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/appointments\">Appointments</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/visits\">Visits</NavLink>\n                  </li>\n                  <li>\n                    <button onClick={context.logout}>Logout</button>\n                  </li>\n                </React.Fragment>\n              )}\n              {\n                // !context.token && (\n                //   <React.Fragment>\n                //     <li>\n                //       <NavLink to=\"/landing\">.</NavLink>\n                //     </li>\n                //   </React.Fragment>\n                // )\n              }\n            </ul>\n          </nav>\n        </header>\n      );\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default mainNavigation;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport loadingGif from '../../assets/loading.gif';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport \"./loadingOverlay.css\"\n\nconst LoadingOverlay = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"loadingOverlay\">\n    <Row className=\"overlayCloseRow\">\n    {props.toggleOverlay &&\n      props.status.type !== 's3' && (\n      <Button className=\"sidebarButton\" variant=\"warning\" onClick={props.toggleOverlay}>X</Button>\n    )}\n    </Row>\n\n    {props.status && (\n      <h5 className=\"attachmentViewerTitle\">... {props.status.type} ...</h5>\n    )}\n\n\n      <Container className=\"overlayContainer\">\n        {props.status.type === 'calendarAppointment' && (\n          <React.Fragment>\n            <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              {props.selectCalendarDetails && (\n                <Row className=\"overlayRow\">\n                  <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon centered_btn\"  onClick={props.selectCalendarDetails.bind(this, props.status.data)}/>\n                </Row>\n              )}\n              {props.status.goLink && (\n                <Row className=\"overlayRow\">\n                <Link className=\"centered_btn\"\n                  to={{\n                    pathname: \"/appointments\",\n                    state: {appointment: props.status.data._id}\n                  }}\n                >\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon centered_btn\"/>\n                </Link>\n                </Row>\n              )}\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p className=\"overlayListGroupItemText\">Date: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              <p className=\"overlayListGroupItemText\">Time: <span className=\"bold\">{props.status.data.time}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p className=\"overlayListGroupItemText\">Title: <span className=\"bold\">{props.status.data.title}</span></p>\n              <p className=\"overlayListGroupItemText\">type: <span className=\"bold\">{props.status.data.type}</span></p>\n              <p className=\"overlayListGroupItemText\">subType: <span className=\"bold\">{props.status.data.subType}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p className=\"overlayListGroupItemText\">Location: <span className=\"bold\">{props.status.data.location}</span></p>\n              <p className=\"overlayListGroupItemText\">important: <span className=\"bold\">{props.status.data.important === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p className=\"overlayListGroupItemText\">description: <span className=\"bold\">{props.status.data.description}</span></p>\n              </ListGroup.Item>\n            </ListGroup>\n\n            </Row>\n\n          </React.Fragment>\n        )}\n\n        {props.status.type === 'calendarVisit' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n          <ListGroup className=\"overlayListGroup\">\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            {props.selectCalendarDetails && (\n              <Row className=\"overlayRow\">\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon centered_btn\" onClick={props.selectCalendarDetails.bind(this, props.status.data)}/>\n              </Row>\n            )}\n            {props.status.goLink && (\n              <Row className=\"overlayRow\">\n              <Link className=\"centered_btn\"\n                to={{\n                  pathname: \"/visits\",\n                  state: {visit: props.status.data._id}\n                }}\n              >\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n              </Link>\n              </Row>\n            )}\n            </ListGroup.Item>\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            <p className=\"overlayListGroupItemText\">Date: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n            <p className=\"overlayListGroupItemText\">Time: <span className=\"bold\">{props.status.data.time}</span></p>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            <p className=\"overlayListGroupItemText\">Title: <span className=\"bold\">{props.status.data.title}</span></p>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            <p className=\"overlayListGroupItemText\">type: <span className=\"bold\">{props.status.data.type}</span></p>\n            <p className=\"overlayListGroupItemText\">subType: <span className=\"bold\">{props.status.data.subType}</span></p>\n            </ListGroup.Item>\n          </ListGroup>\n          </Row>\n\n          </React.Fragment>\n        )}\n\n        {props.status.type === 'calendarAttendance' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Date: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Status: <span className=\"bold\">{props.status.data.status}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Description: <span className=\"bold\">{props.status.data.description}</span></p>\n              </ListGroup.Item>\n            </ListGroup>\n          </Row>\n          </React.Fragment>\n        )}\n        {props.status.type === 'calendarLeave' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Type: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>startDate: <span className=\"bold\">{moment.unix(props.status.data.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>endDate: <span className=\"bold\">{moment.unix(props.status.data.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Description: <span className=\"bold\">{props.status.data.description}</span></p>\n              </ListGroup.Item>\n            </ListGroup>\n          </Row>\n          </React.Fragment>\n        )}\n        {props.status.type === 's3' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n                <Image src={loadingGif} className=\"loadingGif\" fluid />\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n                <p>{props.status.data.action} -ing {props.status.data.target}...</p>\n              </ListGroup.Item>\n            </ListGroup>\n          </Row>\n          <Row className=\"overlayRow\">\n\n          </Row>\n          </React.Fragment>\n        )}\n\n\n      </Container>\n\n    </div>\n  </div>\n)\n\n}\n\nexport default LoadingOverlay;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { NavLink } from 'react-router-dom';\nimport io from 'socket.io-client';\n\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport './landing.css';\n\nclass LandingPage extends Component {\n  state = {\n    role: null,\n    userAlert: \"landing page\",\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n  };\n\n  // constructor(props) {\n  //   super(props);\n  //   this.socket = io('http://localhost:9099');\n  // }\n\ncomponentDidMount () {\n  // this.socket.on('toast', function(data) {\n  //   console.log(\"admin msg...\",data);\n  // });\n}\n\n  render() {\n\n    return (\n      <React.Fragment>\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n      <Container className=\"landingPageContainer\">\n\n      <Row className=\"landingPageRow\">\n      <Col className=\"landingPageCol\">\n        <h1> Welcome to MBJ ENT EMR</h1>\n      </Col>\n      </Row>\n\n\n          {\n            // this.state.isGuest === true && (\n            //   <NavLink to=\"/login\">Login</NavLink>\n            // )\n          }\n          {\n            // this.state.isGuest === true && (\n            //   <NavLink to=\"/signup\">Signup</NavLink>\n            // )\n          }\n\n      </Container>\n\n      </React.Fragment>\n    );\n\n  }\n\n\n}\n\nexport default LandingPage;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './PatientItem.css';\n\nconst PatientItem = (props) => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.count} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Username: <span className=\"bold\">{props.patient.username}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            role: <span className=\"bold\">{props.patient.role}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n\n          {props.appointmentPage !== true &&\n            props.showDetails && (\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.patient)}/>\n          )}\n\n          {props.homePage && (\n            <Link\n              to={{\n                pathname: \"/patients\",\n                state: {patient: props.patient._id}\n              }}\n            >\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </Link>\n          )}\n\n          {props.appointmentPage === true && (\n            <FontAwesomeIcon icon={faUserPlus} className=\"listIcon\" onClick={props.onSelect.bind(this, props.patient)}/>\n          )}\n\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.patient._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                name: <span className=\"bold\">{props.patient.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                username: <span className=\"bold\">{props.patient.username}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                title: <span className=\"bold\">{props.patient.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                role: <span className=\"bold\">{props.patient.role}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                dob: <span className=\"bold\">{moment.unix(props.patient.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                age: <span className=\"bold\">{props.patient.age}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                gender: <span className=\"bold\">{props.patient.gender}</span>\n              </Card.Text>\n              </li>\n\n\n            </ul>\n            </Row>\n          )}\n          {deleteState === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.patient)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default PatientItem;\n","import React from 'react';\n\nimport PatientItem from '../../items/patient/PatientItem';\nimport './UserList.css';\n\nconst PatientList = props => {\n\n  const {...filter} = props.filter;\n  let patients2 = props.patients;\n  let propsPatients = [];\n\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'registration.date' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.registration.date > b.registration.date) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'registration.date' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.registration.date < b.registration.date) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'loggedIn') {\n    propsPatients = patients2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field === 'patient' && filter.key === 'active') {\n    propsPatients = patients2.filter(x => x.active === filter.value);\n  }\n\n  if (filter.field !== 'patient') {\n    propsPatients = patients2;\n  }\n\n  let count = 0;\n\n  const patients = propsPatients.map(patient => {\n\n    count = propsPatients.indexOf(patient)+1;\n\n    return (\n      <PatientItem\n        key={count}\n        count={count}\n        patient={patient}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        appointmentPage={props.appointmentPage}\n        homePage={props.homePage}\n        onSelect={props.onSelect}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{patients}</ul>;\n};\n\nexport default PatientList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus,\n  faCalendarPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './AppointmentItem.css';\n\nconst AppointmentItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.appointment.title}</span>\n          </Card.Text>\n          {!props.homePage && (\n            <Card.Text className=\"cardText\">\n              Type: <span className=\"bold\">{props.appointment.type}</span>\n            </Card.Text>\n          )}\n          {!props.homePage && (\n            <Card.Text className=\"cardText\">\n              Date: <span className=\"bold\">{moment.unix(props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n            </Card.Text>\n          )}\n          {props.homePage && (\n            <Card.Text className=\"cardText\">\n              Patient: <span className=\"bold\">{props.appointment.patient._id}</span>\n            </Card.Text>\n          )}\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n\n          {props.visitPage !== true &&\n            props.showDetails && (\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.appointment)}/>\n          )}\n\n          {props.homePage && (\n            <Link\n              to={{\n                pathname: \"/appointments\",\n                state: {appointment: props.appointment._id}\n              }}\n            >\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </Link>\n          )}\n\n          {props.visitPage === true && (\n            <FontAwesomeIcon icon={faCalendarPlus} className=\"listIcon\" onClick={props.onSelect.bind(this, props.appointment)}/>\n          )}\n\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.appointment._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.appointment.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.appointment.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Date: <span className=\"bold\">{moment.unix(props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                time: <span className=\"bold\">{props.appointment.time}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Patient: <span className=\"bold\">{props.appointment.patient.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                checkinTime: <span className=\"bold\">{props.appointment.checkinTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                seenTime: <span className=\"bold\">{props.appointment.seenTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                location: <span className=\"bold\">{props.appointment.location}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                description: <span className=\"bold\">{props.appointment.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                inProgress: <span className=\"bold\">{props.appointment.inProgress.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                attended: <span className=\"bold\">{props.appointment.attended.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                important: <span className=\"bold\">{props.appointment.important.toString()}</span>\n              </Card.Text>\n              </li>\n\n\n            </ul>\n            </Row>\n          )}\n          {deleteState === true && (\n            <Row>\n              {props.canDelete && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.appointment)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AppointmentItem;\n","import React from 'react';\nimport AppointmentItem from '../../items/appointment/AppointmentItem';\nimport './AppointmentList.css'\n\nconst AppointmentList = props => {\n\n  const {...filter} = props.filter;\n  let appointments2 = props.appointments;\n  let propsAppointments = [];\n\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType > b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType < b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time > b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time < b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location > b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location < b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'important') {\n    propsAppointments = appointments2.filter(x => x.important === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'inProgress') {\n    propsAppointments = appointments2.filter(x => x.inProgress === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'attended') {\n    propsAppointments = appointments2.filter(x => x.attended === filter.value);\n  }\n\n  if (filter.field !== 'appointment') {\n    propsAppointments = appointments2;\n  }\n\n  let count = 0;\n\n  const appointments = propsAppointments.map(appointment=> {\n\n    count = propsAppointments.indexOf(appointment+1);\n\n    return (\n      <AppointmentItem\n        key={count}\n        appointment={appointment}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        visitPage={props.visitPage}\n        homePage={props.homePage}\n        onSelect={props.onSelect}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{appointments}</ul>;\n};\n\nexport default AppointmentList;\n","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus\n} from '@fortawesome/free-solid-svg-icons';\n\nimport './queueItem.css';\n\nconst QueueSlotItem = props => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Number: {props.queueSlot.number}\n          </Card.Text>\n\n          <Card.Text className=\"cardText\">\n            Patient: {props.queueSlot.patient.name}\n          </Card.Text>\n          <Link\n            to={{\n              pathname: \"/patients\",\n              state: {patient: props.queueSlot.patient._id}\n            }}\n          >\n          <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n          </Link>\n\n          <Card.Text className=\"cardText\">\n            Seen: {props.queueSlot.seen === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              {props.queueSlot.seen !== true && (\n                <Button variant=\"outline-success\" onClick={props.slotSeen.bind(this, props.queueSlot)}>Seen</Button>\n              )}\n              {props.queueSlot.seen === true && (\n                <Button variant=\"outline-success\" onClick={props.slotUnseen.bind(this, props.queueSlot)}>Un-See</Button>\n              )}\n              <li>\n\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Time: {props.queueSlot.time}\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Consultant: {props.queueSlot.consultant.username}\n              </Card.Text>\n              <Link\n                to={{\n                  pathname: \"/staff\",\n                  state: {user: props.queueSlot.consultant._id}\n                }}\n              >\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n              </Link>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Seen: {props.queueSlot.seen === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n              SeenTime:\n              </Card.Text>\n\n              {props.queueSlot.seenTime && (\n                <Card.Text className=\"cardText\">\n                {props.queueSlot.seenTime}\n                </Card.Text>\n              )}\n\n              </li>\n              <li>\n              <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n              </li>\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.queueSlot)}>Delete</Button>\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default QueueSlotItem;\n","import React from 'react';\n\nimport QueueSlotItem from '../../items/queue/QueueSlotItem';\nimport './queueSlotList.css';\n\nconst QueueSlotList = props => {\n\n  let count = 0;\n\n  const queueSlots = props.queueSlots.map(queueSlot => {\n    count = props.queueSlots.indexOf(queueSlot)+1;\n\n    return (\n      <QueueSlotItem\n        key={count}\n        queueSlot={queueSlot}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        slotSeen={props.slotSeen}\n        slotUnseen={props.slotUnseen}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{queueSlots}</ul>;\n};\n\nexport default QueueSlotList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport moment from 'moment';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport QueueSlotList from '../../lists/queue/QueueSlotList';\n\nimport './queueItem.css';\n\nconst QueueItem = props => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n\n  return (\n    <div className=\"itemDiv\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Date: {moment.unix(props.queue.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Creator: {props.queue.creator.username}\n          </Card.Text>\n\n          <QueueSlotList\n            queueSlots={props.queue.slots}\n            slotSeen={props.slotSeen}\n            slotUnseen={props.slotUnseen}\n            onDelete={props.onDelete}\n          />\n\n        </Card.Body>\n      </Card>\n    </div>\n  )\n};\n\nexport default QueueItem;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst PatientSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>active</option>\n        <option>name</option>\n        <option>username</option>\n        <option>title</option>\n        <option>role</option>\n        <option>dob</option>\n        <option>age</option>\n        <option>gender</option>\n        <option>registration.date</option>\n        <option>registration.number</option>\n        <option>contact.email</option>\n        <option>contact.phone</option>\n        <option>contact.phone2</option>\n        <option>addresses.number</option>\n        <option>addresses.street</option>\n        <option>addresses.town</option>\n        <option>addresses.city</option>\n        <option>addresses.parish</option>\n        <option>addresses.country</option>\n        <option>addresses.postalCode</option>\n        <option>addresses.primary</option>\n        <option>verification.verified</option>\n        <option>expiryDate</option>\n        <option>referral.date</option>\n        <option>referral.reason</option>\n        <option>referral.physician.name</option>\n        <option>referral.physician.email</option>\n        <option>referral.physician.phone</option>\n        <option>attendingPhysician</option>\n        <option>occupation.role</option>\n        <option>occupation.employer.name</option>\n        <option>occupation.employer.phone</option>\n        <option>occupation.employer.email</option>\n        <option>insurance.company</option>\n        <option>insurance.policyNumber</option>\n        <option>insurance.description</option>\n        <option>insurance.expiryDate</option>\n        <option>insurance.subscriber.company</option>\n        <option>insurance.subscriber.description</option>\n        <option>nextOfKin.name</option>\n        <option>nextOfKin.relation</option>\n        <option>nextOfKin.contact.email</option>\n        <option>nextOfKin.contact.phone</option>\n        <option>nextOfKin.contact.phone2</option>\n        <option>allergies.type</option>\n        <option>allergies.title</option>\n        <option>allergies.description</option>\n        <option>allergies.attachments</option>\n        <option>medication.title</option>\n        <option>medication.type</option>\n        <option>medication.description</option>\n        <option>medication.attachments</option>\n        <option>images.name</option>\n        <option>images.type</option>\n        <option>images.path</option>\n        <option>files.name</option>\n        <option>files.type</option>\n        <option>files.path</option>\n        <option>notes</option>\n        <option>tags</option>\n        <option>loggedIn</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default PatientSearchForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst UserSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>title</option>\n          <option>name</option>\n          <option>username</option>\n          <option>registrationNumber</option>\n          <option>dob</option>\n          <option>age</option>\n          <option>gender</option>\n          <option>contact.email</option>\n          <option>contact.phone</option>\n          <option>contact.phone2</option>\n          <option>addresses.number</option>\n          <option>addresses.street</option>\n          <option>addresses.town</option>\n          <option>addresses.city</option>\n          <option>addresses.parish</option>\n          <option>addresses.country</option>\n          <option>addresses.postalCode</option>\n          <option>addresses.primary</option>\n          <option>loggedIn</option>\n          <option>clientConnected</option>\n          <option>verification.verified</option>\n          <option>attendance.date</option>\n          <option>attendance.status</option>\n          <option>attendance.description</option>\n          <option>leave.type</option>\n          <option>leave.startDate</option>\n          <option>leave.endDate</option>\n          <option>leave.description</option>\n          <option>images.name</option>\n          <option>images.type</option>\n          <option>images.path</option>\n          <option>files.name</option>\n          <option>files.type</option>\n          <option>files.path</option>\n          <option>notes</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default UserSearchForm;\n","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus,\n  faCalendarPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst UserItem = (props) => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n  const [deleteState, setDeleteState] = useState(false);\n  const handleDeleteStateChange = () => {\n    if (deleteState === true) {\n      setDeleteState(false);\n    }\n    if (deleteState === false) {\n      setDeleteState(true);\n    }\n   }\n\n  return (\n    <li key={props.key} className=\"userItemLi\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Username: <span className=\"bold\">{props.user.username}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            role: <span className=\"bold\">{props.user.role}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n\n          {!props.appointmentPage &&\n            !props.visitPage &&\n            props.showDetails && (\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.user)}/>\n          )}\n\n          {props.appointmentPage && (\n            <Link\n              to={{\n                pathname: \"/staff\",\n                state: {user: props.user._id}\n              }}\n            >\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </Link>\n          )}\n\n          {props.visitPage && (\n            <Link\n              to={{\n                pathname: \"/staff\",\n                state: {user: props.user._id}\n              }}\n            >\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </Link>\n          )}\n\n          {props.selectUser && (\n            <FontAwesomeIcon icon={faUserPlus} className=\"listIcon\" onClick={props.selectUser.bind(this, props.user)}/>\n          )}\n\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.user._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                name: <span className=\"bold\">{props.user.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                username: <span className=\"bold\">{props.user.username}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                title: <span className=\"bold\">{props.user.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                role: <span className=\"bold\">{props.user.role}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                dob: <span className=\"bold\">{moment.unix(props.user.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                age: <span className=\"bold\">{props.user.age}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                gender: <span className=\"bold\">{props.user.gender}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                loggedIn: <span className=\"bold\">{props.user.loggedIn === true && (<FontAwesomeIcon icon={faBatteryThreeQuarters} className=\"listIcon\"/>)} {props.user.loggedIn === false && (<FontAwesomeIcon icon={faBatteryEmpty} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n\n            </ul>\n            </Row>\n          )}\n\n          {deleteState === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.user)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from '../../items/user/UserItem';\nimport './UserList.css';\n\nconst UserList = props => {\n\n  const {...filter} = props.filter;\n  let users2 = props.users;\n  let propsUsers = [];\n\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'loggedIn') {\n    propsUsers = users2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field !== 'staff') {\n    propsUsers = users2;\n  }\n\n  let count = 0;\n\n  const users = propsUsers.map(user => {\n\n    count = propsUsers.indexOf(user)+1;\n\n    return (\n      <UserItem\n        key={count}\n        user={user}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        appointmentPage={props.appointmentPage}\n        homePage={props.homePage}\n        visitPage={props.visitPage}\n        selectUser={props.selectUser}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{users}</ul>;\n};\n\nexport default UserList;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { NavLink } from 'react-router-dom';\nimport Image from 'react-bootstrap/Image';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport PatientList from '../../components/lists/patient/PatientList';\nimport AppointmentList from '../../components/lists/appointment/AppointmentList';\nimport QueueItem from '../../components/items/queue/QueueItem';\nimport PatientSearchForm from '../../components/forms/search/PatientSearchForm';\nimport UserSearchForm from '../../components/forms/search/UserSearchForm';\nimport UserList from '../../components/lists/user/UserList';\nimport loadingGif from '../../assets/loading.gif';\nimport './landing.css';\n\nclass HomePage extends Component {\n  state = {\n    role: null,\n    userAlert: \"landing\",\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    isLoading: false,\n    seshStore: null,\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    todayAppointments: null,\n    queue: null,\n    weekImportantAppointments: null,\n    recentPatients: null,\n    queueToday: null,\n    addingQueueSlot: false,\n    queueSlotAddStage: null,\n    users: null,\n    patients: null,\n    selectedUser: null,\n    selectedPatient: null,\n    sublistPatientSearch: false,\n    sublistUserSearch: false,\n  };\n  static contextType = AuthContext;\n\n\ncomponentDidMount () {\n  console.log('...home component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n\n    this.getAppointmentsToday(seshStore);\n    this.getAppointmentsImportantWeek(seshStore);\n    this.getRecentPatients(seshStore);\n    this.getQueueToday(seshStore);\n    this.getAllPatients(seshStore);\n    this.getAllUsers(seshStore);\n\n  }\n}\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      console.log('...all users retrieval success!...');\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nloadHome = () => {\n  const args = {\n    token: this.context.token,\n    activityId: this.context.activityId\n  }\n\n  this.getAppointmentsToday(args);\n  this.getAppointmentsImportantWeek(args);\n  this.getRecentPatients(args);\n  this.getQueueToday(args);\n  this.getAllPatients(args);\n  this.getAllUsers(args);\n\n}\n\ngetAppointmentsToday = (args) => {\n  console.log('...retrieving todays appointments...');\n  this.context.setUserAlert('...retrieving todays appointments...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAppointmentsToday(\n        activityId:\"${activityId}\")\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAppointmentsToday);\n      console.log('...get todays appointments success!...');\n      let responseAlert = '...get todays appointments success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        todayAppointments: resData.data.getAppointmentsToday,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\ngetAppointmentsImportantWeek = (args) => {\n  console.log('...retrieving important appointments for week...');\n  this.context.setUserAlert('...retrieving important appointments for week...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAppointmentsImportantNextWeek(\n        activityId:\"${activityId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAppointmentsImportantNextWeek);\n      console.log('...get week important appointments success!...');\n      let responseAlert = '...get week important appointments success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        weekImportantAppointments: resData.data.getAppointmentsImportantNextWeek,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\ngetRecentPatients = (args) => {\n  console.log('...retrieving recent patients...');\n  this.context.setUserAlert('...retrieving recent patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getRecentPatients(\n        activityId:\"${activityId}\",\n        amount:7\n      )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getRecentPatients);\n      console.log('...retrieve recent patients success!...');\n      let responseAlert = '...retrieve recent patients success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        recentPatients: resData.data.getRecentPatients,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\ngetQueueToday = (args) => {\n  console.log('...retrieving todays queue...');\n  this.context.setUserAlert('...retrieving todays queue...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getQueueToday(\n        activityId:\"${activityId}\"\n      )\n      {_id,date,currentSlot,slots{number,time,patient{_id,username,name},consultant{_id,username,role},seen,seenTime},creator{_id,username,role}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getQueueToday);\n      console.log('...retrieve recent patients success!...');\n      let responseAlert = '...retrieve recent patients success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        queueToday: resData.data.getQueueToday,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nstartAddQueueSlot = () => {\n  this.setState({\n    addingQueueSlot: true,\n    queueSlotAddStage: 1\n  })\n}\ncancelAddQueueSlot = () => {\n  this.setState({\n    addingQueueSlot: false,\n    queueSlotAddStage: null\n  })\n}\ncreateQueue = () => {\n  console.log('...creating new queue...');\n  this.context.setUserAlert('...creating new queue...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n\n  let requestBody = {\n    query: `\n      mutation {createQueue(\n        activityId:\"${activityId}\"\n      )\n        {_id,date,currentSlot,slots{number,time,patient{_id,username},consultant{_id,username,role},seen,seenTime},creator{_id,username,role}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getRecentPatients);\n      console.log('...create queue success!...');\n      let responseAlert = '...create queue success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        queueToday: resData.data.createQueue,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nsubmitQueueSlotAddPatient = (args) => {\n  const queuePatients = this.state.queueToday.slots.map(x=> x.patient._id)\n  const existingPatient = queuePatients.includes(args._id);\n  console.log('1:',args);\n  console.log('2:',queuePatients);\n  console.log('3:',existingPatient);\n  if (existingPatient === true ) {\n    console.log('...this patient is already in the queue!...');\n    this.context.setUserAlert('...this patient is already in the queue!...')\n  } else {\n    this.setState({\n      selectPatient: args,\n      queueSlotAddStage: 2\n    })\n  }\n\n}\nsubmitQueueSlotAddConsultant = (args) => {\n  console.log('...creating new queue...');\n  this.context.setUserAlert('...creating new queue...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const queueId = this.state.queueToday._id;\n  const patientId = this.state.selectPatient._id;\n  const consultantId = args._id;\n\n  if (args.role !== 'Nurse' && args.role !== 'Doctor') {\n    console.log('...please choose a nurse or doctor...');\n    this.context.setUserAlert('...please choose a nurse or doctor...')\n    this.setState({isLoading: false})\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addQueueSlot(\n        activityId:\"${activityId}\",\n        queueId:\"${queueId}\",\n        patientId:\"${patientId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,date,slots{number,time,patient{_id,username,name,lastName},consultant{_id,username,role},seen,seenTime},creator{_id,username,role}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      console.log('...add queue slot success!...');\n      let responseAlert = '...add queue slot success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        queueToday: resData.data.addQueueSlot,\n        addingQueueSlot: false,\n        queueSlotAddStage: null,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\nqueueSlotSeen = (args) => {\n  console.log('...updating queue slot...');\n  this.context.setUserAlert('...updating queue slot...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const queueId = this.state.queueToday._id;\n  const slotNumber = args.number;\n\n  let requestBody = {\n    query: `\n      mutation {queueSlotSeen(\n        activityId:\"${activityId}\",\n        queueId:\"${queueId}\",\n        queueInput:{\n          slotNumber:${slotNumber}\n        })\n        {_id,date,slots{number,time,patient{_id,username,name,lastName},consultant{_id,username,role},seen,seenTime},creator{_id,username,role}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.queueSlotSeen);\n      console.log('...update queue slot seen success!...');\n      let responseAlert = '...update queue slot seen success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        queueToday: resData.data.queueSlotSeen,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\nqueueSlotUnseen = (args) => {\n  console.log('...updating queue slot...');\n  this.context.setUserAlert('...updating queue slot...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const queueId = this.state.queueToday._id;\n  const slotNumber = args.number;\n\n  let requestBody = {\n    query: `\n      mutation {queueSlotUnseen(\n        activityId:\"${activityId}\",\n        queueId:\"${queueId}\",\n        queueInput:{\n          slotNumber:${slotNumber}\n        })\n        {_id,date,slots{number,time,patient{_id,username,name,lastName},consultant{_id,username,role},seen,seenTime},creator{_id,username,role}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.queueSlotUnseen);\n      console.log('...update queue slot unseen success!...');\n      let responseAlert = '...update queue slot unseen success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        queueToday: resData.data.queueSlotUnseen,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ndeleteQueSlot = (args) => {\n  console.log('...deleting queue slot...');\n  this.context.setUserAlert('...deleting queue slot...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const queueId = this.state.queueToday._id;\n  const slotNumber = args.number;\n\n  let requestBody = {\n    query: `\n      mutation {deleteQueueSlot(\n        activityId:\"${activityId}\",\n        queueId:\"${queueId}\",\n        queueInput:{\n          slotNumber:${slotNumber}\n        })\n        {_id,date,slots{number,time,patient{_id,username,name,lastName},consultant{_id,username,role},seen,seenTime},creator{_id,username,role}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteQueueSlot);\n      console.log('...delete queue slot success!...');\n      let responseAlert = '...delete queue slot success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        queueToday: resData.data.deleteQueueSlot,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nstartPatientSearch = () => {\n  this.setState({sublistPatientSearch: true})\n}\ncancelSublistPatientSearch = () => {\n  this.setState({\n    sublistPatientSearch: false\n  })\n  this.getAllPatients({\n    activityId: this.context.activityId,\n    token: this.context.token\n   })\n}\nsubmitSublistPatientSearchForm = (event) => {\n  event.preventDefault();\n  console.log('...searching patients...');\n  this.context.setUserAlert('...searching patients...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'active' ||\n      field === 'age' ||\n      field === 'dob' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'registration.date' ||\n      field === 'expiryDate' ||\n      field === 'referral.date' ||\n      field === 'insurance.expiryDate' ||\n      field === 'insurance.expiryDate'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getPatientsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getPatientsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getPatientsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getPatientsByField);\n      }\n\n      let responseAlert = '...patient search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          patients: resData.data.getPatientsByFieldRegex,\n          activityA: `getPatientsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          patients: resData.data.getPatientsByField,\n          activityA: `getPatientsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nstartUserSearch = () => {\n  this.setState({sublistUserSearch: true})\n}\ncancelSublistUserSearch = () => {\n  this.setState({\n    sublistUserSearch: false\n  })\n  this.getAllUsers({\n    activityId: this.context.activityId,\n    token: this.context.token\n   })\n}\nsubmitSublistUserSearchForm = (event) => {\n  event.preventDefault();\n  console.log('...searching users...');\n  this.context.setUserAlert('...searching users...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'age' ||\n      field === 'dob' ||\n      field === 'employmentDate' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'attendance.date' ||\n      field === 'leave.startDate' ||\n      field === 'leave.endDate'\n    ) {\n      regex = false;\n  }\n  console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getUsersByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getUsersByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getUsersByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getUsersByField);\n      }\n\n      let responseAlert = '...staff search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          users: resData.data.getUsersByFieldRegex,\n          activityA: `getUsersByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n        this.context.activityUser = resData.data.getUsersByFieldRegex;\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          users: resData.data.getUsersByField,\n          activityA: `getUsersByField?activityId:${activityId},userId:${userId}`\n        });\n        this.context.activityUser = resData.data.getUsersByField;\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nselectPatient = (args) => {\n  console.log('...selecting...');\n  this.setState({\n    selectedPatient: args\n  })\n}\nselectUser = (args) => {\n  console.log('...selecting...');\n  this.setState({\n    selectedUser: args\n  })\n}\n\n\n\n  render() {\n\n    return (\n      <React.Fragment>\n\n      {\n        this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n          toggleOverlay={this.toggleOverlay}\n        />\n      )\n    }\n      <Container className=\"landingPageContainer\">\n\n      <Row className=\"landingPageTopRow\">\n\n        <Button variant=\"secondary\" size=\"md\" onClick={this.loadHome}>Refresh</Button>\n        {this.state.isLoading ? (\n          <Image src={loadingGif} className=\"loadingGif\" fluid />\n        ):(\n          <p>.</p>\n        )}\n\n      </Row>\n\n      <Row className=\"landingPageRow\">\n      <Col md={6} className=\"landingPageCol\">\n        <h3>Todays appts</h3>\n        {this.state.todayAppointments && (\n          <AppointmentList\n            filter={this.state.filter}\n            appointments={this.state.todayAppointments}\n            authId={this.context.activityId}\n            homePage={true}\n          />\n        )}\n      </Col>\n      <Col md={6} className=\"landingPageCol\">\n        <h3>Queue</h3>\n        {!this.state.queueToday && (\n          <React.Fragment>\n            <Button variant=\"primary\" onClick={this.createQueue}>New</Button>\n          </React.Fragment>\n        )}\n        {this.state.queueToday && (\n          <React.Fragment>\n          {this.state.addingQueueSlot !== true && (\n            <FontAwesomeIcon icon={faUserPlus} className=\"listIcon\" onClick={this.startAddQueueSlot}/>\n          )}\n          {this.state.addingQueueSlot === true && (\n            <Button variant=\"danger\" onClick={this.cancelAddQueueSlot}>Cancel</Button>\n          )}\n\n          {\n            this.state.addingQueueSlot === true &&\n            this.state.queueSlotAddStage === 1 && (\n              <React.Fragment>\n              <p>Adding Queue Slot: Patient</p>\n              <Button variant=\"primary\" onClick={this.startPatientSearch}>Search</Button>\n              <Row className=\"patientSubListRow\">\n              {this.state.sublistPatientSearch === true && (\n                <PatientSearchForm\n                  onCancel={this.cancelSublistPatientSearch}\n                  onConfirm={this.submitSublistPatientSearchForm}\n                />\n              )}\n              </Row>\n              <Row className=\"patientSubListRow\">\n              <PatientList\n                filter={this.state.filter}\n                patients={this.state.patients}\n                authId={this.context.activityId}\n                onSelect={this.submitQueueSlotAddPatient}\n                appointmentPage={true}\n              />\n              </Row>\n              </React.Fragment>\n          )\n        }\n        {\n          this.state.addingQueueSlot === true &&\n          this.state.queueSlotAddStage === 2 && (\n            <React.Fragment>\n            <p>Adding Queue Slot: Consultant</p>\n            <Button variant=\"primary\" onClick={this.startUserSearch}>Search</Button>\n            <Row className=\"patientSubListRow\">\n            {this.state.sublistUserSearch === true && (\n              <UserSearchForm\n                onCancel={this.cancelSublistUserSearch}\n                onConfirm={this.submitSublistUserSearchForm}\n              />\n            )}\n            </Row>\n            <Row className=\"patientSubListRow\">\n            <UserList\n              filter={this.state.filter}\n              users={this.state.users}\n              authId={this.context.activityId}\n              selectUser={this.submitQueueSlotAddConsultant}\n              homePage={true}\n            />\n            </Row>\n            </React.Fragment>\n        )\n      }\n\n          <QueueItem\n            queue={this.state.queueToday}\n            slotSeen={this.queueSlotSeen}\n            slotUnseen={this.queueSlotUnseen}\n            onDelete={this.deleteQueSlot}\n          />\n          </React.Fragment>\n        )}\n      </Col>\n      </Row>\n\n      <Row className=\"landingPageRow\">\n      <Col md={5}className=\"landingPageCol\">\n        <h3>Weeks important</h3>\n        {this.state.weekImportantAppointments && (\n          <AppointmentList\n            filter={this.state.filter}\n            appointments={this.state.weekImportantAppointments}\n            authId={this.context.activityId}\n            homePage={true}\n          />\n        )}\n      </Col>\n      <Col md={4}className=\"landingPageCol\">\n        <h3>Recent patients</h3>\n        {this.state.recentPatients && (\n          <PatientList\n            filter={this.state.filter}\n            patients={this.state.recentPatients}\n            authId={this.context.activityId}\n            homePage={true}\n          />\n        )}\n      </Col>\n      <Col md={3}className=\"landingPageCol\">\n        <h3>more stats</h3>\n      </Col>\n      </Row>\n\n      </Container>\n\n      </React.Fragment>\n    );\n\n  }\n\n\n}\n\nexport default HomePage;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './UserItem.css';\n\nconst AddressItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Town: <span className=\"bold\">{props.address.town}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Country: <span className=\"bold\">{props.address.country}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                No: <span className=\"bold\">{props.address.number}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Street: <span className=\"bold\">{props.address.street}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Town: <span className=\"bold\">{props.address.town}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                City: <span className=\"bold\">{props.address.city}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Parish: <span className=\"bold\">{props.address.parish}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Country: <span className=\"bold\">{props.address.country}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Primary: <span className=\"bold\"> {props.address.primary === true && (<FontAwesomeIcon icon={faBatteryThreeQuarters} className=\"listIcon\"/>)} {props.address.primary === false && (<FontAwesomeIcon icon={faBatteryEmpty} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n              {props.makePrimary && (\n                <li>\n                <Button variant=\"outline-primary\" onClick={props.makePrimary.bind(this, props.address)}>Set Primary</Button>\n                </li>\n              )}\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.address)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AddressItem;\n","import React from 'react';\n\nimport AddressItem from '../../items/user/AddressItem';\nimport './UserList.css';\n\nconst UserAddressList = props => {\n\n  const {...filter} = props.filter;\n  let addresses2 = props.addresses;\n  let propsAddresses = [];\n\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number > b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number < b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street > b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street < b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town > b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town < b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city > b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city < b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish > b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish < b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country > b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country < b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode > b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode < b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'primary') {\n    propsAddresses = addresses2.filter(x => x.primary === filter.value);\n  }\n  if (filter.field !== 'address') {\n    propsAddresses = addresses2;\n  }\n\n  let count = 0;\n\n  const addresses = propsAddresses.map(address => {\n\n    count = propsAddresses.indexOf(address)+1;\n\n    return (\n      <AddressItem\n        key={count}\n        address={address}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        makePrimary={props.makePrimary}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{addresses}</ul>;\n};\n\nexport default UserAddressList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst AttendanceItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Date: <span className=\"bold\">{moment.unix(props.attendance.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Date: <span className=\"bold\">{moment.unix(props.attendance.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Status: <span className=\"bold\">{props.attendance.status}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.attendance.description}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.attendance)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default AttendanceItem;\n","import React from 'react';\n\nimport AttendanceItem from '../../items/user/AttendanceItem';\nimport './UserList.css';\n\nconst UserAttendanceList = props => {\n\n  const {...filter} = props.filter;\n  let attendance2 = props.attendance;\n  let propsAttendance = [];\n\n  if (filter.field === 'attendance' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsAttendance = attendance2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'attendance' && filter.key === 'status' && filter.value === 'Descending') {\n    propsAttendance = attendance2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'attendance' && filter.key === 'status' && filter.value === 'Ascending') {\n    propsAttendance = attendance2.sort((a, b) => (a.status > b.status) ? 1 : -1);\n  }\n  if (filter.field === 'attendance' && filter.key === 'status' && filter.value === 'Descending') {\n    propsAttendance = attendance2.sort((a, b) => (a.status < b.status) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'attendance') {\n    propsAttendance = attendance2;\n  }\n\n  let count = 0;\n\n  const attendance = propsAttendance.map(attendanceItem => {\n\n    count = propsAttendance.indexOf(attendanceItem)+1;\n\n    return (\n      <AttendanceItem\n        key={count}\n        attendance={attendanceItem}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"attendanceList\">{attendance}</ul>;\n};\n\nexport default UserAttendanceList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst LeaveItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Start: <span className=\"bold\">{moment.unix(props.leave.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.leave.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Start: <span className=\"bold\">{moment.unix(props.leave.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                End: <span className=\"bold\">{moment.unix(props.leave.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.leave.description}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.leave)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default LeaveItem;\n","import React from 'react';\n\nimport LeaveItem from '../../items/user/LeaveItem';\nimport './UserList.css';\n\nconst UserLeaveList = props => {\n\n  const {...filter} = props.filter;\n  let leave2 = props.leave;\n  let propsLeave = [];\n\n  if (filter.field === 'leave' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsLeave = leave2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'type' && filter.value === 'Descending') {\n    propsLeave = leave2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'startDate' && filter.value === 'Ascending') {\n    propsLeave = leave2.sort((a, b) => (a.startDate > b.startDate) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'startDate' && filter.value === 'Descending') {\n    propsLeave = leave2.sort((a, b) => (a.startDate < b.startDate) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'endDate' && filter.value === 'Ascending') {\n    propsLeave = leave2.sort((a, b) => (a.endDate > b.endDate) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'endDate' && filter.value === 'Descending') {\n    propsLeave = leave2.sort((a, b) => (a.endDate < b.endDate) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'leave') {\n    propsLeave = leave2;\n  }\n\n  let count = 0;\n\n  const leave = propsLeave.map(leaveItem => {\n\n    count = propsLeave.indexOf(leaveItem)+1;\n\n    return (\n      <LeaveItem\n        key={count}\n        leave={leaveItem}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"leaveList\">{leave}</ul>;\n};\n\nexport default UserLeaveList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './UserItem.css';\n\nconst ImageItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n          <a href={props.image.path} target=\"_blank\" rel=\"noopener noreferrer\">{props.image.name}</a>\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.image.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.image.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.image.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.image)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n\n};\n\nexport default ImageItem;\n","import React from 'react';\n\nimport ImageItem from '../../items/user/ImageItem';\nimport './UserList.css';\n\nconst UserImageList = props => {\n\n  const {...filter} = props.filter;\n  let images2 = props.images;\n  let propsImages = [];\n\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'image') {\n    propsImages = images2;\n  }\n\n  let count = 0;\n\n  const images = propsImages.map(image => {\n\n    count = propsImages.indexOf(image)+1;\n\n    return (\n      <ImageItem\n        key={count}\n        image={image}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"imageList\">{images}</ul>;\n};\n\nexport default UserImageList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst FileItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            <a href={props.file.path} target=\"_blank\" rel=\"noopener noreferrer\">{props.file.name}</a>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.file.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.file.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.file.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.file)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default FileItem;\n","import React from 'react';\n\nimport FileItem from '../../items/patient/FileItem';\nimport './UserList.css';\n\nconst PatientFileList = props => {\n\n  const {...filter} = props.filter;\n  let files2 = props.files;\n  let propsFiles = [];\n\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'file') {\n    propsFiles = files2;\n  }\n\n  let count = 0;\n\n  const files = propsFiles.map(file => {\n\n    count = propsFiles.indexOf(file)+1;\n\n    return (\n      <FileItem\n        key={count}\n        file={file}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{files}</ul>;\n};\n\nexport default PatientFileList;\n","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst AppointmentItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.appointment.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.appointment.type}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Date: <span className=\"bold\">{moment.unix(props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n\n          <Link\n            to={{\n              pathname: \"/appointments\",\n              state: {appointment: props.appointment._id}\n            }}\n          >\n          <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n          </Link>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.appointment._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                time: <span className=\"bold\">{props.appointment.time}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                checkinTime: <span className=\"bold\">{props.appointment.checkinTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                seenTime: <span className=\"bold\">{props.appointment.seenTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                location: <span className=\"bold\">{props.appointment.location}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                description: <span className=\"bold\">{props.appointment.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                inProgress: <span className=\"bold\">{props.appointment.inProgress.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                attended: <span className=\"bold\">{props.appointment.attended.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                important: <span className=\"bold\">{props.appointment.important.toString()}</span>\n              </Card.Text>\n              </li>\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AppointmentItem;\n","import React from 'react';\n\nimport AppointmentItem from '../../items/user/AppointmentItem';\nimport './UserList.css';\n\nconst UserAppointmentList = props => {\n\n  const {...filter} = props.filter;\n  let appointments2 = props.appointments;\n  let propsAppointments = [];\n\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType > b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType < b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time > b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time < b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location > b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location < b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'important') {\n    propsAppointments = appointments2.filter(x => x.important === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'inProgress') {\n    propsAppointments = appointments2.filter(x => x.inProgress === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'attended') {\n    propsAppointments = appointments2.filter(x => x.attended === filter.value);\n  }\n  if (filter.field !== 'appointment') {\n    propsAppointments = appointments2;\n  }\n\n  let count = 0;\n\n  const appointments = propsAppointments.map(appointment => {\n\n    count = propsAppointments.indexOf(appointment)+1;\n\n    return (\n      <AppointmentItem\n        key={count}\n        appointment={appointment}\n      />\n    );\n  });\n\n  return <ul className=\"appointmentList\">{appointments}</ul>;\n};\n\nexport default UserAppointmentList;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './UserItem.css';\n\nconst NoteItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Note: <span className=\"bold\">{props.note}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.note)}>Delete</Button>\n              )}\n            </Row>\n            )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\n\nimport NoteItem from '../../items/user/NoteItem';\nimport './UserList.css';\n\nconst UserNoteList = props => {\n\n  const {...filter} = props.filter;\n  let notes2 = props.notes;\n  let propsNotes = [];\n\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Ascending') {\n    propsNotes = notes2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Descending') {\n    propsNotes = notes2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'note') {\n    propsNotes = notes2;\n  }\n\n  let count = 0;\n\n  const notes = propsNotes.map(note => {\n\n    count = propsNotes.indexOf(note)+1;\n\n    return (\n      <NoteItem\n        key={count}\n        note={note}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{notes}</ul>;\n};\n\nexport default UserNoteList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAddressForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"address\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>number</option>\n          <option>street</option>\n          <option>town</option>\n          <option>city</option>\n          <option>parish</option>\n          <option>country</option>\n          <option>postalCode</option>\n          <option>primary</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAddressForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAddressForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"attendance\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>status</option>\n          <option>date</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAddressForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterLeaveForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"leave\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>type</option>\n          <option>startDate</option>\n          <option>endDate</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterLeaveForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterImageForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"image\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>type</option>\n          <option>link</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterImageForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterFileForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"file\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>type</option>\n          <option>link</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterFileForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAppointmentForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"appointment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>title</option>\n          <option>type</option>\n          <option>subType</option>\n          <option>date</option>\n          <option>time</option>\n          <option>location</option>\n          <option>important</option>\n          <option>inProgress</option>\n          <option>attended</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAppointmentForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterNoteForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"note\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>note</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterNoteForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst UpdateUserSingleFieldForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Update Single Field</h4>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control type=\"text\" value={props.field}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"new value... (Date format = YYYY-MM-DD!!)\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default UpdateUserSingleFieldForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './addForms.css';\n\nconst AddAddressForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Address</h4>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"number\">\n        <Form.Label className=\"formLabel\">Address Number</Form.Label>\n        <Form.Control type=\"number\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"street\">\n        <Form.Label className=\"formLabel\">Address Street</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row>\n\n      <Form.Group as={Col} controlId=\"town\">\n        <Form.Label className=\"formLabel\">Address Town</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"city\">\n        <Form.Label className=\"formLabel\">Address City</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"parish\">\n        <Form.Label className=\"formLabel\">Address Parish</Form.Label>\n        <Form.Control as=\"select\">\n          <option>none</option>\n          <option>Clarendon</option>\n          <option>Hanover</option>\n          <option>Kingston</option>\n          <option>Manchester</option>\n          <option>Portland</option>\n          <option>St. Andrew</option>\n          <option>St. Ann</option>\n          <option>St. Catherine</option>\n          <option>St. Elizabeth</option>\n          <option>St. James</option>\n          <option>St. Mary</option>\n          <option>St. Thomas</option>\n          <option>Trelawny</option>\n          <option>Westmoreland</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"country\">\n        <Form.Label className=\"formLabel\">Address Country</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"postalCode\">\n        <Form.Label className=\"formLabel\">Address PostalCode</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAddressForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddAttendanceForm = (props) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const handleChangeStartDate = startDate => {\n    setStartDate(startDate);\n    console.log(`startDate ${startDate}`);\n   }\n   const [endDate, setEndDate] = useState(new Date());\n   const handleChangeEndDate = endDate => {\n     setEndDate(endDate);\n     console.log(`endDate ${endDate}`);\n    }\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Attendance</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"date\">\n        <Form.Label className=\"formLabel\">Date</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"date\"/>\n      </Form.Group>\n      {\n        // <Form.Group as={Col} controlId=\"\">\n        //   <Form.Label>startDate</Form.Label>\n        //   <DatePicker className=\"\" id=\"startDate\"\n        //     selected={startDate}\n        //     onChange={handleChangeStartDate}\n        //   />\n        // </Form.Group>\n        // <Form.Group as={Col} controlId=\"\">\n        //   <Form.Label>startDate</Form.Label>\n        //   <DatePicker className=\"\" id=\"endDate\"\n        //     selected={endDate}\n        //     onChange={handleChangeEndDate}\n        //   />\n        // </Form.Group>\n      }\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"status\">\n        <Form.Label className=\"formLabel\">Status</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"status\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label className=\"formLabel\">Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAttendanceForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddLeaveForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Leave</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"startDate\">\n        <Form.Label className=\"formLabel\">Start Date</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"startDate\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"endDate\">\n        <Form.Label className=\"formLabel\">End Date</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"endDate\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label className=\"formLabel\">Type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label className=\"formLabel\">Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddLeaveForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddNoteForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Notes</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"notes\">\n        <Form.Label className=\"formLabel\">Notes</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"note,note,note,note\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddNoteForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddImageForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Image</h4>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label className=\"formLabel\">Image</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n  <Form.Row className=\"formBtnRow\">\n    <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n    <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddImageForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddFileForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add File</h4>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label className=\"formLabel\">File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddFileForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\nimport S3 from 'react-aws-s3';\nimport io from 'socket.io-client';\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport UserAddressList from '../../components/lists/user/UserAddressList'\nimport UserAttendanceList from '../../components/lists/user/UserAttendanceList'\nimport UserLeaveList from '../../components/lists/user/UserLeaveList'\nimport UserImageList from '../../components/lists/user/UserImageList'\nimport UserFileList from '../../components/lists/user/UserFileList'\nimport UserAppointmentList from '../../components/lists/user/UserAppointmentList'\nimport UserNoteList from '../../components/lists/user/UserNoteList'\n\nimport FilterAddressForm from '../../components/forms/filter/FilterAddressForm';\nimport FilterAttendanceForm from '../../components/forms/filter/FilterAttendanceForm';\nimport FilterLeaveForm from '../../components/forms/filter/FilterLeaveForm';\nimport FilterImageForm from '../../components/forms/filter/FilterImageForm';\nimport FilterFileForm from '../../components/forms/filter/FilterFileForm';\nimport FilterAppointmentForm from '../../components/forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../../components/forms/filter/FilterNoteForm';\n\nimport UpdateUserSingleFieldForm from '../../components/forms/add/UpdateUserSingleFieldForm';\nimport AddAddressForm from '../../components/forms/add/AddAddressForm';\nimport AddAttendanceForm from '../../components/forms/add/AddAttendanceForm';\nimport AddLeaveForm from '../../components/forms/add/AddLeaveForm';\nimport AddNoteForm from '../../components/forms/add/AddNoteForm';\nimport AddImageForm from '../../components/forms/add/AddImageForm';\nimport AddFileForm from '../../components/forms/add/AddFileForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './profile.css';\n\nclass MyProfilePage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    calendarAttendance: null,\n    calendarLeave: null,\n    calendarAppointments: null,\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.socket = io('http://localhost:9099');\n  }\n\ncomponentDidMount () {\n  console.log('...MyProfile component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getThisUser(seshStore);\n    this.getPocketVars(seshStore);\n\n  }\n}\ncomponentWillUnmount() {\n\n}\n\n\n\ngetPocketVars (args) {\n    console.log('...retriving pocketVars..');\n    this.context.setUserAlert('...retriving pocketVars..')\n    const token = args.token;\n    const activityId = args.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")}\n          `};\n          // fetch('http://localhost:8088/graphql', {\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        if (resData.errors) {\n          this.context.setUserAlert(resData.errors[0].message);\n        } else {\n          let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n          console.log('...retriving pocketVars success...');\n          this.context.setUserAlert('...retriving pocketVars success...')\n          this.setState({\n            pocketVars: pocketVarsParsed\n          });\n\n        }\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.context.setUserAlert(err);\n      });\n    }\ngetThisUser (args) {\n  console.log('...retrieving your profile info...');\n  this.context.setUserAlert('...retrieving your profile info...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getUserById(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\"\n      )\n      {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getUserById);\n      let responseAlert = '...profile retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.getUserById,\n        activityA: `getUserById?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.getUserById;\n\n      if (resData.data.getUserById.role === 'Admin') {\n        this.setState({\n          canDelete: true\n        })\n      }\n      this.parseForCalendar({\n        attendance: resData.data.getUserById.attendance,\n        leave: resData.data.getUserById.leave,\n        appointments: resData.data.getUserById.appointments,\n      })\n      this.logUserActivity(args);\n      this.props.sendSocketAdminMessage(`${activityId} just logged in...`);\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message)\n      }\n\n      if (resData.data.addUserActivity.error) {\n        this.context.setUserAlert(resData.data.addUserActivity.error)\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsubmitAddAddressForm = (event) => {\n  event.preventDefault();\n  console.log('...adding address...');\n  this.context.setUserAlert('...adding address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const number = event.target.number.value;\n  const street = event.target.street.value;\n  const town = event.target.town.value;\n  const city = event.target.city.value;\n  const parish = event.target.parish.value;\n  const country = event.target.country.value;\n  const postalCode = event.target.postalCode.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${number},\n          addressStreet:\"${street}\",\n          addressTown:\"${town}\",\n          addressCity:\"${city}\",\n          addressParish:\"${parish}\",\n          addressCountry:\"${country}\",\n          addressPostalCode:\"${postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAddress);\n      let responseAlert = '...address add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserAddress,\n        activityA: `addUserAddress?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAddress = (args) => {\n  console.log('...deleting address...');\n  this.context.setUserAlert('...deleting address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      mutation {deleteUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\",\n          addressPrimary: ${args.primary}\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAddress);\n      let responseAlert = '...address delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserAddress,\n        activityA: `deleteUserAddress?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.deleteUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsetAddressPrimary = (args) => {\n  console.log('...setting primary address...');\n  this.context.setUserAlert('...setting primary address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      mutation {setUserAddressPrimary(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.setUserAddressPrimary);\n      let responseAlert = '...address set primary success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.setUserAddressPrimary,\n        activityA: `setUserAddressPrimary?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.setUserAddressPrimary;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddAttendanceForm = (event) => {\n  event.preventDefault();\n  console.log('...adding attendance...');\n  this.context.setUserAlert('...attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const attendanceDate = event.target.date.value;\n  const attendanceStatus = event.target.status.value;\n  const attendanceDescription = event.target.description.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAttendance(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          attendanceDate:\"${attendanceDate}\",\n          attendanceStatus:\"${attendanceStatus}\",\n          attendanceDescription:\"${attendanceDescription}\"\n        })\n      {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAttendance);\n      let responseAlert = '...attendance add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserAttendance,\n        activityA: `addUserAttendance?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: resData.data.addUserAttendance.attendance,\n        leave: resData.data.addUserAttendance.leave,\n        appointments: resData.data.addUserAttendance.appointments,\n      })\n      this.context.activityUser = resData.data.addUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAttendance = (args) => {\n  console.log('...deleting attendance...');\n  this.context.setUserAlert('...deleting attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserAttendance(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            attendanceDate:\"${args.date}\",\n            attendanceStatus:\"${args.status}\",\n            attendanceDescription:\"${args.description}\"\n          }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAttendance);\n      let responseAlert = '...attendance delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserAttendance,\n        activityA: `deleteUserAttendance?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: resData.data.deleteUserAttendance.attendance,\n        leave: resData.data.deleteUserAttendance.leave,\n        appointments: resData.data.deleteUserAttendance.appointments,\n      })\n      this.context.activityUser = resData.data.deleteUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddLeaveForm = (event) => {\n  event.preventDefault();\n  console.log('...adding leave...');\n  this.context.setUserAlert('...leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const startDate = event.target.startDate.value;\n  const endDate = event.target.endDate.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserLeave(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          leaveType:\"${type}\",\n          leaveStartDate:\"${startDate}\",\n          leaveEndDate:\"${endDate}\",\n          leaveDescription:\"${description}\"\n        }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserLeave);\n      let responseAlert = '...leave add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserLeave,\n        activityA: `addUserLeave?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: resData.data.addUserLeave.attendance,\n        leave: resData.data.addUserLeave.leave,\n        appointments: resData.data.addUserLeave.appointments,\n      })\n      this.context.activityUser = resData.data.addUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteLeave = (args) => {\n  console.log('...deleting leave...');\n  this.context.setUserAlert('...deleting leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserLeave(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            leaveType:\"${args.type}\",\n            leaveStartDate:\"${args.startDate}\",\n            leaveEndDate:\"${args.endDate}\",\n            leaveDescription:\"${args.description}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserLeave);\n      let responseAlert = '...leave delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserLeave,\n        activityA: `deleteUserLeave?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: resData.data.addUserLeave.attendance,\n        leave: resData.data.addUserLeave.leave,\n        appointments: resData.data.addUseLeavce.appointments,\n      })\n      this.context.activityUser = resData.data.deleteUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding image...');\n  this.context.setUserAlert('...image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  const username = this.state.activityUser.username;\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+activityId+'/images';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addUserImage(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          imageName:\"${imageName}\",\n          imageType:\"${imageType}\",\n          imagePath:\"${imagePath}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserImage);\n      let responseAlert = '...image add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserImage,\n        activityA: `addUserImage?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n  console.log('...deleting image...');\n  this.context.setUserAlert('...deleting image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const username = this.state.activityUser.username;\n\n  const filePath = 'staff/'+username+'/images';\n  const filename = args.name;\n  // console.log('foo',filename);\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            imageName:\"${args.name}\",\n            imageType:\"${args.type}\",\n            imagePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserImage);\n      let responseAlert = '...image delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserImage,\n        activityA: `deleteUserImage?activityId:${activityId},userId:${userId}`,\n      });\n      this.context.activityUser = resData.data.deleteUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'staff/'+activityId+'/images';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding file...');\n  this.context.setUserAlert('...file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  const username = this.state.activityUser.username;\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+activityId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addUserFile(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          fileName:\"${file2Name}\",\n          fileType:\"${file2Type}\",\n          filePath:\"${file2Path}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserFile);\n      let responseAlert = '...file add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserFile,\n        activityA: `addUserFile?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n  console.log('...deleting file...');\n  this.context.setUserAlert('...deleting file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const username = this.state.activityUser.username;\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserFile(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            fileName:\"${args.name}\",\n            fileType:\"${args.type}\",\n            filePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserFile);\n      let responseAlert = '...file delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserFile,\n        activityA: `deleteUserFile?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.deleteUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'staff/'+activityId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding note...');\n  this.context.setUserAlert('...note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const note = event.target.note.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserNotes(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          notes:\"${note}\"\n        }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserNotes,\n        activityA: `addUserNotes?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n  console.log('...deleting note...');\n  this.context.setUserAlert('...deleting note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  let requestBody = {\n    query: `\n        mutation {deleteUserNote(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            note: \"${args}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserNote,\n        activityA: `deleteUserNote?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.deleteUserNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateUserSingleField(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateUserSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.updateUserSingleField,\n        activityA: `updateUserSingleField?activityId:${activityId},userId:${userId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.updateUserSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing profile dates for calendar...');\n  let calendarAttendance = args.attendance.map(x => ({\n      title: x.status,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        status: x.status,\n        description: x.description,\n        field: 'attendance'\n      }\n    }))\n  let calendarLeave = args.leave.map(x => ({\n      title: x.type,\n      date: moment.unix(x.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      end: moment.unix(x.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        type: x.type,\n        startDate: x.startDate,\n        endDate: x.endDate,\n        description: x.description,\n        field: 'leave'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave\n    })\n  let calendarAppointments = args.appointments.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n        field: 'appointments'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave,\n      calendarAppointments: calendarAppointments,\n    })\n}\nviewCalendarEvent = (args) => {\n\n  let input = args.event.extendedProps.props;\n  let data;\n  if (input.field === 'attendance') {\n    data = {\n      date: input.date,\n      status: input.status,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAttendance', data: data}\n    })\n  }\n  if (input.field === 'leave') {\n    data = {\n      type: input.type,\n      startDate: input.startDate,\n      endDate: input.endDate,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarLeave', data: data}\n    })\n  }\n  if (input.field === 'appointments') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      location: input.location,\n      description: input.description,\n      important: input.important,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAppointment', data: data, goLink: true}\n    })\n  }\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"profilePageContainer\">\n      <Row className=\"profilePageContainerRow headRow\">\n        <Col md={9} className=\"profilePageContainerCol\">\n          <h1 className=\"profileHeading\">Profile</h1>\n        </Col>\n        <Col md={3} className=\"profilePageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Row className=\"profilePageContainerRow mainRow\">\n        <Col md={2} className=\"profilePageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"profilePageContainerCol\">\n          {!this.state.activityUser && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"profilePageContainerRow mainRow2\">\n          <Col md={3} className=\"profilePageContainerCol specialCol1\">\n\n          {this.state.sideCol === 'menu' && (\n            <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n              <Nav.Item>\n                <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'address')}>Addresses</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'attendance')}>Attendance</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'leave')}>Leave</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'image')}>Images</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'file')}>Files</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'appointment')}>Appointments</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n              </Nav.Item>\n            </Nav>\n          )}\n          {this.state.sideCol === 'filter' && (\n            <Col>\n              {this.state.menuSelect === 'address' && (\n                <FilterAddressForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'attendance' && (\n                <FilterAttendanceForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'leave' && (\n                <FilterLeaveForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'image' && (\n                <FilterImageForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'file' && (\n                <FilterFileForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'appointment' && (\n                <FilterAppointmentForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'note' && (\n                <FilterNoteForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n            </Col>\n\n          )}\n          </Col>\n\n          {this.state.activityUser && (\n            <Col md={9} className=\"profilePageContainerCol specialCol2\">\n\n              {this.state.updateSingleField.state === true && (\n                <UpdateUserSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n\n              <Tab.Content className=\"tabContent\" >\n                <Tab.Pane eventKey=\"1\">\n                  <p className=\"displayPaneTitle\">Basic:</p>\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Title:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.title}</p>\n                      <p className=\"listGroupText\">Name:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.name}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Username:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.username}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                      <p className=\"listGroupText\">Role:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.role}</p>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">DOB:</p>\n                      <p className=\"listGroupText bold\">{moment.unix(this.state.activityUser.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                      <p className=\"listGroupText\">Age:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.age}</p>\n                      <p className=\"listGroupText\">Gender:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.gender}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                    <p className=\"listGroupText\">Email:</p>\n                    <p className=\"listGroupText bold\">{this.state.activityUser.contact.email}</p>\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                    <p className=\"listGroupText\">Phone:</p>\n                    <p className=\"listGroupText bold\">{this.state.activityUser.contact.phone}</p>\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                    <p className=\"listGroupText\">Phone 2:</p>\n                    <p className=\"listGroupText bold\">{this.state.activityUser.contact.phone2}</p>\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"2\">\n                  <p className=\"displayPaneTitle\">Admin:</p>\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Reg No:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.registrationNumber}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Employment Date:</p>\n                      {this.state.activityUser.employmentDate && (\n                        <p className=\"listGroupText bold\">{moment.unix(this.state.activityUser.employmentDate.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      )}\n\n                      {this.context.role === 'Admin' && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'employmentDate')}>Edit</Button>\n                      )}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser._id}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">LoggedIn:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.loggedIn.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">ClientConnected:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.clientConnected.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Verified:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.verification.verified.toString()}</p>\n                      <p className=\"listGroupText\">Type:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.verification.type}</p>\n                      <p className=\"listGroupText\">Code:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.verification.code}</p>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"3\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Addresses:</p>\n                    <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"success\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'address' && (\n                      <AddAddressForm\n                        onConfirm={this.submitAddAddressForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserAddressList\n                    filter={this.state.filter}\n                    addresses={this.state.activityUser.addresses}\n                    authId={this.state.activityUser._id}\n                    onDelete={this.deleteAddress}\n                    canDelete={this.state.canDelete}\n                    makePrimary={this.setAddressPrimary}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"4\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Attendance:</p>\n                    <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"success\" onClick={this.startAdd.bind(this, 'attendance')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'attendance' && (\n                      <AddAttendanceForm\n                        onConfirm={this.submitAddAttendanceForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAttendanceList\n                      filter={this.state.filter}\n                      attendance={this.state.activityUser.attendance}\n                      authId={this.state.activityUser._id}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteAttendance}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAttendance}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"5\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Leave:</p>\n                    <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"success\" onClick={this.startAdd.bind(this, 'leave')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'leave' && (\n                      <AddLeaveForm\n                        onConfirm={this.submitAddLeaveForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserLeaveList\n                      filter={this.state.filter}\n                      leave={this.state.activityUser.leave}\n                      authId={this.state.activityUser._id}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteLeave}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarLeave}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"6\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Images:</p>\n                    <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'image' && (\n                      <AddImageForm\n                        onConfirm={this.submitAddImageForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserImageList\n                    filter={this.state.filter}\n                    images={this.state.activityUser.images}\n                    authId={this.state.activityUser._id}showListDetails={this.showListDetails}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteImage}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"7\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Files:</p>\n                    <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'file' && (\n                      <AddFileForm\n                        onConfirm={this.submitAddFileForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserFileList\n                    filter={this.state.filter}\n                    files={this.state.activityUser.files}\n                    authId={this.state.activityUser._id}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteFile}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"8\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Appointments:</p>\n                    <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                  </Row>\n                  <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAppointmentList\n                      filter={this.state.filter}\n                      appointments={this.state.activityUser.appointments}\n                      authId={this.state.activityUser._id}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAppointments}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"9\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Notes:</p>\n                    <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'note' && (\n                      <AddNoteForm\n                        onConfirm={this.submitAddNoteForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserNoteList\n                    filter={this.state.filter}\n                    notes={this.state.activityUser.notes}\n                    authId={this.state.activityUser._id}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteNote}\n                  />\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default MyProfilePage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './authForms.css';\n\nconst LoginForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Login</h1>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"username\">\n        <Form.Label className=\"formLabel\">Username</Form.Label>\n        <Form.Control type=\"username\" placeholder=\"Enter username\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"password\">\n        <Form.Label className=\"formLabel\">Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\" />\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"loginFormBtn\">Login</Button>\n      <Button variant=\"primary\" onClick={props.onStartVerification}>Verify</Button>\n      <Button variant=\"secondary\" className=\"loginFormBtn\" onClick={props.onStartForgotPassword}>ForgotPassword</Button>\n      <Button variant=\"warning\" className=\"loginFormBtn\">\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default LoginForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst verifyUserForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n  <h1>Verify</h1>\n  <Form.Row>\n    <Form.Group className=\"searchInput\" controlId=\"type\">\n      <Form.Label className=\"formLabel\">Type</Form.Label>\n      <Form.Control as=\"select\">\n        <option>email</option>\n      </Form.Control>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"username\">\n      <Form.Label className=\"formLabel\">Username</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"username\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"email\">\n      <Form.Label className=\"formLabel\">Email</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"email\"/>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"code\">\n      <Form.Label className=\"formLabel\">Code</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"verification code\"/>\n    </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n    Verify\n    </Button>\n  )}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default verifyUserForm;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './ForgotPasswordForm.css';\n\nconst ForgotPasswordForm = (props) => {\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n  <h1>Forgot Password</h1>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"username\">\n      <Form.Label className=\"formLabel\">Username</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"username\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"email\">\n      <Form.Label className=\"formLabel\">Email</Form.Label>\n      <Form.Control type=\"email\" placeholder=\"email\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">Request New Password</Button>\n  </Form.Row>\n</Form>\n</div>\n\n)};\n\nexport default ForgotPasswordForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from 'moment';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport LoginForm from '../../components/forms/auth/LoginForm';\nimport VerifyUserForm from '../../components/forms/auth/VerifyUserForm';\nimport ForgotPasswordForm from '../../components/forms/auth/ForgotPasswordForm';\n\nclass LoginPage extends Component {\n  state = {\n    verifying: false,\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    userSeshStore: false,\n    user: {},\n    activityA: null,\n    requestingPasswordReset: false,\n    showForm: 'login',\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...login component mounted...');;\n  }\n\n  submitLoginForm = (event) => {\n    event.preventDefault();\n    this.context.setUserAlert(\"...submitLoginForm...\")\n    console.log(\"...submitLoginForm...\");\n\n    const username = event.target.username.value;\n    const password = event.target.password.value;\n\n    if (username.trim().length === 0 || password.trim().length === 0) {\n      this.context.setUserAlert(\"...blank fields!!!...\")\n      return;\n    }\n    let requestBody = {\n        query: `\n          {login(username:\"${username}\",password:\"${password}\")\n          {activityId,role,token,tokenExpiration,error}}`\n        };\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.login);\n      let responseAlert = '...login success!...';\n      console.log('...login success...');\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (resData.data.login.error) {\n        error = resData.data.login.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      if (resData.data.login.token !== \"\") {\n        // this.context.login(\n        //   resData.data.login.token,\n        //   resData.data.login.activityId,\n        //   resData.data.login.role,\n        //   resData.data.login.tokenExpiration\n        // );\n        const sessionObject = {\n          token: resData.data.login.token,\n          activityId: resData.data.login.activityId,\n          role: resData.data.login.role,\n          tokenExpiration: resData.data.login.tokenExpiration\n        }\n        this.context.setUserAlert(responseAlert)\n       sessionStorage.setItem('logInfo', JSON.stringify(sessionObject));\n       console.log('...session storage set...');\n       this.setState({ activityA: `login?${sessionObject.activityId}`})\n       this.logUserActivity();\n\n       this.context.login(\n         resData.data.login.token,\n         resData.data.login.activityId,\n         resData.data.login.role,\n         resData.data.login.tokenExpiration\n       );\n      }\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n  };\n\n  logUserActivity() {\n    console.log('...logUserActivity...');\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    const activityId = seshStore.activityId;\n    const token = seshStore.token;\n    const userId = activityId;\n    const request = this.state.activityA;\n    const activityDate = moment().format('YYYY-MM-DD');\n    let requestBody = {\n      query: `\n        mutation {addUserActivity(\n          activityId:\"${activityId}\",userId:\"${userId}\",\n          userInput:{\n            activityDate:\"${activityDate}\",\n            activityRequest:\"${request}\"\n          })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n      `};\n    fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log('...resData...',resData.data.addUserActivity);\n        if (resData.errors) {\n          this.context.setUserAlert(resData.errors[0].message);\n        }\n        if (resData.data.addUserActivity.error) {\n          this.context.setUserAlert(resData.data.addUserActivity.error);\n          console.log('...resDataError...',resData.data.addUserActivity.error);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  verifyUser = (event) => {\n    event.preventDefault();\n    console.log('...verify user...');\n    const email = event.target.email.value;\n    const type = event.target.type.value;\n    const code = event.target.code.value;\n    const username = event.target.username.value;\n\n    const requestBody = {\n      query: `\n        mutation {verifyUser(\n          userInput:{\n            username:\"${username}\",\n            contactEmail:\"${email}\",\n            verificationType:\"${type}\",\n            verificationCode:\"${code}\"\n          }\n        )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log('...resData...',resData.data.verifyUser);\n        let responseAlert;\n        let error = null;\n\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n\n        this.context.setUserAlert(responseAlert)\n\n        this.context.setUserAlert('Verified...Please try loggin in again..')\n        this.setState({showForm: 'login'})\n      })\n      .catch(err => {\n        this.context.setUserAlert(err)\n      });\n  }\n\n  toggleVerification = () => {\n    if (this.state.showForm === 'verify') {\n      this.setState({\n        showForm: 'login'\n      })\n    } else {\n      this.setState({\n        showForm: 'verify'\n      })\n    }\n\n  };\n  toggleForgotPassword = () => {\n    if (this.state.showForm === 'forgotPassword') {\n      this.setState({\n        showForm: 'login'\n      })\n    } else {\n      this.setState({\n        showForm: 'forgotPassword'\n      })\n    }\n\n  }\n\n  requestPasswordReset = (event) => {\n    event.preventDefault();\n    console.log('...requesting password reset...');\n    this.setState({isLoading: true})\n\n    const username = event.target.username.value;\n    const email = event.target.email.value;\n    const requestBody = {\n      query: `\n         mutation {requestPasswordReset(\n           userInput:{\n             username:\"${username}\",\n             contactEmail:\"${email}\"\n           })\n           {_id,username,contact{email}verification{verified,type,code}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log('...resData...',resData.data.requestPasswordReset)\n        if (resData.errors) {\n          this.context.setUserAlert(resData.errors[0].message);\n        } else {\n          this.context.setUserAlert('...password reset request sent...');\n          this.setState({isLoading: false, requestingPasswordReset: false});\n          this.toggleForgotPassword();\n        }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  render() {\n    return (\n      <Container className=\"authPageContainer\">\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n      {this.state.showForm === 'login' && (\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n            <LoginForm\n              onConfirm={this.submitLoginForm}\n              onStartForgotPassword={this.toggleForgotPassword}\n              onStartVerification={this.toggleVerification}\n            />\n          </Col>\n        </Row>\n      )}\n\n      {this.state.showForm === 'verify' && (\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n            <VerifyUserForm\n              canCancel\n              canConfirm\n              onCancel={this.toggleVerification}\n              onConfirm={this.verifyUser}\n            />\n          </Col>\n        </Row>\n      )}\n\n\n      {this.state.showForm === 'forgotPassword' && (\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n            <ForgotPasswordForm\n              onCancel={this.toggleForgotPassword}\n              onConfirm={this.requestPasswordReset}\n            />\n          </Col>\n        </Row>\n      )}\n\n      </Container>\n\n    );\n  }\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './authForms.css';\n\nconst SignupForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Signup</h1>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"email\">\n        <Form.Label className=\"formLabel\">Email Address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"password\">\n        <Form.Label className=\"formLabel\">Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"password\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"role\">\n        <Form.Label className=\"formLabel\">Role</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Admin</option>\n          <option>Staff</option>\n          <option>Nurse</option>\n          <option>Doctor</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label className=\"formLabel\">Title</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Mr</option>\n          <option>Mrs</option>\n          <option>Ms</option>\n          <option>Dr</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"name\">\n        <Form.Label className=\"formLabel\">Name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"username\">\n        <Form.Label className=\"formLabel\">Username</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"username\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"dob\">\n        <Form.Label className=\"formLabel\">D.O.B</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"gender\">\n        <Form.Label className=\"formLabel\">Gender</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Female</option>\n          <option>Male</option>\n          <option>Prefer Not to Say</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"phone\">\n        <Form.Label className=\"formLabel\">Phone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760001234\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"phone2\">\n        <Form.Label className=\"formLabel\">Phone #2</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760005678\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressNumber\">\n        <Form.Label className=\"formLabel\">Address Number</Form.Label>\n        <Form.Control type=\"number\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressStreet\">\n        <Form.Label className=\"formLabel\">Address Street</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressTown\">\n        <Form.Label className=\"formLabel\">Address Town</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressCity\">\n        <Form.Label className=\"formLabel\">Address City</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressParish\">\n        <Form.Label className=\"formLabel\">Address Parish</Form.Label>\n        <Form.Control as=\"select\">\n          <option>none</option>\n          <option>Clarendon</option>\n          <option>Hanover</option>\n          <option>Kingston</option>\n          <option>Manchester</option>\n          <option>Portland</option>\n          <option>St. Andrew</option>\n          <option>St. Ann</option>\n          <option>St. Catherine</option>\n          <option>St. Elizabeth</option>\n          <option>St. James</option>\n          <option>St. Mary</option>\n          <option>St. Thomas</option>\n          <option>Trelawny</option>\n          <option>Westmoreland</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressCountry\">\n        <Form.Label className=\"formLabel\">Address Country</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressPostalCode\">\n        <Form.Label className=\"formLabel\">Address Postalcode</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"loginFormBtn\">Signup</Button>\n    </Form.Row>\n    <Form.Row>\n      <Button variant=\"warning\" className=\"loginFormBtn\">\n        <NavLink to=\"/login\">Login</NavLink>\n      </Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default SignupForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from 'moment';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport SignupForm from '../../components/forms/auth/SignupForm';\n\nclass SignUpPage extends Component {\n  state = {\n    verifying: false,\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    userSeshStore: false,\n    user: {},\n    activityA: null,\n    requestingPasswordReset: false,\n    signupStatus: null,\n    invited: false,\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...signup component mounted...');\n    // this.context.setUserAlert('...signup component mounted...')\n  }\n\n\n  submitSignupForm = (event) => {\n    event.preventDefault();\n    this.context.setUserAlert(\"...submitSignupForm...\")\n    console.log(\"...submitSignupForm...\");\n\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n    const role = event.target.role.value;\n    const name = event.target.name.value;\n    const title = event.target.title.value;\n    const username = event.target.username.value;\n    const dob = event.target.dob.value;\n    const gender = event.target.gender.value;\n    const phone = event.target.phone.value;\n    const phone2 = event.target.phone2.value;\n    const addressNumber = event.target.addressNumber.value;\n    const addressStreet = event.target.addressStreet.value;\n    const addressTown = event.target.addressTown.value;\n    const addressCity = event.target.addressCity.value;\n    const addressParish = event.target.addressParish.value;\n    const addressCountry = event.target.addressCountry.value;\n    const addressPostalCode = event.target.addressPostalCode.value;\n\n    if (email.trim().length === 0 ||\n        password.trim().length === 0 ||\n        role.trim().length === 0 ||\n        name.trim().length === 0 ||\n        username.trim().length === 0 ||\n        dob.trim().length === 0 ||\n        gender.trim().length === 0 ||\n        phone.trim().length === 0 ||\n        phone2.trim().length === 0 ||\n        addressNumber.trim().length === 0 ||\n        addressStreet.trim().length === 0 ||\n        addressTown.trim().length === 0 ||\n        addressCity.trim().length === 0 ||\n        addressParish.trim().length === 0 ||\n        addressCountry.trim().length === 0 ||\n        addressPostalCode.trim().length === 0\n        ) {\n      this.context.setUserAlert(\"...blank fields!!!...\");\n      return;\n    }\n    let requestBody = {\n        query: `\n            mutation {createUser(\n              userInput:{\n                password:\"${password}\",\n                title:\"${title}\",\n                name:\"${name}\",\n                role:\"${role}\",\n                username:\"${username}\",\n                dob:\"${dob}\",\n                gender:\"${gender}\",\n                contactPhone:\"${phone}\",\n                contactPhone2:\"${phone2}\",\n                contactEmail:\"${email}\",\n                addressNumber:${addressNumber},\n                addressStreet:\"${addressStreet}\",\n                addressTown:\"${addressTown}\",\n                addressCity:\"${addressCity}\",\n                addressParish:\"${addressParish}\",\n                addressCountry:\"${addressCountry}\",\n                addressPostalCode:\"${addressPostalCode}\"\n              }\n            )\n            {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n          `};\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createUser);\n      let responseAlert = '...Signup success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      responseAlert = '...verificationCode: '+resData.data.createUser.verification.code+'';\n      this.context.setUserAlert(responseAlert);\n      this.setState({signupStatus: 'success'})\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n  };\n\n  submitInviteForm = (event) => {\n    event.preventDefault()\n    console.log('...checking inviteCode...');\n    this.context.setUserAlert('...checking inviteCode...')\n\n    const challenge = event.target.inviteCode.value;\n\n    let requestBody = {\n        query: `\n            query {verifyInvitation(challenge:\"${challenge}\")}\n          `};\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data);\n      let responseAlert = '...Signup success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert);\n\n      const result = resData.data.verifyInvitation;\n      if (result === 'matched') {\n        this.setState({invited: true})\n        this.context.setUserAlert('...invite code accepted...');\n      } else {\n        this.context.setUserAlert('...invite code rejected. Check & try again...');\n      }\n\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n\n\n  }\n\n\n  render() {\n    return (\n      <Container className=\"authPageContainer\">\n        {this.state.overlay === true && (\n          <LoadingOverlay\n            status={this.state.overlayStatus}\n          />\n        )}\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n          {this.state.invited !== true && (\n            <React.Fragment>\n            <Form onSubmit={this.submitInviteForm}>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"inviteCode\">\n                  <Form.Label>inviteCode</Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"inviteCode\"/>\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row className=\"formBtnRow\">\n                <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Submit</Button>\n              </Form.Row>\n            </Form>\n            </React.Fragment>\n          )}\n\n          {this.state.signupStatus !== 'success' &&\n          this.state.invited === true && (\n            <SignupForm\n              onConfirm={this.submitSignupForm}\n            />\n          )}\n          {this.state.signupStatus === 'success' && (\n            <React.Fragment>\n              <h1>SignUp Success...Proceed to Login</h1>\n              <Button variant=\"warning\" className=\"loginFormBtn\">\n                <NavLink to=\"/login\">Login</NavLink>\n              </Button>\n            </React.Fragment>\n          )}\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default SignUpPage;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { NavLink } from 'react-router-dom';\nimport './CreateUserForm.css';\n\nconst ResetPasswordForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n\n<Form onSubmit={props.onConfirm}>\n  <h1>Reset Password</h1>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"verificationCode\">\n      <Form.Label className=\"formLabel\">verification Code</Form.Label>\n      <Form.Control type=\"text\" value={props.verf}/>\n    </Form.Group>\n  </Form.Row>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"password\">\n    <Form.Label className=\"formLabel\">Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"password\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n    Reset\n    </Button>\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>\n      <NavLink to=\"/landing\">Cancel</NavLink>\n    </Button>\n  </Form.Row>\n</Form>\n\n</div>\n\n)};\n\nexport default ResetPasswordForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { useParams, NavLink, Redirect } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from 'moment';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport ResetPasswordForm from '../../components/forms/auth/ResetPasswordForm';\n\nclass PasswordResetPage extends Component {\n  state = {\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    passwordResetStatus: null,\n    user: {},\n    activityA: null,\n    activityId: null,\n    verfCode: null,\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...password component mounted...');\n    console.log();\n    this.setState({\n      activityId: this.props.location.pathname.split('@')[0].split('/')[2],\n      verfCode: this.props.location.pathname.split('@')[1]\n    })\n  }\n\n\n  submitResetPasswordForm = (event) => {\n    event.preventDefault();\n    this.context.setUserAlert(\"...submitSignupForm...\")\n    console.log(\"...submitSignupForm...\");\n\n    const password = event.target.password.value;\n    const verificationCode = this.state.verfCode;\n    const userId = this.state.activityId;\n    if (password.trim().length === 0 ||\n        verificationCode.trim().length === 0\n        ) {\n      this.context.setUserAlert(\"...blank fields!!!...\");\n      return;\n    }\n    let requestBody = {\n        query: `\n            mutation {resetUserPassword(\n              userId:\"${userId}\",\n              userInput:{\n                verificationCode:\"${verificationCode}\",\n                password:\"${password}\"\n              })\n            {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n          `};\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      console.log('...resData...',resData.data.resetUserPassword);\n      let responseAlert = '...Password Reset Success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert);\n      this.setState({passwordResetStatus: 'success'})\n      return <Redirect to=\"/login\"/>\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n  };\n\n\n  render() {\n    return (\n      <Container className=\"authPageContainer\">\n        {this.state.overlay === true && (\n          <LoadingOverlay\n            status={this.state.overlayStatus}\n          />\n        )}\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n          {this.state.passwordResetStatus !== 'success' && (\n            <ResetPasswordForm\n              onConfirm={this.submitResetPasswordForm}\n              verf={this.state.verfCode}\n            />\n          )}\n          {this.state.passwordResetStatus === 'success' && (\n            <React.Fragment>\n              <h1>Reset Success...Proceed to Login</h1>\n            </React.Fragment>\n          )}\n\n\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default PasswordResetPage;\n","import React from 'react';\n\nimport UserItem from '../../items/user/UserItem';\nimport './UserList.css';\n\nconst SearchUserList = props => {\n\n  const {...filter} = props.filter;\n  let users2 = props.users;\n  let propsUsers = [];\n\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'loggedIn') {\n    propsUsers = users2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field !== 'staff') {\n    propsUsers = users2;\n  }\n\n  let count = 0;\n\n  const users = propsUsers.map(user => {\n\n    count = propsUsers.indexOf(user)+1;\n\n    return (\n      <UserItem\n        key={count}\n        user={user}\n        canDelete={props.canDelete}\n        showDetails={props.showDetails}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{users}</ul>;\n};\n\nexport default SearchUserList;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\nimport S3 from 'react-aws-s3';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport UserAddressList from '../lists/user/UserAddressList'\nimport UserAttendanceList from '../lists/user/UserAttendanceList'\nimport UserLeaveList from '../lists/user/UserLeaveList'\nimport UserImageList from '../lists/user/UserImageList'\nimport UserFileList from '../lists/user/UserFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport UserNoteList from '../lists/user/UserNoteList'\n\nimport FilterAddressForm from '../forms/filter/FilterAddressForm';\nimport FilterAttendanceForm from '../forms/filter/FilterAttendanceForm';\nimport FilterLeaveForm from '../forms/filter/FilterLeaveForm';\nimport FilterImageForm from '../forms/filter/FilterImageForm';\nimport FilterFileForm from '../forms/filter/FilterFileForm';\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../forms/filter/FilterNoteForm';\n\nimport UpdateUserSingleFieldForm from '../forms/add/UpdateUserSingleFieldForm';\nimport AddAddressForm from '../forms/add/AddAddressForm';\nimport AddAttendanceForm from '../forms/add/AddAttendanceForm';\nimport AddLeaveForm from '../forms/add/AddLeaveForm';\nimport AddNoteForm from '../forms/add/AddNoteForm';\nimport AddImageForm from '../forms/add/AddImageForm';\nimport AddFileForm from '../forms/add/AddFileForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass UserDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    calendarAttendance: null,\n    calendarLeave: null,\n    calendarAppointments: null,\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    // this.props2 = this.props;\n  }\n\ncomponentDidMount () {\n  console.log('...staff details component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getPocketVars(seshStore);\n  }\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.setState({\n    selectedUser: this.context.selectedUser\n  })\n\n  this.parseForCalendar({\n    attendance: this.props.user.attendance,\n    leave: this.props.user.leave,\n    appointments: this.props.user.appointments,\n  })\n}\n// componentDidUpdate () {\n//   console.log('foo',this.props.user.appointments);\n// }\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n    console.log('...retriving pocketVars..');\n    this.context.setUserAlert('...retriving pocketVars..')\n    const token = args.token;\n    const activityId = args.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")}\n          `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          this.setState({userAlert: resData.errors[0].message})\n        } else {\n          let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n          console.log('...retriving pocketVars success...');\n          this.context.setUserAlert('...retriving pocketVars success...')\n          this.setState({\n            pocketVars: pocketVarsParsed\n          });\n        }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n    }\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message)\n      }\n      if (resData.data.addUserActivity.error) {\n        this.context.setUserAlert(resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\n\nsubmitAddAddressForm = (event) => {\n  event.preventDefault();\n  console.log('...adding address...');\n  this.context.setUserAlert('...adding address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const number = event.target.number.value;\n  const street = event.target.street.value;\n  const town = event.target.town.value;\n  const city = event.target.city.value;\n  const parish = event.target.parish.value;\n  const country = event.target.country.value;\n  const postalCode = event.target.postalCode.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${number},\n          addressStreet:\"${street}\",\n          addressTown:\"${town}\",\n          addressCity:\"${city}\",\n          addressParish:\"${parish}\",\n          addressCountry:\"${country}\",\n          addressPostalCode:\"${postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAddress);\n      let responseAlert = '...address add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserAddress)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserAddress,\n        activityA: `addUserAddress?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAddress = (args) => {\n  console.log('...deleting address...');\n  this.context.setUserAlert('...deleting address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\",\n          addressPrimary: ${args.primary}\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAddress);\n      let responseAlert = '...address delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserAddress)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserAddress,\n        activityA: `deleteUserAddress?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsetAddressPrimary = (args) => {\n  console.log('...setting primary address...');\n  this.context.setUserAlert('...setting primary address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n      mutation {setUserAddressPrimary(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.setUserAddressPrimary);\n      let responseAlert = '...address set primary success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.setUserAddressPrimary)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.setUserAddressPrimary,\n        activityA: `setUserAddressPrimary?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.setUserAddressPrimary;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddAttendanceForm = (event) => {\n  event.preventDefault();\n  console.log('...adding attendance...');\n  this.context.setUserAlert('...attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const attendanceDate = event.target.date.value;\n  const attendanceStatus = event.target.status.value;\n  const attendanceDescription = event.target.description.value.replace(/\\n/g, ' ');\n\n  let requestBody = {\n    query: `\n      mutation {addUserAttendance(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          attendanceDate:\"${attendanceDate}\",\n          attendanceStatus:\"${attendanceStatus}\",\n          attendanceDescription:\"${attendanceDescription}\"\n        })\n      {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAttendance);\n      let responseAlert = '...attendance add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserAttendance)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserAttendance,\n        activityA: `addUserAttendance?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.addUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAttendance = (args) => {\n  console.log('...deleting attendance...');\n  this.context.setUserAlert('...deleting attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserAttendance(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            attendanceDate:\"${args.date}\",\n            attendanceStatus:\"${args.status}\",\n            attendanceDescription:\"${args.description}\"\n          }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAttendance);\n      let responseAlert = '...attendance delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserAttendance)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserAttendance,\n        activityA: `deleteUserAttendance?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.deleteUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddLeaveForm = (event) => {\n  event.preventDefault();\n  console.log('...adding leave...');\n  this.context.setUserAlert('...leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const startDate = event.target.startDate.value;\n  const endDate = event.target.endDate.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n\n  let requestBody = {\n    query: `\n      mutation {addUserLeave(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          leaveType:\"${type}\",\n          leaveStartDate:\"${startDate}\",\n          leaveEndDate:\"${endDate}\",\n          leaveDescription:\"${description}\"\n        }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserLeave);\n      let responseAlert = '...leave add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserLeave)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserLeave,\n        activityA: `addUserLeave?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.addUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteLeave = (args) => {\n  console.log('...deleting leave...');\n  this.context.setUserAlert('...deleting leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserLeave(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            leaveType:\"${args.type}\",\n            leaveStartDate:\"${args.startDate}\",\n            leaveEndDate:\"${args.endDate}\",\n            leaveDescription:\"${args.description}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserLeave);\n      let responseAlert = '...leave delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserLeave)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserLeave,\n        activityA: `deleteUserLeave?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.deleteUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding image...');\n  this.context.setUserAlert('...image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const username = this.props.user.username;\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+userId+'/images';\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addUserImage(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          imageName:\"${imageName}\",\n          imageType:\"${imageType}\",\n          imagePath:\"${imagePath}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserImage);\n      let responseAlert = '...image add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserImage)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserImage,\n        activityA: `addUserImage?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n  console.log('...deleting image...');\n  this.context.setUserAlert('...deleting image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const username = this.props.user.username;\n\n  const filePath = 'staff/'+username+'/images';\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            imageName:\"${args.name}\",\n            imageType:\"${args.type}\",\n            imagePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserImage);\n      let responseAlert = '...image delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserImage)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserImage,\n        activityA: `deleteUserImage?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'staff/'+userId+'/images';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding file...');\n  this.context.setUserAlert('...file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  const username = this.props.user.username;\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+userId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n      mutation {addUserFile(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          fileName:\"${file2Name}\",\n          fileType:\"${file2Type}\",\n          filePath:\"${file2Path}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserFile);\n      let responseAlert = '...file add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserFile)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserFile,\n        activityA: `addUserFile?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n  console.log('...deleting file...');\n  this.context.setUserAlert('...deleting file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const username = this.props.user.username;\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserFile(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            fileName:\"${args.name}\",\n            fileType:\"${args.type}\",\n            filePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserFile);\n      let responseAlert = '...file delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserFile)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserFile,\n        activityA: `deleteUserFile?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'staff/'+userId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding note...');\n  this.context.setUserAlert('...note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const note = event.target.note.value.replace(/\\n/g, '');\n\n  let requestBody = {\n    query: `\n      mutation {addUserNotes(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          notes:\"${note}\"\n        }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserNotes)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserNotes,\n        activityA: `addUserNotes?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n  console.log('...deleting note...');\n  this.context.setUserAlert('...deleting note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  let requestBody = {\n    query: `\n        mutation {deleteUserNote(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            note: \"${args}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserNote)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserNote,\n        activityA: `deleteUserNote?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateUserSingleField(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateUserSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.updateUserSingleField)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.updateUserSingleField,\n        activityA: `updateUserSingleField?activityId:${activityId},userId:${userId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.updateUserSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing staff dates for calendar...');\n  let calendarAttendance = args.attendance.map(x => ({\n      title: x.status,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        status: x.status,\n        description: x.description,\n        field: 'attendance'\n      }\n    }))\n  let calendarLeave = args.leave.map(x => ({\n      title: x.type,\n      date: moment.unix(x.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      end: moment.unix(x.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        type: x.type,\n        startDate: x.startDate,\n        endDate: x.endDate,\n        description: x.description,\n        field: 'leave'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave\n    })\n  let calendarAppointments = args.appointments.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n        field: 'appointments'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave,\n      calendarAppointments: calendarAppointments,\n    })\n}\n\nviewCalendarEvent = (args) => {\n\n  let input = args.event.extendedProps.props;\n  let data;\n  if (input.field === 'attendance') {\n    data = {\n      date: input.date,\n      status: input.status,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAttendance', data: data}\n    })\n  }\n  if (input.field === 'leave') {\n    data = {\n      type: input.type,\n      startDate: input.startDate,\n      endDate: input.endDate,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarLeave', data: data}\n    })\n  }\n  if (input.field === 'appointments') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      location: input.location,\n      description: input.description,\n      important: input.important,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAppointment', data: data, goLink: true}\n    })\n  }\n\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {\n            !this.props.user && (\n              <h3>...</h3>\n            )\n          }\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={2} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'address')}>Addresses</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'attendance')}>Attendance</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'leave')}>Leave</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'image')}>Images</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'file')}>Files</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'appointment')}>Appointments</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'address' && (\n                  <FilterAddressForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'attendance' && (\n                  <FilterAttendanceForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'leave' && (\n                  <FilterLeaveForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'image' && (\n                  <FilterImageForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'file' && (\n                  <FilterFileForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'appointment' && (\n                  <FilterAppointmentForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'note' && (\n                  <FilterNoteForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n\n            )}\n          </Col>\n\n          {this.props.user && (\n            <Col md={10} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdateUserSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n              <Tab.Content className=\"tabContent\">\n                <Tab.Pane eventKey=\"1\">\n                  User Basic:\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Title:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.title}</p>\n                      {this.state.canDelete === true && (\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                      )}\n                      <p className=\"listGroupText\">Name:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.name}</p>\n                      {this.state.canDelete === true && (\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'name')}>Edit</Button>\n                      )}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Username:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.username}</p>\n                      {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                      )}\n                      <p className=\"listGroupText\">Role:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.role}</p>\n                      {this.context.role === 'Admin' && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'role')}>Edit</Button>\n                      )}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">DOB:</p>\n                      <p className=\"listGroupText bold\">{moment.unix(this.props.user.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                      )}\n                      <p className=\"listGroupText\">Age:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.age}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Gender:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.gender}</p>\n                      {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                      )}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Email:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.contact.email}</p>\n                      {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                      )}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Phone:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.contact.phone}</p>\n                      {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                      )}\n                      <p className=\"listGroupText\">Phone 2:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.contact.phone2}</p>\n                      {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                      )}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p></p>\n                      <p></p>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"2\">\n                  User Admin\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Reg No:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.registrationNumber}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Employment Date:</p>\n                      {this.props.user.employmentDate && (\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.user.employmentDate.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      )}\n                      {this.context.role === 'Admin' && (\n                        <Button variant=\"primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'employmentDate')}>Edit</Button>\n                      )}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.props.user._id}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">LoggedIn:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.loggedIn.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">ClientConnected:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.clientConnected.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Verified:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.verification.verified.toString()}</p>\n                      <p className=\"listGroupText\">Type:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.verification.type}</p>\n                      <p className=\"listGroupText\">Code:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.verification.code}</p>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"3\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Address List:</p>\n                    <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"success\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'address' && (\n                      <AddAddressForm\n                        onConfirm={this.submitAddAddressForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserAddressList\n                    filter={this.state.filter}\n                    addresses={this.props.user.addresses}\n                    authId={this.context.activityId}\n                    onDelete={this.deleteAddress}\n                    canDelete={this.state.canDelete}\n                    makePrimary={this.setAddressPrimary}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"4\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Attendance List:</p>\n                    <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"success\" onClick={this.startAdd.bind(this, 'attendance')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'attendance' && (\n                      <AddAttendanceForm\n                        onConfirm={this.submitAddAttendanceForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAttendanceList\n                      filter={this.state.filter}\n                      attendance={this.props.user.attendance}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteAttendance}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAttendance}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"5\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Leave List:</p>\n                    <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"success\" onClick={this.startAdd.bind(this, 'leave')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'leave' && (\n                      <AddLeaveForm\n                        onConfirm={this.submitAddLeaveForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserLeaveList\n                      filter={this.state.filter}\n                      leave={this.props.user.leave}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteLeave}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarLeave}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"6\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Image List:</p>\n                    <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'image' && (\n                      <AddImageForm\n                        onConfirm={this.submitAddImageForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserImageList\n                    filter={this.state.filter}\n                    images={this.props.user.images}\n                    authId={this.context.activityId}\n                    showListDetails={this.showListDetails}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteImage}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"7\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User File List:</p>\n                    <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'file' && (\n                      <AddFileForm\n                        onConfirm={this.submitAddFileForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserFileList\n                    filter={this.state.filter}\n                    files={this.props.user.files}\n                    authId={this.context.activityId}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteFile}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"8\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Appointment List:</p>\n                    <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                  </Row>\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAppointmentList\n                      filter={this.state.filter}\n                      appointments={this.props.user.appointments}\n                      authId={this.context.activityId}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAppointments}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"9\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Notes:</p>\n                    <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'note' && (\n                      <AddNoteForm\n                        onConfirm={this.submitAddNoteForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserNoteList\n                    filter={this.state.filter}\n                    notes={this.props.user.notes}\n                    authId={this.context.activityId}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteNote}\n                  />\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default UserDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterUserForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"staff\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>username</option>\n          <option>title</option>\n          <option>role</option>\n          <option>dob</option>\n          <option>age</option>\n          <option>gender</option>\n          <option>loggedIn</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterUserForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport UserList from '../../components/lists/user/UserList';\nimport SearchUserList from '../../components/lists/user/SearchUserList';\nimport UserDetail from '../../components/details/UserDetail';\n\nimport FilterUserForm from '../../components/forms/filter/FilterUserForm';\nimport UserSearchForm from '../../components/forms/search/UserSearchForm';\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './staff.css';\n\nclass StaffPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    searchUsers: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    canDelete: false,\n    fromGoLink: null,\n    goLinkId: null,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all users component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    if (this.props.location.state) {\n      if (this.props.location.state.user) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.user\n        })\n      }\n    }\n    this.getAllUsers(seshStore);\n    if (this.props.selectedUser) {\n      console.log('...found existing user selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedUser: this.props.selectedUser\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      console.log('...all users retrieval success!...');\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkUser = resData.data.getAllUsers.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedUser: goLinkUser,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n        activityA: `getAllUsers?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message);\n      }\n      if (resData.data.error) {\n        this.context.setUserAlert(resData.data.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchUsers = (event) => {\n  event.preventDefault();\n  console.log('...searching users...');\n  this.context.setUserAlert('...searching users...')\n  // this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'age' ||\n      field === 'dob' ||\n      field === 'employmentDate' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'attendance.date' ||\n      field === 'leave.startDate' ||\n      field === 'leave.endDate'\n    ) {\n      regex = false;\n  }\n  console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getUsersByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getUsersByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getUsersByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getUsersByField);\n      }\n\n      let responseAlert = '...staff search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchUsers: resData.data.getUsersByFieldRegex,\n          activityA: `getUsersByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n        this.context.activityUser = resData.data.getUsersByFieldRegex;\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchUsers: resData.data.getUsersByField,\n          activityA: `getUsersByField?activityId:${activityId},userId:${userId}`\n        });\n        this.context.activityUser = resData.data.getUsersByField;\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nshowDetails = (args) => {\n  this.setState({\n    showDetails: true,\n    selectedUser: args,\n    tabKey: 'detail'\n  })\n  this.props.selectUser(args);\n  this.props.sendSocketNotification({userId:args._id,data:`${this.context.activityId} is watching you...`});\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nupdateUser = (args) => {\n  console.log('...updating user...');\n  this.setState({\n    selectedUser: args\n  })\n  this.props.selectUser(args);\n}\n\ndeleteUser = (args) => {\n  console.log('...deleteing user...',args);\n  this.context.setUserAlert('...deleteing user...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteUserById(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\"\n      )\n      {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserById);\n      let responseAlert = '...delete user success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteUserById?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllUsers({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n        <h1>Staff: {this.state.showDetails === true &&\n                      this.state.selectedUser &&\n                      this.state.tabKey === 'detail' && (\n                            this.state.selectedUser.name\n                          )}</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col md={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterUserForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.users && (\n            <Col md={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content>\n                <Tab.Pane eventKey=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                  <UserList\n                    filter={this.state.filter}\n                    users={this.state.users}\n                    authId={this.context.activityId}\n                    canDelete={this.state.canDelete}\n                    showDetails={this.showDetails}\n                    onDelete={this.deleteUser}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Staff</h3>\n                  <Row className=\"userSearchRow\">\n                    <UserSearchForm\n                      onConfirm={this.searchUsers}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchUsers && (\n                      <Button variant=\"primary\" className=\"centered_btn\" onClick={this.toggleSideCol}>Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchUsers && (\n                      <SearchUserList\n                        filter={this.state.filter}\n                        users={this.state.searchUsers}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedUser && (\n                  <UserDetail\n                    user={this.state.selectedUser}\n                    updateUser={this.updateUser}\n                  />\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default StaffPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './createForms.css';\nimport moment from 'moment';\n\nconst CreatePatientForm = (props) => {\n  const today = moment().format('YYYY-MM-DD')\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Create Patient Form</h1>\n    <p> \" * \" indicates required fields...</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"active\">\n        <Form.Label>Active</Form.Label>\n        <Form.Control type=\"checkbox\" />\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label className=\"formLabel\">Title *</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Mr</option>\n          <option>Mrs</option>\n          <option>Ms</option>\n          <option>Dr</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"name\">\n        <Form.Label className=\"formLabel\">First Name *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"lastName\">\n        <Form.Label className=\"formLabel\">Last Name *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"last name\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"username\">\n        <Form.Label className=\"formLabel\">username *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"username\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"dob\">\n        <Form.Label className=\"formLabel\">dob *</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"gender\">\n        <Form.Label className=\"formLabel\">gender *</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Female</option>\n          <option>Male</option>\n          <option>Prefer Not to Say</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"role\">\n        <Form.Label className=\"formLabel\">role </Form.Label>\n        <Form.Control type=\"text\" value=\"standard patient\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"contactEmail\">\n        <Form.Label className=\"formLabel\">email *</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"contactPhone\">\n        <Form.Label className=\"formLabel\">phone *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760001234\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"contactPhone2\">\n        <Form.Label className=\"formLabel\">phone2</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760005678\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressNumber\">\n        <Form.Label className=\"formLabel\">addressNumber</Form.Label>\n        <Form.Control type=\"number\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressStreet\">\n        <Form.Label className=\"formLabel\">addressStreet</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressTown\">\n        <Form.Label className=\"formLabel\">addressTown</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressCity\">\n        <Form.Label className=\"formLabel\">addressCity</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressParish\">\n        <Form.Label className=\"formLabel\">addressParish</Form.Label>\n        <Form.Control as=\"select\">\n          <option>none</option>\n          <option>Clarendon</option>\n          <option>Hanover</option>\n          <option>Kingston</option>\n          <option>Manchester</option>\n          <option>Portland</option>\n          <option>St. Andrew</option>\n          <option>St. Ann</option>\n          <option>St. Catherine</option>\n          <option>St. Elizabeth</option>\n          <option>St. James</option>\n          <option>St. Mary</option>\n          <option>St. Thomas</option>\n          <option>Trelawny</option>\n          <option>Westmoreland</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressCountry\">\n        <Form.Label className=\"formLabel\">addressCountry</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressPostalCode\">\n        <Form.Label className=\"formLabel\">addressPostalCode</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"referralDate\">\n        <Form.Label className=\"formLabel\">referralDate: YYYY-MM-DD</Form.Label>\n        <Form.Control type=\"date\" placeholder={today}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"referralReason\">\n        <Form.Label className=\"formLabel\">referralReason</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"referralReason\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"referralPhysicianName\">\n        <Form.Label className=\"formLabel\">referralPhysicianName</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"referralPhysicianName\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"referralPhysicianPhone\">\n        <Form.Label className=\"formLabel\">referralPhysicianPhone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"referralPhysicianPhone\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"referralPhysicianEmail\">\n        <Form.Label className=\"formLabel\">referralPhysicianEmail</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"referralPhysicianAddress\">\n        <Form.Label className=\"formLabel\">referralPhysicianAddress</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"referralPhysicianAddress\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"attendingPhysician\">\n        <Form.Label className=\"formLabel\">attendingPhysician</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"attendingPhysician\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"occupationRole\">\n        <Form.Label className=\"formLabel\">occupationRole</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"occupationRole\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"occupationEmployerName\">\n        <Form.Label className=\"formLabel\">occupationEmployerName</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"occupationEmployerName\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"occupationEmployerEmail\">\n        <Form.Label className=\"formLabel\">occupationEmployerEmail</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"occupationEmployerPhone\">\n        <Form.Label className=\"formLabel\">occupationEmployerPhone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"occupationEmployerPhone\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"occupationEmployerAddress\">\n        <Form.Label className=\"formLabel\">occupationEmployerAddress</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"occupationEmployerAddress\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"insuranceCompany\">\n        <Form.Label className=\"formLabel\">insuranceCompany</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"insuranceCompany\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"insurancePolicyNumber\">\n        <Form.Label className=\"formLabel\">insurancePolicyNumber</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"insurancePolicyNumber\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"insuranceExpiryDate\">\n        <Form.Label className=\"formLabel\">insuranceExpiryDate</Form.Label>\n        <Form.Control type=\"date\" placeholder={today}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"insuranceDescription\">\n        <Form.Label className=\"formLabel\">insuranceDescription</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"insuranceDescription\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"insuranceSubscriberCompany\">\n        <Form.Label className=\"formLabel\">insuranceSubscriberCompany</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"insuranceSubscriberCompany\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"insuranceSubscriberDescription\">\n        <Form.Label className=\"formLabel\">insuranceSubscriberDescription</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"insuranceSubscriberDescription\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"loginFormBtn\">Create</Button>\n      <Button variant=\"danger\" className=\"loginFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default CreatePatientForm;\n","import React from 'react';\n\nimport PatientItem from '../../items/patient/PatientItem';\nimport './UserList.css';\n\nconst SearchPatientList = props => {\n\n  const {...filter} = props.filter;\n  let patients2 = props.patients;\n  let propsPatients = [];\n\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'loggedIn') {\n    propsPatients = patients2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field === 'patient' && filter.key === 'active') {\n    propsPatients = patients2.filter(x => x.active === filter.value);\n  }\n\n  if (filter.field !== 'patient') {\n    propsPatients = patients2;\n  }\n\n  let count = 0;\n\n  const patients = propsPatients.map(patient => {\n\n    count = propsPatients.indexOf(patient)+1;\n\n    return (\n      <PatientItem\n        key={count}\n        patient={patient}\n        canDelete={props.canDelete}\n        showDetails={props.showDetails}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{patients}</ul>;\n};\n\nexport default SearchPatientList;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { PDFViewer, Page, Text, View, Document, StyleSheet, Image } from '@react-pdf/renderer';\nimport moment from 'moment';\nimport loadingGif from '../../assets/loading.gif';\nimport letterHead from '../../assets/letterhead.jpg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport \"./pdfview.css\"\n\n\nconst styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35,\n  },\n  title: {\n    fontSize: 24,\n    textAlign: 'center',\n    fontFamily: 'Times-Roman'\n  },\n  author: {\n    fontSize: 12,\n    textAlign: 'center',\n    marginBottom: 40,\n  },\n  subtitle: {\n    fontSize: 18,\n    margin: 12,\n    fontFamily: 'Times-Roman'\n  },\n  text: {\n    margin: 12,\n    fontSize: 14,\n    textAlign: 'justify',\n    fontFamily: 'Times-Roman'\n  },\n  image: {\n    // marginVertical: 15,\n    // marginHorizontal: 100,\n  },\n  header: {\n    fontSize: 12,\n    marginBottom: 20,\n    textAlign: 'center',\n    color: 'grey',\n  },\n  pageNumber: {\n    position: 'absolute',\n    fontSize: 12,\n    bottom: 30,\n    left: 0,\n    right: 0,\n    textAlign: 'center',\n    color: 'grey',\n  },\n\n  page: {\n    flexDirection: 'row',\n    backgroundColor: '#E4E4E4'\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1\n  }\n\n});\n\n\n\nconst PdfView = (props) =>{\n\nreturn (\n  <div className=\"pdfViewBg\">\n    <div className=\"pdfView\">\n\n    <Col className=\"pdfViewClose\">\n    <Button variant=\"outline-danger\" size=\"sm\" class=\"centered_btn\" onClick={props.close}>X</Button>\n    </Col>\n    <Col className=\"pdfViewCol\">\n    <h3>Document Generator</h3>\n    </Col>\n\n    <PDFViewer className=\"viewer\">\n\n    {props.pdfViewData.type === 'test' && (\n      <Document>\n        <Page style={styles.body}>\n          <Image\n            style={styles.image}\n            src={letterHead}\n          />\n\n          <Text style={styles.title}>{props.pdfViewData.type}</Text>\n          <Text style={styles.author}>Miguel de Cervantes</Text>\n\n\n          <Text style={styles.subtitle}>\n            Patient name: {props.patient.name}\n          </Text>\n          <Text style={styles.text}>\n            En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha\n            mucho tiempo que vivía un hidalgo de los de lanza en astillero, adarga\n            antigua, rocín flaco y galgo corredor. Una olla de algo más vaca que\n            carnero, salpicón las más noches, duelos y quebrantos los sábados,\n            lentejas los viernes, algún palomino de añadidura los domingos,\n            consumían las tres partes de su hacienda. El resto della concluían sayo\n            de velarte, calzas de velludo para las fiestas con sus pantuflos de lo\n            mismo, los días de entre semana se honraba con su vellori de lo más\n            fino. Tenía en su casa una ama que pasaba de los cuarenta, y una sobrina\n            que no llegaba a los veinte, y un mozo de campo y plaza, que así\n            ensillaba el rocín como tomaba la podadera. Frisaba la edad de nuestro\n            hidalgo con los cincuenta años, era de complexión recia, seco de carnes,\n            enjuto de rostro; gran madrugador y amigo de la caza. Quieren decir que\n            tenía el sobrenombre de Quijada o Quesada (que en esto hay alguna\n            diferencia en los autores que deste caso escriben), aunque por\n            conjeturas verosímiles se deja entender que se llama Quijana; pero esto\n            importa poco a nuestro cuento; basta que en la narración dél no se salga\n            un punto de la verdad\n          </Text>\n          <Text style={styles.text}>\n            _________________________________________________________\n          </Text>\n          <Text style={styles.text}>\n            Con estas y semejantes razones perdía el pobre caballero el juicio, y\n            desvelábase por entenderlas, y desentrañarles el sentido, que no se lo\n            sacara, ni las entendiera el mismo Aristóteles, si resucitara para sólo\n            ello. No estaba muy bien con las heridas que don Belianis daba y\n            recibía, porque se imaginaba que por grandes maestros que le hubiesen\n            curado, no dejaría de tener el rostro y todo el cuerpo lleno de\n            cicatrices y señales; pero con todo alababa en su autor aquel acabar su\n            libro con la promesa de aquella inacabable aventura, y muchas veces le\n            vino deseo de tomar la pluma, y darle fin al pie de la letra como allí\n            se promete; y sin duda alguna lo hiciera, y aun saliera con ello, si\n            otros mayores y continuos pensamientos no se lo estorbaran. Tuvo muchas\n            veces competencia con el cura de su lugar (que era hombre docto graduado\n            en Sigüenza), sobre cuál había sido mejor caballero, Palmerín de\n            Inglaterra o Amadís de Gaula; mas maese Nicolás, barbero del mismo\n            pueblo, decía que ninguno llegaba al caballero del Febo, y que si alguno\n            se le podía comparar, era don Galaor, hermano de Amadís de Gaula, porque\n            tenía muy acomodada condición para todo; que no era caballero\n            melindroso, ni tan llorón como su hermano, y que en lo de la valentía no\n            le iba en zaga.\n          </Text>\n          <Text style={styles.text}>\n            En resolución, él se enfrascó tanto en su lectura, que se le pasaban las\n            noches leyendo de claro en claro, y los días de turbio en turbio, y así,\n            del poco dormir y del mucho leer, se le secó el cerebro, de manera que\n            vino a perder el juicio. Llenósele la fantasía de todo aquello que leía\n            en los libros, así de encantamientos, como de pendencias, batallas,\n            desafíos, heridas, requiebros, amores, tormentas y disparates\n            imposibles, y asentósele de tal modo en la imaginación que era verdad\n            toda aquella máquina de aquellas soñadas invenciones que leía, que para\n            él no había otra historia más cierta en el mundo.\n          </Text>\n          <Text style={styles.subtitle} break>\n            Capítulo II: Que trata de la primera salida que de su tierra hizo el\n            ingenioso Don Quijote\n          </Text>\n\n          <Text style={styles.text}>\n            Hechas, pues, estas prevenciones, no quiso aguardar más tiempo a poner\n            en efeto su pensamiento, apretándole a ello la falta que él pensaba que\n            hacía en el mundo su tardanza, según eran los agravios que pensaba\n            deshacer, tuertos que enderezar, sinrazones que emendar y abusos que\n            mejorar y deudas que satisfacer. Y así, sin dar parte a persona alguna\n            de su intención y sin que nadie le viese, una mañana, antes del día, que\n            era uno de los calurosos del mes de Julio, se armó de todas sus armas,\n            subió sobre Rocinante, puesta su mal compuesta celada, embrazó su\n            adarga, tomó su lanza y por la puerta falsa de un corral salió al campo\n            con grandísimo contento y alborozo de ver con cuánta facilidad había\n            dado principio a su buen deseo. Mas apenas se vio en el campo cuando le\n            asaltó un pensamiento terrible, y tal, que por poco le hiciera dejar la\n            comenzada empresa; y fue que le vino a la memoria que no era armado\n            caballero, y que, conforme a ley de caballería, ni podía ni debía tomar\n            armas con ningún caballero; y puesto que lo fuera, había de llevar armas\n            blancas, como novel caballero, sin empresa en el escudo, hasta que por\n            su esfuerzo la ganase. Estos pensamientos le hicieron titubear en su\n            propósito; mas pudiendo más su locura que otra razón alguna, propuso de\n            hacerse armar caballero del primero que topase, a imitación de otros\n            muchos que así lo hicieron, según él había leído en los libros que tal\n            le tenían. En lo de las armas blancas, pensaba limpiarlas de manera, en\n            teniendo lugar, que lo fuesen más que un arminio; y con esto se quietó18\n            y prosiguió su camino, sin llevar otro que aquel que su caballo quería,\n            creyendo que en aquello consistía la fuerza de las aventuras\n          </Text>\n          <Text style={styles.text}>\n            Yendo, pues, caminando nuestro flamante aventurero, iba hablando consigo\n            mesmo, y diciendo: —¿Quién duda, sino que en los venideros tiempos,\n            cuando salga a luz la verdadera historia de mis famosos hechos, que el\n            sabio que los escribiere no ponga, cuando llegue a contar esta mi\n            primera salida tan de mañana, desta manera?: Apenas había el rubicundo\n            Apolo tendido por la faz de la ancha y espaciosa tierra las doradas\n            hebras de sus hermosos cabellos, y apenas los pequeños y pintados\n            pajarillos con sus arpadas lenguas habían saludado con dulce y meliflua\n            armonía la venida de la rosada Aurora, que, dejando la blanda cama del\n            celoso marido, por las puertas y balcones del manchego horizonte a los\n            mortales se mostraba, cuando el famoso caballero don Quijote de la\n            Mancha, dejando las ociosas plumas, subió sobre su famoso caballo\n            Rocinante y comenzó a caminar por el antiguo y conocido Campo de\n            Montiel.\n          </Text>\n          <Text style={styles.text}>\n            Y era la verdad que por él caminaba; y añadió diciendo: —Dichosa edad y\n            siglo dichoso aquel adonde saldrán a luz las famosas hazañas mías,\n            dignas de entallarse en bronces, esculpirse en mármoles y pintarse en\n            tablas, para memoria en lo futuro. ¡Oh tú, sabio encantador, quienquiera\n            que seas, a quien ha de tocar el ser coronista desta peregrina historia!\n            Ruégote que no te olvides de mi buen Rocinante, compañero eterno mío en\n            todos mis caminos y carreras.\n          </Text>\n          <Text style={styles.text}>\n            Luego volvía diciendo, como si verdaderamente fuera enamorado: —¡Oh\n            princesa Dulcinea, señora deste cautivo corazón! Mucho agravio me\n            habedes fecho en despedirme y reprocharme con el riguroso afincamiento\n            de mandarme no parecer ante la vuestra fermosura. Plégaos, señora, de\n            membraros deste vuestro sujeto corazón, que tantas cuitas por vuestro\n            amor padece. Con estos iba ensartando otros disparates, todos al modo de\n            los que sus libros le habían enseñado, imitando en cuanto podía su\n            lenguaje. Con esto caminaba tan despacio, y el sol entraba tan apriesa y\n            con tanto ardor, que fuera bastante a derretirle los sesos, si algunos\n            tuviera\n          </Text>\n          <Text style={styles.text}>\n            Casi todo aquel día caminó sin acontecerle cosa que de contar fuese, de\n            lo cual se desesperaba, porque quisiera topar luego luego con quien\n            hacer experiencia del valor de su fuerte brazo. Autores hay que dicen\n            que la primera aventura que le avino fue la del Puerto Lápice, otros\n            dicen que la de los molinos de viento; pero lo que yo he podido\n            averiguar en este caso, y lo que he hallado escrito en los anales de la\n            Mancha, es que él anduvo todo aquel día, y, al anochecer, su rocín y él\n            se hallaron cansados y muertos de hambre, y que, mirando a todas partes\n            por ver si descubriría algún castillo o alguna majada de pastores donde\n            recogerse y adonde pudiese remediar su mucha hambre y necesidad, vio, no\n            lejos del camino por donde iba, una venta,que fue como si viera una\n            estrella que, no a los portales, sino a los alcázares de su redención le\n            encaminaba. Diose priesa a caminar, y llegó a ella a tiempo que\n            anochecía.\n          </Text>\n        </Page>\n      </Document>\n    )}\n\n    {props.pdfViewData.type === 'referral' && (\n      <Document>\n        <Page style={styles.body}>\n          <Image\n            style={styles.image}\n            src={letterHead}\n          />\n\n          <Text style={styles.title}>{props.pdfViewData.type}</Text>\n          <Text style={styles.author}>Miguel de Cervantes</Text>\n\n\n          <Text style={styles.subtitle}>\n            Capítulo I: Que trata de la condición y ejercicio del famoso hidalgo D.\n            Quijote de la Mancha\n          </Text>\n          <Text style={styles.text}>\n            En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha\n            mucho tiempo que vivía un hidalgo de los de lanza en astillero, adarga\n            antigua, rocín flaco y galgo corredor.\n          </Text>\n          <Text style={styles.text}>\n            _________________________________________________________\n          </Text>\n          <Text style={styles.text}>\n            Con estas y semejantes razones perdía el pobre caballero el juicio, y\n            desvelábase por entenderlas, y desentrañarles el sentido, que no se lo\n            sacara, ni las entendiera el mismo\n          </Text>\n          <Text style={styles.text}>\n            En resolución, él se enfrascó tanto en su lectura, que se le pasaban las\n            noches leyendo de claro en claro, y los días de turbio en turbio, y así,\n            del poco dormir y del mucho leer, se\n          </Text>\n\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'admissionReminder' && (\n      <Document>\n        <Page style={styles.body}>\n          <Image\n            style={styles.image}\n            src={letterHead}\n          />\n\n          <Text style={styles.title}>{props.pdfViewData.type}</Text>\n          <Text style={styles.author}>Miguel de Cervantes</Text>\n\n\n          <Text style={styles.subtitle}>\n            Capítulo I: Que trata de la condición y ejercicio del famoso hidalgo D.\n            Quijote de la Mancha\n          </Text>\n          <Text style={styles.text}>\n            En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha\n            mucho tiempo que vivía un hidalgo de los de lanza en astillero, adarga\n            antigua, rocín flaco y galgo corredor.\n          </Text>\n          <Text style={styles.text}>\n            _________________________________________________________\n          </Text>\n          <Text style={styles.text}>\n            Es, pues, de saber, que este sobredicho hidalgo, los ratos que estaba\n            ocioso (que eran los más del año) se daba a leer libros de caballerías\n            con tanta afición y gusto, que olvidó\n          </Text>\n\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'sickNote' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'insurance' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'diagnosisTesting' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'prescription' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'treatmentConsent' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'treatmentInstructions' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'unfitToFly' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n\n    </PDFViewer>\n\n    </div>\n  </div>\n)\n\n}\n\nexport default PdfView;\n","import React from 'react';\n\nimport AddressItem from '../../items/user/AddressItem';\nimport './UserList.css';\n\nconst PatientAddressList = props => {\n\n  const {...filter} = props.filter;\n  let addresses2 = props.addresses;\n  let propsAddresses = [];\n\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number > b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number < b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street > b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street < b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town > b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town < b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city > b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city < b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish > b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish < b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country > b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country < b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode > b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode < b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'primary') {\n    propsAddresses = addresses2.filter(x => x.primary === filter.value);\n  }\n  if (filter.field !== 'address') {\n    propsAddresses = addresses2;\n  }\n\n  let count = 0;\n\n  const addresses = propsAddresses.map(address => {\n\n    count = propsAddresses.indexOf(address)+1;\n\n    return (\n      <AddressItem\n        key={count}\n        address={address}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        makePrimary={props.makePrimary}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{addresses}</ul>;\n};\n\nexport default PatientAddressList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst NextOfKinItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Name: <span className=\"bold\">{props.nextOfKin.name}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Relation: <span className=\"bold\">{props.nextOfKin.relation}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.nextOfKin.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Relation: <span className=\"bold\">{props.nextOfKin.relation}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Email: <span className=\"bold\">{props.nextOfKin.contact.email}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Phone: <span className=\"bold\">{props.nextOfKin.contact.phone}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Phone2: <span className=\"bold\">{props.nextOfKin.contact.phone2}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.nextOfKin)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default NextOfKinItem;\n","import React from 'react';\n\nimport NextOfKinItem from '../../items/patient/NextOfKinItem';\nimport './UserList.css';\n\nconst PatientNextOfKinList = props => {\n\n  const {...filter} = props.filter;\n  let nextOfKin2 = props.nextOfKin;\n  let propsNextOfKin = [];\n\n  if (filter.field === 'nextOfKin' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'nextOfKin' && filter.key === 'name' && filter.value === 'Descending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'nextOfKin' && filter.key === 'relation' && filter.value === 'Ascending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.relation > b.relation) ? 1 : -1);\n  }\n  if (filter.field === 'nextOfKin' && filter.key === 'relation' && filter.value === 'Descending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.relation < b.relation) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'nextOfKin') {\n    propsNextOfKin = nextOfKin2;\n  }\n\n  let count = 0;\n\n  const nextOfKin = propsNextOfKin.map(nextOfKinItem => {\n    // console.log('nok',nextOfKinItem);\n    count = propsNextOfKin.indexOf(nextOfKinItem)+1;\n\n    return (\n      <NextOfKinItem\n        key={count}\n        nextOfKin={nextOfKinItem}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        makePrimary={props.makePrimary}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{nextOfKin}</ul>;\n};\n\nexport default PatientNextOfKinList;\n","import React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst AttachmentItem = props => {\n\n  const [deleteState, setDeleteState] = useState(false);\n  const handleDeleteStateChange = () => {\n    if (deleteState === true) {\n      setDeleteState(false);\n    }\n    if (deleteState === false) {\n      setDeleteState(true);\n    }\n   }\n\n  return (\n    <li key={props.key} className=\"\">\n\n        <Row>\n\n          <a href={props.attachment} target=\"_blank\" rel=\"noopener noreferrer\">{props.attachment}</a>\n\n          {props.canDelete === true && (\n            <FontAwesomeIcon icon={faEraser} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {props.canDelete === true &&\n             deleteState === true && (\n            <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, {\n              type: props.type,\n              attachment: props.attachment,\n              item: props.item\n            })}>Delete</Button>\n          )}\n        </Row>\n\n    </li>\n  )\n}\n\nexport default AttachmentItem;\n","import React from 'react';\n\nimport AttachmentItem from '../../items/patient/AttachmentItem';\nimport './UserList.css';\n\nconst PatientAttachmentList = props => {\n\n  let count = 0;\n\n  const attachments = props.attachments.map(attachment => {\n    count = props.attachments.indexOf(attachment)+1;\n\n    return (\n      <AttachmentItem\n        key={count}\n        item={props.item}\n        attachment={attachment}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        type={props.type}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{attachments}</ul>;\n};\n\nexport default PatientAttachmentList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './PatientItem.css';\n\nconst AllergyItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.allergy.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.allergy.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.allergy.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.allergy.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'allergy',data:props.allergy})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.allergy}\n                attachments={props.allergy.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"allergy\"\n              />\n              </li>\n              <li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              </li>\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.allergy)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AllergyItem;\n","import React from 'react';\n\nimport AllergyItem from '../../items/patient/AllergyItem';\nimport './UserList.css';\n\nconst PatientAllergyList = props => {\n\n  const {...filter} = props.filter;\n  let allergies2 = props.allergies;\n  let propsAllergies = [];\n\n  if (filter.field === 'allergy' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsAllergies = allergies2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'allergy' && filter.key === 'title' && filter.value === 'Descending') {\n    propsAllergies = allergies2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'allergy' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsAllergies = allergies2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'allergy' && filter.key === 'type' && filter.value === 'Descending') {\n    propsAllergies = allergies2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'allergy') {\n    propsAllergies = allergies2;\n  }\n\n  let count = 0;\n\n  const allergies = propsAllergies.map(allergy => {\n    count = propsAllergies.indexOf(allergy)+1;\n\n    return (\n      <AllergyItem\n        key={count}\n        allergy={allergy}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{allergies}</ul>;\n};\n\nexport default PatientAllergyList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './PatientItem.css';\n\nconst MedicationItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.medication.title}</span>\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.medication.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.medication.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.medication.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'medication',data:props.medication})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.medication}\n                attachments={props.medication.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"medication\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.medication)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default MedicationItem;\n","import React from 'react';\n\nimport MedicationItem from '../../items/patient/MedicationItem';\nimport './UserList.css';\n\nconst PatientMedicationList = props => {\n\n  const {...filter} = props.filter;\n  let medication2 = props.medication;\n  let propsMedication = [];\n\n  if (filter.field === 'medication' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsMedication = medication2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'medication' && filter.key === 'title' && filter.value === 'Descending') {\n    propsMedication = medication2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'medication' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsMedication = medication2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'medication' && filter.key === 'type' && filter.value === 'Descending') {\n    propsMedication = medication2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'medication') {\n    propsMedication = medication2;\n  }\n\n  let count = 0;\n\n  const medication = propsMedication.map(medicationItem => {\n    count = propsMedication.indexOf(medicationItem)+1;\n\n    return (\n      <MedicationItem\n        key={count}\n        medication={medicationItem}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{medication}</ul>;\n};\n\nexport default PatientMedicationList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst ImageItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n          <a href={props.image.path} target=\"_blank\" rel=\"noopener noreferrer\">{props.image.name}</a>\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.image.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.image.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.image.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.image)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n\n};\n\nexport default ImageItem;\n","import React from 'react';\n\nimport ImageItem from '../../items/patient/ImageItem';\nimport './UserList.css';\n\nconst PatientImageList = props => {\n\n  const {...filter} = props.filter;\n  let images2 = props.images;\n  let propsImages = [];\n\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'image') {\n    propsImages = images2;\n  }\n\n  let count = 0;\n\n  const images = propsImages.map(image => {\n\n    count = propsImages.indexOf(image)+1;\n\n    return (\n      <ImageItem\n        key={count}\n        image={image}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"imageList\">{images}</ul>;\n};\n\nexport default PatientImageList;\n","import React from 'react';\n\nimport FileItem from '../../items/patient/FileItem';\nimport './UserList.css';\n\nconst UserFileList = props => {\n\n  const {...filter} = props.filter;\n  let files2 = props.files;\n  let propsFiles = [];\n\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'file') {\n    propsFiles = files2;\n  }\n\n  let count = 0;\n\n  const files = propsFiles.map(file => {\n\n    count = propsFiles.indexOf(file)+1;\n\n    return (\n      <FileItem\n        key={count}\n        file={file}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{files}</ul>;\n};\n\nexport default UserFileList;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst NoteItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Note: <span className=\"bold\">{props.note}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.note)}>Delete</Button>\n              )}\n            </Row>\n            )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\n\nimport NoteItem from '../../items/patient/NoteItem';\nimport './UserList.css';\n\nconst PatientNoteList = props => {\n\n  const {...filter} = props.filter;\n  let notes2 = props.notes;\n  let propsNotes = [];\n\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Ascending') {\n    propsNotes = notes2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Descending') {\n    propsNotes = notes2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'note') {\n    propsNotes = notes2;\n  }\n\n  let count = 0;\n\n  const notes = propsNotes.map(note => {\n\n    count = propsNotes.indexOf(note)+1;\n\n    return (\n      <NoteItem\n        key={count}\n        note={note}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{notes}</ul>;\n};\n\nexport default PatientNoteList;\n","import React, { useState } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst TagItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Tag: <span className=\"bold\">{props.tag}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.tag)}>Delete</Button>\n              )}\n            </Row>\n            )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default TagItem;\n","import React from 'react';\n\nimport TagItem from '../../items/patient/TagItem';\nimport './UserList.css';\n\nconst PatientTagList = props => {\n\n  const {...filter} = props.filter;\n  let tags2 = props.tags;\n  let propsTags = [];\n\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Ascending') {\n    propsTags = tags2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Descending') {\n    propsTags = tags2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'tag') {\n    propsTags = tags2;\n  }\n\n  let count = 0;\n\n  const tags = propsTags.map(tag => {\n\n    count = propsTags.indexOf(tag)+1;\n\n    return (\n      <TagItem\n        key={count}\n        tag={tag}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{tags}</ul>;\n};\n\nexport default PatientTagList;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './visitItem.css';\n\nconst VisitItem = props => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n  }\n\n  const [deleteState, setDeleteState] = useState(false);\n  const handleDeleteStateChange = () => {\n    if (deleteState === true) {\n      setDeleteState(false);\n    }\n    if (deleteState === false) {\n      setDeleteState(true);\n    }\n   }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Date: <span className=\"bold\">{moment.unix(props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Time: <span className=\"bold\">{props.visit.time}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.visit.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {!props.patientPage && (\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.visit)}/>\n          )}\n\n          {props.patientPage && (\n            <Link\n              to={{\n                pathname: \"/visits\",\n                state: {visit: props.visit._id}\n              }}\n            >\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </Link>\n          )}\n\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Id: <span className=\"bold\">{props.visit._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                type: <span className=\"bold\">{props.visit.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                subType: <span className=\"bold\">{props.visit.subType}</span>\n              </Card.Text>\n              </li>\n              {!props.patientPage && (\n                <li>\n                <Card.Text className=\"cardText\">\n                  Patient:\n                </Card.Text>\n                </li>\n              )}\n              {!props.patientPage && (\n                <li>\n                <Card.Text className=\"cardText\">\n                  Id: <span className=\"bold\">{props.visit.patient._id}</span>\n                </Card.Text>\n                </li>\n              )}\n              {!props.patientPage && (\n                <li>\n                <Card.Text className=\"cardText\">\n                  Name: <span className=\"bold\">{props.visit.patient.name}</span>\n                </Card.Text>\n                </li>\n              )}\n\n\n            </ul>\n            </Row>\n          )}\n          {deleteState === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.visit)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default VisitItem;\n","import React from 'react';\n\nimport VisitItem from '../../items/visit/VisitItem';\nimport './visitList.css';\n\nconst VisitList = props => {\n\n  const {...filter} = props.filter;\n  let visits2 = props.visits;\n  let propsVisits = [];\n\n  if (filter.field === 'visit' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'title' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'date' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'time' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.time > b.time) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'time' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.time < b.time) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'type' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'subType' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.subType > b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'subType' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.subType < b.subType) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'visit') {\n    propsVisits = visits2;\n  }\n\n  let count = 0;\n\n  const visits = propsVisits.map(visit => {\n\n    count = propsVisits.indexOf(visit)+1;\n\n    return (\n      <VisitItem\n        key={count}\n        visit={visit}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        patientPage={props.patientPage}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{visits}</ul>;\n};\n\nexport default VisitList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAllergyForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"allergy\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>type</option>\n          <option>title</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAllergyForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterMedicationForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"medication\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterMedicationForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterNextOfKinForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"nextOfKin\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>relation</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterNextOfKinForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterVisitForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"visit\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>title</option>\n          <option>type</option>\n          <option>subType</option>\n          <option>date</option>\n          <option>time</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterVisitForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterTagForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"tag\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>tag</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterTagForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst UpdatePatientSingleFieldForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Update Single Field</h4>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control type=\"text\" value={props.field}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"new value... (Date format = YYYY-MM-DD!!)\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default UpdatePatientSingleFieldForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddTagForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Tags</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"tags\">\n        <Form.Label className=\"formLabel\">Tags</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"tag,tag,tag,tag\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddTagForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddNextOfKinForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Next of Kin</h4>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"name\">\n        <Form.Label className=\"formLabel\">Name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"relation\">\n        <Form.Label className=\"formLabel\">Relation</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Mother</option>\n          <option>Father</option>\n          <option>Brother</option>\n          <option>Sister</option>\n          <option>Grandfather</option>\n          <option>Grandmother</option>\n          <option>Uncle</option>\n          <option>Aunt</option>\n          <option>Niece</option>\n          <option>Uncle</option>\n          <option>Cousin</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <Form.Group as={Col} controlId=\"email\">\n      <Form.Label className=\"formLabel\">Email</Form.Label>\n      <Form.Control type=\"email\" placeholder=\"relation@nextOfKin.com\"/>\n    </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"phone\">\n        <Form.Label className=\"formLabel\">Phone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+187600000\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"phone2\">\n        <Form.Label className=\"formLabel\">Phone #2</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+187600000\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddNextOfKinForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddAllergyForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Allergy</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label className=\"formLabel\">Title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label className=\"formLabel\">Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Food</option>\n          <option>Drug</option>\n        </Form.Control>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row>\n    <Form.Group as={Col} controlId=\"description\">\n      <Form.Label className=\"formLabel\">Description</Form.Label>\n      <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n    </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label className=\"formLabel\">File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAllergyForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddMedicationForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Medication</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label className=\"formLabel\">Title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label className=\"formLabel\">Type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label className=\"formLabel\">Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label className=\"formLabel\">File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddMedicationForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddAttachmentForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Attachment</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"attachment\">\n        <Form.Label className=\"formLabel\">Attachment</Form.Label>\n        <Form.Control type=\"textarea\" placeholder=\"file link address\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label className=\"formLabel\">File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAttachmentForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\nimport S3 from 'react-aws-s3';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\nimport PdfView from '../pdfView/PdfView';\n\nimport PatientAddressList from '../lists/patient/PatientAddressList';\nimport PatientNextOfKinList from '../lists/patient/PatientNextOfKinList'\nimport PatientAllergyList from '../lists/patient/PatientAllergyList'\nimport PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientImageList from '../lists/patient/PatientImageList'\nimport PatientFileList from '../lists/patient/PatientFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport PatientNoteList from '../lists/patient/PatientNoteList'\nimport PatientTagList from '../lists/patient/PatientTagList'\nimport VisitList from '../lists/visit/VisitList'\n\nimport FilterAddressForm from '../forms/filter/FilterAddressForm';\nimport FilterAllergyForm from '../forms/filter/FilterAllergyForm';\nimport FilterMedicationForm from '../forms/filter/FilterMedicationForm';\nimport FilterNextOfKinForm from '../forms/filter/FilterNextOfKinForm';\nimport FilterVisitForm from '../forms/filter/FilterVisitForm';\nimport FilterImageForm from '../forms/filter/FilterImageForm';\nimport FilterFileForm from '../forms/filter/FilterFileForm';\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../forms/filter/FilterNoteForm';\nimport FilterTagForm from '../forms/filter/FilterTagForm';\n\nimport UpdatePatientSingleFieldForm from '../forms/add/UpdatePatientSingleFieldForm';\nimport AddAddressForm from '../forms/add/AddAddressForm';\nimport AddAttendanceForm from '../forms/add/AddAttendanceForm';\nimport AddLeaveForm from '../forms/add/AddLeaveForm';\nimport AddNoteForm from '../forms/add/AddNoteForm';\nimport AddTagForm from '../forms/add/AddTagForm';\nimport AddImageForm from '../forms/add/AddImageForm';\nimport AddFileForm from '../forms/add/AddFileForm';\nimport AddNextOfKinForm from '../forms/add/AddNextOfKinForm';\nimport AddAllergyForm from '../forms/add/AddAllergyForm';\nimport AddMedicationForm from '../forms/add/AddMedicationForm';\nimport AddAttachmentForm from '../forms/add/AddAttachmentForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass PatientDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    selectedPatient: this.props.patient,\n    addAttachmentForm: false,\n    addAttachmentArgs: null,\n    calendarAppointments: null,\n    calendarVisits: null,\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n    showPdfView: false,\n    showPdfData: {\n      type: null,\n      data: null\n    }\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.propsPatient = this.props.patient;\n  }\n\ncomponentDidMount () {\n  console.log('...patient details component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getPocketVars(seshStore);\n  }\n  this.setState({\n    selectedPatient: this.context.selectedPatient\n  })\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.parseForCalendar({\n    appointments: this.props.patient.appointments,\n    visits: this.props.patient.visits,\n  })\n\n}\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n    console.log('...retriving pocketVars..');\n    this.context.setUserAlert('...retriving pocketVars..')\n    const token = args.token;\n    const activityId = args.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")}\n          `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          this.setState({userAlert: resData.errors[0].message})\n        } else {\n          let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n          console.log('...retriving pocketVars success...');\n          this.context.setUserAlert('...retriving pocketVars success...')\n          this.setState({\n            pocketVars: pocketVarsParsed\n          });\n        }\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.context.setUserAlert(err);\n      });\n    }\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsubmitAddAddressForm = (event) => {\n  event.preventDefault();\n  console.log('...adding address...');\n  this.context.setUserAlert('...adding address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const number = event.target.number.value;\n  const street = event.target.street.value;\n  const town = event.target.town.value;\n  const city = event.target.city.value;\n  const parish = event.target.parish.value;\n  const country = event.target.country.value;\n  const postalCode = event.target.postalCode.value;\n\n  let requestBody = {\n    query: `\n      mutation {addPatientAddress(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          addressNumber:${number},\n          addressStreet:\"${street}\",\n          addressTown:\"${town}\",\n          addressCity:\"${city}\",\n          addressParish:\"${parish}\",\n          addressCountry:\"${country}\",\n          addressPostalCode:\"${postalCode}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientAddress);\n      let responseAlert = '...address add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientAddress)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientAddress,\n        activityA: `addPatientAddress?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAddress = (args) => {\n  console.log('...deleting address...');\n  this.context.setUserAlert('...deleting address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientAddress(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\",\n          addressPrimary:${args.primary}\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientAddress);\n      let responseAlert = '...address delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientAddress)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientAddress,\n        activityA: `deletePatientAddress?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsetAddressPrimary = (args) => {\n  console.log('...setting primary address...');\n  this.context.setUserAlert('...setting primary address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {setPatientAddressPrimary(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\"\n        })\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.setPatientAddressPrimary);\n      let responseAlert = '...address set primary success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.setPatientAddressPrimary)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.setPatientAddressPrimary,\n        activityA: `setPatientAddressPrimary?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.setPatientAddressPrimary;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddNextOfKinForm = (event) => {\n  event.preventDefault();\n  console.log('...add next of kin...');\n  this.context.setUserAlert('...adding next of kin...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const name = event.target.name.value;\n  const relation = event.target.relation.value;\n  const email = event.target.email.value;\n  const phone = event.target.phone.value;\n  const phone2 = event.target.phone2.value;\n\n  let requestBody = {\n    query: `\n      mutation {addPatientNextOfKin(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          nextOfKinName:\"${name}\",\n          nextOfKinRelation:\"${relation}\",\n          nextOfKinContactEmail:\"${email}\",\n          nextOfKinContactPhone1:\"${phone}\",\n          nextOfKinContactPhone2:\"${phone2}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientNextOfKin);\n      let responseAlert = '...next of kin add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientNextOfKin)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientNextOfKin,\n        activityA: `addPatientNextOfKin?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientNextOfKin;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNextOfKin = (args) => {\n  console.log('...deleting next of kin...');\n  this.context.setUserAlert('...deleting next of kin....')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientNextOfKin(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          nextOfKinName:\"${args.name}\",\n          nextOfKinRelation:\"${args.relation}\",\n          nextOfKinContactEmail:\"${args.contact.email}\",\n          nextOfKinContactPhone1:\"${args.contact.phone1}\",\n          nextOfKinContactPhone2:\"${args.contact.phone2}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      console.log('...resData...',resData.data.deletePatientNextOfKin);\n      let responseAlert = '...next of kin delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientNextOfKin)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientNextOfKin,\n        activityA: `deletePatientNextOfKin?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientNextOfKin;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddAllergyForm = (event) => {\n  event.preventDefault();\n  console.log('...add allergy...');\n  this.context.setUserAlert('...adding allergy...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/allergy/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'allergy attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'allergy attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientAllergy(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          allergyType:\"${type}\",\n          allergyTitle:\"${title}\",\n          allergyDescription:\"${description}\",\n          allergyAttachment:\"${file2Path}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientAllergy);\n      let responseAlert = '...allergy add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientAllergy)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientAllergy,\n        activityA: `addPatientAllergy?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientAllergy;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAllergy = (args) => {\n  console.log('...deleting allergy...');\n  this.context.setUserAlert('...deleting allergy...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientAllergy(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          allergyType:\"${args.type}\",\n          allergyTitle:\"${args.title}\",\n          allergyDescription:\"${args.description}\",\n          allergyAttachments:\"${args.attachments}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientAllergy);\n      let responseAlert = '...allergy delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientAllergy)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientAllergy,\n        activityA: `deletePatientAllergy?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientAllergy;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'patient/'+patientId+'/allergy/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/patient/'+patientId+'/allergy/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `allergy attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddMedicationForm = (event) => {\n  event.preventDefault();\n  console.log('...add medication...');\n  this.context.setUserAlert('...adding medication...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n\n  if (\n      title.trim().length === 0 ||\n      type.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/medication/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'medication attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'medication attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'medication attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'medication attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientMedication(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          medicationType:\"${type}\",\n          medicationTitle:\"${title}\",\n          medicationDescription:\"${description}\",\n          medicationAttachment:\"${file2Path}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientMedication);\n      let responseAlert = '...medication add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientMedication)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientMedication,\n        activityA: `addPatientMedication?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientMedication;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteMedication = (args) => {\n  console.log('...deleting medication...');\n  this.context.setUserAlert('...deleting medication...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientMedication(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          medicationType:\"${args.type}\",\n          medicationTitle:\"${args.title}\",\n          medicationDescription:\"${args.description}\",\n          medicationAttachments:\"${args.attachments}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientMedication);\n      let responseAlert = '...medication delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientMedication)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientMedication,\n        activityA: `deletePatientMedication?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientMedication;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'patient/'+patientId+'/medication/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/patient/'+patientId+'/medication/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `medication attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartAddAttachment = (args) => {\n  console.log('...start add attachment...');\n  this.setState({\n    addAttachmentForm: true,\n    addAttachmentArgs: args\n  })\n}\ncancelAddAttachment = () => {\n  this.setState({\n    addAttachmentForm: false\n  })\n}\naddAttachment = (event) => {\n  event.preventDefault();\n  console.log('...adding attachment...');\n  this.context.setUserAlert('...adding attachment...');\n  this.setState({\n    isLoading: true,\n    addAttachmentForm: false\n  })\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n  let args = this.state.addAttachmentArgs;\n  let field = args.field;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/'+field+'/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading allergy attachment ...\")\n    console.log('...s3 uploading allergy attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: `${field} attachment`,\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: `${field} attachment`,\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: `${field} attachment`,\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: `${field} attachment`,\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let allergyTitle;\n  let allergyType;\n  let allergyDescription;\n  let allergyAttachment;\n  let medicationTitle;\n  let medicationType;\n  let medicationDescription;\n  let medicationAttachment;\n\n  if (field === 'allergy') {\n    allergyTitle = args.data.title;\n    allergyType = args.data.type;\n    allergyDescription = args.data.description;\n    allergyAttachment = file2Path;\n  }\n  if (field === 'medication') {\n    medicationTitle = args.data.title;\n    medicationType = args.data.type;\n    medicationDescription = args.data.description;\n    medicationAttachment = file2Path;\n  }\n\n  let requestBody;\n  if (field === 'allergy') {\n    requestBody = {\n      query: `\n        mutation {addPatientAllergyAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            allergyType:\"${allergyType}\",\n            allergyTitle:\"${allergyTitle}\",\n            allergyDescription:\"${allergyDescription}\",\n            allergyAttachment:\"${file2Path}\"\n          })\n          {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (field === 'medication') {\n    requestBody = {\n      query: `\n        mutation {addPatientMedicationAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            medicationType:\"${medicationType}\",\n            medicationTitle:\"${medicationTitle}\",\n            medicationDescription:\"${medicationDescription}\",\n            medicationAttachment:\"${file2Path}\"\n          })\n          {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n\n\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'allergy') {\n        // console.log('...resData...',resData.data.addPatientAllergyAttachment);\n      }\n      if (field === 'medication') {\n        // console.log('...resData...',resData.data.addPatientMedicationAttachment);\n      }\n\n      let responseAlert = '...add attachment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'allergy') {\n        this.props.updatePatient(resData.data.addPatientAllergyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.addPatientAllergyAttachment,\n          activityA: `addPatientAllergyAttachmentRegex?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n      if (field === 'medication') {\n        this.props.updatePatient(resData.data.addPatientMedicationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.addPatientMedicationAttachment,\n          activityA: `addPatientMedicationAttachment?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ndeleteAttachment = (args) => {\n  console.log('...deleting attachment...');\n  this.context.setUserAlert('...adding attachment...');\n  this.setState({isLoading: true})\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n\n  const field = args.type;\n  const attachment = args.attachment;\n  const item = args.item;\n\n  let requestBody;\n\n  if (field === 'allergy') {\n    let allergyType = item.type;\n    let allergyTitle = item.title;\n    let allergyDescription = item.description;\n    let allergyAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deletePatientAllergyAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            allergyType:\"${allergyType}\",\n            allergyTitle:\"${allergyTitle}\",\n            allergyDescription:\"${allergyDescription}\",\n            allergyAttachment:\"${allergyAttachment}\"\n          })\n          {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (field === 'medication') {\n    let medicationType = item.type;\n    let medicationTitle = item.title;\n    let medicationDescription = item.description;\n    let medicationAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deletePatientMedicationAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            medicationType:\"${medicationType}\",\n            medicationTitle:\"${medicationTitle}\",\n            medicationDescription:\"${medicationDescription}\",\n            medicationAttachment:\"${medicationAttachment}\"\n          })\n          {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'allergy') {\n        // console.log('...resData...',resData.data.deletePatientAllergyAttachment);\n      }\n      if (field === 'medication') {\n        // console.log('...resData...',resData.data.deletePatientMedicationAttachment);\n      }\n\n      let responseAlert = '...delete attachment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'allergy') {\n        this.props.updatePatient(resData.data.deletePatientAllergyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.deletePatientAllergyAttachment,\n          activityA: `deletePatientAllergyAttachment?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n      if (field === 'medication') {\n        this.props.updatePatient(resData.data.deletePatientMedicationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.deletePatientMedicationAttachment,\n          activityA: `deletePatientMedicationAttachment?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'patient/'+patientId+'/'+field+'/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/patient/'+patientId+'/'+field+'/attachments/';\n      const filename = attachment;\n      const filename2 = filename.replace(filePath2,'');\n      console.log('1:',filePath);\n      console.log('2:',filename);\n      console.log('3:',filename2);\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachment..')\n      console.log('...s3 deleting attachment..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `${field} attachment`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: `${field} attachment`,\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename2, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding image...');\n  this.context.setUserAlert('...adding image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  const patientName = this.props.patient.name;\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/images';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientImage(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          imageName:\"${imageName}\",\n          imageType:\"${imageType}\",\n          imagePath:\"${imagePath}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientImage);\n      let responseAlert = '...image add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientImage)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientImage,\n        activityA: `addPatientImage?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n  console.log('...deleting image...');\n  this.context.setUserAlert('...deleting image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n\n  const filePath = 'patient/'+patientId+'/images';\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n    mutation {deletePatientImage(\n      activityId:\"${activityId}\",\n      patientId:\"${patientId}\",\n      patientInput:{\n        imageName:\"${args.name}\",\n        imageType:\"${args.type}\",\n        imagePath:\"${args.path}\"\n      })\n    {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientImage);\n      let responseAlert = '...image delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientImage)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientImage,\n        activityA: `deletePatientImage?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding file...');\n  this.context.setUserAlert('...adding file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  const patientName = this.props.patient.name;\n\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientFile(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          fileName:\"${file2Name}\",\n          fileType:\"${file2Type}\",\n          filePath:\"${file2Path}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientFile);\n      let responseAlert = '...file add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientFile)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientFile,\n        activityA: `addPatientFile?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n  console.log('...deleting file...');\n  this.context.setUserAlert('...deleting file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n\n  let requestBody = {\n    query: `\n    mutation {deletePatientFile(\n      activityId:\"${activityId}\",\n      patientId:\"${patientId}\",\n      patientInput:{\n        fileName:\"${args.name}\",\n        fileType:\"${args.type}\",\n        filePath:\"${args.path}\"\n      })\n    {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientFile);\n      let responseAlert = '...file delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientFile)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientFile,\n        activityA: `deletePatientFile?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'patient/'+patientId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding notes...');\n  this.context.setUserAlert('...adding notes...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const notes = event.target.notes.value.replace(/\\n/g, '');\n\n  let requestBody = {\n    query: `\n      mutation {addPatientNotes(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          notes:\"${notes}\",\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientNotes)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientNotes,\n        activityA: `addPatientNotes?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n  console.log('...deleting note...');\n  this.context.setUserAlert('...deleting note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientNote(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          note:\"${args}\"\n        })\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientNote)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientNote,\n        activityA: `deletePatientNote?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddTagForm = (event) => {\n  event.preventDefault();\n  console.log('...adding tags...');\n  this.context.setUserAlert('...adding tags...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const tags = event.target.tags.value.replace(/\\n/g, '');\n\n  let requestBody = {\n    query: `\n      mutation {addPatientTags(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          tags:\"${tags}\",\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientTags);\n      let responseAlert = '...tags add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientTags)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientTags,\n        activityA: `addPatientTags?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientTags;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteTag = (args) => {\n  console.log('...deleting tag...');\n  this.context.setUserAlert('...deleting tag...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientTag(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          tag:\"${args}\"\n        })\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientTag);\n      let responseAlert = '...tag delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientTag)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientTag,\n        activityA: `deletePatienTag?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientTag;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n    mutation {updatePatientSingleField(\n      activityId:\"${activityId}\",\n      patientId:\"${patientId}\",\n      field:\"${field}\",\n      query:\"${query}\"\n    )\n    {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updatePatientSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.updatePatientSingleField)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.updatePatientSingleField,\n        activityA: `updatePatientSingleField?activityId:${activityId},patientId:${patientId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.updatePatientSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing patient dates for calendar...');\n\n  let calendarAppointments = args.appointments.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n        field: 'appointments'\n      }\n    }))\n  let calendarVisits = args.visits.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        field: 'visits'\n      }\n    }))\n    this.setState({\n      calendarAppointments: calendarAppointments,\n      calendarVisits: calendarVisits,\n    })\n}\nviewCalendarEvent = (args) => {\n\n  let input = args.event.extendedProps.props;\n  let data;\n\n  if (input.field === 'appointments') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      location: input.location,\n      description: input.description,\n      important: input.important,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAppointment', data: data, goLink: true}\n    })\n  }\n  if (input.field === 'visits') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarVisit', data: data, goLink: true}\n    })\n  }\n\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\nshowPdfView = (args) => {\n  this.setState({\n    showPdfView: true,\n    showPdfData: {\n      type: args.type,\n      data: args.data\n    }\n  })\n}\n\nclosePdfView = () => {\n  this.setState({\n    showPdfView: false,\n    showPdfData: {\n      type: null,\n      data: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {!this.props.patient && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={3} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'address')}>Addresses</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'nextOfKin')}>Next Of Kin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'allergy')}>Allergies</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'medication')}>Medication</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'image')}>Images</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'file')}>Files</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'appointment')}>Appointments</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"10\" onClick={this.menuSelect.bind(this, 'visit')}>Visits</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"11\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"12\" onClick={this.menuSelect.bind(this, 'tag')}>Tag</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"13\" onClick={this.menuSelect.bind(this, 'doc')}>Document</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'address' && (\n                  <FilterAddressForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'nextOfKin' && (\n                  <FilterNextOfKinForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'allergy' && (\n                  <FilterAllergyForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'medication' && (\n                  <FilterMedicationForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'image' && (\n                  <FilterImageForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'file' && (\n                  <FilterFileForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'appointment' && (\n                  <FilterAppointmentForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'visit' && (\n                  <FilterVisitForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'note' && (\n                  <FilterNoteForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'tag' && (\n                  <FilterTagForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n\n            )}\n          </Col>\n\n          {this.props.patient && (\n            <Col md={9} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdatePatientSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n                <Tab.Content className=\"tabContent\">\n                  <Tab.Pane eventKey=\"1\">\n                    Patient Basic:\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.title}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                        <p className=\"listGroupText\">Fisrt Name:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.name}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'name')}>Edit</Button>\n                        <p className=\"listGroupText\">Last Name:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.lastName}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'lastName')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText\">Username:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.username}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">DOB:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.dob.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                        <p className=\"listGroupText\">Age:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.age}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">DOB:</p>\n                        <p className=\"listGroupText\">Gender:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.gender}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Email:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.contact.email}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Phone:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.contact.phone}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                        <p className=\"listGroupText\">Phone 2:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.contact.phone2}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Role:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.role}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'role')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Registration:</p>\n                        <p className=\"listGroupText\">Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.registration.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <p className=\"listGroupText\">Number:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.registration.number}</p>\n                      </ListGroup.Item>\n\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Referral:</p>\n                        <p className=\"listGroupText\">Date:</p>\n                        {this.props.patient.referral.date && (\n                          <p className=\"listGroupText bold\">{moment.unix(this.props.patient.referral.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        )}\n\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.date')}>Edit</Button>\n                        <p className=\"listGroupText\">Reason:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.reason}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.reason')}>Edit</Button>\n                        <p className=\"listGroupText\">Referral Physician:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.physician.name}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.name')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Referral Physician:</p>\n                        <p className=\"listGroupText\">Email:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.physician.email}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.email')}>Edit</Button>\n                        <p className=\"listGroupText\">Phone:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.physician.phone}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.phone')}>Edit</Button>\n                      </ListGroup.Item>\n\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Attending Physician:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.attendingPhysician}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'attendingPhysician')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Occupation:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.occupation.role}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.role')}>Edit</Button>\n                      <p className=\"listGroupText\">Employer:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.name}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.name')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Contact:</p>\n                        <p className=\"listGroupText\">Phone:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.phone}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.phone')}>Edit</Button>\n                        <p className=\"listGroupText\">Email:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.email}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.email')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Address:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.address}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.address')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Insurance:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.insurance.company}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.company')}>Edit</Button>\n                        <p className=\"listGroupText bold\">{this.props.patient.insurance.policyNumber}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.policyNumber')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText bold\">{this.props.patient.insurance.description}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.description')}>Edit</Button>\n                      {this.props.patient.insurance.expiryDate && (\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.insurance.expiryDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      )}\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.expiryDate')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Subscriber:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.insurance.subscriber.company}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.subscriber.company')}>Edit</Button>\n                      <p className=\"listGroupText bold\">{this.props.patient.insurance.subscriber.description}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.subscriber.description')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Date of Death:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.expiryDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'expiryDate')}>Edit</Button>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"2\">\n                    Patient Admin\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Id:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient._id}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">LoggedIn:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.loggedIn.toString()}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">ClientConnected:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.clientConnected.toString()}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Verified:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.verification.verified.toString()}</p>\n                        <p className=\"listGroupText\">Type:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.verification.type}</p>\n                        <p className=\"listGroupText\">Code:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.verification.code}</p>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"3\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">User Address List:</p>\n                      <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"success\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'address' && (\n                        <AddAddressForm\n                          onConfirm={this.submitAddAddressForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientAddressList\n                      filter={this.state.filter}\n                      addresses={this.props.patient.addresses}\n                      authId={this.context.activityId}\n                      onDelete={this.deleteAddress}\n                      canDelete={this.state.canDelete}\n                      makePrimary={this.setAddressPrimary}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"4\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Next of Kin List:</p>\n                      <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"success\" onClick={this.startAdd.bind(this, 'nextOfKin')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'nextOfKin' && (\n                        <AddNextOfKinForm\n                          onConfirm={this.submitAddNextOfKinForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientNextOfKinList\n                      filter={this.state.filter}\n                      nextOfKin={this.props.patient.nextOfKin}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteNextOfKin}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"5\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Allergies List:</p>\n                      <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"success\" onClick={this.startAdd.bind(this, 'allergy')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'allergy' && (\n                        <AddAllergyForm\n                          onConfirm={this.submitAddAllergyForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <PatientAllergyList\n                      filter={this.state.filter}\n                      allergies={this.props.patient.allergies}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteAllergy}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"6\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Medication List:</p>\n                      <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"success\" onClick={this.startAdd.bind(this, 'medication')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'medication' && (\n                        <AddMedicationForm\n                          onConfirm={this.submitAddMedicationForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <PatientMedicationList\n                      filter={this.state.filter}\n                      medication={this.props.patient.medication}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteMedication}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"7\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Image List:</p>\n                      <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'image' && (\n                        <AddImageForm\n                          onConfirm={this.submitAddImageForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientImageList\n                      filter={this.state.filter}\n                      images={this.props.patient.images}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteImage}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"8\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient File List:</p>\n                      <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'file' && (\n                        <AddFileForm\n                          onConfirm={this.submitAddFileForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientFileList\n                      filter={this.state.filter}\n                      files={this.props.patient.files}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteFile}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"9\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Appointment List:</p>\n                      <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    </Row>\n                    <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                      <Tab eventKey=\"1\" title=\"list\">\n                      <UserAppointmentList\n                        filter={this.state.filter}\n                        appointments={this.props.patient.appointments}\n                        authId={this.context.activityId}\n                      />\n                      </Tab>\n                      <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                        <h3>Calendar</h3>\n                        <FullCalendar\n                          defaultView=\"dayGridMonth\"\n                          plugins={[dayGridPlugin]}\n                          events={this.state.calendarAppointments}\n                          eventClick={this.viewCalendarEvent}\n                        />\n                      </Tab>\n                    </Tabs>\n\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"10\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Visit List:</p>\n                      <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    </Row>\n                    <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                      <Tab eventKey=\"1\" title=\"list\">\n                      <VisitList\n                        filter={this.state.filter}\n                        visits={this.props.patient.visits}\n                        authId={this.context.activityId}\n                        patientPage={true}\n                      />\n                      </Tab>\n                      <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                        <h3>Calendar</h3>\n                        <FullCalendar\n                          defaultView=\"dayGridMonth\"\n                          plugins={[dayGridPlugin]}\n                          events={this.state.calendarVisits}\n                          eventClick={this.viewCalendarEvent}\n                        />\n                      </Tab>\n                    </Tabs>\n\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"11\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Notes:</p>\n                      <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role === 'Admin' && (\n                        <Button variant=\"success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'note' && (\n                        <AddNoteForm\n                          onConfirm={this.submitAddNoteForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientNoteList\n                      filter={this.state.filter}\n                      notes={this.props.patient.notes}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteNote}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"12\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Tags:</p>\n                      <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      <Button variant=\"success\" onClick={this.startAdd.bind(this, 'tag')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'tag' && (\n                        <AddTagForm\n                          onConfirm={this.submitAddTagForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientTagList\n                      filter={this.state.filter}\n                      tags={this.props.patient.tags}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteTag}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"13\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Docu-Gen:</p>\n\n                    </Row>\n                    <Row className=\"displayPaneHeadRow\">\n                      <ListGroup className=\"profileBasicListGroup\">\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">Test</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'test', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">Referral</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'referral', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">admissionReminder</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'admissionReminder', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">sickNote</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'sickNote', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">insurance</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'insurance', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">diagnosisTesting</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'diagnosisTesting', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">prescription</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'prescription', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">treatmentConsent</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'treatmentConsent', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">treatmentInstructions</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'treatmentInstructions', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">unfitToFly</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'unfitToFly', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                      </ListGroup>\n                    </Row>\n                    {this.state.showPdfView === true && (\n                      <PdfView\n                        pdfViewData={this.state.showPdfData}\n                        close={this.closePdfView}\n                        patient={this.props.patient}\n                      />\n                    )}\n                  </Tab.Pane>\n                </Tab.Content>\n\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n}\n\n}\n\nexport default PatientDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterPatientForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"patient\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>active</option>\n          <option>name</option>\n          <option>username</option>\n          <option>title</option>\n          <option>role</option>\n          <option>dob</option>\n          <option>age</option>\n          <option>gender</option>\n          <option>registration.date</option>\n          <option>registration.number</option>\n          <option>contact.email</option>\n          <option>contact.phone</option>\n          <option>contact.phone2</option>\n          <option>addresses.number</option>\n          <option>addresses.street</option>\n          <option>addresses.town</option>\n          <option>addresses.city</option>\n          <option>addresses.parish</option>\n          <option>addresses.country</option>\n          <option>addresses.postalCode</option>\n          <option>addresses.primary</option>\n          <option>verification.verified</option>\n          <option>expiryDate</option>\n          <option>loggedIn</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterPatientForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport CreatePatientForm from '../../components/forms/create/CreatePatientForm';\nimport PatientList from '../../components/lists/patient/PatientList';\nimport SearchPatientList from '../../components/lists/patient/SearchPatientList';\nimport PatientDetail from '../../components/details/PatientDetail';\n\nimport FilterPatientForm from '../../components/forms/filter/FilterPatientForm';\nimport PatientSearchForm from '../../components/forms/search/PatientSearchForm';\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './patient.css';\n\nclass PatientPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    patients: null,\n    searchPatients: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    canDelete: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    selectedPatient: null,\n    creatingPatient: false,\n    newPatient: null,\n    fromGoLink: null,\n    goLinkId: null,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all patients component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    if (this.props.location.state) {\n      if (this.props.location.state.patient) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.patient\n        })\n      }\n    }\n    this.getAllPatients(seshStore);\n    if (this.props.selectedPatient) {\n      console.log('...found existing Patient selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedPatient: this.props.selectedPatient\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkPatient = resData.data.getAllPatients.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedPatient: goLinkPatient,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n        activityA: `getAllPatients?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message);\n      }\n      if (resData.data.error) {\n        this.context.setUserAlert(resData.data.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchPatients = (event) => {\n  event.preventDefault();\n  console.log('...searching patients...');\n  this.context.setUserAlert('...searching patients...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.context.activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'active' ||\n      field === 'age' ||\n      field === 'dob' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'registration.date' ||\n      field === 'expiryDate' ||\n      field === 'referral.date' ||\n      field === 'insurance.expiryDate' ||\n      field === 'insurance.expiryDate'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getPatientsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getPatientsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getPatientsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getPatientsByField);\n      }\n\n      let responseAlert = '...patient search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchPatients: resData.data.getPatientsByFieldRegex,\n          activityA: `getPatientsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchPatients: resData.data.getPatientsByField,\n          activityA: `getPatientsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nonStartCreateNewPatient = () => {\n  this.setState({\n    creatingPatient: true\n  })\n}\ncancelCreateNewPatient = () => {\n  this.setState({\n    creatingPatient: false\n  })\n}\nsubmitCreateNewPatientForm = (event) => {\n  event.preventDefault();\n  console.log('...creating new patient...');\n  this.context.setUserAlert('...creating new patient...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n\n  const active = event.target.active.checked;\n  const title = event.target.title.value;\n  const name = event.target.name.value;\n  const lastName = event.target.lastName.value;\n  const username = event.target.username.value;\n  const dob = event.target.dob.value;\n  const role = event.target.role.value;\n  const gender = event.target.gender.value;\n  const contactEmail = event.target.contactEmail.value;\n  const contactPhone = event.target.contactPhone.value;\n  const contactPhone2 = event.target.contactPhone2.value;\n  let addressNumber = event.target.addressNumber.value;\n  if (addressNumber === '') {\n    addressNumber = 0;\n  }\n  const addressStreet = event.target.addressStreet.value;\n  const addressTown = event.target.addressTown.value;\n  const addressCity = event.target.addressCity.value;\n  const addressParish = event.target.addressParish.value;\n  const addressCountry = event.target.addressCountry.value;\n  const addressPostalCode = event.target.addressPostalCode.value;\n  const referralDate = event.target.referralDate.value;\n  const referralReason = event.target.referralReason.value.replace(/\\n/g, ' ');\n  const referralPhysicianName = event.target.referralPhysicianName.value;\n  const referralPhysicianPhone = event.target.referralPhysicianPhone.value;\n  const referralPhysicianEmail = event.target.referralPhysicianEmail.value;\n  const referralPhysicianAddress = event.target.referralPhysicianAddress.value.replace(/\\n/g, ' ');\n  const attendingPhysician = event.target.attendingPhysician.value;\n  const occupationRole = event.target.occupationRole.value;\n  const occupationEmployerName = event.target.occupationEmployerName.value;\n  const occupationEmployerEmail = event.target.occupationEmployerEmail.value;\n  const occupationEmployerPhone = event.target.occupationEmployerPhone.value;\n  const occupationEmployerAddress = event.target.occupationEmployerAddress.value.replace(/\\n/g, ' ');\n  const insuranceCompany = event.target.insuranceCompany.value;\n  const insurancePolicyNumber = event.target.insurancePolicyNumber.value;\n  const insuranceDescription = event.target.insuranceDescription.value.replace(/\\n/g, ' ');\n  const insuranceExpiryDate = event.target.insuranceExpiryDate.value;\n  const insuranceSubscriberCompany = event.target.insuranceSubscriberCompany.value;\n  const insuranceSubscriberDescription = event.target.insuranceSubscriberDescription.value.replace(/\\n/g, ' ');\n\n  if (\n      active.trim().length === 0 ||\n      title.trim().length === 0 ||\n      name.trim().length === 0 ||\n      username.trim().length === 0 ||\n      dob.trim().length === 0 ||\n      role.trim().length === 0 ||\n      gender.trim().length === 0 ||\n      contactEmail.trim().length === 0 ||\n      contactPhone.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n\n  let requestBody = {\n    query: `\n      mutation {createPatient(\n        activityId:\"${activityId}\",\n        patientInput:{\n          active:${active},\n          username:\"${username}\",\n          dob:\"${dob}\",\n          title:\"${title}\",\n          name:\"${name}\",\n          lastName:\"${lastName}\",\n          role:\"${role}\",\n          gender:\"${gender}\",\n          contactEmail:\"${contactEmail}\",\n          contactPhone:\"${contactPhone}\",\n          contactPhone2:\"${contactPhone2}\",\n          addressNumber:${addressNumber},\n          addressStreet:\"${addressStreet}\",\n          addressTown:\"${addressTown}\",\n          addressCity:\"${addressCity}\",\n          addressParish:\"${addressParish}\",\n          addressCountry:\"${addressCountry}\",\n          addressPostalCode:\"${addressPostalCode}\",\n          referralDate:\"${referralDate}\",\n          referralReason:\"${referralReason}\",\n          referralPhysicianName:\"${referralPhysicianName}\",\n          referralPhysicianEmail:\"${referralPhysicianEmail}\",\n          referralPhysicianPhone:\"${referralPhysicianPhone}\",\n          attendingPhysician:\"${attendingPhysician}\",\n          occupationRole:\"${occupationRole}\",\n          occupationEmployerName:\"${occupationEmployerName}\",\n          occupationEmployerPhone:\"${occupationEmployerPhone}\",\n          occupationEmployerEmail:\"${occupationEmployerEmail}\",\n          occupationEmployerAddress:\"${occupationEmployerAddress}\",\n          insuranceCompany:\"${insuranceCompany}\",\n          insurancePolicyNumber:\"${insurancePolicyNumber}\",\n          insuranceDescription:\"${insuranceDescription}\",\n          insuranceExpiryDate:\"${insuranceExpiryDate}\",\n          insuranceSubscriberCompany:\"${insuranceSubscriberCompany}\",\n          insuranceSubscriberDescription:\"${insuranceSubscriberDescription}\"\n        })\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createPatient);\n      let responseAlert = '...create patient success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        showDetails: true,\n        creatingPatient: false,\n        tabKey: 'detail',\n        selectedPatient: resData.data.createPatient,\n        newPatient: resData.data.createPatient,\n        activityA: `createPatient?activityId:${activityId},patientId:${resData.data.createPatient._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'))\n      this.getAllPatients(seshStore);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\n\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nshowDetails = (args) => {\n\n  this.setState({\n    showDetails: true,\n    selectedPatient: args,\n    tabKey: 'detail'\n  })\n  this.props.selectPatient(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nupdatePatient = (args) => {\n  console.log('...updating selected patient...');\n  this.setState({\n    selectedPatient: args\n  })\n  this.props.selectPatient(args)\n}\n\ndeletePatient = (args) => {\n  console.log('...deleteing patient...',args);\n  this.context.setUserAlert('...deleteing patient...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientById(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientById);\n      let responseAlert = '...delete patient success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deletePatientById?activityId:${activityId},patientId:${patientId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllPatients({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n        <h1>Patients: {this.state.showDetails === true &&\n                      this.state.selectedPatient &&\n                      this.state.tabKey === 'detail' && (\n                            this.state.selectedPatient.name\n                          )}</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col lg={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterPatientForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.patients && (\n            <Col lg={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content>\n                <Tab.Pane eventKey=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                    <PatientList\n                      filter={this.state.filter}\n                      patients={this.state.patients}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      showDetails={this.showDetails}\n                      onDelete={this.deletePatient}\n                    />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Patient</h3>\n                  <Row className=\"userSearchRow\">\n                    <PatientSearchForm\n                      onConfirm={this.searchPatients}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchPatients && (\n                      <Button variant=\"primary\" className=\"centered_btn\" onClick={this.toggleSideCol}>Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchPatients && (\n                      <SearchPatientList\n                        filter={this.state.filter}\n                        patients={this.state.searchPatients}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedPatient && (\n                  <PatientDetail\n                    patient={this.state.selectedPatient}\n                    updatePatient={this.updatePatient}\n                  />\n                )}\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"new\">\n                {this.state.creatingPatient === false && (\n                  <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={this.onStartCreateNewPatient}>Create New</Button>\n                )}\n                {this.state.creatingPatient === true && (\n                  <CreatePatientForm\n                    onConfirm={this.submitCreateNewPatientForm}\n                    onCancel={this.cancelCreateNewPatient}\n                  />\n                )}\n                {this.state.newPatient && (\n                  <Row>\n                    <h3>Review New Patient</h3>\n                    {this.state.newPatient.username}\n                  </Row>\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default PatientPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './createForms.css';\n\nconst CreateAppointmentForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Create Appointment Form</h1>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"patientId\">\n        <Form.Label className=\"formLabel\">Patient: {props.patient.username}</Form.Label>\n        <Form.Control type=\"text\" value={props.patient._id}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label className=\"formLabel\">Title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label className=\"formLabel\">Type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>new_unreferred</option>\n          <option>referral</option>\n          <option>follow_up</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"subType\">\n        <Form.Label className=\"formLabel\">Sub-type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"subType\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"date\">\n        <Form.Label className=\"formLabel\">Date</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"time\">\n        <Form.Label className=\"formLabel\">Time</Form.Label>\n        <Form.Control type=\"time\" placeholder=\"time\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"location\">\n        <Form.Label className=\"formLabel\">Location</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"location\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label className=\"formLabel\">Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"important\">\n        <Form.Label className=\"formLabel\">Important</Form.Label>\n        <Form.Control type=\"checkbox\" />\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"loginFormBtn\">Create</Button>\n      <Button variant=\"danger\" className=\"loginFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default CreateAppointmentForm;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './AppointmentItem.css';\n\nconst NoteItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Note: <span className=\"bold\">{props.note}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.note)}>Delete</Button>\n              )}\n            </Row>\n            )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\n\nimport NoteItem from '../../items/appointment/NoteItem';\nimport './AppointmentList.css';\n\nconst AppointmentNoteList = props => {\n\n  const {...filter} = props.filter;\n  let notes2 = props.notes;\n  let propsNotes = [];\n\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Ascending') {\n    propsNotes = notes2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Descending') {\n    propsNotes = notes2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'note') {\n    propsNotes = notes2;\n  }\n\n  let count = 0;\n\n  const notes = propsNotes.map(note => {\n\n    count = propsNotes.indexOf(note)+1;\n\n    return (\n      <NoteItem\n        key={count}\n        note={note}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{notes}</ul>;\n};\n\nexport default AppointmentNoteList;\n","import React, { useState } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './AppointmentItem.css';\n\nconst TagItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Tag: <span className=\"bold\">{props.tag}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.tag)}>Delete</Button>\n              )}\n            </Row>\n            )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default TagItem;\n","import React from 'react';\n\nimport TagItem from '../../items/appointment/TagItem';\nimport './AppointmentList.css';\n\nconst AppointmentTagList = props => {\n\n  const {...filter} = props.filter;\n  let tags2 = props.tags;\n  let propsTags = [];\n\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Ascending') {\n    propsTags = tags2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Descending') {\n    propsTags = tags2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'tag') {\n    propsTags = tags2;\n  }\n\n  let count = 0;\n\n  const tags = propsTags.map(tag => {\n\n    count = propsTags.indexOf(tag)+1;\n\n    return (\n      <TagItem\n        key={count}\n        tag={tag}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{tags}</ul>;\n};\n\nexport default AppointmentTagList;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport UserList from '../../lists/user/UserList';\nimport './addForms.css';\n\nconst AddUserForm = (props) => {\n\n  const [user, setUser] = useState(\"\");\n  const handleSetUser = (args) => {\n    setUser(args);\n   }\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Staff</h4>\n\n    <Form.Row>\n      <UserList\n        users={props.users}\n        selectUser={handleSetUser}\n        filter={props.filter}\n      />\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"user\">\n        <Form.Label className=\"formLabel\">User</Form.Label>\n        <Form.Control type=\"text\" value={user._id}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddUserForm;\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport AddToCalendar from 'react-add-to-calendar';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport PatientAddressList from '../lists/patient/PatientAddressList';\nimport PatientNextOfKinList from '../lists/patient/PatientNextOfKinList'\nimport PatientAllergyList from '../lists/patient/PatientAllergyList'\nimport PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientImageList from '../lists/patient/PatientImageList'\nimport PatientFileList from '../lists/patient/PatientFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport AppointmentNoteList from '../lists/appointment/AppointmentNoteList'\nimport AppointmentTagList from '../lists/appointment/AppointmentTagList'\nimport UserList from '../lists/user/UserList'\n\n\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../forms/filter/FilterNoteForm';\nimport FilterTagForm from '../forms/filter/FilterTagForm';\nimport FilterUserForm from '../forms/filter/FilterUserForm';\n\nimport UpdatePatientSingleFieldForm from '../forms/add/UpdatePatientSingleFieldForm';\n\nimport AddUserForm from '../forms/add/AddUserForm';\nimport AddNoteForm from '../forms/add/AddNoteForm';\nimport AddTagForm from '../forms/add/AddTagForm';\nimport loadingGif from '../../assets/loading.gif';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faBath\n} from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass AppointmentDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: this.props.appointment,\n    addAttachmentForm: false,\n    addAttachmentArgs: null,\n    showAddConsultantForm: false,\n    users: null,\n    calEvent: {\n      title: this.props.appointment.title,\n      description: this.props.appointment.description,\n      location: this.props.appointment.location,\n      startTime: moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.appointment.time+':00-05:00',\n      endTime: moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.appointment.time+':00-05:00',\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.propsPatient = this.props.appointment;\n  }\n\ncomponentDidMount () {\n  console.log('...appointment details component mounted...');\n  // console.log(moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.appointment.time+':00-05:00');\n  let seshStore;\n  if (sessionStorage.getItem('logInfo')) {\n    seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n  }\n  this.setState({\n    selectedPatient: this.context.selectedPatient\n  })\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.getAllUsers(seshStore);\n}\ncomponentWillUnmount() {\n\n}\n\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n        activityA: `getAllUsers?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding notes...');\n  this.context.setUserAlert('...adding notes...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const notes = event.target.notes.value.replace(/\\n/g, '');\n\n  let requestBody = {\n    query: `\n      mutation {addAppointmentNotes(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          notes:\"${notes}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addAppointmentNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.addAppointmentNotes)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.addAppointmentNotes,\n        activityA: `addAppointmentNotes?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.addAppointmentNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n\n  console.log('...deleting notes...');\n  this.context.setUserAlert('...deleting notes...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const note = args;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentNote(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          note:\"${note}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.deleteAppointmentNote)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.deleteAppointmentNote,\n        activityA: `deleteAppointmentNote?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.deleteAppointmentNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddTagForm = (event) => {\n  event.preventDefault();\n  console.log('...adding tags...');\n  this.context.setUserAlert('...adding tags...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const tags = event.target.tags.value.replace(/\\n/g, '');\n\n  let requestBody = {\n    query: `\n      mutation {addAppointmentTags(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          tags:\"${tags}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addAppointmentTags);\n      let responseAlert = '...tags add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.addAppointmentTags)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.addAppointmentTags,\n        activityA: `addAppointmentTags?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.addAppointmentTags;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteTag = (args) => {\n\n  console.log('...deleting tags...');\n  this.context.setUserAlert('...deleting tags...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const tag = args;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentTag(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          tag:\"${tag}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentTag);\n      let responseAlert = '...tag delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.deleteAppointmentTag)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.deleteAppointmentTag,\n        activityA: `deleteAppointmentTag?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.deleteAppointmentTag;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddUserForm = (event) => {\n  event.preventDefault();\n  console.log('...adding consultant...');\n  this.context.setUserAlert('...adding consultant...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = event.target.user.value;\n  const appointmentId = this.props.appointment._id;\n\n  const userRole = this.state.users.filter(x => x._id === consultantId)[0].role;\n  if (userRole !== 'Doctor' && userRole !== 'Nurse') {\n    console.log('...please choose a Doctor or Nurse to add please...');\n    this.context.setUserAlert('...please choose a Doctor or Nurse to add please...')\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addAppointmentConsultant(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addAppointmentConsultant);\n      let responseAlert = '...add consultant success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.addAppointmentConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `addAppointmentConsultant?activityId:${activityId},appointmentId:${appointmentId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteConsultant = (args) => {\n  console.log('...deleting consultant...');\n  this.context.setUserAlert('...deleting consultant...')\n  this.setState({isLoading: true});\n  //\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = args._id;\n  const appointmentId = this.props.appointment._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentConsultant(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentConsultant);\n      let responseAlert = '...delete consultant success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.deleteAppointmentConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteAppointmentConsultant?activityId:${activityId},appointmentId:${appointmentId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdatePatient = () => {\n  console.log('show update patient select list');\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateAppointmentSingleField(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateAppointmentSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.updateAppointmentSingleField)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.updateAppointmentSingleField,\n        activityA: `updateAppointmentSingleField?activityId:${activityId},appointmentId:${appointmentId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.updateAppointmentSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {!this.props.appointment && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={3} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'consultant')}>Consultants</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'tag')}>Tags</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'consultant' && (\n                  <FilterUserForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'note' && (\n                  <FilterNoteForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'tag' && (\n                  <FilterTagForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n\n            )}\n          </Col>\n\n          {this.props.appointment && (\n            <Col md={9} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdatePatientSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n                <Tab.Content className=\"tabContent\">\n                  <Tab.Pane eventKey=\"1\">\n                    Appointment Basic:\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.title}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Type:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.type}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'type')}>Edit</Button>\n                        <p className=\"listGroupText\">subType:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.subType}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'subType')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <p className=\"listGroupText\">Time:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.time}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'time')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Location:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.location}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'location')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Description:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.description}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'description')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Important:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.important.toString()}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'important')}>Edit</Button>\n                        <p className=\"listGroupText\">In Progress:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.inProgress.toString()}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'inProgress')}>Edit</Button>\n                        <p className=\"listGroupText\">Attended:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.attended.toString()}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'attended')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Patient:</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Name:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.patient.title}</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.patient.name}</p>\n                        <Link\n                          to={{\n                            pathname: \"/patients\",\n                            state: {patient: this.props.appointment.patient._id}\n                          }}\n                        >\n                        <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                        </Link>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.props.appointment.patient._id}</p>\n                      </ListGroup.Item>\n                      {this.props.appointment.visit && (\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">Visit:</p>\n                          <p className=\"listGroupText bold\">{this.props.appointment.visit._id}</p>\n                        </ListGroup.Item>\n                      )}\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Export:</p>\n                        <AddToCalendar event={this.state.calEvent} />\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"2\">\n                    Appointment Admin\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Id:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment._id}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Creator:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.creator._id}</p>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"3\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Appointment Consultant List:</p>\n                      <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      <Button variant=\"success\" onClick={this.startAdd.bind(this, 'consultant')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'consultant' &&\n                      this.state.users && (\n                        <AddUserForm\n                          onConfirm={this.submitAddUserForm}\n                          onCancel={this.cancelAdd}\n                          filter={this.state.filter}\n                          users={this.state.users}\n                        />\n                    )}\n                    <UserList\n                      filter={this.state.filter}\n                      authId={this.context.activityId}\n                      users={this.props.appointment.consultants}\n                      appointmentPage={true}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteConsultant}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"4\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Appointment Note List:</p>\n                      <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      <Button variant=\"success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'note' && (\n                        <AddNoteForm\n                          onConfirm={this.submitAddNoteForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <AppointmentNoteList\n                      filter={this.state.filter}\n                      notes={this.props.appointment.notes}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteNote}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"5\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Appointment Tag List:</p>\n                      <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      <Button variant=\"success\" onClick={this.startAdd.bind(this, 'tag')}>Add</Button>\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'tag' && (\n                        <AddTagForm\n                          onConfirm={this.submitAddTagForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <AppointmentTagList\n                      filter={this.state.filter}\n                      tags={this.props.appointment.tags}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteTag}\n                    />\n                  </Tab.Pane>\n\n                </Tab.Content>\n\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n}\n\n}\n\nexport default AppointmentDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst AppointmentSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>type</option>\n        <option>subType</option>\n        <option>date</option>\n        <option>time</option>\n        <option>checkinTime</option>\n        <option>seenTime</option>\n        <option>location</option>\n        <option>description</option>\n        <option>inProgress</option>\n        <option>attended</option>\n        <option>important</option>\n        <option>notes</option>\n        <option>tags</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AppointmentSearchForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport CreateAppointmentForm from '../../components/forms/create/CreateAppointmentForm';\nimport AppointmentList from '../../components/lists/appointment/AppointmentList';\nimport PatientList from '../../components/lists/patient/PatientList';\n// import SearchAppointmentList from '../../components/lists/appointment/SearchAppointmentList';\nimport AppointmentDetail from '../../components/details/AppointmentDetail';\n\nimport FilterAppointmentForm from '../../components/forms/filter/FilterAppointmentForm';\nimport AppointmentSearchForm from '../../components/forms/search/AppointmentSearchForm';\nimport PatientSearchForm from '../../components/forms/search/PatientSearchForm';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './appointment.css';\n\nclass AppointmentPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    patients: null,\n    canDelete: false,\n    appointments: null,\n    searchAppointments: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    creatingAppointment: false,\n    newAppointment: null,\n    calendarAppointments: null,\n    fromGoLink: null,\n    goLinkId: null,\n    sublistSearch: false,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all appointments component mounted...');\n\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    this.getAllPatients(seshStore);\n    if (this.props.location.state) {\n      if (this.props.location.state.appointment) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.appointment\n        })\n      }\n    }\n    this.getAllAppointments(seshStore);\n    if (this.props.selectedAppointment) {\n      console.log('...found existing Appointment selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedAppointment: this.props.selectedAppointment\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllAppointments (args) {\n  console.log('...retrieving all appointments...');\n  this.context.setUserAlert('...retrieving all appointments...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllAppointments(\n        activityId:\"${activityId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllAppointments);\n      let responseAlert = '...all appointments retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkAppointment = resData.data.getAllAppointments.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedAppointment: goLinkAppointment,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        appointments: resData.data.getAllAppointments,\n        activityA: `getAllAppointments?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.parseForCalendar(resData.data.getAllAppointments)\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n        activityA: `getAllPatients?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message)\n      }\n      if (resData.data.addUserActivity.error) {\n        this.context.setUserAlert(resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchAppointments = (event) => {\n  event.preventDefault();\n  console.log('...searching appointments...');\n  this.context.setUserAlert('...searching appointments...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'date' ||\n      field === 'inProgress' ||\n      field === 'attended' ||\n      field === 'important' ||\n      field === 'important'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getAppointmentsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n      query {getAppointmentsByField(\n        activityId:\"${activityId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getAppointmentsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getAppointmentsByField);\n      }\n\n      let responseAlert = '...appointment search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchAppointments: resData.data.getAppointmentsByFieldRegex,\n          activityA: `getAppointmentsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchAppointments: resData.data.getAppointmentsByField,\n          activityA: `getAppointmentsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nonStartCreateNewAppointment = () => {\n  this.setState({\n    creatingAppointment: true\n  })\n}\ncancelCreateNewAppointment = () => {\n  this.setState({\n    creatingAppointment: false,\n    selectedPatient: null\n  })\n}\nsubmitCreateNewAppointmentForm = (event) => {\n  event.preventDefault();\n  console.log('...creating new appointment...');\n  this.context.setUserAlert('...creating new appointment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.state.selectedPatient._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const subType = event.target.subType.value;\n  const date = event.target.date.value;\n  const time = event.target.time.value;\n  const location = event.target.location.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n  const important = event.target.important.checked;\n\n  if (\n      title.trim().length === 0 ||\n      date.trim().length === 0 ||\n      time.trim().length === 0 ||\n      location.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    return;\n  }\n  console.log('foo',date);\n\n  if (date < moment().format('YYYY-MM-DD')) {\n    console.log('...ummm no! Please pick a date today or in the future...');\n    this.context.setUserAlert('...ummm no! Please pick a date today or in the future...')\n    this.setState({isLoading:false})\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {createAppointment(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        appointmentInput:{\n          title:\"${title}\",\n          type:\"${type}\",\n          subType:\"${subType}\",\n          date:\"${date}\",\n          time:\"${time}\",\n          location:\"${location}\",\n          description:\"${description}\",\n          important:${important}\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createAppointment);\n      let responseAlert = '...create appointment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        showDetails: true,\n        creatingAppointment: false,\n        selectedAppointment: resData.data.createAppointment,\n        newAppointment: resData.data.createAppointment,\n        tabKey: 'detail',\n        activityA: `createAppointment?activityId:${activityId},appointmentId:${resData.data.createAppointment._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'))\n      this.getAllAppointments(seshStore);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nshowDetails = (args) => {\n  this.setState({\n    showDetails: true,\n    selectedAppointment: args,\n    overlay: false,\n    tabKey: 'detail'\n  })\n  this.props.selectAppointment(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\nselectPatient = (args) => {\n  this.setState({\n    selectedPatient: args\n  })\n\n}\nupdateAppointment = (args) => {\n  console.log('...updating selected appointment...');\n  this.setState({\n    selectedAppointment: args\n  })\n  this.props.selectAppointment(args);\n}\n\ndeleteAppointment = (args) => {\n  console.log('...deleteing appointment...',args);\n  this.context.setUserAlert('...deleteing appointment...')\n\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentById(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentById);\n      let responseAlert = '...delete appointment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteAppointmentById?activityId:${activityId},appointmentId:${appointmentId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllAppointments({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing appointments for calendar...');\n  let calendarAppointments = args.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n      }\n    }))\n    this.setState({\n      calendarAppointments: calendarAppointments\n    })\n\n}\n\nviewCalendarEvent = (args) => {\n  console.log('...viewing calendar appointment...',args.event.extendedProps.props);\n  const appointment = this.state.appointments.filter(x => x._id === args.event.extendedProps.props._id)[0];\n  this.setState({\n    overlay: true,\n    overlayStatus: {type: 'calendarAppointment', data: appointment}\n  })\n}\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\nstartSublistSearch = () => {\n  this.setState({\n    sublistSearch: true\n  })\n}\ncancelSublistSearch = () => {\n  this.setState({\n    sublistSearch: false,\n  })\n  this.getAllPatients({activityId: this.context.activityId,token: this.context.token});\n}\nsubmitSublistSearchForm = (event) => {\n  event.preventDefault()\n  console.log('...searching patient sublist...');\n  this.context.setUserAlert('...searching patient sublist...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'active' ||\n      field === 'age' ||\n      field === 'dob' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'registration.date' ||\n      field === 'expiryDate' ||\n      field === 'referral.date' ||\n      field === 'insurance.expiryDate' ||\n      field === 'insurance.expiryDate'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getPatientsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getPatientsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getPatientsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getPatientsByField);\n      }\n\n      let responseAlert = '...patient search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          patients: resData.data.getPatientsByFieldRegex,\n          activityA: `getPatientsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          patients: resData.data.getPatientsByField,\n          activityA: `getPatientsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        selectCalendarDetails={this.showDetails}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n        <h1>Appointments:\n        {\n          this.state.showDetails === true &&\n          this.state.selectedAppointment &&\n          this.state.tabKey === 'detail' && (\n            this.state.selectedAppointment.title\n              )\n            }\n          </h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col md={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterAppointmentForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.appointments && (\n            <Col md={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content >\n                <Tab.Pane eventKey=\"list\" className=\"mainList\">\n\n                <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                  <Tab eventKey=\"1\" title=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                    <AppointmentList\n                      filter={this.state.filter}\n                      appointments={this.state.appointments}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      showDetails={this.showDetails}\n                      onDelete={this.deleteAppointment}\n                    />\n                  </Tab>\n                  <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                    <h3>Calendar</h3>\n                    <FullCalendar\n                      defaultView=\"dayGridMonth\"\n                      plugins={[dayGridPlugin]}\n                      events={this.state.calendarAppointments}\n                      eventClick={this.viewCalendarEvent}\n                    />\n                  </Tab>\n                </Tabs>\n\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Appointment</h3>\n                  <Row className=\"userSearchRow searchForm\">\n                    <AppointmentSearchForm\n                      onConfirm={this.searchAppointments}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchAppointments && (\n                      <Button variant=\"primary\" className=\"centered_btn\" onClick={this.toggleSideCol}>Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchAppointments && (\n                      <AppointmentList\n                        filter={this.state.filter}\n                        appointments={this.state.searchAppointments}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedAppointment && (\n                  <AppointmentDetail\n                    appointment={this.state.selectedAppointment}\n                    updateAppointment={this.updateAppointment}\n                  />\n                )}\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"new\">\n                {this.state.creatingAppointment === false && (\n                  <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={this.onStartCreateNewAppointment}>Create New</Button>\n                )}\n                {this.state.creatingAppointment === true &&\n                  this.state.patients &&\n                  !this.state.selectedPatient && (\n                  <Col className=\"patientSubListCol\">\n                  <Row className=\"patientSubListRow\">\n                  <Button variant=\"success\" className=\"patientSublistSearchBtn\" onClick={this.startSublistSearch}>Search</Button>\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  {this.state.sublistSearch === true && (\n                    <PatientSearchForm\n                      onCancel={this.cancelSublistSearch}\n                      onConfirm={this.submitSublistSearchForm}\n                    />\n                  )}\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  <PatientList\n                    filter={this.state.filter}\n                    patients={this.state.patients}\n                    authId={this.context.activityId}\n                    onSelect={this.selectPatient}\n                    appointmentPage={true}\n                  />\n                  </Row>\n\n                  </Col>\n                )}\n                {this.state.creatingAppointment === true &&\n                  this.state.selectedPatient && (\n                  <Row>\n                    <CreateAppointmentForm\n                      onConfirm={this.submitCreateNewAppointmentForm}\n                      onCancel={this.cancelCreateNewAppointment}\n                      patient={this.state.selectedPatient}\n                    />\n                  </Row>\n                )}\n                {this.state.newAppointment && (\n                  <Row>\n                    <h3>Review New Appointment {this.state.newAppointment._id}</h3>\n                  </Row>\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default AppointmentPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './createForms.css';\n\nconst CreateVisitForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Create Visit Form</h1>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"appointmentId\">\n        <Form.Label className=\"formLabel\">Appointment: {props.appointment.title}</Form.Label>\n        <Form.Control type=\"text\" value={props.appointment._id}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label className=\"formLabel\">Title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label className=\"formLabel\">Type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"subType\">\n        <Form.Label className=\"formLabel\">Sub-type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"subType\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"loginFormBtn\">Create</Button>\n      <Button variant=\"danger\" className=\"loginFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default CreateVisitForm;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst ComplaintItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.complaint.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.complaint.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.complaint.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Anamnesis: <span className=\"bold\">{props.complaint.anamnesis}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'complaint',data:props.complaint})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.complaint}\n                attachments={props.complaint.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"complaint\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.complaint)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default ComplaintItem;\n","import React from 'react';\n\nimport ComplaintItem from '../../items/visit/ComplaintItem';\nimport './visitList.css';\n\nconst VisitComplaintList = props => {\n\n  const {...filter} = props.filter;\n  let complaints2 = props.complaints;\n  let propsComplaints = [];\n\n  if (filter.field === 'complaint' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsComplaints = complaints2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'title' && filter.value === 'Descending') {\n    propsComplaints = complaints2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsComplaints = complaints2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'description' && filter.value === 'Descending') {\n    propsComplaints = complaints2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'anamnesis' && filter.value === 'Ascending') {\n    propsComplaints = complaints2.sort((a, b) => (a.anamnesis > b.anamnesis) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'anamnesis' && filter.value === 'Descending') {\n    propsComplaints = complaints2.sort((a, b) => (a.anamnesis < b.anamnesis) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'complaint') {\n    propsComplaints = complaints2;\n  }\n\n  let count = 0;\n\n  const complaints = propsComplaints.map(complaint => {\n\n    count = propsComplaints.indexOf(complaint)+1;\n\n    return (\n      <ComplaintItem\n        key={count}\n        complaint={complaint}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{complaints}</ul>;\n};\n\nexport default VisitComplaintList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst SurveyItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.survey.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.survey.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.survey.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'survey',data:props.survey})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.survey}\n                attachments={props.survey.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"survey\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.survey)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default SurveyItem;\n","import React from 'react';\n\nimport SurveyItem from '../../items/visit/SurveyItem';\nimport './visitList.css';\n\nconst VisitSurveyList = props => {\n\n  const {...filter} = props.filter;\n  let surveys2 = props.surveys;\n  let propsSurveys = [];\n\n  if (filter.field === 'survey' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsSurveys = surveys2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'survey' && filter.key === 'title' && filter.value === 'Descending') {\n    propsSurveys = surveys2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'survey' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsSurveys = surveys2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'survey' && filter.key === 'description' && filter.value === 'Descending') {\n    propsSurveys = surveys2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'survey') {\n    propsSurveys = surveys2;\n  }\n\n  let count = 0;\n\n  const surveys = propsSurveys.map(survey => {\n\n    count = propsSurveys.indexOf(survey)+1;\n\n    return (\n      <SurveyItem\n        key={count}\n        survey={survey}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{surveys}</ul>;\n};\n\nexport default VisitSurveyList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst SystematicInquiryItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.systematicInquiry.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.systematicInquiry.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.systematicInquiry.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'systematicInquiry',data:props.systematicInquiry})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.systematicInquiry}\n                attachments={props.systematicInquiry.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"systematicInquiry\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.systematicInquiry)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default SystematicInquiryItem;\n","import React from 'react';\n\nimport SystematicInquiryItem from '../../items/visit/SystematicInquiryItem';\nimport './visitList.css';\n\nconst VisitSystematicInquiryList = props => {\n\n  const {...filter} = props.filter;\n  let systematicInquirys2 = props.systematicInquiry;\n  let propsSystematicInquirys = [];\n\n  if (filter.field === 'systematicInquiry' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'systematicInquiry' && filter.key === 'title' && filter.value === 'Descending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'systematicInquiry' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'systematicInquiry' && filter.key === 'description' && filter.value === 'Descending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'systematicInquiry') {\n    propsSystematicInquirys = systematicInquirys2;\n  }\n\n  let count = 0;\n\n  const systematicInquirys = propsSystematicInquirys.map(systematicInquiry => {\n\n    count = propsSystematicInquirys.indexOf(systematicInquiry)+1;\n\n    return (\n      <SystematicInquiryItem\n        key={count}\n        systematicInquiry={systematicInquiry}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{systematicInquirys}</ul>;\n};\n\nexport default VisitSystematicInquiryList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst VitalsItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Pulse Rate: <span className=\"bold\">{props.vitals.pr}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Respiratory Rate: <span className=\"bold\">{props.vitals.rr}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              <Card.Text className=\"cardText\">\n                Pulse Rate: <span className=\"bold\">{props.vitals.pr}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Respiratory Rate: <span className=\"bold\">{props.vitals.rr}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Blood Pressure : <span className=\"bold\">{props.vitals.bp1}</span> / <span className=\"bold\">{props.vitals.bp2}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Temperature: <span className=\"bold\">{props.vitals.temp}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                PS02: <span className=\"bold\">{props.vitals.ps02}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Height : <span className=\"bold\">{props.vitals.heightValue}</span>  <span className=\"bold\">{props.vitals.heightUnit}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Weight : <span className=\"bold\">{props.vitals.weightValue}</span>  <span className=\"bold\">{props.vitals.weightUnit}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                BMI : <span className=\"bold\">{props.vitals.bmi}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Urine\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.vitals.urine.type}</span> Value: <span className=\"bold\">{props.vitals.urine.value}</span>\n              </Card.Text>\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.vitals)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default VitalsItem;\n","import React from 'react';\n\nimport VitalsItem from '../../items/visit/VitalsItem';\nimport './visitList.css';\n\nconst VisitVitalsList = props => {\n\n  const {...filter} = props.filter;\n  let vitals2 = props.vitals;\n  let propsVitals = [];\n\n  if (filter.field === 'vitals' && filter.key === 'pr' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.pr > b.pr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'pr' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.pr < b.pr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp1' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp1 > b.bp1) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp1' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp1 < b.bp1) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp2' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp2 > b.bp2) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp2' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp2 < b.bp2) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'rr' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.rr > b.rr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'rr' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.rr < b.rr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'temp' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.temp > b.temp) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'temp' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.temp < b.temp) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'ps02' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.ps02 > b.ps02) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'ps02' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.ps02 < b.ps02) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'heightValue' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.heightValue > b.heightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'heightValue' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.heightValue < b.heightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'weightValue' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.weightValue > b.weightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'weightValue' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.weightValue < b.weightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bmi' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.bmi > b.bmi) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bmi' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.bmi < b.bmi) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.type' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.type > b.urine.type) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.type' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.type < b.urine.type) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.value' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.value > b.urine.value) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.value' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.value < b.urine.value) ? 1 : -1);\n  }\n  // if (filter.field === 'vitals' && filter.key === 'role') {\n  //   propsVitals = vitals2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'vitals') {\n    propsVitals = vitals2;\n  }\n\n  let count = 0;\n\n  const vitals = propsVitals.map(vitalsItem => {\n\n    count = propsVitals.indexOf(vitalsItem)+1;\n\n    return (\n      <VitalsItem\n        key={count}\n        vitals={vitalsItem}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{vitals}</ul>;\n};\n\nexport default VisitVitalsList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst ExaminationItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            General: <span className=\"bold\">{props.examination.general}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Area: <span className=\"bold\">{props.examination.area}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                General: <span className=\"bold\">{props.examination.general}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Area: <span className=\"bold\">{props.examination.area}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                type: <span className=\"bold\">{props.examination.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                measure: <span className=\"bold\">{props.examination.measure}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                value: <span className=\"bold\">{props.examination.value}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                description: <span className=\"bold\">{props.examination.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                 followUp: <span className=\"bold\">{props.examination.followUp === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'examination',data:props.examination})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.examination}\n                attachments={props.examination.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"examination\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.examination)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default ExaminationItem;\n","import React from 'react';\n\nimport ExaminationItem from '../../items/visit/ExaminationItem';\nimport './visitList.css';\n\nconst VisitExaminationList = props => {\n\n  const {...filter} = props.filter;\n  let examinations2 = props.examination;\n  let propsExaminations = [];\n\n  if (filter.field === 'examination' && filter.key === 'general' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.general > b.general) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'general' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.general < b.general) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'area' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.area > b.area) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'area' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.area < b.area) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'type' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'measure' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.measure > b.measure) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'measure' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.measure < b.measure) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'value' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.value > b.value) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'value' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.value < b.value) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'description' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'followUp') {\n    propsExaminations = examinations2.filter(x => x.followUp === filter.value);\n  }\n  if (filter.field !== 'examination') {\n    propsExaminations = examinations2;\n  }\n\n  let count = 0;\n\n  const examinations = propsExaminations.map(examination => {\n\n    count = propsExaminations.indexOf(examination)+1;\n\n    return (\n      <ExaminationItem\n        key={count}\n        examination={examination}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{examinations}</ul>;\n};\n\nexport default VisitExaminationList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst InvestigationItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.investigation.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.investigation.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.investigation.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.investigation.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.investigation.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'investigation',data:props.investigation})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.investigation}\n                attachments={props.investigation.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"investigation\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.investigation)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default InvestigationItem;\n","import React from 'react';\n\nimport InvestigationItem from '../../items/visit/InvestigationItem';\nimport './visitList.css';\n\nconst VisitInvestigationList = props => {\n\n  const {...filter} = props.filter;\n  let investigations2 = props.investigation;\n  let propsInvestigations = [];\n\n  if (filter.field === 'investigation' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'investigation' && filter.key === 'title' && filter.value === 'Descending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'investigation' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'investigation' && filter.key === 'description' && filter.value === 'Descending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'investigation') {\n    propsInvestigations = investigations2;\n  }\n\n  let count = 0;\n\n  const investigations = propsInvestigations.map(investigation => {\n\n    count = propsInvestigations.indexOf(investigation)+1;\n\n    return (\n      <InvestigationItem\n        key={count}\n        investigation={investigation}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{investigations}</ul>;\n};\n\nexport default VisitInvestigationList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst DiagnosisItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.diagnosis.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.diagnosis.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.diagnosis.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.diagnosis.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.diagnosis.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'diagnosis',data:props.diagnosis})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.diagnosis}\n                attachments={props.diagnosis.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"diagnosis\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.diagnosis)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default DiagnosisItem;\n","import React from 'react';\n\nimport DiagnosisItem from '../../items/visit/DiagnosisItem';\nimport './visitList.css';\n\nconst VisitDiagnosisList = props => {\n\n  const {...filter} = props.filter;\n  let diagnosis2 = props.diagnosis;\n  let propsDiagnosis = [];\n\n  if (filter.field === 'diagnosis' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'title' && filter.value === 'Descending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'type' && filter.value === 'Descending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'description' && filter.value === 'Descending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'diagnosis') {\n    propsDiagnosis = diagnosis2;\n  }\n\n  let count = 0;\n\n  const diagnoses = propsDiagnosis.map(diagnosis => {\n\n    count = propsDiagnosis.indexOf(diagnosis)+1;\n\n    return (\n      <DiagnosisItem\n        key={count}\n        diagnosis={diagnosis}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{diagnoses}</ul>;\n};\n\nexport default VisitDiagnosisList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst TreatmentItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.treatment.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.treatment.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.treatment.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.treatment.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.treatment.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Dose: <span className=\"bold\">{props.treatment.dose}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Frequency: <span className=\"bold\">{props.treatment.frequency}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'treatment',data:props.treatment})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.treatment}\n                attachments={props.treatment.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"treatment\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.treatment)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default TreatmentItem;\n","import React from 'react';\n\nimport TreatmentItem from '../../items/visit/TreatmentItem';\nimport './visitList.css';\n\nconst VisitTreatmentList = props => {\n\n  const {...filter} = props.filter;\n  let treatment2 = props.treatment;\n  let propsTreatment = [];\n\n  if (filter.field === 'treatment' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'title' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'type' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'dose' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.dose > b.dose) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'dose' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.dose < b.dose) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'frequency' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.frequency > b.frequency) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'frequency' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.frequency < b.frequency) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'description' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'treatment') {\n    propsTreatment = treatment2;\n  }\n\n  let count = 0;\n\n  const treatments = propsTreatment.map(treatment => {\n\n    count = propsTreatment.indexOf(treatment)+1;\n\n    return (\n      <TreatmentItem\n        key={count}\n        treatment={treatment}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{treatments}</ul>;\n};\n\nexport default VisitTreatmentList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst BillingItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.billing.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.billing.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.billing.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.billing.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.billing.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Notes: <span className=\"bold\">{props.billing.notes}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Amount: <span className=\"bold\">{props.billing.amount}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Paid: <span className=\"bold\">{props.billing.paid === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}</span>\n                {props.billing.paid === false && (\n                  <span onClick={props.updateBillingPaid.bind(this, props.billing)}>Update?</span>\n                )}\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'billing',data:props.billing})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.billing}\n                attachments={props.billing.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"billing\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.billing)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default BillingItem;\n","import React from 'react';\n\nimport BillingItem from '../../items/visit/BillingItem';\nimport './visitList.css';\n\nconst VisitBillingList = props => {\n\n  const {...filter} = props.filter;\n  let billing2 = props.billing;\n  let propsBilling = [];\n\n  if (filter.field === 'billing' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'title' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'type' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'amount' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.amount > b.amount) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'amount' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.amount < b.amount) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'description' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'notes' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.notes > b.notes) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'notes' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.notes < b.notes) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'paid') {\n    propsBilling = billing2.filter(x => x.paid === filter.value);\n  }\n  if (filter.field !== 'billing') {\n    propsBilling = billing2;\n  }\n\n  let count = 0;\n\n  const billings = propsBilling.map(billing => {\n\n    count = propsBilling.indexOf(billing)+1;\n\n    return (\n      <BillingItem\n        key={count}\n        billing={billing}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n        updateBillingPaid={props.updateBillingPaid}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{billings}</ul>;\n};\n\nexport default VisitBillingList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst VigilanceItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            number: <span className=\"bold\">{props.key}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              <h3>chronicIllness:</h3>\n              <p>Diabetes</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.diabetes.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.diabetes.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.diabetes.comment}</span>\n              </Card.Text>\n\n              <p>High BloodPressure</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.hbp.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.hbp.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.hbp.comment}</span>\n              </Card.Text>\n\n              <p>Dyslipidemia</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.dyslipidemia.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.dyslipidemia.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.dyslipidemia.comment}</span>\n              </Card.Text>\n\n              <p>Cad</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.cad.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.cad.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.cad.comment}</span>\n              </Card.Text>\n\n              <h3>lifestyle</h3>\n              <p>Weight</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.weight.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.weight.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.weight.comment}</span>\n              </Card.Text>\n\n              <p>Diet</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.diet.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.diet.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.diet.comment}</span>\n              </Card.Text>\n\n              <p>Smoking</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.smoking.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.smoking.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.smoking.comment}</span>\n              </Card.Text>\n\n              <p>SubstanceAbuse</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.substanceAbuse.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.substanceAbuse.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.substanceAbuse.comment}</span>\n              </Card.Text>\n\n              <p>exercise</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.exercise.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.exercise.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.exercise.comment}</span>\n              </Card.Text>\n\n              <p>allergies</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.allergies.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.allergies.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.allergies.comment}</span>\n              </Card.Text>\n\n              <p>asthma</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.asthma.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.asthma.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.asthma.comment}</span>\n              </Card.Text>\n\n              <h3>Screening</h3>\n              <p>breast</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.breast.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.breast.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.breast.comment}</span>\n              </Card.Text>\n\n              <p>prostate</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.prostate.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.prostate.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.prostate.comment}</span>\n              </Card.Text>\n\n              <p>cervix</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.cervix.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.cervix.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.cervix.comment}</span>\n              </Card.Text>\n\n              <p>colon</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.colon.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.colon.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.colon.comment}</span>\n              </Card.Text>\n\n              <p>dental</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.dental.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.dental.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.dental.comment}</span>\n              </Card.Text>\n\n              <h3>Vaccines</h3>\n              <p>Influenza</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.influenza.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.influenza.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.influenza.comment}</span>\n              </Card.Text>\n\n              <p>varicella</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.varicella.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.varicella.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.varicella.comment}</span>\n              </Card.Text>\n\n              <p>hpv</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.hpv.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.hpv.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.hpv.comment}</span>\n              </Card.Text>\n\n              <p>mmr</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.mmr.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.mmr.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.mmr.comment}</span>\n              </Card.Text>\n\n              <p>tetanus</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.tetanus.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.tetanus.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.tetanus.comment}</span>\n              </Card.Text>\n\n              <p>pneumovax</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.pneumovax.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.pneumovax.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.pneumovax.comment}</span>\n              </Card.Text>\n\n              <p>other</p>\n              <Card.Text className=\"cardText\">\n                Other: <span className=\"bold\">{props.vigilance.vaccines.other.name}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.other.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.other.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.other.comment}</span>\n              </Card.Text>\n\n\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.vigilance)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default VigilanceItem;\n","import React from 'react';\n\nimport VigilanceItem from '../../items/visit/VigilanceItem';\nimport './visitList.css';\n\nconst VisitVigilanceList = props => {\n\n  const {...filter} = props.filter;\n  let vigilance2 = props.vigilance;\n  let propsVigilance = [];\n\n  if (filter.field === 'vigilance' && filter.key === 'chronicIllness.diabetes.medication') {\n    propsVigilance = vigilance2.filter(x => x.chronicIllness.diabetes.medication === filter.value)\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'vigilance') {\n    propsVigilance = vigilance2;\n  }\n\n  let count = 0;\n\n  const vigilances = propsVigilance.map(vigilance => {\n\n    count = propsVigilance.indexOf(vigilance)+1;\n\n    return (\n      <VigilanceItem\n        key={count}\n        vigilance={vigilance}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{vigilances}</ul>;\n};\n\nexport default VisitVigilanceList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst ImageItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n        <Card.Text className=\"cardText\">\n        <a href={props.image.path} target=\"_blank\" rel=\"noopener noreferrer\">{props.image.name}</a>\n        </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.image.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.image.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.image.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.image)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n\n};\n\nexport default ImageItem;\n","import React from 'react';\n\nimport ImageItem from '../../items/visit/ImageItem';\nimport './visitList.css';\n\nconst VisitImageList = props => {\n\n  const {...filter} = props.filter;\n  let images2 = props.images;\n  let propsImages = [];\n\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'image') {\n    propsImages = images2;\n  }\n\n  let count = 0;\n\n  const images = propsImages.map(image => {\n\n    count = propsImages.indexOf(image)+1;\n\n    return (\n      <ImageItem\n        key={count}\n        image={image}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"imageList\">{images}</ul>;\n};\n\nexport default VisitImageList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst FileItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n        <Card.Text className=\"cardText\">\n        <a href={props.file.path} target=\"_blank\" rel=\"noopener noreferrer\">{props.file.name}</a>\n        </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.file.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.file.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.file.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.file)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default FileItem;\n","import React from 'react';\n\nimport FileItem from '../../items/visit/FileItem';\nimport './visitList.css';\n\nconst VisitFileList = props => {\n\n  const {...filter} = props.filter;\n  let files2 = props.files;\n  let propsFiles = [];\n\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'file') {\n    propsFiles = files2;\n  }\n\n  let count = 0;\n\n  const files = propsFiles.map(file => {\n\n    count = propsFiles.indexOf(file)+1;\n\n    return (\n      <FileItem\n        key={count}\n        file={file}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{files}</ul>;\n};\n\nexport default VisitFileList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterComplaintForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"complaint\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>description</option>\n        <option>anamnesis</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterComplaintForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterSurveyForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"survey\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterSurveyForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterSystematicInquiryForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"systematicInquiry\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterSystematicInquiryForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterDiagnosisForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"diagnosis\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterDiagnosisForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterVitalsForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"vitals\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>pr</option>\n        <option>bp1</option>\n        <option>bp2</option>\n        <option>rr</option>\n        <option>temp</option>\n        <option>ps02</option>\n        <option>heightUnit</option>\n        <option>heightValue</option>\n        <option>weightUnit</option>\n        <option>weightValue</option>\n        <option>bmi</option>\n        <option>urine.type</option>\n        <option>urine.value</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterVitalsForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterExaminationForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"examination\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>general</option>\n        <option>area</option>\n        <option>type</option>\n        <option>measure</option>\n        <option>value</option>\n        <option>description</option>\n        <option>followUp</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterExaminationForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterInvestigationForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"investigation\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterInvestigationForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterTreatmentForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"treatment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        <option>dose</option>\n        <option>frequency</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterTreatmentForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterBillingForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"billing\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        <option>amount</option>\n        <option>paid</option>\n        <option>notes</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterBillingForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddComplaintForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Complaint</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label className=\"formLabel\">Title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label className=\"formLabel\">Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"anamnesis\">\n        <Form.Label className=\"formLabel\">Anamnesis</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"anamnesis\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label className=\"formLabel\">File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddComplaintForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddSurveyForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Survey</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label className=\"formLabel\">Title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label className=\"formLabel\">Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label className=\"formLabel\">File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddSurveyForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddSystematicInquiryForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add SystematicInquiry</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label className=\"formLabel\">Title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label className=\"formLabel\">Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label className=\"formLabel\">File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddSystematicInquiryForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus\n} from '@fortawesome/free-solid-svg-icons';\n\nconst AddVitalsForm = (props) => {\n\n  const [weightUnit, setState] = useState('Lbs');\n  const handleStateChange = (args) => {\n    // setState(args)\n    if (args === 'M') {\n      setState('Kg');\n    }\n    if (args === 'In') {\n      setState('Lbs');\n    }\n   }\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Vitals</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"pr\">\n        <Form.Label className=\"formLabel\">Pulse Rate</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"pr\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"bp1\">\n        <Form.Label className=\"formLabel\">Blood Pressure (top)</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"bp1\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"bp2\">\n        <Form.Label className=\"formLabel\">Blood Pressure (bottom)</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"bp2\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"rr\">\n        <Form.Label className=\"formLabel\">Respiratory Rate</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"rr\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"temp\">\n        <Form.Label className=\"formLabel\">Temperature</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"temp\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"ps02\">\n        <Form.Label className=\"formLabel\">PS-02</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"ps02\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"heightUnit\">\n        <Form.Label className=\"formLabel\">Height: Unit</Form.Label>\n        <Form.Control as=\"select\" onChange={e => handleStateChange(e.target.value)}>\n          <option>In</option>\n          <option>M</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"heightValue\">\n        <Form.Label className=\"formLabel\">Height: Value</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"heightValue\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"weightUnit\">\n        <Form.Label className=\"formLabel\">Weight: Unit</Form.Label>\n        <Form.Control type=\"text\" value={weightUnit}/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"weightValue\">\n        <Form.Label className=\"formLabel\">Weight: Value</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"weightValue\"/>\n      </Form.Group>\n    </Form.Row>\n    {\n      // <Form.Row>\n      //   <Form.Group as={Col} controlId=\"bmi\">\n      //     <Form.Label>BMI</Form.Label>\n      //     <Form.Control type=\"number\" step='0.001' placeholder=\"bmi\"/>\n      //   </Form.Group>\n      // </Form.Row>\n    }\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"urineType\">\n        <Form.Label className=\"formLabel\">Urine: Type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"urineType\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"urineValue\">\n        <Form.Label className=\"formLabel\">Urine: Value</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"urineValue\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddVitalsForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddExaminationForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Examination</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"general\">\n        <Form.Label className=\"formLabel\">General</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"general\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"area\">\n        <Form.Label className=\"formLabel\">Area</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"area\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label className=\"formLabel\">Type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"measure\">\n        <Form.Label className=\"formLabel\">Measure</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"measure\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"value\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label className=\"formLabel\">Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"followUp\">\n        <Form.Label className=\"formLabel\">FollowUp ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label className=\"formLabel\">File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddExaminationForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddInvestigationForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Investigation</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label className=\"formLabel\">Title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label className=\"formLabel\">Type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label className=\"formLabel\">Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label className=\"formLabel\">File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddInvestigationForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddDiagnosisForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Diagnosis</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label className=\"formLabel\">Title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label className=\"formLabel\">Type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label className=\"formLabel\">Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label className=\"formLabel\">File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddDiagnosisForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddTreatmentForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Treatment</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label className=\"formLabel\">Title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label className=\"formLabel\">Type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label className=\"formLabel\">Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"dose\">\n        <Form.Label className=\"formLabel\">Dose</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"dose\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"frequency\">\n        <Form.Label className=\"formLabel\">Frequency</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"frequency\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label className=\"formLabel\">File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddTreatmentForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddBillingForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Billing</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label className=\"formLabel\">Title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label className=\"formLabel\">Type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label className=\"formLabel\">Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"amount\">\n        <Form.Label className=\"formLabel\">Amount</Form.Label>\n        <Form.Control type=\"number\" step=\"0.001\" placeholder=\"amount\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"paid\">\n        <Form.Label className=\"formLabel\">Paid ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"notes\">\n        <Form.Label className=\"formLabel\">Notes</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"notes\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label className=\"formLabel\">File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddBillingForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddVigilanceForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Vigilance</h4>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>Diabetes</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDiabetesMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDiabetesTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDiabetesComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>HBP</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessHbpMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessHbpTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessHbpComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>Dyslipidemia</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDyslipidemiaMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDyslipidemiaTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDyslipidemiaComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>Cad</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessCadMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessCadTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessCadComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Lifestyle:</h4>\n    <p>Weight</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleWeightMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleWeightTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleWeightComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Diet</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleDietMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleDietTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleDietComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Smoking</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSmokingMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSmokingTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSmokingComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>SubstanceAbuse</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSubstanceAbuseMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSubstanceAbuseTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSubstanceAbuseComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Exercise</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleExerciseMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleExerciseTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleExerciseComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Allergies</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAllergiesMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAllergiesTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAllergiesComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Asthma</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAsthmaMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAsthmaTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAsthmaComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Screening:</h4>\n    <p>Breast</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningBreastMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningBreastTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningBreastComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Prostate</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningProstateMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningProstateTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningProstateComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Cervix</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningCervixMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningCervixTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningCervixComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Colon</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningColonMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningColonTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningColonComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Dental</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningDentalMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningDentalTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningDentalComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Vaccines</h4>\n    <p>Influenza</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesInfluenzaMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesInfluenzaTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesInfluenzaComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Varicella</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesVaricellaMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesVaricellaTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesVaricellaComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Hpv</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesHpvMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesHpvTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesHpvComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Mmr</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesMmrMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesMmrTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesMmrComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Tetanus</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesTetanusMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesTetanusTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesTetanusComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Pneumovax</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesPneumovaxMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesPneumovaxTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesPneumovaxComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Other</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherName\">\n        <Form.Label className=\"formLabel\">Name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherMedication\">\n        <Form.Label className=\"formLabel\">Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherTesting\">\n        <Form.Label className=\"formLabel\">Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherComment\">\n        <Form.Label className=\"formLabel\">Comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddVigilanceForm;\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport AddToCalendar from 'react-add-to-calendar';\nimport S3 from 'react-aws-s3';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport PatientAddressList from '../lists/patient/PatientAddressList';\nimport PatientNextOfKinList from '../lists/patient/PatientNextOfKinList'\nimport PatientAllergyList from '../lists/patient/PatientAllergyList'\nimport PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientImageList from '../lists/patient/PatientImageList'\nimport PatientFileList from '../lists/patient/PatientFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport AppointmentNoteList from '../lists/appointment/AppointmentNoteList'\nimport VisitComplaintList from '../lists/visit/VisitComplaintList'\nimport VisitSurveyList from '../lists/visit/VisitSurveyList'\nimport VisitSystematicInquiryList from '../lists/visit/VisitSystematicInquiryList'\nimport VisitVitalsList from '../lists/visit/VisitVitalsList'\nimport VisitExaminationList from '../lists/visit/VisitExaminationList'\nimport VisitInvestigationList from '../lists/visit/VisitInvestigationList'\nimport VisitDiagnosisList from '../lists/visit/VisitDiagnosisList'\nimport VisitTreatmentList from '../lists/visit/VisitTreatmentList'\nimport VisitBillingList from '../lists/visit/VisitBillingList'\nimport VisitVigilanceList from '../lists/visit/VisitVigilanceList'\nimport VisitImageList from '../lists/visit/VisitImageList'\nimport VisitFileList from '../lists/visit/VisitFileList'\nimport UserList from '../lists/user/UserList'\n\n\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterComplaintForm from '../forms/filter/FilterComplaintForm';\nimport FilterSurveyForm from '../forms/filter/FilterSurveyForm';\nimport FilterSystematicInquiryForm from '../forms/filter/FilterSystematicInquiryForm';\nimport FilterDiagnosisForm from '../forms/filter/FilterDiagnosisForm';\nimport FilterVitalsForm from '../forms/filter/FilterVitalsForm';\nimport FilterExaminationForm from '../forms/filter/FilterExaminationForm';\nimport FilterInvestigationForm from '../forms/filter/FilterInvestigationForm';\nimport FilterTreatmentForm from '../forms/filter/FilterTreatmentForm';\nimport FilterBillingForm from '../forms/filter/FilterBillingForm';\nimport FilterImageForm from '../forms/filter/FilterImageForm';\nimport FilterFileForm from '../forms/filter/FilterFileForm';\nimport FilterUserForm from '../forms/filter/FilterUserForm';\n\nimport UpdatePatientSingleFieldForm from '../forms/add/UpdatePatientSingleFieldForm';\n\nimport AddUserForm from '../forms/add/AddUserForm';\nimport AddAttachmentForm from '../forms/add/AddAttachmentForm';\nimport AddImageForm from '../forms/add/AddImageForm';\nimport AddFileForm from '../forms/add/AddFileForm';\nimport AddComplaintForm from '../forms/add/AddComplaintForm';\nimport AddSurveyForm from '../forms/add/AddSurveyForm';\nimport AddSystematicInquiryForm from '../forms/add/AddSystematicInquiryForm';\nimport AddVitalsForm from '../forms/add/AddVitalsForm';\nimport AddExaminationForm from '../forms/add/AddExaminationForm';\nimport AddInvestigationForm from '../forms/add/AddInvestigationForm';\nimport AddDiagnosisForm from '../forms/add/AddDiagnosisForm';\nimport AddTreatmentForm from '../forms/add/AddTreatmentForm';\nimport AddBillingForm from '../forms/add/AddBillingForm';\nimport AddVigilanceForm from '../forms/add/AddVigilanceForm';\nimport loadingGif from '../../assets/loading.gif';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faBath\n} from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass VisitDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    selectedPatient: null,\n    selectedVisit: null,\n    selectedAppointment: null,\n    addAttachmentForm: false,\n    addAttachmentArgs: null,\n    showAddConsultantForm: false,\n    users: null,\n    calEvent: {\n      title: this.props.visit.title,\n      description: this.props.visit.appointment.description,\n      location: this.props.visit.appointment.location,\n      startTime: moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.visit.time+':00-05:00',\n      endTime: moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.visit.time+':00-05:00',\n    },\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.propsVisit = this.props.visit;\n  }\n\ncomponentDidMount () {\n  console.log('...visit details component mounted...');\n  let seshStore;\n  if (sessionStorage.getItem('logInfo')) {\n    seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getPocketVars(seshStore);\n  }\n  if (this.context.role === 'Admin' ||\n      this.context.role === 'Doctor' ||\n      this.context.role === 'Nurse'\n    ) {\n    this.setState({\n      canDelete: true\n    })\n  }\n\n  this.getAllUsers(seshStore);\n}\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n  console.log('...retriving pocketVars..');\n  this.context.setUserAlert('...retriving pocketVars..')\n  const token = args.token;\n  const activityId = args.activityId;\n  const requestBody = {\n        query:`\n          query {getPocketVars(\n            activityId:\"${activityId}\")}\n        `};\n\n  fetch('http://localhost:8088/graphql', {\n    method: 'POST',\n    body: JSON.stringify(requestBody),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + token\n    }\n  })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (resData.errors) {\n        this.setState({userAlert: resData.errors[0].message})\n      } else {\n        let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n        console.log('...retriving pocketVars success...');\n        this.context.setUserAlert('...retriving pocketVars success...')\n        this.setState({\n          pocketVars: pocketVarsParsed\n        });\n      }\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n    });\n  }\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message)\n      }\n      if (resData.data.addUserActivity.error) {\n        this.context.setUserAlert(resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n        activityA: `getAllUsers?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nsubmitAddComplaintForm = (event) => {\n  event.preventDefault();\n  console.log('...adding complaint...');\n  this.context.setUserAlert('...adding complaint...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = event.target.title.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n  const anamnesis = event.target.anamnesis.value.replace(/\\n/g, ' ');\n  // const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0 ||\n      anamnesis.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/complaint/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'complaint attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'complaint attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'complaint attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'complaint attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitComplaint(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${title}\",\n            complaintDescription:\"${description}\",\n            complaintAnamnesis:\"${anamnesis}\",\n            complaintAttachment:\"${file2Path}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitComplaint);\n      let responseAlert = '...complaint add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitComplaint)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitComplaint,\n        activityA: `addVisitComplaint?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitComplaint;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteComplaint = (args) => {\n\n  console.log('...deleting complaint...');\n  this.context.setUserAlert('...deleting complaint...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = args.title;\n  const description = args.description;\n  const anamnesis = args.anamnesis;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitComplaint(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${title}\",\n            complaintDescription:\"${description}\",\n            complaintAnamnesis:\"${anamnesis}\",\n            complaintAttachments:\"${attachments}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitComplaint);\n      let responseAlert = '...complaint delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitComplaint)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitComplaint,\n        activityA: `deleteVisitComplaint?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitComplaint;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/complaint/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/complaint/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `complaint attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddSurveyForm = (event) => {\n  event.preventDefault();\n  console.log('...adding survey...');\n  this.context.setUserAlert('...adding survey...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n  // const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/survey/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'survey attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'survey attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'survey attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'survey attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitSurvey(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          surveyTitle:\"${title}\",\n          surveyDescription:\"${description}\",\n          surveyAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitSurvey);\n      let responseAlert = '...survey add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitSurvey)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitSurvey,\n        activityA: `addVisitSurvey?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitSurvey;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteSurvey = (args) => {\n\n  console.log('...deleting survey...');\n  this.context.setUserAlert('...deleting survey...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = args.title;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitSurvey(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          surveyTitle:\"${title}\",\n          surveyDescription:\"${description}\",\n          surveyAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitSurvey);\n      let responseAlert = '...survey delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitSurvey)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitSurvey,\n        activityA: `deleteVisitSurvey?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitSurvey;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/survey/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/survey/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `survey attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddSystematicInquiryForm = (event) => {\n  event.preventDefault();\n  console.log('...adding systematicInquiry...');\n  this.context.setUserAlert('...adding systematicInquiry...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n\n  // const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/systematicInquiry/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'systematicInquiry attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'systematicInquiry attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'systematicInquiry attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'systematicInquiry attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitSysInquiry(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          systematicInquiryTitle:\"${title}\",\n          systematicInquiryDescription:\"${description}\",\n          systematicInquiryAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitSysInquiry);\n      let responseAlert = '...systematicInquiry add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitSysInquiry)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitSysInquiry,\n        activityA: `addVisitSysInquiry?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitSysInquiry;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteSystematicInquiry = (args) => {\n\n  console.log('...deleting systematicInquiry...');\n  this.context.setUserAlert('...deleting systematicInquiry...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = args.title;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitSysInquiry(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          systematicInquiryTitle:\"${title}\",\n          systematicInquiryDescription:\"${description}\",\n          systematicInquiryAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitSysInquiry);\n      let responseAlert = '...sys inquiry delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitSysInquiry)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitSysInquiry,\n        activityA: `deleteVisitSysInquiry?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitSysInquiry;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/systematicInquiry/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/systematicInquiry/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `systematicInquiry attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddVitalsForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Vitals...');\n  this.context.setUserAlert('...adding Vitals...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const pr = event.target.pr.value;\n  const bp1 = event.target.bp1.value;\n  const bp2 = event.target.bp2.value;\n  const rr = event.target.rr.value;\n  const temp = event.target.temp.value;\n  const ps02 = event.target.ps02.value;\n  const heightUnit = event.target.heightUnit.value;\n  const heightValue = event.target.heightValue.value;\n  const weightUnit = event.target.weightUnit.value;\n  const weightValue = event.target.weightValue.value;\n  let bmi = 0;\n  const urineType = event.target.urineType.value;\n  const urineValue = event.target.urineValue.value;\n  if (heightUnit === 'M' ) {\n    bmi = weightValue/(heightValue**2)\n  }\n  if (heightUnit === 'In' ) {\n    bmi = 703 * (weightValue/(heightValue**2))\n  }\n  bmi = bmi.toFixed(2)\n  console.log('bmi',bmi);\n\n  if (\n      pr.trim().length === 0 ||\n      bp1.trim().length === 0 ||\n      bp2.trim().length === 0 ||\n      rr.trim().length === 0 ||\n      temp.trim().length === 0 ||\n      ps02.trim().length === 0 ||\n      heightUnit.trim().length === 0 ||\n      heightValue.trim().length === 0 ||\n      weightUnit.trim().length === 0 ||\n      weightValue.trim().length === 0 ||\n      urineType.trim().length === 0 ||\n      urineValue.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitVitals(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          vitalsPr:${pr},\n          vitalsBp1:${bp1},\n          vitalsBp2:${bp2},\n          vitalsRr:${rr},\n          vitalsTemp:${temp},\n          vitalsPs02:${ps02},\n          vitalsHeightUnit:\"${heightUnit}\",\n          vitalsHeightValue:${heightValue},\n          vitalsWeightUnit:\"${weightUnit}\",\n          vitalsWeightValue:${weightValue},\n          vitalsBmi:${bmi},\n          vitalsUrineType:\"${urineType}\",\n          vitalsUrineValue:\"${urineValue}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitVitals);\n      let responseAlert = '...Vitals add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitVitals)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitVitals,\n        activityA: `addVisitVitals?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitVitals;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteVitals = (args) => {\n\n  console.log('...deleting Vitals...');\n  this.context.setUserAlert('...deleting Vitals...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const pr = args.pr;\n  const bp1 = args.bp1;\n  const bp2 = args.bp2;\n  const rr = args.rr;\n  const temp = args.temp;\n  const ps02 = args.ps02;\n  const heightUnit = args.heightUnit;\n  const heightValue = args.heightValue;\n  const weightUnit = args.weightUnit;\n  const weightValue = args.weightValue;\n  const bmi = args.bmi;\n  const urineType = args.urine.type;\n  const urineValue = args.urine.value;\n\n  let requestBody = {\n    query: `\n    mutation {deleteVisitVitals(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        vitalsPr:${pr},\n        vitalsBp1:${bp1},\n        vitalsBp2:${bp2},\n        vitalsRr:${rr},\n        vitalsTemp:${temp},\n        vitalsPs02:${ps02},\n        vitalsHeightUnit:\"${heightUnit}\",\n        vitalsHeightValue:${heightValue},\n        vitalsWeightUnit:\"${weightUnit}\",\n        vitalsWeightValue:${weightValue},\n        vitalsBmi:${bmi},\n        vitalsUrineType:\"${urineType}\",\n        vitalsUrineValue:\"${urineValue}\"\n      })\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitVitals);\n      let responseAlert = '...vitals delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitVitals)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitVitals,\n        activityA: `deleteVisitVitals?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitVitals;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddExaminationForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Examination...');\n  this.context.setUserAlert('...adding Examination...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const general = event.target.general.value;\n  const area = event.target.area.value;\n  const type = event.target.type.value;\n  const measure = event.target.measure.value;\n  const value = event.target.value.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n  const followUp = event.target.followUp.checked;\n  // const attachment = event.target.attachment.value;\n\n  if (\n      general.trim().length === 0 ||\n      area.trim().length === 0 ||\n      type.trim().length === 0 ||\n      measure.trim().length === 0 ||\n      value.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/examination/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'examination attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'examination attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'examination attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'examination attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitExamination(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          examinationGeneral:\"${general}\",\n          examinationArea:\"${area}\",\n          examinationType:\"${type}\",\n          examinationMeasure:\"${measure}\",\n          examinationValue:\"${value}\",\n          examinationDescription:\"${description}\",\n          examinationFollowUp:${followUp},\n          examinationAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitExamination);\n      let responseAlert = '...Examination add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitExamination)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitExamination,\n        activityA: `addVisitExamination?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitExamination;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteExamination = (args) => {\n\n  console.log('...deleting Examination...');\n  this.context.setUserAlert('...deleting Examination...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const general = args.general;\n  const area = args.area;\n  const type = args.type;\n  const measure = args.measure;\n  const value = args.value;\n  const description = args.description;\n  const followUp = args.followUp;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitExamination(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          examinationGeneral:\"${general}\",\n          examinationArea:\"${area}\",\n          examinationType:\"${type}\",\n          examinationMeasure:\"${measure}\",\n          examinationValue:\"${value}\",\n          examinationDescription:\"${description}\",\n          examinationFollowUp:${followUp},\n          examinationAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitExamination);\n      let responseAlert = '...Examination delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitExamination)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitExamination,\n        activityA: `deleteVisitExamination?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitExamination;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/examination/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/examination/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `examination attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddInvestigationForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Investigation...');\n  this.context.setUserAlert('...adding Investigation...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n  // const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/investigation/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'investigation attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'investigation attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'investigation attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'investigation attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitInvestigation(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          investigationTitle:\"${title}\",\n          investigationType:\"${type}\",\n          investigationDescription:\"${description}\",\n          investigationAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitInvestigation);\n      let responseAlert = '...Investigation add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitInvestigation)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitInvestigation,\n        activityA: `addVisitInvestigation?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitInvestigation;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteInvestigation = (args) => {\n\n  console.log('...deleting Investigation...');\n  this.context.setUserAlert('...deleting Investigation...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitInvestigation(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          investigationTitle:\"${title}\",\n          investigationType:\"${type}\",\n          investigationDescription:\"${description}\",\n          investigationAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitInvestigation);\n      let responseAlert = '...Investigation delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitInvestigation)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitInvestigation,\n        activityA: `deleteVisitInvestigation?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitInvestigation;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/investigation/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/investigation/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `investigation attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddDiagnosisForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Diagnosis...');\n  this.context.setUserAlert('...adding Diagnosis...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n  // const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/diagnosis/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'diagnosis attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'diagnosis attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'diagnosis attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'diagnosis attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitDiagnosis(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          diagnosisTitle:\"${title}\",\n          diagnosisType:\"${type}\",\n          diagnosisDescription:\"${description}\",\n          diagnosisAttachment:\"${file2Path}\"\n        })\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitDiagnosis);\n      let responseAlert = '...Diagnosis add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitDiagnosis)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitDiagnosis,\n        activityA: `addVisitDiagnosis?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitDiagnosis;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteDiagnosis = (args) => {\n\n  console.log('...deleting Diagnosis...');\n  this.context.setUserAlert('...deleting Diagnosis...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitDiagnosis(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          diagnosisTitle:\"${title}\",\n          diagnosisType:\"${type}\",\n          diagnosisDescription:\"${description}\",\n          diagnosisAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitDiagnosis);\n      let responseAlert = '...Diagnosis delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitDiagnosis)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitDiagnosis,\n        activityA: `deleteVisitDiagnosis?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitDiagnosis;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/diagnosis/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/diagnosis/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `diagnosis attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddTreatmentForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Treatment...');\n  this.context.setUserAlert('...adding Treatment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n  const dose = event.target.dose.value;\n  const frequency = event.target.frequency.value;\n  // const attachment = event.target.attachment.value;\n\n\n  if (\n      title.trim().length === 0 ||\n      type.trim().length === 0 ||\n      description.trim().length === 0 ||\n      dose.trim().length === 0 ||\n      frequency.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/treatment/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'treatment attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'treatment attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'treatment attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'treatment attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n        mutation {addVisitTreatment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${type}\",\n            treatmentTitle:\"${title}\",\n            treatmentDescription:\"${description}\",\n            treatmentDose:\"${dose}\",\n            treatmentFrequency:\"${frequency}\",\n            treatmentAttachment:\"${file2Path}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitTreatment);\n      let responseAlert = '...Treatment add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitTreatment)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitTreatment,\n        activityA: `addVisitTreatment?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitTreatment;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteTreatment = (args) => {\n\n  console.log('...deleting Treatment...');\n  this.context.setUserAlert('...deleting Treatment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const dose = args.dose;\n  const frequency = args.frequency;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n        mutation {deleteVisitTreatment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${type}\",\n            treatmentTitle:\"${title}\",\n            treatmentDescription:\"${description}\",\n            treatmentDose:\"${dose}\",\n            treatmentFrequency:\"${frequency}\",\n            treatmentAttachments:\"${attachments}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitTreatment);\n      let responseAlert = '...Treatment delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitTreatment)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitTreatment,\n        activityA: `deleteVisitTreatment?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitTreatment;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/treatment/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/treatment/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `treatment attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddBillingForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Billing...');\n  this.context.setUserAlert('...adding Billing...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value.replace(/\\n/g, ' ');\n  const amount = event.target.amount.value;\n  const paid = event.target.paid.checked;\n  const notes = event.target.notes.value.replace(/\\n/g, ' ');\n  // const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0 ||\n      amount <= 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/billing/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'billing attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'billing attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'billing attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'billing attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n        mutation {addVisitBilling(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${title}\",\n            billingType:\"${type}\",\n            billingDescription:\"${description}\",\n            billingAmount:${amount},\n            billingPaid:${paid},\n            billingAttachment:\"${file2Path}\",\n            billingNotes:\"${notes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitBilling);\n      let responseAlert = '...Billing add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitBilling)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitBilling,\n        activityA: `addVisitBilling?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitBilling;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nupdateBillingPaid = (args) => {\n  console.log('...updating billing paid...');\n  this.context.setUserAlert('...updating billing paid...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n    mutation {updateVisitBillingPaid(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        billingTitle:\"${args.title}\",\n        billingType:\"${args.type}\",\n        billingDescription:\"${args.description}\",\n        billingAmount:${args.amount},\n        billingPaid:${args.paid},\n        billingNotes:\"${args.notes}\"\n      })\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateVisitBillingPaid);\n      let responseAlert = '...billing update success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.updateVisitBillingPaid)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.updateVisitBillingPaid,\n        activityA: `updateVisitBillingPaid?activityId:${activityId},visitId:${visitId}`,\n      });\n      this.context.selectedVisit = resData.data.updateVisitBillingPaid;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ndeleteBilling = (args) => {\n\n  console.log('...deleting Billing...',args);\n  this.context.setUserAlert('...deleting Billing...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const amount = args.amount;\n  const paid = args.paid;\n  const notes = args.notes;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n        mutation {deleteVisitBilling(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${title}\",\n            billingType:\"${type}\",\n            billingDescription:\"${description}\",\n            billingAmount:${amount},\n            billingPaid:${paid},\n            billingAttachments:\"${attachments}\",\n            billingNotes:\"${notes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitBilling);\n      let responseAlert = '...Billing delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitBilling)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitBilling,\n        activityA: `deleteVisitBilling?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitBilling;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/billing/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/billing/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `billing attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Image...');\n  this.context.setUserAlert('...adding Image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/images';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n        mutation {addVisitImage(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            imageName:\"${imageName}\",\n            imageType:\"${imageType}\",\n            imagePath:\"${imagePath}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitImage);\n      let responseAlert = '...Image add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitImage)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitImage,\n        activityA: `addVisitImage?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n\n  console.log('...deleting Image...',args);\n  this.context.setUserAlert('...deleting Image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const name = args.name;\n  const type = args.type;\n  const path = args.path;\n\n  let requestBody = {\n    query: `\n    mutation {deleteVisitImage(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        imageName:\"${name}\",\n        imageType:\"${type}\",\n        imagePath:\"${path}\"\n      })\n    {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitImage);\n      let responseAlert = '...Image delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitImage)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitImage,\n        activityA: `deleteVisitImage?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'visit/'+visitId+'/images';\n      const filename = args.name;\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding File...');\n  this.context.setUserAlert('...adding File...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n        mutation {addVisitFile(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            fileName:\"${file2Name}\",\n            fileType:\"${file2Type}\",\n            filePath:\"${file2Path}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitFile);\n      let responseAlert = '...File add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitFile)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitFile,\n        activityA: `addVisitFile?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n\n  console.log('...deleting File...',args);\n  this.context.setUserAlert('...deleting File...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const name = args.name;\n  const type = args.type;\n  const path = args.path;\n\n  let requestBody = {\n    query: `\n    mutation {deleteVisitFile(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        fileName:\"${name}\",\n        fileType:\"${type}\",\n        filePath:\"${path}\"\n      })\n    {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitFile);\n      let responseAlert = '...File delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitFile)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitFile,\n        activityA: `deleteVisitFile?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'visit/'+visitId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddVigilanceForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Vigilance...');\n  this.context.setUserAlert('...adding Vigilance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n    mutation {addVisitVigilance(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        vigilanceChronicIllnessDiabetesMedication:${event.target.vigilanceChronicIllnessDiabetesMedication.checked},\n        vigilanceChronicIllnessDiabetesTesting:${event.target.vigilanceChronicIllnessDiabetesTesting.checked},\n        vigilanceChronicIllnessDiabetesComment:\"${event.target.vigilanceChronicIllnessDiabetesComment.value}\",\n        vigilanceChronicIllnessHbpMedication:${event.target.vigilanceChronicIllnessHbpMedication.checked},\n        vigilanceChronicIllnessHbpTesting:${event.target.vigilanceChronicIllnessHbpTesting.checked},\n        vigilanceChronicIllnessHbpComment:\"${event.target.vigilanceChronicIllnessHbpComment.value}\",\n        vigilanceChronicIllnessDyslipidemiaMedication:${event.target.vigilanceChronicIllnessDyslipidemiaMedication.checked},\n        vigilanceChronicIllnessDyslipidemiaTesting:${event.target.vigilanceChronicIllnessDyslipidemiaTesting.checked},\n        vigilanceChronicIllnessDyslipidemiaComment:\"${event.target.vigilanceChronicIllnessDyslipidemiaComment.value}\",\n        vigilanceChronicIllnessCadMedication:${event.target.vigilanceChronicIllnessCadMedication.checked},\n        vigilanceChronicIllnessCadTesting:${event.target.vigilanceChronicIllnessCadTesting.checked},\n        vigilanceChronicIllnessCadComment:\"${event.target.vigilanceChronicIllnessCadComment.value}\",\n        vigilanceLifestyleWeightMedication:${event.target.vigilanceLifestyleWeightMedication.checked},\n        vigilanceLifestyleWeightTesting:${event.target.vigilanceLifestyleWeightTesting.checked},\n        vigilanceLifestyleWeightComment:\"${event.target.vigilanceLifestyleWeightComment.value}\",\n        vigilanceLifestyleDietMedication:${event.target.vigilanceLifestyleDietMedication.checked},\n        vigilanceLifestyleDietTesting:${event.target.vigilanceLifestyleDietTesting.checked},\n        vigilanceLifestyleDietComment:\"${event.target.vigilanceLifestyleDietComment.value}\",\n        vigilanceLifestyleSmokingMedication:${event.target.vigilanceLifestyleSmokingMedication.checked},\n        vigilanceLifestyleSmokingTesting:${event.target.vigilanceLifestyleSmokingTesting.checked},\n        vigilanceLifestyleSmokingComment:\"${event.target.vigilanceLifestyleSmokingComment.value}\",\n        vigilanceLifestyleSubstanceAbuseMedication:${event.target.vigilanceLifestyleSubstanceAbuseMedication.checked},\n        vigilanceLifestyleSubstanceAbuseTesting:${event.target.vigilanceLifestyleSubstanceAbuseTesting.checked},\n        vigilanceLifestyleSubstanceAbuseComment:\"${event.target.vigilanceLifestyleSubstanceAbuseComment.value}\",\n        vigilanceLifestyleExerciseMedication:${event.target.vigilanceLifestyleExerciseMedication.checked},\n        vigilanceLifestyleExerciseTesting:${event.target.vigilanceLifestyleExerciseTesting.checked},\n        vigilanceLifestyleExerciseComment:\"${event.target.vigilanceLifestyleExerciseComment.value}\",\n        vigilanceLifestyleAllergiesMedication:${event.target.vigilanceLifestyleAllergiesMedication.checked},\n        vigilanceLifestyleAllergiesTesting:${event.target.vigilanceLifestyleAllergiesTesting.checked},\n        vigilanceLifestyleAllergiesComment:\"${event.target.vigilanceLifestyleAllergiesComment.value}\",\n        vigilanceLifestyleAsthmaMedication:${event.target.vigilanceLifestyleAsthmaMedication.checked},\n        vigilanceLifestyleAsthmaTesting:${event.target.vigilanceLifestyleAsthmaTesting.checked},\n        vigilanceLifestyleAsthmaComment:\"${event.target.vigilanceLifestyleAsthmaComment.value}\",\n        vigilanceScreeningBreastMedication:${event.target.vigilanceScreeningBreastMedication.checked},\n        vigilanceScreeningBreastTesting:${event.target.vigilanceScreeningBreastTesting.checked},\n        vigilanceScreeningBreastComment:\"${event.target.vigilanceScreeningBreastComment.value}\",\n        vigilanceScreeningProstateMedication:${event.target.vigilanceScreeningProstateMedication.checked},\n        vigilanceScreeningProstateTesting:${event.target.vigilanceScreeningProstateTesting.checked},\n        vigilanceScreeningProstateComment:\"${event.target.vigilanceScreeningProstateComment.value}\",\n        vigilanceScreeningCervixMedication:${event.target.vigilanceScreeningCervixMedication.checked},\n        vigilanceScreeningCervixTesting:${event.target.vigilanceScreeningCervixTesting.checked},\n        vigilanceScreeningCervixComment:\"${event.target.vigilanceScreeningCervixComment.value}\",\n        vigilanceScreeningColonMedication:${event.target.vigilanceScreeningColonMedication.checked},\n        vigilanceScreeningColonTesting:${event.target.vigilanceScreeningColonTesting.checked},\n        vigilanceScreeningColonComment:\"${event.target.vigilanceScreeningColonComment.value}\",\n        vigilanceScreeningDentalMedication:${event.target.vigilanceScreeningDentalMedication.checked},\n        vigilanceScreeningDentalTesting:${event.target.vigilanceScreeningDentalTesting.checked},\n        vigilanceScreeningDentalComment:\"${event.target.vigilanceScreeningDentalComment.value}\",\n        vigilanceVaccinesInfluenzaMedication:${event.target.vigilanceVaccinesInfluenzaMedication.checked},\n        vigilanceVaccinesInfluenzaTesting:${event.target.vigilanceVaccinesInfluenzaTesting.checked},\n        vigilanceVaccinesInfluenzaComment:\"${event.target.vigilanceVaccinesInfluenzaComment.value}\",\n        vigilanceVaccinesVaricellaMedication:${event.target.vigilanceVaccinesVaricellaMedication.checked},\n        vigilanceVaccinesVaricellaTesting:${event.target.vigilanceVaccinesVaricellaTesting.checked},\n        vigilanceVaccinesVaricellaComment:\"${event.target.vigilanceVaccinesVaricellaComment.value}\",\n        vigilanceVaccinesHpvMedication:${event.target.vigilanceVaccinesHpvMedication.checked},\n        vigilanceVaccinesHpvTesting:${event.target.vigilanceVaccinesHpvTesting.checked},\n        vigilanceVaccinesHpvComment:\"${event.target.vigilanceVaccinesHpvComment.value}\",\n        vigilanceVaccinesMmrMedication:${event.target.vigilanceVaccinesMmrMedication.checked},\n        vigilanceVaccinesMmrTesting:${event.target.vigilanceVaccinesMmrTesting.checked},\n        vigilanceVaccinesMmrComment:\"${event.target.vigilanceVaccinesMmrComment.value}\",\n        vigilanceVaccinesTetanusMedication:${event.target.vigilanceVaccinesTetanusMedication.checked},\n        vigilanceVaccinesTetanusTesting:${event.target.vigilanceVaccinesTetanusTesting.checked},\n        vigilanceVaccinesTetanusComment:\"${event.target.vigilanceVaccinesTetanusComment.value}\",\n        vigilanceVaccinesPneumovaxMedication:${event.target.vigilanceVaccinesPneumovaxMedication.checked},\n        vigilanceVaccinesPneumovaxTesting:${event.target.vigilanceVaccinesPneumovaxTesting.checked},\n        vigilanceVaccinesPneumovaxComment:\"${event.target.vigilanceVaccinesPneumovaxComment.value}\",\n        vigilanceVaccinesOtherName:\"${event.target.vigilanceVaccinesOtherName.value}\",\n        vigilanceVaccinesOtherMedication:${event.target.vigilanceVaccinesOtherMedication.checked},\n        vigilanceVaccinesOtherTesting:${event.target.vigilanceVaccinesOtherTesting.checked},\n        vigilanceVaccinesOtherComment:\"${event.target.vigilanceVaccinesOtherComment.value}\"\n      })\n    {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitVigilance);\n      let responseAlert = '...Vigilance add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitVigilance)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitVigilance,\n        activityA: `addVisitVigilance?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitVigilance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteVigilance = (args) => {\n\n  console.log('...deleting Vigilance...');\n  this.context.setUserAlert('...deleting Vigilance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n        mutation {deleteVisitVigilance(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            vigilanceChronicIllnessDiabetesMedication:${args.chronicIllness.diabetes.medication},\n            vigilanceChronicIllnessDiabetesTesting:${args.chronicIllness.diabetes.testing},\n            vigilanceChronicIllnessDiabetesComment:\"${args.chronicIllness.diabetes.comment}\",\n            vigilanceChronicIllnessHbpMedication:${args.chronicIllness.hbp.medication},\n            vigilanceChronicIllnessHbpTesting:${args.chronicIllness.hbp.testing},\n            vigilanceChronicIllnessHbpComment:\"${args.chronicIllness.hbp.comment}\",\n            vigilanceChronicIllnessDyslipidemiaMedication:${args.chronicIllness.dyslipidemia.medication},\n            vigilanceChronicIllnessDyslipidemiaTesting:${args.chronicIllness.dyslipidemia.testing},\n            vigilanceChronicIllnessDyslipidemiaComment:\"${args.chronicIllness.dyslipidemia.comment}\",\n            vigilanceChronicIllnessCadMedication:${args.chronicIllness.cad.medication},\n            vigilanceChronicIllnessCadTesting:${args.chronicIllness.cad.testing},\n            vigilanceChronicIllnessCadComment:\"${args.chronicIllness.cad.comment}\",\n            vigilanceLifestyleWeightMedication:${args.lifestyle.weight.medication},\n            vigilanceLifestyleWeightTesting:${args.lifestyle.weight.testing},\n            vigilanceLifestyleWeightComment:\"${args.lifestyle.weight.comment}\",\n            vigilanceLifestyleDietMedication:${args.lifestyle.diet.medication},\n            vigilanceLifestyleDietTesting:${args.lifestyle.diet.testing},\n            vigilanceLifestyleDietComment:\"${args.lifestyle.diet.comment}\",\n            vigilanceLifestyleSmokingMedication:${args.lifestyle.smoking.medication},\n            vigilanceLifestyleSmokingTesting:${args.lifestyle.smoking.testing},\n            vigilanceLifestyleSmokingComment:\"${args.lifestyle.smoking.comment}\",\n            vigilanceLifestyleSubstanceAbuseMedication:${args.lifestyle.substanceAbuse.medication},\n            vigilanceLifestyleSubstanceAbuseTesting:${args.lifestyle.substanceAbuse.testing},\n            vigilanceLifestyleSubstanceAbuseComment:\"${args.lifestyle.substanceAbuse.comment}\",\n            vigilanceLifestyleExerciseMedication:${args.lifestyle.exercise.medication},\n            vigilanceLifestyleExerciseTesting:${args.lifestyle.exercise.testing},\n            vigilanceLifestyleExerciseComment:\"${args.lifestyle.exercise.comment}\",\n            vigilanceLifestyleAllergiesMedication:${args.lifestyle.allergies.medication},\n            vigilanceLifestyleAllergiesTesting:${args.lifestyle.allergies.testing},\n            vigilanceLifestyleAllergiesComment:\"${args.lifestyle.allergies.comment}\",\n            vigilanceLifestyleAsthmaMedication:${args.lifestyle.asthma.medication},\n            vigilanceLifestyleAsthmaTesting:${args.lifestyle.asthma.testing},\n            vigilanceLifestyleAsthmaComment:\"${args.lifestyle.asthma.comment}\",\n            vigilanceScreeningBreastMedication:${args.screening.breast.medication},\n            vigilanceScreeningBreastTesting:${args.screening.breast.testing},\n            vigilanceScreeningBreastComment:\"${args.screening.breast.comment}\",\n            vigilanceScreeningProstateMedication:${args.screening.prostate.medication},\n            vigilanceScreeningProstateTesting:${args.screening.prostate.testing},\n            vigilanceScreeningProstateComment:\"${args.screening.prostate.comment}\",\n            vigilanceScreeningCervixMedication:${args.screening.cervix.medication},\n            vigilanceScreeningCervixTesting:${args.screening.cervix.testing},\n            vigilanceScreeningCervixComment:\"${args.screening.cervix.comment}\",\n            vigilanceScreeningColonMedication:${args.screening.colon.medication},\n            vigilanceScreeningColonTesting:${args.screening.colon.testing},\n            vigilanceScreeningColonComment:\"${args.screening.colon.comment}\",\n            vigilanceScreeningDentalMedication:${args.screening.dental.medication},\n            vigilanceScreeningDentalTesting:${args.screening.dental.testing},\n            vigilanceScreeningDentalComment:\"${args.screening.dental.comment}\",\n            vigilanceVaccinesInfluenzaMedication:${args.vaccines.influenza.medication},\n            vigilanceVaccinesInfluenzaTesting:${args.vaccines.influenza.testing},\n            vigilanceVaccinesInfluenzaComment:\"${args.vaccines.influenza.comment}\",\n            vigilanceVaccinesVaricellaMedication:${args.vaccines.varicella.medication},\n            vigilanceVaccinesVaricellaTesting:${args.vaccines.varicella.testing},\n            vigilanceVaccinesVaricellaComment:\"${args.vaccines.varicella.comment}\",\n            vigilanceVaccinesHpvMedication:${args.vaccines.hpv.medication},\n            vigilanceVaccinesHpvTesting:${args.vaccines.hpv.testing},\n            vigilanceVaccinesHpvComment:\"${args.vaccines.hpv.comment}\",\n            vigilanceVaccinesMmrMedication:${args.vaccines.mmr.medication},\n            vigilanceVaccinesMmrTesting:${args.vaccines.mmr.testing},\n            vigilanceVaccinesMmrComment:\"${args.vaccines.mmr.comment}\",\n            vigilanceVaccinesTetanusMedication:${args.vaccines.tetanus.medication},\n            vigilanceVaccinesTetanusTesting:${args.vaccines.tetanus.testing},\n            vigilanceVaccinesTetanusComment:\"${args.vaccines.tetanus.comment}\",\n            vigilanceVaccinesPneumovaxMedication:${args.vaccines.pneumovax.medication},\n            vigilanceVaccinesPneumovaxTesting:${args.vaccines.pneumovax.testing},\n            vigilanceVaccinesPneumovaxComment:\"${args.vaccines.pneumovax.comment}\",\n            vigilanceVaccinesOtherName:\"${args.vaccines.other.name}\",\n            vigilanceVaccinesOtherMedication:${args.vaccines.other.medication},\n            vigilanceVaccinesOtherTesting:${args.vaccines.other.testing},\n            vigilanceVaccinesOtherComment:\"${args.vaccines.other.comment}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitVigilance);\n      let responseAlert = '...Vigilance delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitVigilance)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitVigilance,\n        activityA: `deleteVisitFile?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitVigilance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddUserForm = (event) => {\n  event.preventDefault();\n  console.log('...adding consultant...');\n  this.context.setUserAlert('...adding consultant...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = event.target.user.value;\n  const visitId = this.props.visit._id;\n\n  const userRole = this.state.users.filter(x => x._id === consultantId)[0].role;\n  if (userRole !== 'Doctor' && userRole !== 'Nurse') {\n    console.log('...please choose a Doctor or Nurse to add please...');\n    this.context.setUserAlert('...please choose a Doctor or Nurse to add please...')\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitConsultant(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitConsultant);\n      let responseAlert = '...add consultant success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `addVisitConsultant?activityId:${activityId},visitId:${visitId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteConsultant = (args) => {\n  console.log('...deleting consultant...');\n  this.context.setUserAlert('...deleting consultant...')\n  this.setState({isLoading: true});\n  //\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = args._id;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitConsultant(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitConsultant);\n      let responseAlert = '...delete consultant success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteVisitConsultant?activityId:${activityId},visitId:${visitId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartAddAttachment = (args) => {\n  console.log('...start add attachment...');\n  this.setState({\n    addAttachmentForm: true,\n    addAttachmentArgs: args\n  })\n}\ncancelAddAttachment = () => {\n  this.setState({\n    addAttachmentForm: false\n  })\n}\naddAttachment = (event) => {\n  event.preventDefault();\n  console.log('...adding attachment...');\n  this.context.setUserAlert('...adding attachment...');\n  this.setState({\n    isLoading: true,\n    addAttachmentForm: false\n  })\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  let args = this.state.addAttachmentArgs;\n  let field = args.field;\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/'+field+'/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading allergy attachment ...\")\n    console.log('...s3 uploading allergy attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: `${field} attachment`,\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: `${field} attachment`,\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody;\n\n  if (field === 'complaint') {\n    let complaintTitle = args.data.title;\n    let complaintDescription = args.data.description;\n    let complaintAnamnesis = args.data.anamnesis;\n    let complaintAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitComplaintAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${complaintTitle}\",\n            complaintDescription:\"${complaintDescription}\",\n            complaintAnamnesis:\"${complaintAnamnesis}\",\n            complaintAttachment:\"${complaintAttachment}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'survey') {\n    let surveyTitle = args.data.title;\n    let surveyDescription = args.data.description;\n    let surveyAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitSurveyAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            surveyTitle:\"${surveyTitle}\",\n            surveyDescription:\"${surveyDescription}\",\n            surveyAttachment:\"${surveyAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'systematicInquiry') {\n    let systematicInquiryTitle = args.data.title;\n    let systematicInquiryDescription = args.data.description;\n    let systematicInquiryAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitSysInquiryAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            systematicInquiryTitle:\"${systematicInquiryTitle}\",\n            systematicInquiryDescription:\"${systematicInquiryDescription}\",\n            systematicInquiryAttachment:\"${systematicInquiryAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'examination') {\n    let examinationGeneral = args.data.general;\n    let examinationArea = args.data.area;\n    let examinationType = args.data.type;\n    let examinationMeasure = args.data.measure;\n    let examinationValue = args.data.value;\n    let examinationDescription = args.data.description;\n    let examinationFollowUp = args.data.followUp;\n    let examinationAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitExaminationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            examinationGeneral:\"${examinationGeneral}\",\n            examinationArea:\"${examinationArea}\",\n            examinationType:\"${examinationType}\",\n            examinationMeasure:\"${examinationMeasure}\",\n            examinationValue:\"${examinationValue}\",\n            examinationDescription:\"${examinationDescription}\",\n            examinationFollowUp:${examinationFollowUp},\n            examinationAttachment:\"${examinationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'investigation') {\n    let investigationTitle = args.data.title;\n    let investigationType = args.data.type;\n    let investigationDescription = args.data.description;\n    let investigationAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitInvestigationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            investigationTitle:\"${investigationTitle}\",\n            investigationType:\"${investigationType}\",\n            investigationDescription:\"${investigationDescription}\",\n            investigationAttachment:\"${investigationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'diagnosis') {\n    let diagnosisTitle = args.data.title;\n    let diagnosisType = args.data.type;\n    let diagnosisDescription = args.data.description;\n    let diagnosisAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitDiagnosisAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            diagnosisTitle:\"${diagnosisTitle}\",\n            diagnosisType:\"${diagnosisType}\",\n            diagnosisDescription:\"${diagnosisDescription}\",\n            diagnosisAttachment:\"${diagnosisAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'treatment') {\n    let treatmentType = args.data.type;\n    let treatmentTitle = args.data.title;\n    let treatmentDescription = args.data.description;\n    let treatmentDose = args.data.dose;\n    let treatmentFrequency = args.data.frequency;\n    let treatmentAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitTreatmentAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${treatmentType}\",\n            treatmentTitle:\"${treatmentTitle}\",\n            treatmentDescription:\"${treatmentDescription}\",\n            treatmentDose:\"${treatmentDose}\",\n            treatmentFrequency:\"${treatmentFrequency}\",\n            treatmentAttachment:\"${treatmentAttachment}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'billing') {\n    let billingAmount = args.data.amount;\n    let billingPaid = args.data.paid;\n    let billingTitle = args.data.title;\n    let billingType = args.data.type;\n    let billingDescription = args.data.description;\n    let billingNotes = args.data.notes;\n    let billingAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitBillingAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${billingTitle}\",\n            billingType:\"${billingType}\",\n            billingDescription:\"${billingDescription}\",\n            billingAmount:${billingAmount},\n            billingPaid:${billingPaid},\n            billingAttachment:\"${billingAttachment}\",\n            billingNotes:\"${billingNotes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'complaint') {\n        // console.log('...resData...',resData.data.addVisitComplaintAttachment);\n      }\n      if (field === 'survey') {\n        // console.log('...resData...',resData.data.addVisitSurveyAttachment);\n      }\n      if (field === 'systematicInquiry') {\n        // console.log('...resData...',resData.data.addVisitSysInquiryAttachment);\n      }\n      if (field === 'examination') {\n        // console.log('...resData...',resData.data.addVisitExaminationAttachment);\n      }\n      if (field === 'investigation') {\n        // console.log('...resData...',resData.data.addVisitInvestigationAttachment);\n      }\n      if (field === 'diagnosis') {\n        // console.log('...resData...',resData.data.addVisitDiagnosisAttachment);\n      }\n      if (field === 'treatment') {\n        // console.log('...resData...',resData.data.addVisitTreatmentAttachment);\n      }\n      if (field === 'billing') {\n        // console.log('...resData...',resData.data.addVisitBillingAttachment);\n      }\n\n      let responseAlert = '...add attachment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'complaint') {\n        this.props.updateVisit(resData.data.addVisitComplaintAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitComplaintAttachment,\n          activityA: `addVisitComplaintAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'survey') {\n        this.props.updateVisit(resData.data.addVisitSurveyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitSurveyAttachment,\n          activityA: `addVisitSurveyAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'systematicInquiry') {\n        this.props.updateVisit(resData.data.addVisitSysInquiryAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitSysInquiryAttachment,\n          activityA: `addVisitSysInquiryAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'examination') {\n        this.props.updateVisit(resData.data.addVisitExaminationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitExaminationAttachment,\n          activityA: `addVisitExaminationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'investigation') {\n        this.props.updateVisit(resData.data.addVisitInvestigationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitInvestigationAttachment,\n          activityA: `addVisitInvestigationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'diagnosis') {\n        this.props.updateVisit(resData.data.addVisitDiagnosisAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitDiagnosisAttachment,\n          activityA: `addVisitDiagnosisAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'treatment') {\n        this.props.updateVisit(resData.data.addVisitTreatmentAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitTreatmentAttachment,\n          activityA: `addVisitTreatmentAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'billing') {\n        this.props.updateVisit(resData.data.addVisitBillingAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitBillingAttachment,\n          activityA: `addVisitBillingAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ndeleteAttachment = (args) => {\n  console.log('...deleting attachment...', args.type);\n  this.context.setUserAlert('...adding attachment...');\n  // this.setState({isLoading: true})\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const field = args.type;\n  const attachment = args.attachment;\n  const item = args.item;\n\n  let requestBody;\n\n  if (field === 'complaint') {\n    let complaintTitle = item.title;\n    let complaintDescription = item.description;\n    let complaintAnamnesis = item.anamnesis;\n    let complaintAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitComplaintAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${complaintTitle}\",\n            complaintDescription:\"${complaintDescription}\",\n            complaintAnamnesis:\"${complaintAnamnesis}\",\n            complaintAttachment:\"${complaintAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'survey') {\n    let surveyTitle = item.title;\n    let surveyDescription = item.description;\n    let surveyAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitSurveyAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            surveyTitle:\"${surveyTitle}\",\n            surveyDescription:\"${surveyDescription}\",\n            surveyAttachment:\"${surveyAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'systematicInquiry') {\n    let systematicInquiryTitle = item.title;\n    let systematicInquiryDescription = item.description;\n    let systematicInquiryAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitSysInquiryAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            systematicInquiryTitle:\"${systematicInquiryTitle}\",\n            systematicInquiryDescription:\"${systematicInquiryDescription}\",\n            systematicInquiryAttachment:\"${systematicInquiryAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'examination') {\n    let examinationGeneral = item.general;\n    let examinationArea = item.area;\n    let examinationType = item.type;\n    let examinationMeasure = item.measure;\n    let examinationValue = item.value;\n    let examinationDescription = item.description;\n    let examinationFollowUp = item.followUp;\n    let examinationAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitExaminationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            examinationGeneral:\"${examinationGeneral}\",\n            examinationArea:\"${examinationArea}\",\n            examinationType:\"${examinationType}\",\n            examinationMeasure:\"${examinationMeasure}\",\n            examinationValue:\"${examinationValue}\",\n            examinationDescription:\"${examinationDescription}\",\n            examinationFollowUp:${examinationFollowUp},\n            examinationAttachment:\"${examinationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'investigation') {\n    let investigationTitle = item.title;\n    let investigationType = item.type;\n    let investigationDescription = item.description;\n    let investigationAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitInvestigationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            investigationTitle:\"${investigationTitle}\",\n            investigationType:\"${investigationType}\",\n            investigationDescription:\"${investigationDescription}\",\n            investigationAttachment:\"${investigationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'diagnosis') {\n    let diagnosisTitle = item.title;\n    let diagnosisType = item.type;\n    let diagnosisDescription = item.description;\n    let diagnosisAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitDiagnosisAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            diagnosisTitle:\"${diagnosisTitle}\",\n            diagnosisType:\"${diagnosisType}\",\n            diagnosisDescription:\"${diagnosisDescription}\",\n            diagnosisAttachment:\"${diagnosisAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'treatment') {\n\n    let treatmentType = item.type;\n    let treatmentTitle = item.title;\n    let treatmentDescription = item.description;\n    let treatmentDose = item.dose;\n    let treatmentFrequency = item.frequency;\n    let treatmentAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitTreatmentAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${treatmentType}\",\n            treatmentTitle:\"${treatmentTitle}\",\n            treatmentDescription:\"${treatmentDescription}\",\n            treatmentDose:\"${treatmentDose}\",\n            treatmentFrequency:\"${treatmentFrequency}\",\n            treatmentAttachment:\"${treatmentAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'billing') {\n\n    let billingTitle = item.title;\n    let billingType = item.type;\n    let billingDescription = item.description;\n    let billingAmount = item.amount;\n    let billingPaid = item.paid;\n    let billingAttachment = attachment;\n    let billingNotes = item.notes;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitBillingAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${billingTitle}\",\n            billingType:\"${billingType}\",\n            billingDescription:\"${billingDescription}\",\n            billingAmount:${billingAmount},\n            billingPaid:${billingPaid},\n            billingAttachment:\"${billingAttachment}\",\n            billingNotes:\"${billingNotes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'complaint') {\n        // console.log('...resData...',resData.data.deleteVisitComplaintAttachment);\n      }\n      if (field === 'survey') {\n        // console.log('...resData...',resData.data.deleteVisitSurveyAttachment);\n      }\n      if (field === 'systematicInquiry') {\n        // console.log('...resData...',resData.data.deleteVisitSysInquiryAttachment);\n      }\n      if (field === 'examination') {\n        // console.log('...resData...',resData.data.deleteVisitExaminationAttachment);\n      }\n      if (field === 'investigation') {\n        // console.log('...resData...',resData.data.deleteVisitInvestigationAttachment);\n      }\n      if (field === 'diagnosis') {\n        // console.log('...resData...',resData.data.deleteVisitDiagnosisAttachment);\n      }\n      if (field === 'treatment') {\n        // console.log('...resData...',resData.data.deleteVisitTreatmentAttachment);\n      }\n      if (field === 'billing') {\n        // console.log('...resData...',resData.data.deleteVisitBillingAttachment);\n      }\n\n      let responseAlert = '...delete attachment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'complaint') {\n        this.props.updateVisit(resData.data.deleteVisitComplaintAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitComplaintAttachment,\n          activityA: `deleteVisitComplaintAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'survey') {\n        this.props.updateVisit(resData.data.deleteVisitSurveyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitSurveyAttachment,\n          activityA: `deleteVisitSurveyAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'systematicInquiry') {\n        this.props.updateVisit(resData.data.deleteVisitSysInquiryAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitSysInquiryAttachment,\n          activityA: `deleteVisitSysInquiryAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'examination') {\n        this.props.updateVisit(resData.data.deleteVisitExaminationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitExaminationAttachment,\n          activityA: `deleteVisitExaminationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'investigation') {\n        this.props.updateVisit(resData.data.deleteVisitInvestigationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitInvestigationAttachment,\n          activityA: `deleteVisitInvestigationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'diagnosis') {\n        this.props.updateVisit(resData.data.deleteVisitDiagnosisAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitDiagnosisAttachment,\n          activityA: `deleteVisitDiagnosisAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'treatment') {\n        this.props.updateVisit(resData.data.deleteVisitTreatmentAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitTreatmentAttachment,\n          activityA: `deleteVisitTreatmentAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'billing') {\n        this.props.updateVisit(resData.data.deleteVisitBillingAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitBillingAttachment,\n          activityA: `deleteVisitBillingAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'visit/'+visitId+'/'+field+'/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/'+field+'/attachments/';\n      const filename = attachment;\n      const filename2 = filename.replace(filePath2,'');\n      console.log('1:',filePath);\n      console.log('2:',filename);\n      console.log('3:',filename2);\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachment..')\n      console.log('...s3 deleting attachment..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `${field} attachment`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: `${field} attachment`,\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename2, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\n\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateVisitSingleField(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateVisitSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.updateVisitSingleField)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.updateVisitSingleField,\n        activityA: `updateVisitSingleField?activityId:${activityId},visitId:${visitId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.updateVisitSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ncompleteVisit = () => {\n  console.log('...completing visit...');\n  this.context.setUserAlert('...completing visit...')\n  this.setState({isLoading: true})\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n      mutation {completeVisitById(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\"\n      )\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.completeVisitById);\n      let responseAlert = '...visit completed!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.completeVisitById)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.completeVisitById,\n        activityA: `completeVisitById?activityId:${activityId},visitId:${visitId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.completeVisitById;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {!this.props.visit && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={3} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'consultant')}>Consultants</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'complaint')}>Complaints</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'survey')}>Survey</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'systematicInquiry')}>Systematic Inquiry</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'vitals')}>Vitals</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'examination')}>Examination</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'investigation')}>investigation</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"10\" onClick={this.menuSelect.bind(this, 'diagnosis')}>diagnosis</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"11\" onClick={this.menuSelect.bind(this, 'treatment')}>treatment</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"12\" onClick={this.menuSelect.bind(this, 'billing')}>billing</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"13\" onClick={this.menuSelect.bind(this, 'vigilance')}>vigilance</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"14\" onClick={this.menuSelect.bind(this, 'image')}>images</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"15\" onClick={this.menuSelect.bind(this, 'file')}>files</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'consultant' && (\n                  <FilterUserForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'complaint' && (\n                  <FilterComplaintForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'survey' && (\n                  <FilterSurveyForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'systematicInquiry' && (\n                  <FilterSystematicInquiryForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'vitals' && (\n                  <FilterVitalsForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'examination' && (\n                  <FilterExaminationForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'investigation' && (\n                  <FilterInvestigationForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'diagnosis' && (\n                  <FilterDiagnosisForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'treatment' && (\n                  <FilterTreatmentForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'billing' && (\n                  <FilterBillingForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'vigilance' && (\n                  <h3>Filter vigilance form</h3>\n                )}\n                {this.state.menuSelect === 'image' && (\n                  <FilterImageForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'file' && (\n                  <FilterFileForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n            )}\n          </Col>\n\n          {this.props.visit && (\n            <Col md={9} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdatePatientSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n                <Tab.Content className=\"tabContent\">\n                  <Tab.Pane eventKey=\"1\">\n                    Visit Basic:\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.title}</p>\n                        {this.context.role !== 'Staff' && (\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                        )}\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Type:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.type}</p>\n                        {this.context.role !== 'Staff' && (\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'type')}>Edit</Button>\n                        )}\n                        <p className=\"listGroupText\">subType:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.subType}</p>\n                        {this.context.role !== 'Staff' && (\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'subType')}>Edit</Button>\n                        )}\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <p className=\"listGroupText\">Time:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.time}</p>\n                        {this.context.role !== 'Staff' && (\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'time')}>Edit</Button>\n                        )}\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Patient:</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Name:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.patient.title}</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.patient.name}</p>\n                        <Link\n                          to={{\n                            pathname: \"/patients\",\n                            state: {patient: this.props.visit.patient._id}\n                          }}\n                        >\n                        <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                        </Link>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Attending Physician:</p>\n                      <p className=\"listGroupText bold\">{this.props.visit.patient.attendingPhysician}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Appointment:</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.appointment.title}</p>\n                        <p className=\"listGroupText\">Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.visit.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <Link\n                          to={{\n                            pathname: \"/appointments\",\n                            state: {appointment: this.props.visit.appointment._id}\n                          }}\n                        >\n                        <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                        </Link>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"2\">\n                    Visit Admin\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Id:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit._id}</p>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"3\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Consultant List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'consultant')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'consultant' &&\n                      this.state.users && (\n                        <AddUserForm\n                          onConfirm={this.submitAddUserForm}\n                          onCancel={this.cancelAdd}\n                          filter={this.state.filter}\n                          users={this.state.users}\n                        />\n                    )}\n                    <UserList\n                      filter={this.state.filter}\n                      authId={this.context.activityId}\n                      users={this.props.visit.consultants}\n                      visitPage={true}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteConsultant}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"4\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Complaint List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'complaint')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'complaint' && (\n                        <AddComplaintForm\n                          onConfirm={this.submitAddComplaintForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitComplaintList\n                      filter={this.state.filter}\n                      complaints={this.props.visit.complaints}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteComplaint}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"5\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Survey List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'survey')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'survey' && (\n                        <AddSurveyForm\n                          onConfirm={this.submitAddSurveyForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitSurveyList\n                      filter={this.state.filter}\n                      surveys={this.props.visit.surveys}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteSurvey}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"6\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit SystematicInquiry List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'systematicInquiry')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'systematicInquiry' && (\n                        <AddSystematicInquiryForm\n                          onConfirm={this.submitAddSystematicInquiryForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitSystematicInquiryList\n                      filter={this.state.filter}\n                      systematicInquiry={this.props.visit.systematicInquiry}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteSystematicInquiry}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"7\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Vitals List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'vitals')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'vitals' && (\n                        <AddVitalsForm\n                          onConfirm={this.submitAddVitalsForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitVitalsList\n                      filter={this.state.filter}\n                      vitals={this.props.visit.vitals}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteVitals}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"8\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Examination List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'examination')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'examination' && (\n                        <AddExaminationForm\n                          onConfirm={this.submitAddExaminationForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitExaminationList\n                      filter={this.state.filter}\n                      examination={this.props.visit.examination}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteExamination}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"9\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Investigation List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'investigation')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'investigation' && (\n                        <AddInvestigationForm\n                          onConfirm={this.submitAddInvestigationForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitInvestigationList\n                      filter={this.state.filter}\n                      investigation={this.props.visit.investigation}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteInvestigation}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"10\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Diagnosis List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'diagnosis')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'diagnosis' && (\n                        <AddDiagnosisForm\n                          onConfirm={this.submitAddDiagnosisForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitDiagnosisList\n                      filter={this.state.filter}\n                      diagnosis={this.props.visit.diagnosis}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteDiagnosis}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"11\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Treatment List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'treatment')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'treatment' && (\n                        <AddTreatmentForm\n                          onConfirm={this.submitAddTreatmentForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitTreatmentList\n                      filter={this.state.filter}\n                      treatment={this.props.visit.treatment}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteTreatment}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"12\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Billing List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'billing')}>Add</Button>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.completeVisit}>Complete Visit</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'billing' && (\n                        <AddBillingForm\n                          onConfirm={this.submitAddBillingForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitBillingList\n                      filter={this.state.filter}\n                      billing={this.props.visit.billing}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteBilling}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                      updateBillingPaid={this.updateBillingPaid}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"13\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Vigilance List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'vigilance')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'vigilance' && (\n                        <AddVigilanceForm\n                          onConfirm={this.submitAddVigilanceForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitVigilanceList\n                      filter={this.state.filter}\n                      vigilance={this.props.visit.vigilance}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteVigilance}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"14\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Image List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'image' && (\n                        <AddImageForm\n                          onConfirm={this.submitAddImageForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitImageList\n                      filter={this.state.filter}\n                      images={this.props.visit.images}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteImage}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"15\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit File List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'file' && (\n                        <AddFileForm\n                          onConfirm={this.submitAddFileForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitFileList\n                      filter={this.state.filter}\n                      files={this.props.visit.files}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteFile}\n                    />\n                  </Tab.Pane>\n\n                </Tab.Content>\n\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n}\n\n}\n\nexport default VisitDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst VisitSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label className=\"formLabel\">Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>date</option>\n        <option>time</option>\n        <option>title</option>\n        <option>type</option>\n        <option>subType</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label className=\"formLabel\">Value</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default VisitSearchForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport CreateVisitForm from '../../components/forms/create/CreateVisitForm';\nimport VisitList from '../../components/lists/visit/VisitList';\nimport PatientList from '../../components/lists/patient/PatientList';\nimport AppointmentList from '../../components/lists/appointment/AppointmentList';\n// import SearchAppointmentList from '../../components/lists/appointment/SearchAppointmentList';\nimport VisitDetail from '../../components/details/VisitDetail';\n\nimport FilterVisitForm from '../../components/forms/filter/FilterVisitForm';\nimport VisitSearchForm from '../../components/forms/search/VisitSearchForm';\nimport AppointmentSearchForm from '../../components/forms/search/AppointmentSearchForm';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './visit.css';\n\nclass VisitPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    patients: null,\n    appointments: null,\n    canDelete: false,\n    visits: null,\n    searchVisits: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    selectedVisit: null,\n    creatingVisit: false,\n    newVisit: null,\n    calendarVisits: null,\n    fromGoLink: null,\n    goLinkId: null,\n    sublistSearch: false,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all visits component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    if (this.props.location.state) {\n      if (this.props.location.state.visit) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.visit\n        })\n      }\n    }\n    this.getAllVisits(seshStore);\n    this.getAllAppointments(seshStore);\n    // this.getAllPatients(seshStore);\n    if (this.props.selectedVisit) {\n      console.log('...found existing visit selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedVisit: this.props.selectedVisit\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\ncomponentDidUpdate () {\n}\n\ngetAllVisits (args) {\n  console.log('...retrieving all visits...');\n  this.context.setUserAlert('...retrieving all visits...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllVisits(\n        activityId:\"${activityId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllVisits);\n      let responseAlert = '...all visits retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkVisit = resData.data.getAllVisits.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedVisit: goLinkVisit,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        visits: resData.data.getAllVisits,\n        activityA: `getAllVisits?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.parseForCalendar(resData.data.getAllVisits)\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\ngetAllAppointments (args) {\n  console.log('...retrieving all appointments...');\n  this.context.setUserAlert('...retrieving all appointments...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllAppointments(\n        activityId:\"${activityId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllAppointments);\n      let responseAlert = '...all appointments retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        appointments: resData.data.getAllAppointments,\n        activityA: `getAllAppointments?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n        activityA: `getAllPatients?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message);\n      }\n      if (resData.data.error) {\n        this.context.setUserAlert(resData.data.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchVisits = (event) => {\n  event.preventDefault();\n  console.log('...searching visits...');\n  this.context.setUserAlert('...searching visits...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'date') {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n      query {getVisitsByFieldRegex(\n        activityId:\"${activityId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getVisitsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getVisitsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getVisitsByField);\n      }\n\n      let responseAlert = '...visit search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchVisits: resData.data.getVisitsByFieldRegex,\n          activityA: `getVisitsByFieldRegex?activityId:${activityId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchVisits: resData.data.getVisitsByField,\n          activityA: `getVisitsByField?activityId:${activityId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nonStartCreateNewVisit = () => {\n  this.setState({\n    creatingVisit: true\n  })\n}\ncancelCreateNewVisit = () => {\n  this.setState({\n    creatingVisit: false,\n    selectedAppointment: null\n  })\n}\nsubmitCreateNewVisitForm = (event) => {\n  event.preventDefault();\n  console.log('...creating new visit...');\n  this.context.setUserAlert('...creating new visit...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.state.selectedAppointment._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const subType = event.target.subType.value;\n\n  if (\n      title.trim().length === 0 ||\n      type.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    return;\n  }\n\n  const tooEarly = moment().format('YYYY-MM-DD') < moment.unix(this.state.selectedAppointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD');\n  const tooLate = moment().format('YYYY-MM-DD') > moment.unix(this.state.selectedAppointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD');\n\n  if (tooEarly === true) {\n    console.log('...appointment for this visit is in the future...please wait or create a new appointment...');\n    this.context.setUserAlert('...appointment for this visit is in the future...please wait or create a new appointment...')\n    this.setState({isLoading: false})\n    return\n  }\n  if (tooLate === true) {\n    console.log('...appointment for this visit has already gone... please create a new appointment...');\n    this.context.setUserAlert('...appointment for this visit has already gone... please create a new appointment...')\n    this.setState({isLoading: false})\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {createVisit(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        visitInput:{\n          title:\"${title}\",\n          type:\"${type}\",\n          subType:\"${subType}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      console.log('...resData...',resData.data.createVisit);\n      let responseAlert = '...create visit success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        showDetails: true,\n        creatingVisit: false,\n        selectedVisit: resData.data.createVisit,\n        newVisit: resData.data.createVisit,\n        tabKey: 'detail',\n        activityA: `createAppointment?activityId:${activityId},visitId:${resData.data.createVisit._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'))\n      this.getAllVisits(seshStore);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nselectAppointment = (args) => {\n  this.setState({\n    selectedAppointment: args\n  })\n}\n\nshowDetails = (args) => {\n  this.setState({\n    showDetails: true,\n    selectedVisit: args,\n    overlay: false,\n    tabKey: 'detail'\n  })\n  this.props.selectVisit(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\nupdateVisit = (args) => {\n  console.log('...updating selected visit...');\n  this.setState({\n    selectedVisit: args\n  })\n  this.props.selectVisit(args);\n}\n\ndeleteVisit = (args) => {\n  console.log('...deleteing visit...');\n  this.context.setUserAlert('...deleteing visit...')\n\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitById(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitById);\n      let responseAlert = '...delete visit success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteVisitById?activityId:${activityId},visitId:${visitId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllVisits({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing visits for calendar...');\n  let calendarVisits = args.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        title: x.title,\n        type: x.type,\n        date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n        time: x.time,\n        subType: x.subType,\n      }\n    }))\n    this.setState({\n      calendarVisits: calendarVisits\n    })\n}\n\nviewCalendarEvent = (args) => {\n  console.log('...viewing calendar visit...');\n  const visit = this.state.visits.filter(x => x._id === args.event.extendedProps.props._id)[0];\n  this.setState({\n    overlay: true,\n    overlayStatus: {type: 'calendarVisit', data: visit}\n  })\n}\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\nstartSublistSearch = () => {\n  this.setState({\n    sublistSearch: true\n  })\n}\ncancelSublistSearch = () => {\n  this.setState({\n    sublistSearch: false,\n  })\n  this.getAllAppointments({activityId: this.context.activityId,token: this.context.token});\n}\nsubmitSublistSearchForm = (event) => {\n  event.preventDefault();\n  console.log('...searching appointments...');\n  this.context.setUserAlert('...searching appointments...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'date' ||\n      field === 'inProgress' ||\n      field === 'attended' ||\n      field === 'important' ||\n      field === 'important'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getAppointmentsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n      query {getAppointmentsByField(\n        activityId:\"${activityId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getAppointmentsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getAppointmentsByField);\n      }\n\n      let responseAlert = '...appointment search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          appointments: resData.data.getAppointmentsByFieldRegex,\n          activityA: `getAppointmentsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          appointments: resData.data.getAppointmentsByField,\n          activityA: `getAppointmentsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        selectCalendarDetails={this.showDetails}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n          <h1>Visits: {this.state.showDetails === true &&\n                        this.state.selectedVisit &&\n                        this.state.tabKey === 'detail' && (\n                              this.state.selectedVisit.title\n                            )}</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col md={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n                {this.context.role === 'Nurse' && (\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                  </Nav.Item>\n                )}\n                {this.context.role === 'Doctor' && (\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                  </Nav.Item>\n                )}\n\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterVisitForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.visits && (\n            <Col md={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content>\n                <Tab.Pane eventKey=\"list\">\n\n                <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                  <Tab eventKey=\"1\" title=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                    <VisitList\n                      filter={this.state.filter}\n                      visits={this.state.visits}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      showDetails={this.showDetails}\n                      onDelete={this.deleteVisit}\n                    />\n                  </Tab>\n                  <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                    <h3>Calendar</h3>\n                    <FullCalendar\n                      plugins={[dayGridPlugin]}\n                      intitialView=\"dayGridMonth\"\n                      events={this.state.calendarVisits}\n                      eventClick={this.viewCalendarEvent}\n                    />\n                  </Tab>\n                </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Visit</h3>\n                  <Row className=\"userSearchRow\">\n                    <VisitSearchForm\n                      onConfirm={this.searchVisits}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchVisits && (\n                      <Button variant=\"primary\" onClick={this.toggleSideCol} className=\"centered_btn\">Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchVisits && (\n                      <VisitList\n                        filter={this.state.filter}\n                        visits={this.state.searchVisits}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedVisit && (\n                    <VisitDetail\n                      visit={this.state.selectedVisit}\n                      updateVisit={this.updateVisit}\n                    />\n                )}\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"new\">\n                {this.state.creatingVisit === false && (\n                  <Button variant=\"secondary\" className=\"filterFormBtn\" onClick={this.onStartCreateNewVisit}>Create New</Button>\n                )}\n                {this.state.creatingVisit === true &&\n                  this.state.appointments &&\n                  !this.state.selectedAppointment && (\n                  <Col className=\"patientSubListCol\">\n                  <Row className=\"patientSubListRow\">\n                  <h3>\n                  Choose an Appointment\n                  </h3>\n                  <Button variant=\"secondary\" className=\"patientSublistSearchBtn\" onClick={this.startSublistSearch}>Search</Button>\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  {this.state.sublistSearch === true && (\n                    <AppointmentSearchForm\n                      onCancel={this.cancelSublistSearch}\n                      onConfirm={this.submitSublistSearchForm}\n                    />\n                  )}\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  <AppointmentList\n                    filter={this.state.filter}\n                    appointments={this.state.appointments}\n                    authId={this.context.activityId}\n                    onSelect={this.selectAppointment}\n                    visitPage={true}\n                  />\n                  </Row>\n\n                  </Col>\n                )}\n                {this.state.creatingVisit === true &&\n                  this.state.selectedAppointment && (\n                  <Row>\n                    <CreateVisitForm\n                      onConfirm={this.submitCreateNewVisitForm}\n                      onCancel={this.cancelCreateNewVisit}\n                      appointment={this.state.selectedAppointment}\n                    />\n                  </Row>\n                )}\n                {this.state.newVisit && (\n                  <Row>\n                    <h3>Review New Visit {this.state.newVisit._id}</h3>\n                  </Row>\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default VisitPage;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport AlertBox from './components/alertBox/AlertBox';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport LandingPage from './pages/landing/Landing';\nimport HomePage from './pages/landing/Home';\nimport MyProfilePage from './pages/profile/Profile';\nimport LoginPage from './pages/auth/Login';\nimport SignupPage from './pages/auth/Signup';\nimport PasswordResetPage from './pages/auth/PasswordReset';\nimport StaffPage from './pages/staff/Staff';\nimport PatientPage from './pages/patient/Patients';\nimport AppointmentPage from './pages/appointment/Appointment';\nimport VisitPage from './pages/visit/Visit';\n\nimport AuthContext from './context/auth-context';\nimport io from 'socket.io-client';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    activityId: null,\n    role: null,\n    context: this.context,\n    sessionStorageAuth: JSON.parse(sessionStorage.getItem('logInfo')),\n    sessionCookiePresent: false,\n    passwordResetState: 'incomplete',\n    passwordResetMessage: '...',\n    userAlert: null,\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    selectedVisit: null,\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.sessionStorageAuth = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.socket = io('http://localhost:9099');\n  }\n\n  login = (token, activityId, role, tokenExpiration) => {\n    console.log('...context login...');\n    this.setState({\n      token: token,\n      activityId: activityId,\n      role: role,\n      sessionStorageAuth: {\n        token: token,\n        activityId: activityId,\n        role: role,\n        tokenExpiration: tokenExpiration\n      },\n    });\n    this.sessionStorageAuth = {\n      token: token,\n      activityId: activityId,\n      role: role,\n      tokenExpiration: tokenExpiration\n    }\n    this.context.token = token;\n    this.context.activityId = activityId;\n    this.context.role = role;\n    this.userOnline();\n  };\n\n  logout = () => {\n      this.logout2();\n  };\n\n  componentDidMount() {\n    console.log('1:',this.socket);\n    // console.log('2:',this.socket2);\n    console.log('...app component mounted...');\n    if (sessionStorage.getItem('logInfo') && this.state.token === null) {\n      console.log('...sessionStorageFound...');\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n      this.login(\n        seshStore.token,\n        seshStore.activityId,\n        seshStore.role,\n        seshStore.tokenExpiration,\n      )\n    }\n    if (!this.sessionStorageAuth) {\n      console.log('...noSessionStorageFound...');\n    }\n    this.socket.emit('unauthorizedClientConnect');\n    console.log(\"socket listening....\");\n\n    this.socket.on('admin_msg', function(data) {\n      console.log('...receiving admin msg client...',data);\n      adminMessage(data);\n    });\n    this.socket.on('receive_notification', function(data) {\n      console.log('...receiving notification client...',data);\n      sendNotification(data);\n    });\n\n    // this.socket.on('conversation private post', function(data) {\n    //   console.log(\"you got a new message..\",data);\n      // addMessage(data);\n    // });\n    const sendNotification = data => {\n      // console.log('notification user alert',data);\n      this.setState({\n        userAlert: data.msg })\n    };\n    const adminMessage = data => {\n      // console.log('admin message user alert',data);\n      this.setState({\n        userAlert: data.msg.msg })\n    };\n\n  }\n\n\n  sendSocketMessage (msgObject) {\n    const message = msgObject;\n    console.log(\"sending socket message  \",'message',message,'this.socket',this.socket);\n    this.setState({userAlert: \"sending socket message  \"+'message'+message+'this.socket'+this.socket})\n    let conversationId = null;\n    if (this.context.receiver === null || this.context.receiver === undefined) {\n      console.log(\"select someone to msg 1st...\");\n      this.setState({userAlert: \"select someone to msg 1st...\"});\n      return\n    }\n    else {\n      conversationId = this.context.receiver._id;\n    }\n\n    this.socket.emit('send message', {\n      room: 'msg'+conversationId,\n      message: message\n    });\n    this.socket.on(\"MESSAGE_SENT\", function(data) {\n\n      addMessage(data)\n    })\n\n    const addMessage = data => {\n      this.setState({ userAlert: data.msg})\n    };\n  };\n\n  sendSocketAdminMessage = (args) => {\n    // console.log('...sending admin msg client...');\n    this.socket.emit('admin_msg', {msg: args})\n  }\n  sendSocketNotification = (args) => {\n    let notificationId = args.userId;\n    // console.log('...sending socket notification client...');\n    this.socket.emit('send_notification', {\n      room:'msg_'+notificationId,\n      data: args.data\n    })\n  }\n\n\n  componentWillUnmount() {\n    console.log('...app component un-mounting...');\n  }\n\n  logout2 () {\n    console.log('...logging you out...');\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n        query{logout(\n          activityId:\"${activityId}\")\n        {_id,loggedIn}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        this.setState({\n           token: null,\n           activityId: null,\n           role: null,\n           sessionCookiePresent: null,\n           sessionStorageAuth: null,\n        });\n        this.sessionStorageAuth = null;\n        sessionStorage.clear();\n        this.context = {\n          token: null,\n          activityId: null,\n          activityA: null,\n          activityUser: null,\n          role: null,\n          userId: null,\n          user: {},\n          users:[],\n          selectedUser: null,\n          selectedPatient: null,\n          selectedAppointment: null,\n          selectedVisit: null,\n          sender: null,\n          receiver: null,\n          userAlert: \"...\",\n          file: null,\n          fancyDate: null,\n          login: this.login,\n          logout: this.logout,\n          setUserAlert: this.setUserAlert,\n          userOnline: this.userOnline,\n        };\n        this.setState({userAlert: '...logout success...'});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  userOnline = () => {\n    console.log('...domesticating socket client...');\n    this.socket.emit('notification_subscribe', {\n      user: this.context.activityId,\n      room:'msg_'+this.context.activityId\n    });\n\n    if (this.context.role === 'Admin') {\n      this.socket.emit('admin_subscribe')\n    }\n  }\n\n  passwordReset = (event) => {\n    event.preventDefault();\n    console.log('...reset password submission...');\n      const params = event.target.formGridParams.value.split('@');\n      const verificationCode = params[1];\n      const userId = params[0];\n      const password = event.target.formGridPassword.value;\n      // console.log('params',params);\n\n      const requestBody = {\n        query:`\n          mutation {resetUserPassword(\n            userId:\"${userId}\",\n            verification:\"${verificationCode}\",\n            userInput:{\n              password:\"${password}\"\n            })\n            {_id,password,verification{verified}}}\n        `};\n\n      fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log('passwordReset',resData);\n          if (resData.errors) {\n            this.setState({passwordResetState: 'error', passwordResetMessage: resData.errors[0].message+'..if not, try making a new reset request..' })\n          } else {\n            this.setState({passwordResetState: 'complete' })\n          }\n\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({passwordResetState: 'error', passwordResetMessage: err })\n        });\n  }\n  cancelPasswordReset = () => {\n    this.setState({passwordResetState: 'cancelled'})\n  }\n\n  setUserAlert = (args) => {\n    // console.log('...setUserAlert...',args);\n    if (args === 'Unauthenticated!') {\n      this.setState({userAlert: '...token expired! Logging you out...'})\n\n      this.logout2()\n    }\n    this.setState({userAlert: args})\n  }\n\n  selectUser = (args) => {\n    console.log('...updating top-level selected user...');\n    this.setState({\n      selectedUser: args\n    })\n  }\n  selectPatient = (args) => {\n    console.log('...updating top-level selected patient...');\n    this.setState({\n      selectedPatient: args\n    })\n  }\n  selectAppointment = (args) => {\n    console.log('...updating top-level selected appointment...');\n    this.setState({\n      selectedAppointment: args\n    })\n  }\n  selectVisit = (args) => {\n    console.log('...updating top-level selected visit...');\n    this.setState({\n      selectedVisit: args\n    })\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              activityId: this.state.activityId,\n              activityA: null,\n              activityUser: null,\n              role: this.state.role,\n              userId: null,\n              user: {},\n              users:[],\n              selectedUser: null,\n              selectedPatient: null,\n              selectedAppointment: null,\n              selectedVisit: null,\n              sender: null,\n              receiver: null,\n              userAlert: \"...\",\n              file: null,\n              fancyDate: null,\n              login: this.login,\n              logout: this.logout,\n              setUserAlert: this.setUserAlert,\n              userOnline: this.userOnline,\n            }}\n          >\n            <MainNavigation\n              role={this.state.role}\n            />\n            <AlertBox\n              authId={this.context.activityId}\n              alert={this.state.userAlert}\n            />\n            <main className=\"main-content\">\n              <Switch>\n\n              {this.state.sessionStorageAuth && (\n                <Redirect from=\"/login\" to=\"/home\" exact />\n              )}\n\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/home\" render={(props) => <HomePage {...props}\n                  title=\"home\"\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/profile\" render={(props) => <MyProfilePage {...props}\n                  title=\"profile\"\n                  sendSocketAdminMessage={this.sendSocketAdminMessage}\n                  sendSocketNotification={this.sendSocketNotification}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/staff\" render={(props) => <StaffPage {...props}\n                  title=\"staff\"\n                  selectedUser={this.state.selectedUser}\n                  selectUser={this.selectUser}\n                  sendSocketAdminMessage={this.sendSocketAdminMessage}\n                  sendSocketNotification={this.sendSocketNotification}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/patients\" render={(props) => <PatientPage {...props}\n                  title=\"patients\"\n                  selectedPatient={this.state.selectedPatient}\n                  selectPatient={this.selectPatient}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/appointments\" render={(props) => <AppointmentPage {...props}\n                  title=\"appointments\"\n                  selectedAppointment={this.state.selectedAppointment}\n                  selectAppointment={this.selectAppointment}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/visits\" render={(props) => <VisitPage {...props}\n                  title=\"visits\"\n                  selectedVisit={this.state.selectedVisit}\n                  selectVisit={this.selectVisit}\n                />}/>\n              )}\n\n              {this.state.sessionStorageAuth && (\n                <Redirect from=\"/\" to=\"/home\" exact />\n              )}\n              {this.state.sessionStorageAuth && (\n                <Redirect from=\"*\" to=\"/home\" exact />\n              )}\n\n\n\n              {!this.state.sessionStorageAuth && (\n                <Route path=\"/landing\" render={(props) => <LandingPage {...props}\n                  title=\"landing\"\n                />}/>\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Route path=\"/login\" render={(props) => <LoginPage {...props}\n                  title=\"login\"\n                />}/>\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Route path=\"/signup\" render={(props) => <SignupPage {...props}\n                  title=\"signup\"\n                  setUserAlert={this.setUserAlert}\n                />}/>\n              )}\n\n              <Route path=\"/passwordReset/:params\" render={(props) => <PasswordResetPage {...props}\n                passwordReset={this.passwordReset}\n                cancelPasswordReset={this.cancelPasswordReset}\n                resetState={this.state.passwordResetState}\n                message={this.state.passwordResetMessage}\n                />}\n              />\n\n              {!this.state.sessionStorageAuth && (\n                <Redirect from=\"/home\" to=\"/landing\" exact />\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Redirect from=\"/\" to=\"/landing\" exact />\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Redirect from=\"*\" to=\"/landing\" exact />\n              )}\n\n              </Switch>\n            </main>\n\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}