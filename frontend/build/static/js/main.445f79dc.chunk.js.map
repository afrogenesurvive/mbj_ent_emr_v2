{"version":3,"sources":["assets/letterhead.jpg","logo.svg","assets/loading.gif","components/alertBox/AlertBox.js","context/auth-context.js","components/Navigation/MainNavigation.js","components/overlay/LoadingOverlay.js","pages/landing/Landing.js","components/items/patient/PatientItem.js","components/lists/patient/PatientList.js","components/items/appointment/AppointmentItem.js","components/lists/appointment/AppointmentList.js","components/items/queue/QueueSlotItem.js","components/lists/queue/QueueSlotList.js","components/items/queue/QueueItem.js","components/forms/search/PatientSearchForm.js","components/forms/search/UserSearchForm.js","components/items/user/UserItem.js","components/lists/user/UserList.js","pages/landing/Home.js","components/items/user/AddressItem.js","components/lists/user/UserAddressList.js","components/items/user/AttendanceItem.js","components/lists/user/UserAttendanceList.js","components/items/user/LeaveItem.js","components/lists/user/UserLeaveList.js","components/items/user/ImageItem.js","components/lists/user/UserImageList.js","components/items/patient/FileItem.js","components/lists/user/UserFileList.js","components/items/user/AppointmentItem.js","components/lists/user/UserAppointmentList.js","components/items/user/NoteItem.js","components/lists/user/UserNoteList.js","components/forms/filter/FilterAddressForm.js","components/forms/filter/FilterAttendanceForm.js","components/forms/filter/FilterLeaveForm.js","components/forms/filter/FilterImageForm.js","components/forms/filter/FilterFileForm.js","components/forms/filter/FilterAppointmentForm.js","components/forms/filter/FilterNoteForm.js","components/forms/add/UpdateUserSingleFieldForm.js","components/forms/add/AddAddressForm.js","components/forms/add/AddAttendanceForm.js","components/forms/add/AddLeaveForm.js","components/forms/add/AddNoteForm.js","components/forms/add/AddImageForm.js","components/forms/add/AddFileForm.js","pages/profile/Profile.js","components/forms/auth/LoginForm.js","components/forms/auth/VerifyUserForm.js","components/forms/auth/ForgotPasswordForm.js","pages/auth/Login.js","components/forms/auth/SignupForm.js","pages/auth/Signup.js","components/forms/auth/ResetPasswordForm.js","pages/auth/PasswordReset.js","components/lists/user/SearchUserList.js","components/details/UserDetail.js","components/forms/filter/FilterUserForm.js","pages/staff/Staff.js","components/forms/create/CreatePatientForm.js","components/lists/patient/SearchPatientList.js","components/pdfView/PdfView.js","components/lists/patient/PatientAddressList.js","components/items/patient/NextOfKinItem.js","components/lists/patient/PatientNextOfKinList.js","components/items/patient/AttachmentItem.js","components/lists/patient/PatientAttachmentList.js","components/items/patient/AllergyItem.js","components/lists/patient/PatientAllergyList.js","components/items/patient/MedicationItem.js","components/lists/patient/PatientMedicationList.js","components/items/patient/ImageItem.js","components/lists/patient/PatientImageList.js","components/lists/patient/PatientFileList.js","components/items/patient/NoteItem.js","components/lists/patient/PatientNoteList.js","components/items/patient/TagItem.js","components/lists/patient/PatientTagList.js","components/items/visit/VisitItem.js","components/lists/visit/VisitList.js","components/forms/filter/FilterAllergyForm.js","components/forms/filter/FilterMedicationForm.js","components/forms/filter/FilterNextOfKinForm.js","components/forms/filter/FilterVisitForm.js","components/forms/filter/FilterTagForm.js","components/forms/add/UpdatePatientSingleFieldForm.js","components/forms/add/AddTagForm.js","components/forms/add/AddNextOfKinForm.js","components/forms/add/AddAllergyForm.js","components/forms/add/AddMedicationForm.js","components/forms/add/AddAttachmentForm.js","components/details/PatientDetail.js","components/forms/filter/FilterPatientForm.js","pages/patient/Patients.js","components/forms/create/CreateAppointmentForm.js","components/items/appointment/NoteItem.js","components/lists/appointment/AppointmentNoteList.js","components/items/appointment/TagItem.js","components/lists/appointment/AppointmentTagList.js","components/forms/add/AddUserForm.js","components/details/AppointmentDetail.js","components/forms/search/AppointmentSearchForm.js","pages/appointment/Appointment.js","components/forms/create/CreateVisitForm.js","components/items/visit/ComplaintItem.js","components/lists/visit/VisitComplaintList.js","components/items/visit/SurveyItem.js","components/lists/visit/VisitSurveyList.js","components/items/visit/SystematicInquiryItem.js","components/lists/visit/VisitSystematicInquiryList.js","components/items/visit/VitalsItem.js","components/lists/visit/VisitVitalsList.js","components/items/visit/ExaminationItem.js","components/lists/visit/VisitExaminationList.js","components/items/visit/InvestigationItem.js","components/lists/visit/VisitInvestigationList.js","components/items/visit/DiagnosisItem.js","components/lists/visit/VisitDiagnosisList.js","components/items/visit/TreatmentItem.js","components/lists/visit/VisitTreatmentList.js","components/items/visit/BillingItem.js","components/lists/visit/VisitBillingList.js","components/items/visit/VigilanceItem.js","components/lists/visit/VisitVigilanceList.js","components/items/visit/ImageItem.js","components/lists/visit/VisitImageList.js","components/items/visit/FileItem.js","components/lists/visit/VisitFileList.js","components/forms/filter/FilterComplaintForm.js","components/forms/filter/FilterSurveyForm.js","components/forms/filter/FilterSystematicInquiryForm.js","components/forms/filter/FilterDiagnosisForm.js","components/forms/filter/FilterVitalsForm.js","components/forms/filter/FilterExaminationForm.js","components/forms/filter/FilterInvestigationForm.js","components/forms/filter/FilterTreatmentForm.js","components/forms/filter/FilterBillingForm.js","components/forms/add/AddComplaintForm.js","components/forms/add/AddSurveyForm.js","components/forms/add/AddSystematicInquiryForm.js","components/forms/add/AddVitalsForm.js","components/forms/add/AddExaminationForm.js","components/forms/add/AddInvestigationForm.js","components/forms/add/AddDiagnosisForm.js","components/forms/add/AddTreatmentForm.js","components/forms/add/AddBillingForm.js","components/forms/add/AddVigilanceForm.js","components/details/VisitDetail.js","components/forms/search/VisitSearchForm.js","pages/visit/Visit.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AlertBox","props","alert","className","Alert","variant","React","createContext","token","activityId","activityA","activityUser","role","userId","user","users","selectedUser","selectedPatient","selectedAppointment","selectedVisit","userAlert","file","fancyDate","login","tokenExpiration","logout","setUserAlert","args","userOnline","mainNavigation","Consumer","context","Fragment","to","onClick","LoadingOverlay","Row","toggleOverlay","status","type","Button","Container","ListGroup","Item","selectCalendarDetails","icon","faExternalLinkAlt","bind","data","goLink","pathname","state","appointment","_id","moment","unix","date","substr","add","format","time","title","subType","location","important","faCheckSquare","faBan","description","visit","startDate","endDate","Image","src","loadingGif","fluid","action","target","LandingPage","overlay","overlayStatus","isGuest","this","Col","Component","PatientItem","useState","setState","deleteState","setDeleteState","key","count","Card","Body","Text","patient","username","faEye","appointmentPage","showDetails","homePage","faUserPlus","onSelect","canDelete","faTrashAlt","name","dob","age","gender","onDelete","PatientList","filter","patients2","patients","propsPatients","field","value","sort","a","b","registration","x","loggedIn","active","map","indexOf","AppointmentItem","visitPage","faCalendarPlus","checkinTime","seenTime","inProgress","toString","attended","AppointmentList","appointments2","appointments","propsAppointments","QueueSlotItem","queueSlot","number","seen","slotSeen","slotUnseen","consultant","QueueSlotList","queueSlots","QueueItem","queue","creator","slots","PatientSearchForm","Form","onSubmit","onConfirm","Group","as","controlId","Label","Control","placeholder","onCancel","UserSearchForm","UserItem","selectUser","faBatteryThreeQuarters","faBatteryEmpty","UserList","users2","propsUsers","HomePage","isLoading","seshStore","todayAppointments","weekImportantAppointments","recentPatients","queueToday","addingQueueSlot","queueSlotAddStage","sublistPatientSearch","sublistUserSearch","loadHome","getAppointmentsToday","getAppointmentsImportantWeek","getRecentPatients","getQueueToday","getAllPatients","getAllUsers","console","log","requestBody","query","fetch","method","body","JSON","stringify","headers","Authorization","then","res","Error","json","resData","responseAlert","errors","message","error","catch","err","getAppointmentsImportantNextWeek","submitFilterForm","event","preventDefault","startAddQueueSlot","cancelAddQueueSlot","createQueue","submitQueueSlotAddPatient","queuePatients","existingPatient","includes","selectPatient","submitQueueSlotAddConsultant","queueId","patientId","consultantId","addQueueSlot","queueSlotSeen","slotNumber","queueSlotUnseen","deleteQueSlot","deleteQueueSlot","startPatientSearch","cancelSublistPatientSearch","submitSublistPatientSearchForm","regex","getPatientsByFieldRegex","getPatientsByField","logUserActivity","startUserSearch","cancelSublistUserSearch","submitSublistUserSearchForm","getUsersByFieldRegex","getUsersByField","sessionStorage","getItem","parse","size","md","authId","contextType","AuthContext","AddressItem","address","town","country","street","city","parish","primary","makePrimary","UserAddressList","addresses2","addresses","propsAddresses","postalCode","AttendanceItem","attendance","UserAttendanceList","attendance2","propsAttendance","attendanceItem","LeaveItem","leave","UserLeaveList","leave2","propsLeave","leaveItem","ImageItem","image","path","UserImageList","images2","images","propsImages","FileItem","PatientFileList","files2","files","propsFiles","UserAppointmentList","NoteItem","note","UserNoteList","notes2","notes","propsNotes","FilterAddressForm","hidden","FilterLeaveForm","FilterImageForm","FilterFileForm","FilterAppointmentForm","FilterNoteForm","UpdateUserSingleFieldForm","AddAddressForm","AddAttendanceForm","Date","rows","AddLeaveForm","AddNoteForm","AddImageForm","id","onChange","e","_currentValue","AddFileForm","MyProfilePage","profileLoaded","sideCol","menuSelected","adding","updateSingleField","calendarAttendance","calendarLeave","calendarAppointments","pocketVars","s3State","submitAddAddressForm","addUserAddress","deleteAddress","deleteUserAddress","setAddressPrimary","setUserAddressPrimary","submitAddAttendanceForm","attendanceDate","attendanceStatus","attendanceDescription","addUserAttendance","parseForCalendar","deleteAttendance","deleteUserAttendance","submitAddLeaveForm","addUserLeave","deleteLeave","deleteUserLeave","addUseLeavce","submitAddImageForm","imageName","imageType","imagePath","fileInput","fileName","filePath","fileType","split","config","bucketName","dirName","region","accessKeyId","s3","secretAccessKey","s3Url","ReactS3Client","S3","uploadFile","statusText","addUserImage","deleteImage","deleteUserImage","filename","deleteFile","response","submitAddFileForm","file2Name","file2Type","file2Path","addUserFile","deleteUserFile","submitAddNoteForm","addUserNotes","deleteNote","deleteUserNote","submitUpdateSingleFieldForm","updateUserSingleField","startUpdateSingleField","cancelUpdateSingleField","toggleSideCol","menuSelect","startAdd","cancelAdd","end","viewCalendarEvent","input","extendedProps","socket","io","getThisUser","getPocketVars","pocketVarsParsed","getUserById","sendSocketAdminMessage","request","activityDate","addUserActivity","Tab","defaultActiveKey","Nav","Link","eventKey","FilterAttendanceForm","Content","Pane","contact","email","phone","phone2","registrationNumber","employmentDate","clientConnected","verification","verified","code","Tabs","defaultView","plugins","dayGridPlugin","events","eventClick","showListDetails","LoginForm","onStartVerification","onStartForgotPassword","verifyUserForm","canCancel","canConfirm","ForgotPasswordForm","LoginPage","verifying","activeTab","userSeshStore","requestingPasswordReset","showForm","submitLoginForm","password","trim","length","sessionObject","setItem","verifyUser","toggleVerification","toggleForgotPassword","requestPasswordReset","VerifyUserForm","SignupForm","SignUpPage","signupStatus","invited","submitSignupForm","addressNumber","addressStreet","addressTown","addressCity","addressParish","addressCountry","addressPostalCode","createUser","submitInviteForm","challenge","inviteCode","verifyInvitation","ResetPasswordForm","verf","PasswordResetPage","passwordResetStatus","verfCode","submitResetPasswordForm","verificationCode","resetUserPassword","SearchUserList","UserDetail","updateUser","FilterUserForm","StaffPage","searchUsers","fromGoLink","goLinkId","tabKey","sendSocketNotification","deleteUser","resetFilter","goLinkUser","activeKey","CreatePatientForm","today","SearchPatientList","styles","StyleSheet","create","paddingTop","paddingBottom","paddingHorizontal","fontSize","textAlign","fontFamily","author","marginBottom","subtitle","margin","text","header","color","pageNumber","position","bottom","left","right","page","flexDirection","backgroundColor","section","padding","flexGrow","PdfView","class","close","pdfViewData","style","letterHead","break","PatientAddressList","NextOfKinItem","nextOfKin","relation","PatientNextOfKinList","nextOfKin2","propsNextOfKin","nextOfKinItem","AttachmentItem","attachment","faEraser","item","PatientAttachmentList","attachments","AllergyItem","allergy","faPlusSquare","onAddAttachment","deleteAttachment","PatientAllergyList","allergies2","allergies","propsAllergies","MedicationItem","medication","PatientMedicationList","medication2","propsMedication","medicationItem","PatientImageList","UserFileList","PatientNoteList","TagItem","tag","PatientTagList","tags2","tags","propsTags","VisitItem","patientPage","VisitList","visits2","visits","propsVisits","FilterAllergyForm","FilterMedicationForm","FilterNextOfKinForm","FilterVisitForm","FilterTagForm","UpdatePatientSingleFieldForm","AddTagForm","AddNextOfKinForm","AddAllergyForm","AddMedicationForm","AddAttachmentForm","PatientDetail","addAttachmentForm","addAttachmentArgs","calendarVisits","showPdfView","showPdfData","updatePatient","addPatientAddress","deletePatientAddress","setPatientAddressPrimary","submitAddNextOfKinForm","addPatientNextOfKin","deleteNextOfKin","phone1","deletePatientNextOfKin","submitAddAllergyForm","addPatientAllergy","deleteAllergy","deletePatientAllergy","preAttachments","filePath2","index","preAttachment","filename2","replace","submitAddMedicationForm","addPatientMedication","deleteMedication","deletePatientMedication","startAddAttachment","cancelAddAttachment","addAttachment","allergyTitle","allergyType","allergyDescription","medicationTitle","medicationType","medicationDescription","addPatientAllergyAttachment","addPatientMedicationAttachment","allergyAttachment","medicationAttachment","deletePatientAllergyAttachment","deletePatientMedicationAttachment","addPatientImage","deletePatientImage","addPatientFile","deletePatientFile","addPatientNotes","deletePatientNote","submitAddTagForm","addPatientTags","deleteTag","deletePatientTag","updatePatientSingleField","closePdfView","propsPatient","lastName","expiryDate","referral","reason","physician","attendingPhysician","occupation","employer","insurance","company","policyNumber","subscriber","FilterPatientForm","PatientPage","searchPatients","creatingPatient","newPatient","onStartCreateNewPatient","cancelCreateNewPatient","submitCreateNewPatientForm","contactEmail","contactPhone","contactPhone2","referralDate","referralReason","referralPhysicianName","referralPhysicianPhone","referralPhysicianEmail","referralPhysicianAddress","occupationRole","occupationEmployerName","occupationEmployerEmail","occupationEmployerPhone","occupationEmployerAddress","insuranceCompany","insurancePolicyNumber","insuranceDescription","insuranceExpiryDate","insuranceSubscriberCompany","insuranceSubscriberDescription","createPatient","deletePatient","goLinkPatient","lg","CreateAppointmentForm","AppointmentNoteList","AppointmentTagList","AddUserForm","setUser","AppointmentDetail","showAddConsultantForm","calEvent","startTime","endTime","appointmentId","updateAppointment","addAppointmentNotes","deleteAppointmentNote","addAppointmentTags","deleteAppointmentTag","submitAddUserForm","userRole","addAppointmentConsultant","deleteConsultant","deleteAppointmentConsultant","startUpdatePatient","updateAppointmentSingleField","consultants","AppointmentSearchForm","AppointmentPage","searchAppointments","creatingAppointment","newAppointment","sublistSearch","getAppointmentsByFieldRegex","getAppointmentsByField","onStartCreateNewAppointment","cancelCreateNewAppointment","submitCreateNewAppointmentForm","createAppointment","getAllAppointments","selectAppointment","deleteAppointment","startSublistSearch","cancelSublistSearch","submitSublistSearchForm","goLinkAppointment","CreateVisitForm","ComplaintItem","complaint","anamnesis","VisitComplaintList","complaints2","complaints","propsComplaints","SurveyItem","survey","VisitSurveyList","surveys2","surveys","propsSurveys","SystematicInquiryItem","systematicInquiry","VisitSystematicInquiryList","systematicInquirys2","propsSystematicInquirys","systematicInquirys","VitalsItem","vitals","pr","rr","bp1","bp2","temp","ps02","heightValue","heightUnit","weightValue","weightUnit","bmi","urine","VisitVitalsList","vitals2","propsVitals","vitalsItem","ExaminationItem","examination","general","area","measure","followUp","VisitExaminationList","examinations2","propsExaminations","examinations","InvestigationItem","investigation","VisitInvestigationList","investigations2","propsInvestigations","investigations","DiagnosisItem","diagnosis","VisitDiagnosisList","diagnosis2","propsDiagnosis","diagnoses","TreatmentItem","treatment","dose","frequency","VisitTreatmentList","treatment2","propsTreatment","treatments","BillingItem","billing","amount","paid","VisitBillingList","billing2","propsBilling","billings","VigilanceItem","vigilance","chronicIllness","diabetes","testing","comment","hbp","dyslipidemia","cad","lifestyle","weight","diet","smoking","substanceAbuse","exercise","asthma","screening","breast","prostate","cervix","colon","dental","vaccines","influenza","varicella","hpv","mmr","tetanus","pneumovax","other","VisitVigilanceList","vigilance2","propsVigilance","vigilances","VisitImageList","VisitFileList","FilterComplaintForm","FilterSurveyForm","FilterSystematicInquiryForm","FilterDiagnosisForm","FilterVitalsForm","FilterExaminationForm","FilterInvestigationForm","FilterTreatmentForm","FilterBillingForm","AddComplaintForm","AddSurveyForm","AddSystematicInquiryForm","AddVitalsForm","step","AddExaminationForm","checked","AddInvestigationForm","AddDiagnosisForm","AddTreatmentForm","AddBillingForm","AddVigilanceForm","VisitDetail","submitAddComplaintForm","visitId","updateVisit","addVisitComplaint","deleteComplaint","deleteVisitComplaint","submitAddSurveyForm","addVisitSurvey","deleteSurvey","deleteVisitSurvey","submitAddSystematicInquiryForm","addVisitSysInquiry","deleteSystematicInquiry","deleteVisitSysInquiry","submitAddVitalsForm","urineType","urineValue","toFixed","addVisitVitals","deleteVitals","deleteVisitVitals","submitAddExaminationForm","addVisitExamination","deleteExamination","deleteVisitExamination","submitAddInvestigationForm","addVisitInvestigation","deleteInvestigation","deleteVisitInvestigation","submitAddDiagnosisForm","addVisitDiagnosis","deleteDiagnosis","deleteVisitDiagnosis","submitAddTreatmentForm","addVisitTreatment","deleteTreatment","deleteVisitTreatment","submitAddBillingForm","addVisitBilling","deleteBilling","deleteVisitBilling","addVisitImage","deleteVisitImage","addVisitFile","deleteVisitFile","submitAddVigilanceForm","vigilanceChronicIllnessDiabetesMedication","vigilanceChronicIllnessDiabetesTesting","vigilanceChronicIllnessDiabetesComment","vigilanceChronicIllnessHbpMedication","vigilanceChronicIllnessHbpTesting","vigilanceChronicIllnessHbpComment","vigilanceChronicIllnessDyslipidemiaMedication","vigilanceChronicIllnessDyslipidemiaTesting","vigilanceChronicIllnessDyslipidemiaComment","vigilanceChronicIllnessCadMedication","vigilanceChronicIllnessCadTesting","vigilanceChronicIllnessCadComment","vigilanceLifestyleWeightMedication","vigilanceLifestyleWeightTesting","vigilanceLifestyleWeightComment","vigilanceLifestyleDietMedication","vigilanceLifestyleDietTesting","vigilanceLifestyleDietComment","vigilanceLifestyleSmokingMedication","vigilanceLifestyleSmokingTesting","vigilanceLifestyleSmokingComment","vigilanceLifestyleSubstanceAbuseMedication","vigilanceLifestyleSubstanceAbuseTesting","vigilanceLifestyleSubstanceAbuseComment","vigilanceLifestyleExerciseMedication","vigilanceLifestyleExerciseTesting","vigilanceLifestyleExerciseComment","vigilanceLifestyleAllergiesMedication","vigilanceLifestyleAllergiesTesting","vigilanceLifestyleAllergiesComment","vigilanceLifestyleAsthmaMedication","vigilanceLifestyleAsthmaTesting","vigilanceLifestyleAsthmaComment","vigilanceScreeningBreastMedication","vigilanceScreeningBreastTesting","vigilanceScreeningBreastComment","vigilanceScreeningProstateMedication","vigilanceScreeningProstateTesting","vigilanceScreeningProstateComment","vigilanceScreeningCervixMedication","vigilanceScreeningCervixTesting","vigilanceScreeningCervixComment","vigilanceScreeningColonMedication","vigilanceScreeningColonTesting","vigilanceScreeningColonComment","vigilanceScreeningDentalMedication","vigilanceScreeningDentalTesting","vigilanceScreeningDentalComment","vigilanceVaccinesInfluenzaMedication","vigilanceVaccinesInfluenzaTesting","vigilanceVaccinesInfluenzaComment","vigilanceVaccinesVaricellaMedication","vigilanceVaccinesVaricellaTesting","vigilanceVaccinesVaricellaComment","vigilanceVaccinesHpvMedication","vigilanceVaccinesHpvTesting","vigilanceVaccinesHpvComment","vigilanceVaccinesMmrMedication","vigilanceVaccinesMmrTesting","vigilanceVaccinesMmrComment","vigilanceVaccinesTetanusMedication","vigilanceVaccinesTetanusTesting","vigilanceVaccinesTetanusComment","vigilanceVaccinesPneumovaxMedication","vigilanceVaccinesPneumovaxTesting","vigilanceVaccinesPneumovaxComment","vigilanceVaccinesOtherName","vigilanceVaccinesOtherMedication","vigilanceVaccinesOtherTesting","vigilanceVaccinesOtherComment","addVisitVigilance","deleteVigilance","deleteVisitVigilance","addVisitConsultant","deleteVisitConsultant","complaintTitle","complaintDescription","complaintAnamnesis","complaintAttachment","surveyTitle","surveyDescription","surveyAttachment","systematicInquiryTitle","systematicInquiryDescription","systematicInquiryAttachment","examinationGeneral","examinationArea","examinationType","examinationMeasure","examinationValue","examinationDescription","examinationFollowUp","examinationAttachment","investigationTitle","investigationType","investigationDescription","investigationAttachment","diagnosisTitle","diagnosisType","diagnosisDescription","diagnosisAttachment","treatmentType","treatmentTitle","treatmentDescription","treatmentDose","treatmentFrequency","treatmentAttachment","billingAmount","billingPaid","billingTitle","billingType","billingDescription","billingNotes","billingAttachment","addVisitComplaintAttachment","addVisitSurveyAttachment","addVisitSysInquiryAttachment","addVisitExaminationAttachment","addVisitInvestigationAttachment","addVisitDiagnosisAttachment","addVisitTreatmentAttachment","addVisitBillingAttachment","deleteVisitComplaintAttachment","deleteVisitSurveyAttachment","deleteVisitSysInquiryAttachment","deleteVisitExaminationAttachment","deleteVisitInvestigationAttachment","deleteVisitDiagnosisAttachment","deleteVisitTreatmentAttachment","deleteVisitBillingAttachment","updateVisitSingleField","completeVisit","completeVisitById","propsVisit","VisitSearchForm","VisitPage","searchVisits","creatingVisit","newVisit","getVisitsByFieldRegex","getVisitsByField","onStartCreateNewVisit","cancelCreateNewVisit","submitCreateNewVisitForm","tooEarly","tooLate","createVisit","getAllVisits","selectVisit","deleteVisit","goLinkVisit","intitialView","App","sessionStorageAuth","sessionCookiePresent","passwordResetState","passwordResetMessage","logout2","emit","msg","notificationId","room","passwordReset","params","formGridParams","formGridPassword","cancelPasswordReset","on","adminMessage","sendNotification","msgObject","conversationId","receiver","undefined","addMessage","clear","sender","Provider","from","exact","render","Home","Staff","Appointment","Visit","Landing","Login","Signup","PasswordReset","resetState","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"+MAAAA,EAAOC,QAAU,IAA0B,wC,sRCA3CD,EAAOC,QAAU,IAA0B,kC,2TCA3CD,EAAOC,QAAU,IAA0B,qC,+PCuB5BC,G,OAjBE,SAACC,GAChB,IAAIC,EAAQ,oBAMd,OAJsB,OAAhBD,EAAMC,QACRA,EAAQ,IAAID,EAAMC,MAAM,KAI1B,yBAAKC,UAAU,YACf,kBAACC,EAAA,EAAD,CAAOC,QAAQ,WACf,uBAAGF,UAAU,gBAAgBD,OCdhBI,MAAMC,cAAc,CAC/BC,MAAO,KACPC,WAAY,KACZC,UAAW,KACXC,aAAc,KACdC,KAAM,KACNC,OAAQ,KACRC,KAAM,GACNC,MAAM,GACNC,aAAc,KACdC,gBAAiB,KACjBC,oBAAqB,KACrBC,cAAe,KACfC,UAAW,MACXC,KAAM,KACNC,UAAW,KACXC,MAAO,SAACf,EAAOC,EAAYG,EAAMY,KACjCC,OAAQ,aACRC,aAAc,SAACC,KACfC,WAAY,eCoDDC,G,OAjEQ,SAAA5B,GAAK,OAC1B,kBAAC,EAAY6B,SAAb,MACG,SAAAC,GACC,OACE,4BAAQ5B,UAAU,mBAChB,yBAAKA,UAAU,yBACb,mDAEF,yBAAKA,UAAU,0BACb,6BACI4B,EAAQvB,OACR,kBAAC,IAAMwB,SAAP,KACA,4BACE,kBAAC,IAAD,CAASC,GAAG,YAAZ,YAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,UAAZ,UAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,WAAZ,YAIHF,EAAQvB,OACP,kBAAC,IAAMwB,SAAP,KACE,4BACE,kBAAC,IAAD,CAASC,GAAG,SAAZ,SAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,YAAZ,YAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,UAAZ,UAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,aAAZ,aAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,iBAAZ,iBAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,WAAZ,WAEF,4BACE,4BAAQC,QAASH,EAAQN,QAAzB,oB,gHC6ILU,G,OAxKQ,SAAClC,GAExB,OACE,yBAAKE,UAAU,sBACb,yBAAKA,UAAU,kBACf,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,mBACdF,EAAMoC,eACiB,OAAtBpC,EAAMqC,OAAOC,MACb,kBAACC,EAAA,EAAD,CAAQrC,UAAU,gBAAgBE,QAAQ,UAAU6B,QAASjC,EAAMoC,eAAnE,MAIDpC,EAAMqC,QACL,wBAAInC,UAAU,yBAAd,OAA2CF,EAAMqC,OAAOC,KAAxD,QAIA,kBAACE,EAAA,EAAD,CAAWtC,UAAU,oBACI,wBAAtBF,EAAMqC,OAAOC,MACZ,kBAAC,IAAMP,SAAP,KACE,kBAACI,EAAA,EAAD,CAAKjC,UAAU,cACf,kBAACuC,EAAA,EAAD,CAAWvC,UAAU,oBACnB,kBAACuC,EAAA,EAAUC,KAAX,CAAgBxC,UAAU,wBACzBF,EAAM2C,uBACL,kBAACR,EAAA,EAAD,CAAKjC,UAAU,cACb,kBAAC,IAAD,CAAiB0C,KAAMC,IAAmB3C,UAAU,wBAAyB+B,QAASjC,EAAM2C,sBAAsBG,U,EAAW9C,EAAMqC,OAAOU,SAG7I/C,EAAMqC,OAAOW,QACZ,kBAACb,EAAA,EAAD,CAAKjC,UAAU,cACf,kBAAC,IAAD,CAAMA,UAAU,eACd8B,GAAI,CACFiB,SAAU,gBACVC,MAAO,CAACC,YAAanD,EAAMqC,OAAOU,KAAKK,OAG3C,kBAAC,IAAD,CAAiBR,KAAMC,IAAmB3C,UAAU,6BAKtD,kBAACuC,EAAA,EAAUC,KAAX,CAAgBxC,UAAU,wBAC1B,uBAAGA,UAAU,4BAAb,SAA8C,0BAAMA,UAAU,QAAQmD,IAAOC,KAAKtD,EAAMqC,OAAOU,KAAKQ,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,gBAC5I,uBAAGxD,UAAU,4BAAb,SAA8C,0BAAMA,UAAU,QAAQF,EAAMqC,OAAOU,KAAKY,QAExF,kBAAClB,EAAA,EAAUC,KAAX,CAAgBxC,UAAU,wBAC1B,uBAAGA,UAAU,4BAAb,UAA+C,0BAAMA,UAAU,QAAQF,EAAMqC,OAAOU,KAAKa,QACzF,uBAAG1D,UAAU,4BAAb,SAA8C,0BAAMA,UAAU,QAAQF,EAAMqC,OAAOU,KAAKT,OACxF,uBAAGpC,UAAU,4BAAb,YAAiD,0BAAMA,UAAU,QAAQF,EAAMqC,OAAOU,KAAKc,WAE3F,kBAACpB,EAAA,EAAUC,KAAX,CAAgBxC,UAAU,wBAC1B,uBAAGA,UAAU,4BAAb,aAAkD,0BAAMA,UAAU,QAAQF,EAAMqC,OAAOU,KAAKe,WAC5F,uBAAG5D,UAAU,4BAAb,cAAmD,0BAAMA,UAAU,SAAwC,IAAhCF,EAAMqC,OAAOU,KAAKgB,UAAqB,kBAAC,IAAD,CAAiBnB,KAAMoB,IAAe9D,UAAU,aAAe,kBAAC,IAAD,CAAiB0C,KAAMqB,IAAO/D,UAAU,gBAEzN,kBAACuC,EAAA,EAAUC,KAAX,CAAgBxC,UAAU,wBAC1B,uBAAGA,UAAU,4BAAb,gBAAqD,0BAAMA,UAAU,QAAQF,EAAMqC,OAAOU,KAAKmB,kBAS9E,kBAAtBlE,EAAMqC,OAAOC,MACZ,kBAAC,IAAMP,SAAP,KACA,kBAACI,EAAA,EAAD,CAAKjC,UAAU,cACf,kBAACuC,EAAA,EAAD,CAAWvC,UAAU,oBACnB,kBAACuC,EAAA,EAAUC,KAAX,CAAgBxC,UAAU,wBACzBF,EAAM2C,uBACL,kBAACR,EAAA,EAAD,CAAKjC,UAAU,cACb,kBAAC,IAAD,CAAiB0C,KAAMC,IAAmB3C,UAAU,wBAAwB+B,QAASjC,EAAM2C,sBAAsBG,U,EAAW9C,EAAMqC,OAAOU,SAG5I/C,EAAMqC,OAAOW,QACZ,kBAACb,EAAA,EAAD,CAAKjC,UAAU,cACf,kBAAC,IAAD,CAAMA,UAAU,eACd8B,GAAI,CACFiB,SAAU,UACVC,MAAO,CAACiB,MAAOnE,EAAMqC,OAAOU,KAAKK,OAGrC,kBAAC,IAAD,CAAiBR,KAAMC,IAAmB3C,UAAU,gBAKtD,kBAACuC,EAAA,EAAUC,KAAX,CAAgBxC,UAAU,wBAC1B,uBAAGA,UAAU,4BAAb,SAA8C,0BAAMA,UAAU,QAAQmD,IAAOC,KAAKtD,EAAMqC,OAAOU,KAAKQ,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,gBAC5I,uBAAGxD,UAAU,4BAAb,SAA8C,0BAAMA,UAAU,QAAQF,EAAMqC,OAAOU,KAAKY,QAExF,kBAAClB,EAAA,EAAUC,KAAX,CAAgBxC,UAAU,wBAC1B,uBAAGA,UAAU,4BAAb,UAA+C,0BAAMA,UAAU,QAAQF,EAAMqC,OAAOU,KAAKa,SAEzF,kBAACnB,EAAA,EAAUC,KAAX,CAAgBxC,UAAU,wBAC1B,uBAAGA,UAAU,4BAAb,SAA8C,0BAAMA,UAAU,QAAQF,EAAMqC,OAAOU,KAAKT,OACxF,uBAAGpC,UAAU,4BAAb,YAAiD,0BAAMA,UAAU,QAAQF,EAAMqC,OAAOU,KAAKc,cAQxE,uBAAtB7D,EAAMqC,OAAOC,MACZ,kBAAC,IAAMP,SAAP,KACA,kBAACI,EAAA,EAAD,CAAKjC,UAAU,cACb,kBAACuC,EAAA,EAAD,CAAWvC,UAAU,oBACnB,kBAACuC,EAAA,EAAUC,KAAX,CAAgBxC,UAAU,wBAC1B,oCAAS,0BAAMA,UAAU,QAAQmD,IAAOC,KAAKtD,EAAMqC,OAAOU,KAAKQ,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,iBAEvG,kBAACjB,EAAA,EAAUC,KAAX,CAAgBxC,UAAU,wBAC1B,sCAAW,0BAAMA,UAAU,QAAQF,EAAMqC,OAAOU,KAAKV,UAErD,kBAACI,EAAA,EAAUC,KAAX,CAAgBxC,UAAU,wBAC1B,2CAAgB,0BAAMA,UAAU,QAAQF,EAAMqC,OAAOU,KAAKmB,kBAMzC,kBAAtBlE,EAAMqC,OAAOC,MACZ,kBAAC,IAAMP,SAAP,KACA,kBAACI,EAAA,EAAD,CAAKjC,UAAU,cACb,kBAACuC,EAAA,EAAD,CAAWvC,UAAU,oBACnB,kBAACuC,EAAA,EAAUC,KAAX,CAAgBxC,UAAU,wBAC1B,oCAAS,0BAAMA,UAAU,QAAQmD,IAAOC,KAAKtD,EAAMqC,OAAOU,KAAKQ,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,iBAEvG,kBAACjB,EAAA,EAAUC,KAAX,CAAgBxC,UAAU,wBAC1B,yCAAc,0BAAMA,UAAU,QAAQmD,IAAOC,KAAKtD,EAAMqC,OAAOU,KAAKqB,UAAUZ,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,iBAEjH,kBAACjB,EAAA,EAAUC,KAAX,CAAgBxC,UAAU,wBAC1B,uCAAY,0BAAMA,UAAU,QAAQmD,IAAOC,KAAKtD,EAAMqC,OAAOU,KAAKsB,QAAQb,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,iBAE7G,kBAACjB,EAAA,EAAUC,KAAX,CAAgBxC,UAAU,wBAC1B,2CAAgB,0BAAMA,UAAU,QAAQF,EAAMqC,OAAOU,KAAKmB,kBAMzC,OAAtBlE,EAAMqC,OAAOC,MACZ,kBAAC,IAAMP,SAAP,KACA,kBAACI,EAAA,EAAD,CAAKjC,UAAU,cACb,kBAACuC,EAAA,EAAD,CAAWvC,UAAU,oBACnB,kBAACuC,EAAA,EAAUC,KAAX,CAAgBxC,UAAU,wBACxB,kBAACoE,EAAA,EAAD,CAAOC,IAAKC,IAAYtE,UAAU,aAAauE,OAAK,KAEtD,kBAAChC,EAAA,EAAUC,KAAX,CAAgBxC,UAAU,wBACxB,2BAAIF,EAAMqC,OAAOU,KAAK2B,OAAtB,SAAoC1E,EAAMqC,OAAOU,KAAK4B,OAAtD,UAIN,kBAACxC,EAAA,EAAD,CAAKjC,UAAU,qBCxGV0E,G,mNA5Db1B,MAAQ,CACNvC,KAAM,KACNQ,UAAW,eACX0D,SAAS,EACTC,cAAe,OACfC,SAAS,EACTjD,QAAS,M,oGAgBT,OACE,kBAAC,IAAMC,SAAP,MAEwB,IAAvBiD,KAAK9B,MAAM2B,SACV,kBAAC,EAAD,CACExC,OAAQ2C,KAAK9B,MAAM4B,gBAGvB,kBAACtC,EAAA,EAAD,CAAWtC,UAAU,wBAErB,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,kBACf,kBAAC+E,EAAA,EAAD,CAAK/E,UAAU,kBACb,+D,GAnCkBgF,c,eCiIXC,G,MAvHK,SAACnF,GAAW,IAAD,EAEHoF,oBAAS,GAFN,mBAEtBlC,EAFsB,KAEfmC,EAFe,OAYUD,oBAAS,GAZnB,mBAYrBE,EAZqB,KAYRC,EAZQ,KAsB7B,OACE,wBAAIC,IAAKxF,EAAMyF,MAAOvF,UAAU,IAC9B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,aACY,0BAAMA,UAAU,QAAQF,EAAM6F,QAAQC,WAElD,kBAACJ,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAM6F,QAAQlF,OAE9C,kBAAC,IAAD,CAAiBiC,KAAMmD,IAAO7F,UAAU,WAAW+B,QA7BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OA0BsB,IAA1BrF,EAAMgG,iBACLhG,EAAMiG,aACN,kBAAC,IAAD,CAAiBrD,KAAMC,IAAmB3C,UAAU,WAAW+B,QAASjC,EAAMiG,YAAYnD,U,EAAW9C,EAAM6F,WAG5G7F,EAAMkG,UACL,kBAAC,IAAD,CACElE,GAAI,CACFiB,SAAU,YACVC,MAAO,CAAC2C,QAAS7F,EAAM6F,QAAQzC,OAGnC,kBAAC,IAAD,CAAiBR,KAAMC,IAAmB3C,UAAU,eAI3B,IAA1BF,EAAMgG,iBACL,kBAAC,IAAD,CAAiBpD,KAAMuD,IAAYjG,UAAU,WAAW+B,QAASjC,EAAMoG,SAAStD,U,EAAW9C,EAAM6F,WAGlG7F,EAAMqG,WACL,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QA1CjC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,OAwCD,IAAVrC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,OACM,0BAAMA,UAAU,QAAQF,EAAM6F,QAAQzC,OAG5C,4BACA,kBAACsC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAM6F,QAAQU,QAG9C,4BACA,kBAACb,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,aACY,0BAAMA,UAAU,QAAQF,EAAM6F,QAAQC,YAGlD,4BACA,kBAACJ,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAM6F,QAAQjC,SAG/C,4BACA,kBAAC8B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAM6F,QAAQlF,QAG9C,4BACA,kBAAC+E,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,QACO,0BAAMA,UAAU,QAAQmD,IAAOC,KAAKtD,EAAM6F,QAAQW,IAAIhD,OAAO,EAAE,IAAIC,IAAI,EAAE,QAAQC,OAAO,iBAG/F,4BACA,kBAACgC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,QACO,0BAAMA,UAAU,QAAQF,EAAM6F,QAAQY,OAG7C,4BACA,kBAACf,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,WACU,0BAAMA,UAAU,QAAQF,EAAM6F,QAAQa,aAQnC,IAAhBpB,GACC,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAM6F,UAA1E,gBCtCDe,G,MAzFK,SAAA5G,GAAU,IAElB6G,EAFiB,iBAEP7G,EAAM6G,QACtBC,EAAY9G,EAAM+G,SAClBC,EAAgB,GAEC,YAAjBH,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAChEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAE/C,YAAjBM,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAChEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAE/C,YAAjBM,EAAOI,OAAsC,aAAfJ,EAAOrB,KAAuC,cAAjBqB,EAAOK,QACpEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEtB,SAAWuB,EAAEvB,SAAY,GAAK,MAEvD,YAAjBe,EAAOI,OAAsC,aAAfJ,EAAOrB,KAAuC,eAAjBqB,EAAOK,QACpEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEtB,SAAWuB,EAAEvB,SAAY,GAAK,MAEvD,YAAjBe,EAAOI,OAAsC,UAAfJ,EAAOrB,KAAoC,cAAjBqB,EAAOK,QACjEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAEjD,YAAjBiD,EAAOI,OAAsC,UAAfJ,EAAOrB,KAAoC,eAAjBqB,EAAOK,QACjEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAEjD,YAAjBiD,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAChEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzG,KAAO0G,EAAE1G,KAAQ,GAAK,MAE/C,YAAjBkG,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAChEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzG,KAAO0G,EAAE1G,KAAQ,GAAK,MAE/C,YAAjBkG,EAAOI,OAAsC,QAAfJ,EAAOrB,KAAkC,cAAjBqB,EAAOK,QAC/DF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEZ,IAAMa,EAAEb,IAAO,GAAK,MAE7C,YAAjBK,EAAOI,OAAsC,QAAfJ,EAAOrB,KAAkC,eAAjBqB,EAAOK,QAC/DF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEZ,IAAMa,EAAEb,IAAO,GAAK,MAE7C,YAAjBK,EAAOI,OAAsC,QAAfJ,EAAOrB,KAAkC,cAAjBqB,EAAOK,QAC/DF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEX,IAAMY,EAAEZ,IAAO,GAAK,MAE7C,YAAjBI,EAAOI,OAAsC,QAAfJ,EAAOrB,KAAkC,eAAjBqB,EAAOK,QAC/DF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEX,IAAMY,EAAEZ,IAAO,GAAK,MAE7C,YAAjBI,EAAOI,OAAsC,WAAfJ,EAAOrB,KAAqC,cAAjBqB,EAAOK,QAClEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEV,OAASW,EAAEX,OAAU,GAAK,MAEnD,YAAjBG,EAAOI,OAAsC,WAAfJ,EAAOrB,KAAqC,eAAjBqB,EAAOK,QAClEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEV,OAASW,EAAEX,OAAU,GAAK,MAEnD,YAAjBG,EAAOI,OAAsC,sBAAfJ,EAAOrB,KAAgD,cAAjBqB,EAAOK,QAC7EF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,aAAa/D,KAAO8D,EAAEC,aAAa/D,KAAQ,GAAK,MAEzE,YAAjBsD,EAAOI,OAAsC,sBAAfJ,EAAOrB,KAAgD,eAAjBqB,EAAOK,QAC7EF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,aAAa/D,KAAO8D,EAAEC,aAAa/D,KAAQ,GAAK,MAEzE,YAAjBsD,EAAOI,OAAsC,aAAfJ,EAAOrB,MACvCwB,EAAgBF,EAAUD,QAAO,SAAAU,GAAC,OAAIA,EAAEC,WAAaX,EAAOK,UAEzC,YAAjBL,EAAOI,OAAsC,WAAfJ,EAAOrB,MACvCwB,EAAgBF,EAAUD,QAAO,SAAAU,GAAC,OAAIA,EAAEE,SAAWZ,EAAOK,UAGvC,YAAjBL,EAAOI,QACTD,EAAgBF,GAGlB,IAAIrB,EAAQ,EAENsB,EAAWC,EAAcU,KAAI,SAAA7B,GAIjC,OAFAJ,EAAQuB,EAAcW,QAAQ9B,GAAS,EAGrC,kBAAC,EAAD,CACEL,IAAKC,EACLA,MAAOA,EACPI,QAASA,EACTQ,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,SAChBV,YAAajG,EAAMiG,YACnBD,gBAAiBhG,EAAMgG,gBACvBE,SAAUlG,EAAMkG,SAChBE,SAAUpG,EAAMoG,cAKtB,OAAO,wBAAIlG,UAAU,YAAY6G,KCyFpBa,G,OA5JS,SAAC5H,GAAW,IAAD,EACPoF,oBAAS,GADF,mBAC1BlC,EAD0B,KACnBmC,EADmB,OAWMD,oBAAS,GAXf,mBAWzBE,EAXyB,KAWZC,EAXY,KAqBjC,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMmD,YAAYS,SAEjD5D,EAAMkG,UACN,kBAACR,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMmD,YAAYb,QAGlDtC,EAAMkG,UACN,kBAACR,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQmD,IAAOC,KAAKtD,EAAMmD,YAAYI,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,gBAGvG1D,EAAMkG,UACL,kBAACR,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMmD,YAAY0C,QAAQzC,MAI/D,kBAAC,IAAD,CAAiBR,KAAMmD,IAAO7F,UAAU,WAAW+B,QA1CjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAuCgB,IAApBrF,EAAM6H,WACL7H,EAAMiG,aACJ,kBAAC,IAAD,CAAiBrD,KAAMC,IAAmB3C,UAAU,WAAW+B,QAASjC,EAAMiG,YAAYnD,U,EAAW9C,EAAMmD,eAG9GnD,EAAMkG,UACL,kBAAC,IAAD,CACElE,GAAI,CACFiB,SAAU,gBACVC,MAAO,CAACC,YAAanD,EAAMmD,YAAYC,OAG3C,kBAAC,IAAD,CAAiBR,KAAMC,IAAmB3C,UAAU,eAIjC,IAApBF,EAAM6H,WACL,kBAAC,IAAD,CAAiBjF,KAAMkF,IAAgB5H,UAAU,WAAW+B,QAASjC,EAAMoG,SAAStD,U,EAAW9C,EAAMmD,eAGtGnD,EAAMqG,WACL,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QAvDjC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,OAqDD,IAAVrC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,OACM,0BAAMA,UAAU,QAAQF,EAAMmD,YAAYC,OAGhD,4BACA,kBAACsC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMmD,YAAYS,SAGnD,4BACA,kBAAC8B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMmD,YAAYb,QAGlD,4BACA,kBAACoD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQmD,IAAOC,KAAKtD,EAAMmD,YAAYI,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,iBAGtG,4BACA,kBAACgC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMmD,YAAYQ,QAGlD,4BACA,kBAAC+B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMmD,YAAY0C,QAAQU,QAG7D,4BACA,kBAACb,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,0BAAMA,UAAU,QAAQF,EAAMmD,YAAY4E,eAGzD,4BACA,kBAACrC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,aACY,0BAAMA,UAAU,QAAQF,EAAMmD,YAAY6E,YAGtD,4BACA,kBAACtC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,aACY,0BAAMA,UAAU,QAAQF,EAAMmD,YAAYW,YAGtD,4BACA,kBAAC4B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,0BAAMA,UAAU,QAAQF,EAAMmD,YAAYe,eAGzD,4BACA,kBAACwB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMmD,YAAY8E,WAAWC,cAGnE,4BACA,kBAACxC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,aACY,0BAAMA,UAAU,QAAQF,EAAMmD,YAAYgF,SAASD,cAG/D,4BACA,kBAACxC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,cACa,0BAAMA,UAAU,QAAQF,EAAMmD,YAAYY,UAAUmE,iBAQpD,IAAhB5C,GACC,kBAACnD,EAAA,EAAD,KACGnC,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMmD,cAA1E,gBCvFDiF,G,OA/ES,SAAApI,GAAU,IAEtB6G,EAFqB,iBAEX7G,EAAM6G,QACtBwB,EAAgBrI,EAAMsI,aACtBC,EAAoB,GAEH,gBAAjB1B,EAAOI,OAA0C,UAAfJ,EAAOrB,KAAoC,cAAjBqB,EAAOK,QACrEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAEzD,gBAAjBiD,EAAOI,OAA0C,UAAfJ,EAAOrB,KAAoC,eAAjBqB,EAAOK,QACrEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAEzD,gBAAjBiD,EAAOI,OAA0C,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QACpEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEvD,gBAAjBuE,EAAOI,OAA0C,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QACpEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEvD,gBAAjBuE,EAAOI,OAA0C,YAAfJ,EAAOrB,KAAsC,cAAjBqB,EAAOK,QACvEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEvD,QAAUwD,EAAExD,QAAW,GAAK,MAE7D,gBAAjBgD,EAAOI,OAA0C,YAAfJ,EAAOrB,KAAsC,eAAjBqB,EAAOK,QACvEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEvD,QAAUwD,EAAExD,QAAW,GAAK,MAE7D,gBAAjBgD,EAAOI,OAA0C,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QACpEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE7D,KAAO8D,EAAE9D,KAAQ,GAAK,MAEvD,gBAAjBsD,EAAOI,OAA0C,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QACpEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE7D,KAAO8D,EAAE9D,KAAQ,GAAK,MAEvD,gBAAjBsD,EAAOI,OAA0C,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QACpEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzD,KAAO0D,EAAE1D,KAAQ,GAAK,MAEvD,gBAAjBkD,EAAOI,OAA0C,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QACpEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzD,KAAO0D,EAAE1D,KAAQ,GAAK,MAEvD,gBAAjBkD,EAAOI,OAA0C,aAAfJ,EAAOrB,KAAuC,cAAjBqB,EAAOK,QACxEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEtD,SAAWuD,EAAEvD,SAAY,GAAK,MAE/D,gBAAjB+C,EAAOI,OAA0C,aAAfJ,EAAOrB,KAAuC,eAAjBqB,EAAOK,QACxEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEtD,SAAWuD,EAAEvD,SAAY,GAAK,MAE/D,gBAAjB+C,EAAOI,OAA0C,cAAfJ,EAAOrB,MAC3C+C,EAAoBF,EAAcxB,QAAO,SAAAU,GAAC,OAAIA,EAAExD,YAAc8C,EAAOK,UAElD,gBAAjBL,EAAOI,OAA0C,eAAfJ,EAAOrB,MAC3C+C,EAAoBF,EAAcxB,QAAO,SAAAU,GAAC,OAAIA,EAAEU,aAAepB,EAAOK,UAEnD,gBAAjBL,EAAOI,OAA0C,aAAfJ,EAAOrB,MAC3C+C,EAAoBF,EAAcxB,QAAO,SAAAU,GAAC,OAAIA,EAAEY,WAAatB,EAAOK,UAGjD,gBAAjBL,EAAOI,QACTsB,EAAoBF,GAGtB,IAAI5C,EAAQ,EAEN6C,EAAeC,EAAkBb,KAAI,SAAAvE,GAIzC,OAFAsC,EAAQ8C,EAAkBZ,QAAQxE,EAAY,GAG5C,kBAAC,EAAD,CACEqC,IAAKC,EACLtC,YAAaA,EACbkD,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,SAChBV,YAAajG,EAAMiG,YACnB4B,UAAW7H,EAAM6H,UACjB3B,SAAUlG,EAAMkG,SAChBE,SAAUpG,EAAMoG,cAKtB,OAAO,wBAAIlG,UAAU,YAAYoI,KC2DpBE,G,OArHO,SAAAxI,GAAU,IAAD,EAEHoF,oBAAS,GAFN,mBAEtBlC,EAFsB,KAEfmC,EAFe,OAYUD,oBAAS,GAZnB,mBAYrBE,EAZqB,KAYRC,EAZQ,KAuB7B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,WACWF,EAAMyI,UAAUC,QAG3B,kBAAChD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACYF,EAAMyI,UAAU5C,QAAQU,MAEpC,kBAAC,IAAD,CACEvE,GAAI,CACFiB,SAAU,YACVC,MAAO,CAAC2C,QAAS7F,EAAMyI,UAAU5C,QAAQzC,OAG7C,kBAAC,IAAD,CAAiBR,KAAMC,IAAmB3C,UAAU,cAGpD,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACkC,IAAzBF,EAAMyI,UAAUE,KAAgB,kBAAC,IAAD,CAAiB/F,KAAMoB,IAAe9D,UAAU,aAAe,kBAAC,IAAD,CAAiB0C,KAAMqB,IAAO/D,UAAU,cAGhJ,kBAAC,IAAD,CAAiB0C,KAAMmD,IAAO7F,UAAU,WAAW+B,QA5CjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAyCM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,6BAC4B,IAAzBF,EAAMyI,UAAUE,MACf,kBAACpG,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAASjC,EAAM4I,SAAS9F,U,EAAW9C,EAAMyI,YAA3E,SAEwB,IAAzBzI,EAAMyI,UAAUE,MACf,kBAACpG,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAASjC,EAAM6I,WAAW/F,U,EAAW9C,EAAMyI,YAA7E,UAEF,6BAGA,4BACA,kBAAC/C,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACSF,EAAMyI,UAAU9E,OAGzB,4BACA,kBAAC+B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACeF,EAAMyI,UAAUK,WAAWhD,UAE1C,kBAAC,IAAD,CACE9D,GAAI,CACFiB,SAAU,SACVC,MAAO,CAACrC,KAAMb,EAAMyI,UAAUK,WAAW1F,OAG7C,kBAAC,IAAD,CAAiBR,KAAMC,IAAmB3C,UAAU,eAGpD,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACkC,IAAzBF,EAAMyI,UAAUE,KAAgB,kBAAC,IAAD,CAAiB/F,KAAMoB,IAAe9D,UAAU,aAAe,kBAAC,IAAD,CAAiB0C,KAAMqB,IAAO/D,UAAU,eAGhJ,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,aAICF,EAAMyI,UAAUT,UACf,kBAACtC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YACpBF,EAAMyI,UAAUT,WAKnB,4BACA,kBAAC,IAAD,CAAiBpF,KAAM0D,IAAYpG,UAAU,WAAW+B,QApFnC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QAiFS,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACX,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMyI,YAA1E,mBCjGLM,G,OAtBO,SAAA/I,GAEpB,IAAIyF,EAAQ,EAENuD,EAAahJ,EAAMgJ,WAAWtB,KAAI,SAAAe,GAGtC,OAFAhD,EAAQzF,EAAMgJ,WAAWrB,QAAQc,GAAW,EAG1C,kBAAC,EAAD,CACEjD,IAAKC,EACLgD,UAAWA,EACX9B,SAAU3G,EAAM2G,SAChBN,UAAWrG,EAAMqG,UACjBuC,SAAU5I,EAAM4I,SAChBC,WAAY7I,EAAM6I,gBAKxB,OAAO,wBAAI3I,UAAU,YAAY8I,KCoCpBC,EArCG,SAAAjJ,GAAU,IAAD,EAECoF,oBAAS,GAFV,6BAazB,OACE,yBAAKlF,UAAU,WACb,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACSmD,IAAOC,KAAKtD,EAAMkJ,MAAM3F,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,eAEzE,kBAACgC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACYF,EAAMkJ,MAAMC,QAAQrD,UAGhC,kBAAC,EAAD,CACEkD,WAAYhJ,EAAMkJ,MAAME,MACxBR,SAAU5I,EAAM4I,SAChBC,WAAY7I,EAAM6I,WAClBlC,SAAU3G,EAAM2G,e,OC6Cb0C,G,OAzFW,SAACrJ,GAE3B,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WAEpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACjB,0CACA,wCACA,4CACA,yCACA,wCACA,uCACA,uCACA,0CACA,qDACA,uDACA,iDACA,iDACA,kDACA,oDACA,oDACA,kDACA,kDACA,oDACA,qDACA,wDACA,qDACA,yDACA,8CACA,iDACA,mDACA,2DACA,4DACA,4DACA,sDACA,mDACA,4DACA,6DACA,6DACA,qDACA,0DACA,yDACA,wDACA,gEACA,oEACA,kDACA,sDACA,2DACA,2DACA,4DACA,kDACA,mDACA,yDACA,yDACA,oDACA,mDACA,0DACA,0DACA,+CACA,+CACA,+CACA,8CACA,8CACA,8CACA,yCACA,wCACA,8CAIF,kBAACJ,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,gCAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,eCnBSC,EA/DQ,SAAChK,GAExB,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WAEpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,yCACA,wCACA,4CACA,sDACA,uCACA,uCACA,0CACA,iDACA,iDACA,kDACA,oDACA,oDACA,kDACA,kDACA,oDACA,qDACA,wDACA,qDACA,4CACA,mDACA,yDACA,mDACA,qDACA,0DACA,8CACA,mDACA,iDACA,qDACA,+CACA,+CACA,+CACA,8CACA,8CACA,8CACA,2CAIJ,kBAACJ,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,gCAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCiGSE,G,OAxIE,SAACjK,GAAW,IAAD,EAEAoF,oBAAS,GAFT,mBAEnBlC,EAFmB,KAEZmC,EAFY,OAYYD,oBAAS,GAZrB,mBAYnBE,EAZmB,KAYNC,EAZM,KAsB1B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,cAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,aACY,0BAAMA,UAAU,QAAQF,EAAMa,KAAKiF,WAE/C,kBAACJ,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMa,KAAKF,OAE3C,kBAAC,IAAD,CAAiBiC,KAAMmD,IAAO7F,UAAU,WAAW+B,QA7BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OA0BHrF,EAAMgG,kBACLhG,EAAM6H,WACP7H,EAAMiG,aACJ,kBAAC,IAAD,CAAiBrD,KAAMC,IAAmB3C,UAAU,WAAW+B,QAASjC,EAAMiG,YAAYnD,U,EAAW9C,EAAMa,QAG9Gb,EAAMgG,iBACL,kBAAC,IAAD,CACEhE,GAAI,CACFiB,SAAU,SACVC,MAAO,CAACrC,KAAMb,EAAMa,KAAKuC,OAG7B,kBAAC,IAAD,CAAiBR,KAAMC,IAAmB3C,UAAU,cAIrDF,EAAM6H,WACL,kBAAC,IAAD,CACE7F,GAAI,CACFiB,SAAU,SACVC,MAAO,CAACrC,KAAMb,EAAMa,KAAKuC,OAG7B,kBAAC,IAAD,CAAiBR,KAAMC,IAAmB3C,UAAU,cAIrDF,EAAMkK,YACL,kBAAC,IAAD,CAAiBtH,KAAMuD,IAAYjG,UAAU,WAAW+B,QAASjC,EAAMkK,WAAWpH,U,EAAW9C,EAAMa,QAGpGb,EAAMqG,WACL,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QAtDlC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,OAoDA,IAAVrC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,OACM,0BAAMA,UAAU,QAAQF,EAAMa,KAAKuC,OAGzC,4BACA,kBAACsC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMa,KAAK0F,QAG3C,4BACA,kBAACb,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,aACY,0BAAMA,UAAU,QAAQF,EAAMa,KAAKiF,YAG/C,4BACA,kBAACJ,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMa,KAAK+C,SAG5C,4BACA,kBAAC8B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMa,KAAKF,QAG3C,4BACA,kBAAC+E,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,QACO,0BAAMA,UAAU,QAAQmD,IAAOC,KAAKtD,EAAMa,KAAK2F,IAAIhD,OAAO,EAAE,IAAIC,IAAI,EAAE,QAAQC,OAAO,iBAG5F,4BACA,kBAACgC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,QACO,0BAAMA,UAAU,QAAQF,EAAMa,KAAK4F,OAG1C,4BACA,kBAACf,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,WACU,0BAAMA,UAAU,QAAQF,EAAMa,KAAK6F,UAG7C,4BACA,kBAAChB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,aACY,0BAAMA,UAAU,SAAgC,IAAxBF,EAAMa,KAAK2G,UAAsB,kBAAC,IAAD,CAAiB5E,KAAMuH,IAAwBjK,UAAU,aAAlH,KAA0J,IAAxBF,EAAMa,KAAK2G,UAAuB,kBAAC,IAAD,CAAiB5E,KAAMwH,IAAgBlK,UAAU,mBAQpN,IAAhBoF,GACC,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMa,OAA1E,gBClEDwJ,G,MA/EE,SAAArK,GAAU,IAEf6G,EAFc,iBAEJ7G,EAAM6G,QACtByD,EAAStK,EAAMc,MACfyJ,EAAa,GAEI,UAAjB1D,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC9DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAEzC,UAAjBM,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC9DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAEzC,UAAjBM,EAAOI,OAAoC,aAAfJ,EAAOrB,KAAuC,cAAjBqB,EAAOK,QAClEqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEtB,SAAWuB,EAAEvB,SAAY,GAAK,MAEjD,UAAjBe,EAAOI,OAAoC,aAAfJ,EAAOrB,KAAuC,eAAjBqB,EAAOK,QAClEqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEtB,SAAWuB,EAAEvB,SAAY,GAAK,MAEjD,UAAjBe,EAAOI,OAAoC,UAAfJ,EAAOrB,KAAoC,cAAjBqB,EAAOK,QAC/DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAE3C,UAAjBiD,EAAOI,OAAoC,UAAfJ,EAAOrB,KAAoC,eAAjBqB,EAAOK,QAC/DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAE3C,UAAjBiD,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC9DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzG,KAAO0G,EAAE1G,KAAQ,GAAK,MAEzC,UAAjBkG,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC9DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzG,KAAO0G,EAAE1G,KAAQ,GAAK,MAEzC,UAAjBkG,EAAOI,OAAoC,QAAfJ,EAAOrB,KAAkC,cAAjBqB,EAAOK,QAC7DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEZ,IAAMa,EAAEb,IAAO,GAAK,MAEvC,UAAjBK,EAAOI,OAAoC,QAAfJ,EAAOrB,KAAkC,eAAjBqB,EAAOK,QAC7DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEZ,IAAMa,EAAEb,IAAO,GAAK,MAEvC,UAAjBK,EAAOI,OAAoC,QAAfJ,EAAOrB,KAAkC,cAAjBqB,EAAOK,QAC7DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEX,IAAMY,EAAEZ,IAAO,GAAK,MAEvC,UAAjBI,EAAOI,OAAoC,QAAfJ,EAAOrB,KAAkC,eAAjBqB,EAAOK,QAC7DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEX,IAAMY,EAAEZ,IAAO,GAAK,MAEvC,UAAjBI,EAAOI,OAAoC,WAAfJ,EAAOrB,KAAqC,cAAjBqB,EAAOK,QAChEqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEV,OAASW,EAAEX,OAAU,GAAK,MAE7C,UAAjBG,EAAOI,OAAoC,WAAfJ,EAAOrB,KAAqC,eAAjBqB,EAAOK,QAChEqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEV,OAASW,EAAEX,OAAU,GAAK,MAE7C,UAAjBG,EAAOI,OAAoC,aAAfJ,EAAOrB,MACrC+E,EAAaD,EAAOzD,QAAO,SAAAU,GAAC,OAAIA,EAAEC,WAAaX,EAAOK,UAEnC,UAAjBL,EAAOI,QACTsD,EAAaD,GAGf,IAAI7E,EAAQ,EAEN3E,EAAQyJ,EAAW7C,KAAI,SAAA7G,GAI3B,OAFA4E,EAAQ8E,EAAW5C,QAAQ9G,GAAM,EAG/B,kBAAC,EAAD,CACE2E,IAAKC,EACL5E,KAAMA,EACNwF,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,SAChBV,YAAajG,EAAMiG,YACnBD,gBAAiBhG,EAAMgG,gBACvBE,SAAUlG,EAAMkG,SAChB2B,UAAW7H,EAAM6H,UACjBqC,WAAYlK,EAAMkK,gBAKxB,OAAO,wBAAIhK,UAAU,YAAYY,KC9C7B0J,E,4MACJtH,MAAQ,CACNvC,KAAM,KACNQ,UAAW,UACX0D,SAAS,EACTC,cAAe,OACfC,SAAS,EACTjD,QAAS,KACT2I,WAAW,EACXC,UAAW,KACX7D,OAAQ,CACNI,MAAO,KACPzB,IAAK,KACL0B,MAAO,MAETyD,kBAAmB,KACnBzB,MAAO,KACP0B,0BAA2B,KAC3BC,eAAgB,KAChBC,WAAY,KACZC,iBAAiB,EACjBC,kBAAmB,KACnBlK,MAAO,KACPiG,SAAU,KACVhG,aAAc,KACdC,gBAAiB,KACjBiK,sBAAsB,EACtBC,mBAAmB,G,EAwIvBC,SAAW,WACT,IAAMzJ,EAAO,CACXnB,MAAO,EAAKuB,QAAQvB,MACpBC,WAAY,EAAKsB,QAAQtB,YAG3B,EAAK4K,qBAAqB1J,GAC1B,EAAK2J,6BAA6B3J,GAClC,EAAK4J,kBAAkB5J,GACvB,EAAK6J,cAAc7J,GACnB,EAAK8J,eAAe9J,GACpB,EAAK+J,YAAY/J,I,EAInB0J,qBAAuB,SAAC1J,GACtBgK,QAAQC,IAAI,wCACZ,EAAK7J,QAAQL,aAAa,wCAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAEpBoL,EAAc,CAChBC,MAAM,6DAAD,OAEarL,EAFb,utBAKPsL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJf,QAAQC,IAAI,0CACZ,IAAIe,EAAgB,yCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXE,kBAAmB8B,EAAQ1J,KAAKqI,0BAInC0B,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAIhCY,6BAA+B,SAAC3J,GAC9BgK,QAAQC,IAAI,oDACZ,EAAK7J,QAAQL,aAAa,oDAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAEpBoL,EAAc,CAChBC,MAAM,yEAAD,OAEarL,EAFb,6tBAMPsL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJf,QAAQC,IAAI,kDACZ,IAAIe,EAAgB,iDAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXG,0BAA2B6B,EAAQ1J,KAAKiK,sCAG3CF,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAIhCa,kBAAoB,SAAC5J,GACnBgK,QAAQC,IAAI,oCACZ,EAAK7J,QAAQL,aAAa,oCAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAEpBoL,EAAc,CAChBC,MAAM,0DAAD,OAEarL,EAFb,45BAOPsL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJf,QAAQC,IAAI,2CACZ,IAAIe,EAAgB,0CAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXI,eAAgB4B,EAAQ1J,KAAKuI,uBAGhCwB,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAIhCc,cAAgB,SAAC7J,GACfgK,QAAQC,IAAI,iCACZ,EAAK7J,QAAQL,aAAa,iCAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAEpBoL,EAAc,CAChBC,MAAM,sDAAD,OAEarL,EAFb,yKAMPsL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJf,QAAQC,IAAI,2CACZ,IAAIe,EAAgB,0CAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXK,WAAY2B,EAAQ1J,KAAKwI,mBAG5BuB,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAIhCrI,cAAgB,WACd,EAAKiD,SAAS,CACZR,SAAS,K,EAIboI,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,IAAIlG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B1B,EAAM0H,EAAMvI,OAAOa,IAAI0B,MACvBA,EAAQgG,EAAMvI,OAAOuC,MAAMA,MACjB,SAAVA,IACFA,GAAQ,GAEI,UAAVA,IACFA,GAAQ,GAEV,EAAK7B,SAAS,CACZwB,OAAQ,CACNI,MAAOA,EACPzB,IAAKA,EACL0B,MAAOA,M,EAMbkG,kBAAoB,WAClB,EAAK/H,SAAS,CACZ0F,iBAAiB,EACjBC,kBAAmB,K,EAGvBqC,mBAAqB,WACnB,EAAKhI,SAAS,CACZ0F,iBAAiB,EACjBC,kBAAmB,Q,EAGvBsC,YAAc,WACZ5B,QAAQC,IAAI,4BACZ,EAAK7J,QAAQL,aAAa,4BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAE5BoL,EAAc,CAChBC,MAAM,uDAAD,OAEarL,EAFb,sKAMPsL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJf,QAAQC,IAAI,+BACZ,IAAIe,EAAgB,8BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXK,WAAY2B,EAAQ1J,KAAKuK,iBAG5BR,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAKhC8C,0BAA4B,SAAC7L,GAC3B,IAAM8L,EAAgB,EAAKtK,MAAM4H,WAAW1B,MAAM1B,KAAI,SAAAH,GAAC,OAAGA,EAAE1B,QAAQzC,OAC9DqK,EAAkBD,EAAcE,SAAShM,EAAK0B,KACpDsI,QAAQC,IAAI,KAAKjK,GACjBgK,QAAQC,IAAI,KAAK6B,GACjB9B,QAAQC,IAAI,KAAK8B,IACO,IAApBA,GACF/B,QAAQC,IAAI,+CACZ,EAAK7J,QAAQL,aAAa,gDAE1B,EAAK4D,SAAS,CACZsI,cAAejM,EACfsJ,kBAAmB,K,EAKzB4C,6BAA+B,SAAClM,GAC9BgK,QAAQC,IAAI,4BACZ,EAAK7J,QAAQL,aAAa,4BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BqN,EAAU,EAAK3K,MAAM4H,WAAW1H,IAChC0K,EAAY,EAAK5K,MAAMyK,cAAcvK,IACrC2K,EAAerM,EAAK0B,IAE1B,GAAkB,UAAd1B,EAAKf,MAAkC,WAAde,EAAKf,KAIhC,OAHA+K,QAAQC,IAAI,yCACZ,EAAK7J,QAAQL,aAAa,8CAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAI5B,IAAImB,EAAc,CAChBC,MAAM,wDAAD,OAEarL,EAFb,gCAGUqN,EAHV,kCAIYC,EAJZ,qCAKeC,EALf,sKASPjC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJf,QAAQC,IAAI,iCACZ,IAAIe,EAAgB,gCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAIvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXK,WAAY2B,EAAQ1J,KAAKiL,aACzBjD,iBAAiB,EACjBC,kBAAmB,UAItB8B,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAIhCwD,cAAgB,SAACvM,GACfgK,QAAQC,IAAI,6BACZ,EAAK7J,QAAQL,aAAa,6BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BqN,EAAU,EAAK3K,MAAM4H,WAAW1H,IAChC8K,EAAaxM,EAAKgH,OAEpBkD,EAAc,CAChBC,MAAM,yDAAD,OAEarL,EAFb,gCAGUqN,EAHV,0DAKcK,EALd,0KASPpC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJf,QAAQC,IAAI,yCACZ,IAAIe,EAAgB,wCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAIvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXK,WAAY2B,EAAQ1J,KAAKkL,mBAI5BnB,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAIhC0D,gBAAkB,SAACzM,GACjBgK,QAAQC,IAAI,6BACZ,EAAK7J,QAAQL,aAAa,6BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BqN,EAAU,EAAK3K,MAAM4H,WAAW1H,IAChC8K,EAAaxM,EAAKgH,OAEpBkD,EAAc,CAChBC,MAAM,2DAAD,OAEarL,EAFb,gCAGUqN,EAHV,0DAKcK,EALd,0KASPpC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJf,QAAQC,IAAI,2CACZ,IAAIe,EAAgB,0CAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAIvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXK,WAAY2B,EAAQ1J,KAAKoL,qBAI5BrB,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAIhC2D,cAAgB,SAAC1M,GACfgK,QAAQC,IAAI,6BACZ,EAAK7J,QAAQL,aAAa,6BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BqN,EAAU,EAAK3K,MAAM4H,WAAW1H,IAChC8K,EAAaxM,EAAKgH,OAEpBkD,EAAc,CAChBC,MAAM,2DAAD,OAEarL,EAFb,gCAGUqN,EAHV,0DAKcK,EALd,0KASPpC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJf,QAAQC,IAAI,oCACZ,IAAIe,EAAgB,mCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAIvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXK,WAAY2B,EAAQ1J,KAAKsL,qBAI5BvB,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAKhC6D,mBAAqB,WACnB,EAAKjJ,SAAS,CAAC4F,sBAAsB,K,EAEvCsD,2BAA6B,WAC3B,EAAKlJ,SAAS,CACZ4F,sBAAsB,IAExB,EAAKO,eAAe,CAClBhL,WAAY,EAAKsB,QAAQtB,WACzBD,MAAO,EAAKuB,QAAQvB,S,EAGxBiO,+BAAiC,SAACtB,GAChCA,EAAMC,iBACNzB,QAAQC,IAAI,4BACZ,EAAK7J,QAAQL,aAAa,4BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAyBImB,EAzBErL,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAASJ,EAETyG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B2E,EAAQqB,EAAMvI,OAAOkH,MAAM3E,MAC7BuH,GAAQ,EACE,WAAVxH,GACU,QAAVA,GACU,QAAVA,GACU,qBAAVA,GACU,sBAAVA,GACU,aAAVA,GACU,oBAAVA,GACU,0BAAVA,GACU,sBAAVA,GACU,eAAVA,GACU,kBAAVA,GACU,yBAAVA,GACU,yBAAVA,IAEAwH,GAAQ,IAKE,IAAVA,IACF7C,EAAc,CACZC,MAAM,oEAAD,OAEarL,EAFb,gCAGQyG,EAHR,gCAIQ4E,EAJR,+4BASK,IAAV4C,IACF7C,EAAc,CACZC,MAAM,+DAAD,OAEarL,EAFb,gCAGQyG,EAHR,gCAIQ4E,EAJR,84BASTC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAQJ,IAAIC,EAAgB,iCAGN,IAAV+B,IACEhC,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,SAIX,IAAV4B,IACEhC,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,QAKzB,EAAK/K,QAAQL,aAAaiL,IAEZ,IAAV+B,GACF,EAAKpJ,SAAS,CACZoF,WAAW,EACX1D,SAAU0F,EAAQ1J,KAAK2L,wBACvBjO,UAAU,sCAAD,OAAwCD,EAAxC,mBAA6DI,MAG5D,IAAV6N,GACF,EAAKpJ,SAAS,CACZoF,WAAW,EACX1D,SAAU0F,EAAQ1J,KAAK4L,mBACvBlO,UAAU,iCAAD,OAAmCD,EAAnC,mBAAwDI,KAIrE,EAAKgO,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAKhCoE,gBAAkB,WAChB,EAAKxJ,SAAS,CAAC6F,mBAAmB,K,EAEpC4D,wBAA0B,WACxB,EAAKzJ,SAAS,CACZ6F,mBAAmB,IAErB,EAAKO,YAAY,CACfjL,WAAY,EAAKsB,QAAQtB,WACzBD,MAAO,EAAKuB,QAAQvB,S,EAGxBwO,4BAA8B,SAAC7B,GAC7BA,EAAMC,iBACNzB,QAAQC,IAAI,yBACZ,EAAK7J,QAAQL,aAAa,yBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAuBImB,EAvBErL,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAASJ,EAETyG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B2E,EAAQqB,EAAMvI,OAAOkH,MAAM3E,MAC7BuH,GAAQ,EACE,QAAVxH,GACU,QAAVA,GACU,mBAAVA,GACU,qBAAVA,GACU,sBAAVA,GACU,aAAVA,GACU,oBAAVA,GACU,0BAAVA,GACU,oBAAVA,GACU,oBAAVA,GACU,kBAAVA,IAEAwH,GAAQ,GAEZ/C,QAAQC,IAAI,QAAQ8C,IAGN,IAAVA,IACF7C,EAAc,CACZC,MAAM,iEAAD,OAEarL,EAFb,gCAGQyG,EAHR,gCAIQ4E,EAJR,+mBASK,IAAV4C,IACF7C,EAAc,CACZC,MAAM,4DAAD,OAEarL,EAFb,gCAGQyG,EAHR,gCAIQ4E,EAJR,8mBASTC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAQJ,IAAIC,EAAgB,+BAGN,IAAV+B,IACEhC,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,SAIX,IAAV4B,IACEhC,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,QAKzB,EAAK/K,QAAQL,aAAaiL,IAEZ,IAAV+B,IACF,EAAKpJ,SAAS,CACZoF,WAAW,EACX3J,MAAO2L,EAAQ1J,KAAKiM,qBACpBvO,UAAU,mCAAD,OAAqCD,EAArC,mBAA0DI,KAErE,EAAKkB,QAAQpB,aAAe+L,EAAQ1J,KAAKiM,uBAE7B,IAAVP,IACF,EAAKpJ,SAAS,CACZoF,WAAW,EACX3J,MAAO2L,EAAQ1J,KAAKkM,gBACpBxO,UAAU,8BAAD,OAAgCD,EAAhC,mBAAqDI,KAEhE,EAAKkB,QAAQpB,aAAe+L,EAAQ1J,KAAKkM,iBAG3C,EAAKL,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAKhCkD,cAAgB,SAACjM,GACfgK,QAAQC,IAAI,mBACZ,EAAKtG,SAAS,CACZrE,gBAAiBU,K,EAGrBwI,WAAa,SAACxI,GACZgK,QAAQC,IAAI,mBACZ,EAAKtG,SAAS,CACZtE,aAAcW,K,kEAjhChB,GADAgK,QAAQC,IAAI,gCACRuD,eAAeC,QAAQ,WAAY,CACrC,IAAMzE,EAAYuB,KAAKmD,MAAMF,eAAeC,QAAQ,YAEpDnK,KAAKoG,qBAAqBV,GAC1B1F,KAAKqG,6BAA6BX,GAClC1F,KAAKsG,kBAAkBZ,GACvB1F,KAAKuG,cAAcb,GACnB1F,KAAKwG,eAAed,GACpB1F,KAAKyG,YAAYf,M,qCAKLhJ,GAAO,IAAD,OACpBgK,QAAQC,IAAI,iCACZ3G,KAAKlD,QAAQL,aAAa,iCAC1BuD,KAAKK,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAGpBoL,EAAc,CAChBC,MAAM,uDAAD,OAEarL,EAFb,u4BAMPsL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,wCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAIvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX1D,SAAU0F,EAAQ1J,KAAKyI,oBAG1BsB,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,S,kCAInB/I,GAAO,IAAD,OACjBgK,QAAQC,IAAI,8BACZ3G,KAAKlD,QAAQL,aAAa,8BAC1BuD,KAAKK,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAGpBoL,EAAc,CAChBC,MAAM,oDAAD,OAEarL,EAFb,kmBAKPsL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJf,QAAQC,IAAI,sCACZ,IAAIe,EAAgB,qCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAIvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX3J,MAAO2L,EAAQ1J,KAAK0I,iBAIvBqB,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,S,+BA45B5B,OACE,kBAAC,IAAM1I,SAAP,MAGyB,IAAvBiD,KAAK9B,MAAM2B,SACX,kBAAC,EAAD,CACExC,OAAQ2C,KAAK9B,MAAM4B,cACnB1C,cAAe4C,KAAK5C,gBAIxB,kBAACI,EAAA,EAAD,CAAWtC,UAAU,wBAErB,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,qBAEb,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBiP,KAAK,KAAKpN,QAAS+C,KAAKmG,UAA5D,QACCnG,KAAK9B,MAAMuH,UACV,kBAACnG,EAAA,EAAD,CAAOC,IAAKC,IAAYtE,UAAU,aAAauE,OAAK,IAEpD,iCAKJ,kBAACtC,EAAA,EAAD,CAAKjC,UAAU,kBACf,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,kBACpB,4CACC8E,KAAK9B,MAAMyH,mBACV,kBAAC,EAAD,CACE9D,OAAQ7B,KAAK9B,MAAM2D,OACnByB,aAActD,KAAK9B,MAAMyH,kBACzB4E,OAAQvK,KAAKlD,QAAQtB,WACrB0F,UAAU,KAIhB,kBAACjB,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,kBACpB,sCACE8E,KAAK9B,MAAM4H,YACX,kBAAC,IAAM/I,SAAP,KACE,kBAACQ,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKsI,aAAhD,QAGHtI,KAAK9B,MAAM4H,YACV,kBAAC,IAAM/I,SAAP,MACgC,IAA/BiD,KAAK9B,MAAM6H,iBACV,kBAAC,IAAD,CAAiBnI,KAAMuD,IAAYjG,UAAU,WAAW+B,QAAS+C,KAAKoI,qBAExC,IAA/BpI,KAAK9B,MAAM6H,iBACV,kBAACxI,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAAS+C,KAAKqI,oBAA/C,WAI+B,IAA/BrI,KAAK9B,MAAM6H,iBACsB,IAAjC/F,KAAK9B,MAAM8H,mBACT,kBAAC,IAAMjJ,SAAP,KACA,yDACA,kBAACQ,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKsJ,oBAAhD,UACA,kBAACnM,EAAA,EAAD,CAAKjC,UAAU,sBACsB,IAApC8E,KAAK9B,MAAM+H,sBACV,kBAAC,EAAD,CACElB,SAAU/E,KAAKuJ,2BACf/E,UAAWxE,KAAKwJ,kCAIpB,kBAACrM,EAAA,EAAD,CAAKjC,UAAU,qBACf,kBAAC,EAAD,CACE2G,OAAQ7B,KAAK9B,MAAM2D,OACnBE,SAAU/B,KAAK9B,MAAM6D,SACrBwI,OAAQvK,KAAKlD,QAAQtB,WACrB4F,SAAUpB,KAAKuI,0BACfvH,iBAAiB,OAOQ,IAA/BhB,KAAK9B,MAAM6H,iBACsB,IAAjC/F,KAAK9B,MAAM8H,mBACT,kBAAC,IAAMjJ,SAAP,KACA,4DACA,kBAACQ,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAK6J,iBAAhD,UACA,kBAAC1M,EAAA,EAAD,CAAKjC,UAAU,sBACmB,IAAjC8E,KAAK9B,MAAMgI,mBACV,kBAAC,EAAD,CACEnB,SAAU/E,KAAK8J,wBACftF,UAAWxE,KAAK+J,+BAIpB,kBAAC5M,EAAA,EAAD,CAAKjC,UAAU,qBACf,kBAAC,EAAD,CACE2G,OAAQ7B,KAAK9B,MAAM2D,OACnB/F,MAAOkE,KAAK9B,MAAMpC,MAClByO,OAAQvK,KAAKlD,QAAQtB,WACrB0J,WAAYlF,KAAK4I,6BACjB1H,UAAU,MAOd,kBAAC,EAAD,CACEgD,MAAOlE,KAAK9B,MAAM4H,WAClBlC,SAAU5D,KAAKiJ,cACfpF,WAAY7D,KAAKmJ,gBACjBxH,SAAU3B,KAAKoJ,mBAOrB,kBAACjM,EAAA,EAAD,CAAKjC,UAAU,kBACf,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAEpP,UAAU,kBACnB,+CACC8E,KAAK9B,MAAM0H,2BACV,kBAAC,EAAD,CACE/D,OAAQ7B,KAAK9B,MAAM2D,OACnByB,aAActD,KAAK9B,MAAM0H,0BACzB2E,OAAQvK,KAAKlD,QAAQtB,WACrB0F,UAAU,KAIhB,kBAACjB,EAAA,EAAD,CAAKqK,GAAI,EAAEpP,UAAU,kBACnB,+CACC8E,KAAK9B,MAAM2H,gBACV,kBAAC,EAAD,CACEhE,OAAQ7B,KAAK9B,MAAM2D,OACnBE,SAAU/B,KAAK9B,MAAM2H,eACrB0E,OAAQvK,KAAKlD,QAAQtB,WACrB0F,UAAU,KAIhB,kBAACjB,EAAA,EAAD,CAAKqK,GAAI,EAAEpP,UAAU,kBACnB,kD,GAvsCegF,aAAjBsF,EA6BGgF,YAAcC,EAwrCRjF,Q,oECzoCAkF,GAnGK,SAAA1P,GAAU,IAAD,EACDoF,oBAAS,GADR,mBACpBlC,EADoB,KACbmC,EADa,OAWYD,oBAAS,GAXrB,mBAWnBE,EAXmB,KAWNC,EAXM,KAqB3B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAM2P,QAAQC,OAE9C,kBAAClK,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAM2P,QAAQE,UAEjD,kBAAC,IAAD,CAAiBjN,KAAMmD,IAAO7F,UAAU,WAAW+B,QA7BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAyBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,OACM,0BAAMA,UAAU,QAAQF,EAAM2P,QAAQjH,UAG5C,4BACA,kBAAChD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,WACU,0BAAMA,UAAU,QAAQF,EAAM2P,QAAQG,UAGhD,4BACA,kBAACpK,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAM2P,QAAQC,QAG9C,4BACA,kBAAClK,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAM2P,QAAQI,QAG9C,4BACA,kBAACrK,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,WACU,0BAAMA,UAAU,QAAQF,EAAM2P,QAAQK,UAGhD,4BACA,kBAACtK,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAM2P,QAAQE,WAGjD,4BACA,kBAACnK,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAhB,KAAmD,IAA1BF,EAAM2P,QAAQM,SAAqB,kBAAC,IAAD,CAAiBrN,KAAMuH,IAAwBjK,UAAU,aAArH,KAA+J,IAA1BF,EAAM2P,QAAQM,SAAsB,kBAAC,IAAD,CAAiBrN,KAAMwH,IAAgBlK,UAAU,gBAGpOF,EAAMkQ,aACL,4BACA,kBAAC3N,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAASjC,EAAMkQ,YAAYpN,U,EAAW9C,EAAM2P,UAA9E,iBAGmB,IAApB3P,EAAMqG,WACL,4BACA,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QAjErC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QA+DS,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAM2P,UAA1E,kBChBLQ,GA3ES,SAAAnQ,GAAU,IAEtB6G,EAFqB,iBAEX7G,EAAM6G,QACtBuJ,EAAapQ,EAAMqQ,UACnBC,EAAiB,GAEA,YAAjBzJ,EAAOI,OAAsC,WAAfJ,EAAOrB,KAAqC,cAAjBqB,EAAOK,QAClEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEsB,OAASrB,EAAEqB,OAAU,GAAK,MAErD,YAAjB7B,EAAOI,OAAsC,WAAfJ,EAAOrB,KAAqC,eAAjBqB,EAAOK,QAClEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEsB,OAASrB,EAAEqB,OAAU,GAAK,MAErD,YAAjB7B,EAAOI,OAAsC,WAAfJ,EAAOrB,KAAqC,cAAjBqB,EAAOK,QAClEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE0I,OAASzI,EAAEyI,OAAU,GAAK,MAErD,YAAjBjJ,EAAOI,OAAsC,WAAfJ,EAAOrB,KAAqC,eAAjBqB,EAAOK,QAClEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE0I,OAASzI,EAAEyI,OAAU,GAAK,MAErD,YAAjBjJ,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAChEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEwI,KAAOvI,EAAEuI,KAAQ,GAAK,MAEjD,YAAjB/I,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAChEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEwI,KAAOvI,EAAEuI,KAAQ,GAAK,MAEjD,YAAjB/I,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAChEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE2I,KAAO1I,EAAE0I,KAAQ,GAAK,MAEjD,YAAjBlJ,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAChEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE2I,KAAO1I,EAAE0I,KAAQ,GAAK,MAEjD,YAAjBlJ,EAAOI,OAAsC,WAAfJ,EAAOrB,KAAqC,cAAjBqB,EAAOK,QAClEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE4I,OAAS3I,EAAE2I,OAAU,GAAK,MAErD,YAAjBnJ,EAAOI,OAAsC,WAAfJ,EAAOrB,KAAqC,eAAjBqB,EAAOK,QAClEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE4I,OAAS3I,EAAE2I,OAAU,GAAK,MAErD,YAAjBnJ,EAAOI,OAAsC,YAAfJ,EAAOrB,KAAsC,cAAjBqB,EAAOK,QACnEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEyI,QAAUxI,EAAEwI,QAAW,GAAK,MAEvD,YAAjBhJ,EAAOI,OAAsC,YAAfJ,EAAOrB,KAAsC,eAAjBqB,EAAOK,QACnEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEyI,QAAUxI,EAAEwI,QAAW,GAAK,MAEvD,YAAjBhJ,EAAOI,OAAsC,eAAfJ,EAAOrB,KAAyC,cAAjBqB,EAAOK,QACtEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEmJ,WAAalJ,EAAEkJ,WAAc,GAAK,MAE7D,YAAjB1J,EAAOI,OAAsC,eAAfJ,EAAOrB,KAAyC,eAAjBqB,EAAOK,QACtEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEmJ,WAAalJ,EAAEkJ,WAAc,GAAK,MAE7D,YAAjB1J,EAAOI,OAAsC,YAAfJ,EAAOrB,MACvC8K,EAAiBF,EAAWvJ,QAAO,SAAAU,GAAC,OAAIA,EAAE0I,UAAYpJ,EAAOK,UAE1C,YAAjBL,EAAOI,QACTqJ,EAAiBF,GAGnB,IAAI3K,EAAQ,EAEN4K,EAAYC,EAAe5I,KAAI,SAAAiI,GAInC,OAFAlK,EAAQ6K,EAAe3I,QAAQgI,GAAS,EAGtC,kBAAC,GAAD,CACEnK,IAAKC,EACLkK,QAASA,EACThJ,SAAU3G,EAAM2G,SAChBN,UAAWrG,EAAMqG,UACjB6J,YAAalQ,EAAMkQ,iBAKzB,OAAO,wBAAIhQ,UAAU,eAAemQ,ICWvBG,GAvEQ,SAAAxQ,GAAU,IAAD,EACJoF,oBAAS,GADL,mBACvBlC,EADuB,KAChBmC,EADgB,OAWSD,oBAAS,GAXlB,mBAWtBE,EAXsB,KAWTC,EAXS,KAqB9B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQmD,IAAOC,KAAKtD,EAAMyQ,WAAWlN,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,gBAErG,kBAAC,IAAD,CAAiBd,KAAMmD,IAAO7F,UAAU,WAAW+B,QA1BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAsBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQmD,IAAOC,KAAKtD,EAAMyQ,WAAWlN,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,iBAGrG,4BACA,kBAACgC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,WACU,0BAAMA,UAAU,QAAQF,EAAMyQ,WAAWpO,UAGnD,4BACA,kBAACqD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,0BAAMA,UAAU,QAAQF,EAAMyQ,WAAWvM,gBAGnC,IAApBlE,EAAMqG,WACL,4BACA,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QArCrC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QAmCS,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMyQ,aAA1E,kBCxBLC,GA5CY,SAAA1Q,GAAU,IAEzB6G,EAFwB,iBAEd7G,EAAM6G,QACtB8J,EAAc3Q,EAAMyQ,WACpBG,EAAkB,GAED,eAAjB/J,EAAOI,OAAyC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QACnE0J,EAAkBD,EAAYxJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE7D,KAAO8D,EAAE9D,KAAQ,GAAK,MAEnD,eAAjBsD,EAAOI,OAAyC,WAAfJ,EAAOrB,KAAqC,eAAjBqB,EAAOK,QACrE0J,EAAkBD,EAAYxJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE7D,KAAO8D,EAAE9D,KAAQ,GAAK,MAEnD,eAAjBsD,EAAOI,OAAyC,WAAfJ,EAAOrB,KAAqC,cAAjBqB,EAAOK,QACrE0J,EAAkBD,EAAYxJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/E,OAASgF,EAAEhF,OAAU,GAAK,MAEvD,eAAjBwE,EAAOI,OAAyC,WAAfJ,EAAOrB,KAAqC,eAAjBqB,EAAOK,QACrE0J,EAAkBD,EAAYxJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/E,OAASgF,EAAEhF,OAAU,GAAK,MAKvD,eAAjBwE,EAAOI,QACT2J,EAAkBD,GAGpB,IAAIlL,EAAQ,EAENgL,EAAaG,EAAgBlJ,KAAI,SAAAmJ,GAIrC,OAFApL,EAAQmL,EAAgBjJ,QAAQkJ,GAAgB,EAG9C,kBAAC,GAAD,CACErL,IAAKC,EACLgL,WAAYI,EACZxK,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,cAKtB,OAAO,wBAAIzG,UAAU,kBAAkBuQ,IC2C1BK,GA5EG,SAAA9Q,GAAU,IAAD,EACCoF,oBAAS,GADV,mBAClBlC,EADkB,KACXmC,EADW,OAWcD,oBAAS,GAXvB,mBAWjBE,EAXiB,KAWJC,EAXI,KAqBzB,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQmD,IAAOC,KAAKtD,EAAM+Q,MAAM3M,UAAUZ,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,gBAEtG,kBAAC,IAAD,CAAiBd,KAAMmD,IAAO7F,UAAU,WAAW+B,QA1BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAsBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAM+Q,MAAMzO,QAG5C,4BACA,kBAACoD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQmD,IAAOC,KAAKtD,EAAM+Q,MAAM3M,UAAUZ,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,iBAGtG,4BACA,kBAACgC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,QACO,0BAAMA,UAAU,QAAQmD,IAAOC,KAAKtD,EAAM+Q,MAAM1M,QAAQb,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,iBAGlG,4BACA,kBAACgC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,0BAAMA,UAAU,QAAQF,EAAM+Q,MAAM7M,gBAG9B,IAApBlE,EAAMqG,WACL,4BACA,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QA1CrC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QAwCS,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAM+Q,QAA1E,kBCnBLC,GAlDO,SAAAhR,GAAU,IAEpB6G,EAFmB,iBAET7G,EAAM6G,QACtBoK,EAASjR,EAAM+Q,MACfG,EAAa,GAEI,UAAjBrK,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC9DgK,EAAaD,EAAO9J,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEzC,UAAjBuE,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC9DgK,EAAaD,EAAO9J,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEzC,UAAjBuE,EAAOI,OAAoC,cAAfJ,EAAOrB,KAAwC,cAAjBqB,EAAOK,QACnEgK,EAAaD,EAAO9J,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEhD,UAAYiD,EAAEjD,UAAa,GAAK,MAEnD,UAAjByC,EAAOI,OAAoC,cAAfJ,EAAOrB,KAAwC,eAAjBqB,EAAOK,QACnEgK,EAAaD,EAAO9J,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEhD,UAAYiD,EAAEjD,UAAa,GAAK,MAEnD,UAAjByC,EAAOI,OAAoC,YAAfJ,EAAOrB,KAAsC,cAAjBqB,EAAOK,QACjEgK,EAAaD,EAAO9J,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/C,QAAUgD,EAAEhD,QAAW,GAAK,MAE/C,UAAjBwC,EAAOI,OAAoC,YAAfJ,EAAOrB,KAAsC,eAAjBqB,EAAOK,QACjEgK,EAAaD,EAAO9J,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/C,QAAUgD,EAAEhD,QAAW,GAAK,MAK/C,UAAjBwC,EAAOI,QACTiK,EAAaD,GAGf,IAAIxL,EAAQ,EAENsL,EAAQG,EAAWxJ,KAAI,SAAAyJ,GAI3B,OAFA1L,EAAQyL,EAAWvJ,QAAQwJ,GAAW,EAGpC,kBAAC,GAAD,CACE3L,IAAKC,EACLsL,MAAOI,EACP9K,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,cAKtB,OAAO,wBAAIzG,UAAU,aAAa6Q,ICiCrBK,GAzEG,SAACpR,GAAW,IAAD,EACDoF,oBAAS,GADR,mBACpBlC,EADoB,KACbmC,EADa,OAWYD,oBAAS,GAXrB,mBAWnBE,EAXmB,KAWNC,EAXM,KAqB3B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMqR,MAAMC,OAG5C,kBAAC,IAAD,CAAiB1O,KAAMmD,IAAO7F,UAAU,WAAW+B,QA3BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAuBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMqR,MAAM9K,QAG5C,4BACA,kBAACb,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMqR,MAAM/O,QAG5C,4BACA,kBAACoD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMqR,MAAMC,SAGvB,IAApBtR,EAAMqG,WACL,4BACA,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QAtCrC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QAoCS,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMqR,QAA1E,kBCdLE,GAlDO,SAAAvR,GAAU,IAEpB6G,EAFmB,iBAET7G,EAAM6G,QACtB2K,EAAUxR,EAAMyR,OAChBC,EAAc,GAEG,UAAjB7K,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC9DwK,EAAcF,EAAQrK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAE3C,UAAjBM,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC9DwK,EAAcF,EAAQrK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAE3C,UAAjBM,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC9DwK,EAAcF,EAAQrK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAE3C,UAAjBuE,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC9DwK,EAAcF,EAAQrK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAE3C,UAAjBuE,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC9DwK,EAAcF,EAAQrK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEkK,KAAOjK,EAAEiK,KAAQ,GAAK,MAE3C,UAAjBzK,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC9DwK,EAAcF,EAAQrK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEkK,KAAOjK,EAAEiK,KAAQ,GAAK,MAK3C,UAAjBzK,EAAOI,QACTyK,EAAcF,GAGhB,IAAI/L,EAAQ,EAENgM,EAASC,EAAYhK,KAAI,SAAA2J,GAI7B,OAFA5L,EAAQiM,EAAY/J,QAAQ0J,GAAO,EAGjC,kBAAC,GAAD,CACE7L,IAAKC,EACL4L,MAAOA,EACPhL,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,cAKtB,OAAO,wBAAIzG,UAAU,aAAauR,IC+BrBE,GAvEE,SAAC3R,GAAW,IAAD,EACAoF,oBAAS,GADT,mBACnBlC,EADmB,KACZmC,EADY,OAWaD,oBAAS,GAXtB,mBAWlBE,EAXkB,KAWLC,EAXK,KAqB1B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMoB,KAAKkQ,OAE3C,kBAAC,IAAD,CAAiB1O,KAAMmD,IAAO7F,UAAU,WAAW+B,QA1BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAsBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMoB,KAAKmF,QAG3C,4BACA,kBAACb,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMoB,KAAKkB,QAG3C,4BACA,kBAACoD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMoB,KAAKkQ,SAGtB,IAApBtR,EAAMqG,WACL,4BACA,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QArCrC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QAmCS,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMoB,OAA1E,kBCbLwQ,GAlDS,SAAA5R,GAAU,IAEtB6G,EAFqB,iBAEX7G,EAAM6G,QACtBgL,EAAS7R,EAAM8R,MACfC,EAAa,GAEI,SAAjBlL,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC7D6K,EAAaF,EAAO1K,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAEzC,SAAjBM,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC7D6K,EAAaF,EAAO1K,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAEzC,SAAjBM,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC7D6K,EAAaF,EAAO1K,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEzC,SAAjBuE,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC7D6K,EAAaF,EAAO1K,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEzC,SAAjBuE,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC7D6K,EAAaF,EAAO1K,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEkK,KAAOjK,EAAEiK,KAAQ,GAAK,MAEzC,SAAjBzK,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC7D6K,EAAaF,EAAO1K,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEkK,KAAOjK,EAAEiK,KAAQ,GAAK,MAKzC,SAAjBzK,EAAOI,QACT8K,EAAaF,GAGf,IAAIpM,EAAQ,EAENqM,EAAQC,EAAWrK,KAAI,SAAAtG,GAI3B,OAFAqE,EAAQsM,EAAWpK,QAAQvG,GAAM,EAG/B,kBAAC,GAAD,CACEoE,IAAKC,EACLrE,KAAMA,EACNiF,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,cAKtB,OAAO,wBAAIzG,UAAU,YAAY4R,IC6DpBlK,GA3FS,SAAC5H,GAAW,IAAD,EACPoF,oBAAS,GADF,mBAC1BlC,EAD0B,KACnBmC,EADmB,KAUjC,OACE,wBAAIG,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMmD,YAAYS,QAEnD,kBAAC8B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMmD,YAAYb,OAElD,kBAACoD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQmD,IAAOC,KAAKtD,EAAMmD,YAAYI,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,gBAEtG,kBAAC,IAAD,CAAiBd,KAAMmD,IAAO7F,UAAU,WAAW+B,QArBjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,MAkBL,kBAAC,IAAD,CACErD,GAAI,CACFiB,SAAU,gBACVC,MAAO,CAACC,YAAanD,EAAMmD,YAAYC,OAG3C,kBAAC,IAAD,CAAiBR,KAAMC,IAAmB3C,UAAU,eAGzC,IAAVgD,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,OACM,0BAAMA,UAAU,QAAQF,EAAMmD,YAAYC,OAGhD,4BACA,kBAACsC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMmD,YAAYQ,QAGlD,4BACA,kBAAC+B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,0BAAMA,UAAU,QAAQF,EAAMmD,YAAY4E,eAGzD,4BACA,kBAACrC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,aACY,0BAAMA,UAAU,QAAQF,EAAMmD,YAAY6E,YAGtD,4BACA,kBAACtC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,aACY,0BAAMA,UAAU,QAAQF,EAAMmD,YAAYW,YAGtD,4BACA,kBAAC4B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,0BAAMA,UAAU,QAAQF,EAAMmD,YAAYe,eAGzD,4BACA,kBAACwB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMmD,YAAY8E,WAAWC,cAGnE,4BACA,kBAACxC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,aACY,0BAAMA,UAAU,QAAQF,EAAMmD,YAAYgF,SAASD,cAG/D,4BACA,kBAACxC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,cACa,0BAAMA,UAAU,QAAQF,EAAMmD,YAAYY,UAAUmE,oBCxBhE8J,GAxEa,SAAAhS,GAAU,IAE1B6G,EAFyB,iBAEf7G,EAAM6G,QACtBwB,EAAgBrI,EAAMsI,aACtBC,EAAoB,GAEH,gBAAjB1B,EAAOI,OAA0C,UAAfJ,EAAOrB,KAAoC,cAAjBqB,EAAOK,QACrEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAEzD,gBAAjBiD,EAAOI,OAA0C,UAAfJ,EAAOrB,KAAoC,eAAjBqB,EAAOK,QACrEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAEzD,gBAAjBiD,EAAOI,OAA0C,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QACpEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEvD,gBAAjBuE,EAAOI,OAA0C,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QACpEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEvD,gBAAjBuE,EAAOI,OAA0C,YAAfJ,EAAOrB,KAAsC,cAAjBqB,EAAOK,QACvEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEvD,QAAUwD,EAAExD,QAAW,GAAK,MAE7D,gBAAjBgD,EAAOI,OAA0C,YAAfJ,EAAOrB,KAAsC,eAAjBqB,EAAOK,QACvEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEvD,QAAUwD,EAAExD,QAAW,GAAK,MAE7D,gBAAjBgD,EAAOI,OAA0C,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QACpEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE7D,KAAO8D,EAAE9D,KAAQ,GAAK,MAEvD,gBAAjBsD,EAAOI,OAA0C,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QACpEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE7D,KAAO8D,EAAE9D,KAAQ,GAAK,MAEvD,gBAAjBsD,EAAOI,OAA0C,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QACpEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzD,KAAO0D,EAAE1D,KAAQ,GAAK,MAEvD,gBAAjBkD,EAAOI,OAA0C,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QACpEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzD,KAAO0D,EAAE1D,KAAQ,GAAK,MAEvD,gBAAjBkD,EAAOI,OAA0C,aAAfJ,EAAOrB,KAAuC,cAAjBqB,EAAOK,QACxEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEtD,SAAWuD,EAAEvD,SAAY,GAAK,MAE/D,gBAAjB+C,EAAOI,OAA0C,aAAfJ,EAAOrB,KAAuC,eAAjBqB,EAAOK,QACxEqB,EAAoBF,EAAclB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEtD,SAAWuD,EAAEvD,SAAY,GAAK,MAE/D,gBAAjB+C,EAAOI,OAA0C,cAAfJ,EAAOrB,MAC3C+C,EAAoBF,EAAcxB,QAAO,SAAAU,GAAC,OAAIA,EAAExD,YAAc8C,EAAOK,UAElD,gBAAjBL,EAAOI,OAA0C,eAAfJ,EAAOrB,MAC3C+C,EAAoBF,EAAcxB,QAAO,SAAAU,GAAC,OAAIA,EAAEU,aAAepB,EAAOK,UAEnD,gBAAjBL,EAAOI,OAA0C,aAAfJ,EAAOrB,MAC3C+C,EAAoBF,EAAcxB,QAAO,SAAAU,GAAC,OAAIA,EAAEY,WAAatB,EAAOK,UAEjD,gBAAjBL,EAAOI,QACTsB,EAAoBF,GAGtB,IAAI5C,EAAQ,EAEN6C,EAAeC,EAAkBb,KAAI,SAAAvE,GAIzC,OAFAsC,EAAQ8C,EAAkBZ,QAAQxE,GAAa,EAG7C,kBAAC,GAAD,CACEqC,IAAKC,EACLtC,YAAaA,OAKnB,OAAO,wBAAIjD,UAAU,mBAAmBoI,IC9B3B2J,GAhCE,SAAAjS,GAAU,IAAD,EACEoF,oBAAS,GADX,mBACjBlC,EADiB,KACVmC,EADU,KAUxB,OACE,wBAAIG,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMkS,OAEtC,kBAAC,IAAD,CAAiBtP,KAAM0D,IAAYpG,UAAU,WAAW+B,QAftC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAWM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,sBACQ,IAApBF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMkS,OAA1E,eCUDC,GAtCM,SAAAnS,GAAU,IAEnB6G,EAFkB,iBAER7G,EAAM6G,QACtBuL,EAASpS,EAAMqS,MACfC,EAAa,GAEI,SAAjBzL,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC7DoL,EAAaF,EAAOjL,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,EAAK,GAAK,MAE/B,SAAjBR,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC7DoL,EAAaF,EAAOjL,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,EAAK,GAAK,MAK/B,SAAjBR,EAAOI,QACTqL,EAAaF,GAGf,IAAI3M,EAAQ,EAEN4M,EAAQC,EAAW5K,KAAI,SAAAwK,GAI3B,OAFAzM,EAAQ6M,EAAW3K,QAAQuK,GAAM,EAG/B,kBAAC,GAAD,CACE1M,IAAKC,EACLyM,KAAMA,EACN7L,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,cAKtB,OAAO,wBAAIzG,UAAU,YAAYmS,ICepBE,I,MAhDW,SAACvS,GAE3B,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,cAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,0CACA,0CACA,wCACA,wCACA,0CACA,2CACA,8CACA,8CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,8CACA,wCACA,4CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,eCDSwI,GAxCW,SAACvS,GAE3B,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,iBAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,0CACA,2CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,iDAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCQS0I,GAzCS,SAACzS,GAEzB,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,YAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,wCACA,6CACA,8CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,iDAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCOS2I,GAzCS,SAAC1S,GAEzB,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,YAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,wCACA,wCACA,2CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,iDAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCOS4I,GAzCQ,SAAC3S,GAExB,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,WAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,wCACA,wCACA,2CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,iDAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCeS6I,GAjDe,SAAC5S,GAE/B,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,kBAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,yCACA,wCACA,2CACA,wCACA,wCACA,4CACA,6CACA,8CACA,+CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,8CACA,wCACA,4CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCHS8I,GAvCQ,SAAC7S,GAExB,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,WAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,2CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,iDAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCJS+I,I,MA3BmB,SAAC9S,GAEnC,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,mDACA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAO4E,MAAOlH,EAAMiH,SAGzC,kBAACqC,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,kCAI1C,kBAACR,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,eCsDSgJ,GA3EQ,SAAC/S,GAExB,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,2CACA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,UAC7B,kBAACL,EAAA,EAAKM,MAAN,sBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,SAASwH,YAAY,MAG1C,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,UAC7B,kBAACL,EAAA,EAAKM,MAAN,sBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,OAK1C,kBAACR,EAAA,EAAKnH,IAAN,KAEE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,MAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,OAK1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,UAC7B,kBAACL,EAAA,EAAKM,MAAN,sBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,wCACA,2CACA,iDACA,6CACA,4CACA,gDACA,6CACA,8CACA,2CACA,iDACA,4CACA,4CACA,8CACA,4CACA,gDAIJ,kBAACJ,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,WAC7B,kBAACL,EAAA,EAAKM,MAAN,uBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,MAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,cAC7B,kBAACL,EAAA,EAAKM,MAAN,0BACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,OAI1C,kBAACR,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cCLSiJ,GA9DW,SAAChT,GAAW,IAAD,EACDoF,mBAAS,IAAI6N,MADZ,gCAMJ7N,mBAAS,IAAI6N,OANT,6BAWrC,OACA,yBAAK/S,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,8CAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,WAoB1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,UAC7B,kBAACL,EAAA,EAAKM,MAAN,eACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,aAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,OAIrD,kBAACR,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cCfSoJ,GAxCM,SAACnT,GAEtB,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,yCAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,aAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,eAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,WAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,UAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,OAIrD,kBAACR,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cCVSqJ,GAvBK,SAACpT,GAErB,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,yCAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,0BAIrD,kBAACR,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cCQSsJ,GAvBM,SAACrT,GAEtB,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,yCAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,KACd,kBAACqE,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOgR,GAAG,YAAYxJ,YAAY,OAAOyJ,SAAU,SAACC,GAAO/D,EAAYgE,cAAcrS,KAAOoS,EAAE7O,OAAOmN,MAAM,QAIpI,kBAACxI,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cCOW2J,GAvBK,SAAC1T,GAErB,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,wCAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,KACd,kBAACqE,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOgR,GAAG,YAAYxJ,YAAY,OAAOyJ,SAAU,SAACC,GAAO/D,EAAYgE,cAAcrS,KAAOoS,EAAE7O,OAAOmN,MAAM,QAIlI,kBAACxI,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cC2BA4J,I,yDAwCJ,WAAY3T,GAAQ,IAAD,8BACjB,cAAMA,IAxCRkD,MAAQ,CACNzC,UAAW,KACXE,KAAM,KACNkE,SAAS,EACTC,cAAe,OACfC,SAAS,EACTjD,QAAS,KACTpB,aAAc,KACd+J,WAAW,EACXC,UAAW,KACXkJ,eAAe,EACfC,QAAS,OACThN,OAAQ,CACNI,MAAO,KACPzB,IAAK,KACL0B,MAAO,MAET4M,aAAc,KACdC,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,MAETZ,WAAW,EACX2N,kBAAmB,CACjB9Q,MAAO,KACP+D,MAAO,MAETgN,mBAAoB,KACpBC,cAAe,KACfC,qBAAsB,KACtBC,WAAY,KACZC,QAAS,CACP3P,OAAQ,KACRC,OAAQ,KACRtC,OAAQ,OAKO,EAwLrBiS,qBAAuB,SAACpH,GACtBA,EAAMC,iBACNzB,QAAQC,IAAI,wBACZ,EAAK7J,QAAQL,aAAa,wBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAK0C,MAAMxC,aAAa0C,IACrCxC,EAASJ,EACTkI,EAASwE,EAAMvI,OAAO+D,OAAOxB,MAC7B4I,EAAS5C,EAAMvI,OAAOmL,OAAO5I,MAC7B0I,EAAO1C,EAAMvI,OAAOiL,KAAK1I,MACzB6I,EAAO7C,EAAMvI,OAAOoL,KAAK7I,MACzB8I,EAAS9C,EAAMvI,OAAOqL,OAAO9I,MAC7B2I,EAAU3C,EAAMvI,OAAOkL,QAAQ3I,MAC/BqJ,EAAarD,EAAMvI,OAAO4L,WAAWrJ,MAEvC0E,EAAc,CAChBC,MAAM,0DAAD,OAEarL,EAFb,+BAGSI,EAHT,4DAKiB8H,EALjB,uCAMkBoH,EANlB,sCAOgBF,EAPhB,sCAQgBG,EARhB,wCASkBC,EATlB,yCAUmBH,EAVnB,4CAWsBU,EAXtB,4mBAePzE,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,6BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX/J,aAAc+L,EAAQ1J,KAAKwR,eAC3B9T,UAAU,6BAAD,OAA+BD,EAA/B,mBAAoDI,GAC7DmT,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQpB,aAAe+L,EAAQ1J,KAAKwR,eACzC,EAAK3F,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QArQX,EAwQrB+J,cAAgB,SAAC9S,GACfgK,QAAQC,IAAI,0BACZ,EAAK7J,QAAQL,aAAa,0BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAK0C,MAAMxC,aAAa0C,IACrCxC,EAASJ,EAEXoL,EAAc,CAChBC,MAAM,6DAAD,OAEarL,EAFb,+BAGSI,EAHT,4DAKiBc,EAAKgH,OALtB,uCAMkBhH,EAAKoO,OANvB,sCAOgBpO,EAAKkO,KAPrB,sCAQgBlO,EAAKqO,KARrB,wCASkBrO,EAAKsO,OATvB,yCAUmBtO,EAAKmO,QAVxB,4CAWsBnO,EAAK6O,WAX3B,yCAYmB7O,EAAKuO,QAZxB,2mBAgBPnE,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,gCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX/J,aAAc+L,EAAQ1J,KAAK0R,kBAC3BhU,UAAU,gCAAD,OAAkCD,EAAlC,mBAAuDI,KAElE,EAAKkB,QAAQpB,aAAe+L,EAAQ1J,KAAK0R,kBACzC,EAAK7F,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA1UX,EA6UrBiK,kBAAoB,SAAChT,GACnBgK,QAAQC,IAAI,iCACZ,EAAK7J,QAAQL,aAAa,iCAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAK0C,MAAMxC,aAAa0C,IACrCxC,EAASJ,EAEXoL,EAAc,CAChBC,MAAM,iEAAD,OAEarL,EAFb,+BAGSI,EAHT,4DAKiBc,EAAKgH,OALtB,uCAMkBhH,EAAKoO,OANvB,sCAOgBpO,EAAKkO,KAPrB,sCAQgBlO,EAAKqO,KARrB,wCASkBrO,EAAKsO,OATvB,yCAUmBtO,EAAKmO,QAVxB,4CAWsBnO,EAAK6O,WAX3B,4mBAePzE,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,qCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX/J,aAAc+L,EAAQ1J,KAAK4R,sBAC3BlU,UAAU,oCAAD,OAAsCD,EAAtC,mBAA2DI,KAEtE,EAAKkB,QAAQpB,aAAe+L,EAAQ1J,KAAK4R,sBACzC,EAAK/F,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA9YX,EAiZrBmK,wBAA0B,SAAC1H,GACzBA,EAAMC,iBACNzB,QAAQC,IAAI,2BACZ,EAAK7J,QAAQL,aAAa,oBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAK0C,MAAMxC,aAAa0C,IACrCxC,EAASJ,EACTqU,EAAiB3H,EAAMvI,OAAOpB,KAAK2D,MACnC4N,EAAmB5H,EAAMvI,OAAOtC,OAAO6E,MACvC6N,EAAwB7H,EAAMvI,OAAOT,YAAYgD,MAEnD0E,EAAc,CAChBC,MAAM,6DAAD,OAEarL,EAFb,+BAGSI,EAHT,8DAKmBiU,EALnB,2CAMqBC,EANrB,gDAO0BC,EAP1B,0mBAWPjJ,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,gCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX/J,aAAc+L,EAAQ1J,KAAKiS,kBAC3BvU,UAAU,gCAAD,OAAkCD,EAAlC,mBAAuDI,GAChEmT,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKgO,iBAAiB,CACpBxE,WAAYhE,EAAQ1J,KAAKiS,kBAAkBvE,WAC3CM,MAAOtE,EAAQ1J,KAAKiS,kBAAkBjE,MACtCzI,aAAcmE,EAAQ1J,KAAKiS,kBAAkB1M,eAE/C,EAAKxG,QAAQpB,aAAe+L,EAAQ1J,KAAKiS,kBACzC,EAAKpG,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA3dX,EA8drByK,iBAAmB,SAACxT,GAClBgK,QAAQC,IAAI,6BACZ,EAAK7J,QAAQL,aAAa,6BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAK0C,MAAMxC,aAAa0C,IACrCxC,EAASJ,EAEXoL,EAAc,CAChBC,MAAM,oEAAD,OAEerL,EAFf,iCAGWI,EAHX,kEAKqBc,EAAK6B,KAL1B,6CAMuB7B,EAAKW,OAN5B,kDAO4BX,EAAKwC,YAPjC,omBAUP4H,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,mCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX/J,aAAc+L,EAAQ1J,KAAKoS,qBAC3B1U,UAAU,mCAAD,OAAqCD,EAArC,mBAA0DI,KAErE,EAAKqU,iBAAiB,CACpBxE,WAAYhE,EAAQ1J,KAAKoS,qBAAqB1E,WAC9CM,MAAOtE,EAAQ1J,KAAKoS,qBAAqBpE,MACzCzI,aAAcmE,EAAQ1J,KAAKoS,qBAAqB7M,eAElD,EAAKxG,QAAQpB,aAAe+L,EAAQ1J,KAAKoS,qBACzC,EAAKvG,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA/hBX,EAkiBrB2K,mBAAqB,SAAClI,GACpBA,EAAMC,iBACNzB,QAAQC,IAAI,sBACZ,EAAK7J,QAAQL,aAAa,eAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAK0C,MAAMxC,aAAa0C,IACrCxC,EAASJ,EACT4D,EAAY8I,EAAMvI,OAAOP,UAAU8C,MACnC7C,EAAU6I,EAAMvI,OAAON,QAAQ6C,MAC/B5E,EAAO4K,EAAMvI,OAAOrC,KAAK4E,MACzBhD,EAAcgJ,EAAMvI,OAAOT,YAAYgD,MAEzC0E,EAAc,CAChBC,MAAM,wDAAD,OAEarL,EAFb,+BAGSI,EAHT,yDAKc0B,EALd,yCAMmB8B,EANnB,uCAOiBC,EAPjB,2CAQqBH,EARrB,kmBAWP4H,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,2BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX/J,aAAc+L,EAAQ1J,KAAKsS,aAC3B5U,UAAU,2BAAD,OAA6BD,EAA7B,mBAAkDI,GAC3DmT,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKgO,iBAAiB,CACpBxE,WAAYhE,EAAQ1J,KAAKsS,aAAa5E,WACtCM,MAAOtE,EAAQ1J,KAAKsS,aAAatE,MACjCzI,aAAcmE,EAAQ1J,KAAKsS,aAAa/M,eAE1C,EAAKxG,QAAQpB,aAAe+L,EAAQ1J,KAAKsS,aACzC,EAAKzG,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA7mBX,EAgnBrB6K,YAAc,SAAC5T,GACbgK,QAAQC,IAAI,wBACZ,EAAK7J,QAAQL,aAAa,wBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAK0C,MAAMxC,aAAa0C,IACrCxC,EAASJ,EAEXoL,EAAc,CAChBC,MAAM,+DAAD,OAEerL,EAFf,iCAGWI,EAHX,6DAKgBc,EAAKY,KALrB,2CAMqBZ,EAAK0C,UAN1B,yCAOmB1C,EAAK2C,QAPxB,6CAQuB3C,EAAKwC,YAR5B,gnBAYP4H,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,8BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX/J,aAAc+L,EAAQ1J,KAAKwS,gBAC3B9U,UAAU,8BAAD,OAAgCD,EAAhC,mBAAqDI,KAEhE,EAAKqU,iBAAiB,CACpBxE,WAAYhE,EAAQ1J,KAAKsS,aAAa5E,WACtCM,MAAOtE,EAAQ1J,KAAKsS,aAAatE,MACjCzI,aAAcmE,EAAQ1J,KAAKyS,aAAalN,eAE1C,EAAKxG,QAAQpB,aAAe+L,EAAQ1J,KAAKwS,gBACzC,EAAK3G,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAnrBX,EAsrBrBgL,mBAAqB,SAACvI,GACpBA,EAAMC,iBACNzB,QAAQC,IAAI,sBACZ,EAAK7J,QAAQL,aAAa,eAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAKIiL,EACAC,EACAC,EAPErV,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAK0C,MAAMxC,aAAa0C,IACrCxC,EAASJ,EAEE,EAAK0C,MAAMxC,aAAaoF,SAKzC,GAAqC,KAAjCoH,EAAMvI,OAAOkR,UAAU3O,MAGrB,OAFJ,EAAKpF,QAAQL,aAAa,0CACtB,EAAK4D,SAAS,CAACoF,WAAW,IAIhC,GAAsC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,SAASvV,EAAW,UACrCkL,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCL,EAHgB,6CAA6CG,EAAS,IAAID,EAAS,IAAIE,EAIvFN,EAHgBI,EAAS,IAAIE,EAI7BL,EAAYK,EAEZ,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,6BAC1BiK,QAAQC,IAAI,2BACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,UAGZE,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,QACRtC,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,QACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,QACRtC,OAAQ,eAMpB,IAAIuJ,EAAc,CAChBC,MAAM,wDAAD,OAEarL,EAFb,+BAGSI,EAHT,yDAKc8U,EALd,oCAMcC,EANd,oCAOcC,EAPd,4mBAWP9J,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,2BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX/J,aAAc+L,EAAQ1J,KAAK+T,aAC3BrW,UAAU,2BAAD,OAA6BD,EAA7B,mBAAkDI,GAC3DmT,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQpB,aAAe+L,EAAQ1J,KAAK+T,aACzC,EAAKlI,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA30BX,EA80BrBsM,YAAc,SAACrV,GACbgK,QAAQC,IAAI,wBACZ,EAAK7J,QAAQL,aAAa,wBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAK0C,MAAMxC,aAAa0C,IACrCxC,EAASJ,EAOXoL,GANa,EAAK1I,MAAMxC,aAAaoF,SAGxBpE,EAAK6E,KAGJ,CAChBsF,MAAM,+DAAD,OAEerL,EAFf,iCAGWI,EAHX,6DAKgBc,EAAK6E,KALrB,sCAMgB7E,EAAKY,KANrB,sCAOgBZ,EAAK4P,KAPrB,inBAWPxF,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,8BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX/J,aAAc+L,EAAQ1J,KAAKiU,gBAC3BvW,UAAU,8BAAD,OAAgCD,EAAhC,mBAAqDI,KAEhE,EAAKkB,QAAQpB,aAAe+L,EAAQ1J,KAAKiU,gBACzC,EAAKpI,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAGpD,IAAMwV,EAAW,SAASvV,EAAW,UAC/ByW,EAAWvV,EAAK6E,KAChB2P,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,0BAC1BiK,QAAQC,IAAI,0BACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,UAGZE,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,QACRtC,OAAQ,gBAIZqU,EACCQ,WAAWD,EAAUf,GACrB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,EAASvK,SACnC,EAAKvH,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,UAKdiI,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAj8BX,EAq8BrB2M,kBAAoB,SAAClK,GACnBA,EAAMC,iBACNzB,QAAQC,IAAI,qBACZ,EAAK7J,QAAQL,aAAa,cAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAKI4M,EACAC,EACAC,EAPEhX,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAK0C,MAAMxC,aAAa0C,IACrCxC,EAASJ,EAEE,EAAK0C,MAAMxC,aAAaoF,SAKzC,GAAqC,KAAjCoH,EAAMvI,OAAOkR,UAAU3O,MAGrB,OAFJ,EAAKpF,QAAQL,aAAa,0CACtB,EAAK4D,SAAS,CAACoF,WAAW,IAIhC,GAAsC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,SAASvV,EAAW,SACrCkL,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCsB,EAHgB,6CAA6CxB,EAAS,IAAID,EAAS,IAAIE,EAIvFqB,EAHgBvB,EAAS,IAAIE,EAI7BsB,EAAYtB,EAEZ,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,4BAC1BiK,QAAQC,IAAI,0BACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,SAGZE,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,eAMpB,IAAIuJ,EAAc,CAChBC,MAAM,uDAAD,OAEarL,EAFb,+BAGSI,EAHT,wDAKayW,EALb,mCAMaC,EANb,mCAOaC,EAPb,4mBAWPzL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,0BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX/J,aAAc+L,EAAQ1J,KAAKyU,YAC3B/W,UAAU,0BAAD,OAA4BD,EAA5B,mBAAiDI,GAC1DmT,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQpB,aAAe+L,EAAQ1J,KAAKyU,YACzC,EAAK5I,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA1lCX,EA6lCrByM,WAAa,SAACxV,GACZgK,QAAQC,IAAI,uBACZ,EAAK7J,QAAQL,aAAa,uBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAK0C,MAAMxC,aAAa0C,IACrCxC,EAASJ,EAIXoL,GAHa,EAAK1I,MAAMxC,aAAaoF,SACxBpE,EAAK6E,KAEJ,CAChBsF,MAAM,8DAAD,OAEerL,EAFf,iCAGWI,EAHX,4DAKec,EAAK6E,KALpB,qCAMe7E,EAAKY,KANpB,qCAOeZ,EAAK4P,KAPpB,inBAWPxF,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,6BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX/J,aAAc+L,EAAQ1J,KAAK0U,eAC3BhX,UAAU,6BAAD,OAA+BD,EAA/B,mBAAoDI,KAE/D,EAAKkB,QAAQpB,aAAe+L,EAAQ1J,KAAK0U,eACzC,EAAK7I,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAEpD,IAAMwV,EAAW,SAASvV,EAAW,SAC/ByW,EAAWvV,EAAK6E,KAChB2P,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,yBAC1BiK,QAAQC,IAAI,yBACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,SAGZE,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,gBAIZqU,EACCQ,WAAWD,EAAUf,GACrB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,EAASvK,SACnC,EAAKvH,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,UAMdiI,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA7sCX,EAgtCrBiN,kBAAoB,SAACxK,GACnBA,EAAMC,iBACNzB,QAAQC,IAAI,qBACZ,EAAK7J,QAAQL,aAAa,cAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAK0C,MAAMxC,aAAa0C,IACrCxC,EAASJ,EACT0R,EAAOhF,EAAMvI,OAAOuN,KAAKhL,MAE3B0E,EAAc,CAChBC,MAAM,wDAAD,OAEarL,EAFb,+BAGSI,EAHT,qDAKUsR,EALV,kmBAQPpG,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,2BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX/J,aAAc+L,EAAQ1J,KAAK4U,aAC3BlX,UAAU,2BAAD,OAA6BD,EAA7B,mBAAkDI,GAC3DmT,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQpB,aAAe+L,EAAQ1J,KAAK4U,aACzC,EAAK/I,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAhxCX,EAmxCrBmN,WAAa,SAAClW,GACZgK,QAAQC,IAAI,uBACZ,EAAK7J,QAAQL,aAAa,uBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAK0C,MAAMxC,aAAa0C,IACrCxC,EAASJ,EACXoL,EAAc,CAChBC,MAAM,8DAAD,OAEerL,EAFf,iCAGWI,EAHX,yDAKYc,EALZ,gnBASPoK,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,6BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX/J,aAAc+L,EAAQ1J,KAAK8U,eAC3BpX,UAAU,6BAAD,OAA+BD,EAA/B,mBAAoDI,KAE/D,EAAKkB,QAAQpB,aAAe+L,EAAQ1J,KAAK8U,eACzC,EAAKjJ,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA70CX,EAi1CrBqN,4BAA8B,SAAC5K,GAC7BA,EAAMC,iBACNzB,QAAQC,IAAI,+BACZ,EAAK7J,QAAQL,aAAa,+BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAK0C,MAAMxC,aAAa0C,IACrCxC,EAASJ,EACTyG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B2E,EAAQqB,EAAMvI,OAAOkH,MAAM3E,MAE7B0E,EAAc,CAChBC,MAAM,iEAAD,OAEarL,EAFb,+BAGSI,EAHT,8BAIQqG,EAJR,8BAKQ4E,EALR,ymBASPC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,8BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX/J,aAAc+L,EAAQ1J,KAAKgV,sBAC3BtX,UAAU,oCAAD,OAAsCD,EAAtC,mBAA2DI,GACpEoT,kBAAmB,CACjB9Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQpB,aAAe+L,EAAQ1J,KAAKgV,sBACzC,EAAKnJ,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAn5CX,EAu5CrBuN,uBAAyB,SAACtW,GACxB,EAAK2D,SAAS,CACZ2O,kBAAmB,CACjB9Q,OAAO,EACP+D,MAAOvF,MA35CQ,EA+5CrBuW,wBAA0B,WACxB,EAAK5S,SAAS,CACZ2O,kBAAmB,CACjB9Q,MAAO,KACP+D,MAAO,SAn6CQ,EAu6CrBiR,cAAgB,WACa,SAAvB,EAAKhV,MAAM2Q,QACb,EAAKxO,SAAS,CAACwO,QAAS,WAExB,EAAKxO,SAAS,CACZwO,QAAS,UA56CM,EAs7CrBsE,WAAa,SAACzW,GACZ,EAAK2D,SAAS,CAAC8S,WAAYzW,KAv7CR,EAy7CrBuL,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,IAAIlG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B1B,EAAM0H,EAAMvI,OAAOa,IAAI0B,MACvBA,EAAQgG,EAAMvI,OAAOuC,MAAMA,MACjB,SAAVA,IACFA,GAAQ,GAEI,UAAVA,IACFA,GAAQ,GAEV,EAAK7B,SAAS,CACZwB,OAAQ,CACNI,MAAOA,EACPzB,IAAKA,EACL0B,MAAOA,MAx8CQ,EA68CrBkR,SAAW,SAAC1W,GACV,EAAK2D,SAAS,CACZ0O,OAAQ,CACN7Q,OAAO,EACP+D,MAAOvF,MAj9CQ,EAq9CrB2W,UAAY,WACV,EAAKhT,SAAS,CACZ0O,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,SAz9CQ,EA89CrBgO,iBAAmB,SAACvT,GAClBgK,QAAQC,IAAI,4CACZ,IAAIsI,EAAqBvS,EAAK+O,WAAW/I,KAAI,SAAAH,GAAC,MAAK,CAC/C3D,MAAO2D,EAAElF,OACTkB,KAAMF,IAAOC,KAAKiE,EAAEhE,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cAC5D1D,MAAO,CACLuD,KAAMgE,EAAEhE,KACRlB,OAAQkF,EAAElF,OACV6B,YAAaqD,EAAErD,YACf+C,MAAO,kBAGTiN,EAAgBxS,EAAKqP,MAAMrJ,KAAI,SAAAH,GAAC,MAAK,CACrC3D,MAAO2D,EAAEjF,KACTiB,KAAMF,IAAOC,KAAKiE,EAAEnD,UAAUZ,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cACjE4U,IAAKjV,IAAOC,KAAKiE,EAAElD,QAAQb,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cAC9D1D,MAAO,CACLuD,KAAMgE,EAAEhE,KACRjB,KAAMiF,EAAEjF,KACR8B,UAAWmD,EAAEnD,UACbC,QAASkD,EAAElD,QACXH,YAAaqD,EAAErD,YACf+C,MAAO,aAGX,EAAK5B,SAAS,CACZ4O,mBAAoBA,EACpBC,cAAeA,IAEnB,IAAIC,EAAuBzS,EAAK4G,aAAaZ,KAAI,SAAAH,GAAC,MAAK,CACnD3D,MAAO2D,EAAE3D,MACTL,KAAMF,IAAOC,KAAKiE,EAAEhE,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cAC5D1D,MAAO,CACLoD,IAAKmE,EAAEnE,IACPG,KAAMgE,EAAEhE,KACRK,MAAO2D,EAAE3D,MACTtB,KAAMiF,EAAEjF,KACRuB,QAAS0D,EAAE1D,QACXF,KAAM4D,EAAE5D,KACRG,SAAUyD,EAAEzD,SACZI,YAAaqD,EAAErD,YACfH,UAAWwD,EAAExD,UACbkD,MAAO,oBAGX,EAAK5B,SAAS,CACZ4O,mBAAoBA,EACpBC,cAAeA,EACfC,qBAAsBA,KA9gDP,EAkhDrBoE,kBAAoB,SAAC7W,GAEnB,IACIqB,EADAyV,EAAQ9W,EAAKwL,MAAMuL,cAAczY,MAEjB,eAAhBwY,EAAMvR,QACRlE,EAAO,CACLQ,KAAMiV,EAAMjV,KACZlB,OAAQmW,EAAMnW,OACd6B,YAAasU,EAAMtU,aAErB,EAAKmB,SAAS,CACZR,SAAS,EACTC,cAAe,CAACxC,KAAM,qBAAsBS,KAAMA,MAGlC,UAAhByV,EAAMvR,QACRlE,EAAO,CACLT,KAAMkW,EAAMlW,KACZ8B,UAAWoU,EAAMpU,UACjBC,QAASmU,EAAMnU,QACfH,YAAasU,EAAMtU,aAErB,EAAKmB,SAAS,CACZR,SAAS,EACTC,cAAe,CAACxC,KAAM,gBAAiBS,KAAMA,MAG7B,iBAAhByV,EAAMvR,QACRlE,EAAO,CACLK,IAAKoV,EAAMpV,IACXG,KAAMiV,EAAMjV,KACZK,MAAO4U,EAAM5U,MACbtB,KAAMkW,EAAMlW,KACZuB,QAAS2U,EAAM3U,QACfF,KAAM6U,EAAM7U,KACZG,SAAU0U,EAAM1U,SAChBI,YAAasU,EAAMtU,YACnBH,UAAWyU,EAAMzU,WAEnB,EAAKsB,SAAS,CACZR,SAAS,EACTC,cAAe,CAACxC,KAAM,sBAAuBS,KAAMA,EAAMC,QAAQ,OA3jDlD,EAgkDrBZ,cAAgB,WACd,EAAKiD,SAAS,CACZR,SAAS,KAhkDT,EAAK6T,OAASC,IAAG,yBAFA,E,gEAOnB,GADAjN,QAAQC,IAAI,qCACRuD,eAAeC,QAAQ,WAAY,CACrC,IAAMzE,EAAYuB,KAAKmD,MAAMF,eAAeC,QAAQ,YACpDnK,KAAK4T,YAAYlO,GACjB1F,KAAK6T,cAAcnO,M,oFAURhJ,GAAO,IAAD,OACjBgK,QAAQC,IAAI,6BACZ3G,KAAKlD,QAAQL,aAAa,6BAC1B,IAAMlB,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAClBoL,EAAc,CACdC,MAAM,kEAAD,OAEarL,EAFb,oBAKXsL,MAAM,iEAAkE,CACtEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG5B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,GAAIA,EAAQE,OACV,EAAK7K,QAAQL,aAAagL,EAAQE,OAAO,GAAGC,aACvC,CACL,IAAIkM,EAAmB7M,KAAKmD,MAAM3C,EAAQ1J,KAAK8V,eAC/CnN,QAAQC,IAAI,sCACZ,EAAK7J,QAAQL,aAAa,sCAC1B,EAAK4D,SAAS,CACZ+O,WAAY0E,QAMjBhM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,Q,kCAGrBrL,GAAO,IAAD,OACjBgK,QAAQC,IAAI,sCACZ3G,KAAKlD,QAAQL,aAAa,sCAC1BuD,KAAKK,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAClBI,EAASJ,EAEXoL,EAAc,CAChBC,MAAM,oDAAD,OAEarL,EAFb,+BAGSI,EAHT,umBAOPkL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,mCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX/J,aAAc+L,EAAQ1J,KAAKgW,YAC3BtY,UAAU,0BAAD,OAA4BD,EAA5B,mBAAiDI,KAE5D,EAAKkB,QAAQpB,aAAe+L,EAAQ1J,KAAKgW,YAEH,UAAlCtM,EAAQ1J,KAAKgW,YAAYpY,MAC3B,EAAK0E,SAAS,CACZgB,WAAW,IAGf,EAAK4O,iBAAiB,CACpBxE,WAAYhE,EAAQ1J,KAAKgW,YAAYtI,WACrCM,MAAOtE,EAAQ1J,KAAKgW,YAAYhI,MAChCzI,aAAcmE,EAAQ1J,KAAKgW,YAAYzQ,eAEzC,EAAKsG,gBAAgBlN,GACrB,EAAK1B,MAAMgZ,uBAAX,UAAqCxY,EAArC,0BAGDsM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,S,sCAGhB/I,GAAO,IAAD,OACpBgK,QAAQC,IAAI,yBACZ,IAAMnL,EAAakB,EAAKlB,WAClBD,EAAQmB,EAAKnB,MACbK,EAASJ,EACTyY,EAAUjU,KAAK9B,MAAMzC,UACrByY,EAAe7V,MAASK,OAAO,cACjCkI,EAAc,CAChBC,MAAM,2DAAD,OAEarL,EAFb,qBAEoCI,EAFpC,4DAIiBsY,EAJjB,0CAKoBD,EALpB,qbASPnN,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEAA,EAAQE,QACV,EAAK7K,QAAQL,aAAagL,EAAQE,OAAO,GAAGC,SAG1CH,EAAQ1J,KAAKoW,gBAAgBtM,OAC/B,EAAK/K,QAAQL,aAAagL,EAAQ1J,KAAKoW,gBAAgBtM,UAG1DC,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,Q,+BAq5ChB,OACE,kBAAC,IAAMhL,SAAP,MAEwB,IAAvBiD,KAAK9B,MAAM2B,SACV,kBAAC,EAAD,CACExC,OAAQ2C,KAAK9B,MAAM4B,cACnB1C,cAAe4C,KAAK5C,gBAIxB,kBAACI,EAAA,EAAD,CAAWtC,UAAU,wBACnB,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,mCACb,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,2BACpB,wBAAIA,UAAU,kBAAd,YAEF,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,2BACnB8E,KAAK9B,MAAMuH,UACV,kBAACnG,EAAA,EAAD,CAAOC,IAAKC,IAAYtE,UAAU,aAAauE,OAAK,IAEpD,kCAKN,kBAACtC,EAAA,EAAD,CAAKjC,UAAU,mCACb,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,4BAGtB,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,GAAIpP,UAAU,4BACnB8E,KAAK9B,MAAMxC,cACX,qCAIN,kBAAC0Y,EAAA,EAAI5W,UAAL,CAAe8Q,GAAG,oBAAoB+F,iBAAiB,KACrD,kBAAClX,EAAA,EAAD,CAAKjC,UAAU,oCACb,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,uCAEE,SAAvB8E,KAAK9B,MAAM2Q,SACV,kBAACyF,EAAA,EAAD,CAAKlZ,QAAQ,QAAQF,UAAU,wBAC7B,kBAACoZ,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,UAA3D,UAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,UAA3D,UAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,YAA3D,cAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,eAA3D,eAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,UAA3D,UAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,UAA3D,WAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,SAA3D,UAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,gBAA3D,iBAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,SAA3D,WAIkB,WAAvBA,KAAK9B,MAAM2Q,SACV,kBAAC5O,EAAA,EAAD,KAC6B,YAA1BD,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,eAA1BjI,KAAK9B,MAAMiV,YACV,kBAACsB,GAAD,CACE1P,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,UAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,UAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,SAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,gBAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,SAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,qBAQvBjI,KAAK9B,MAAMxC,cACV,kBAACuE,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,wCAEoB,IAAvC8E,KAAK9B,MAAM8Q,kBAAkB9Q,OAC5B,kBAAC,GAAD,CACE+D,MAAOjC,KAAK9B,MAAM8Q,kBAAkB/M,MACpCuC,UAAWxE,KAAK8S,4BAChB/N,SAAU/E,KAAKiT,0BAInB,kBAACmB,EAAA,EAAIM,QAAL,CAAaxZ,UAAU,cACrB,kBAACkZ,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,uBAAGtZ,UAAU,oBAAb,UACA,kBAACuC,EAAA,EAAD,CAAWvC,UAAU,yBACnB,kBAACuC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,UACA,uBAAGA,UAAU,sBAAsB8E,KAAK9B,MAAMxC,aAAakD,OAC3D,uBAAG1D,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsB8E,KAAK9B,MAAMxC,aAAa6F,MAC3D,kBAAChE,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,UAA5F,SAEF,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,aACA,uBAAGA,UAAU,sBAAsB8E,KAAK9B,MAAMxC,aAAaoF,UAC3D,kBAACvD,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,aAA5F,QACA,uBAAG9E,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsB8E,KAAK9B,MAAMxC,aAAaC,OAG7D,kBAAC8B,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,QACA,uBAAGA,UAAU,sBAAsBmD,IAAOC,KAAK0B,KAAK9B,MAAMxC,aAAa8F,IAAIhD,OAAO,EAAE,IAAIC,IAAI,EAAE,QAAQC,OAAO,eAC7G,kBAACnB,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,QAA5F,QACA,uBAAG9E,UAAU,iBAAb,QACA,uBAAGA,UAAU,sBAAsB8E,KAAK9B,MAAMxC,aAAa+F,KAC3D,uBAAGvG,UAAU,iBAAb,WACA,uBAAGA,UAAU,sBAAsB8E,KAAK9B,MAAMxC,aAAagG,QAC3D,kBAACnE,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,WAA5F,SAEF,kBAACvC,EAAA,EAAUC,KAAX,KACA,uBAAGxC,UAAU,iBAAb,UACA,uBAAGA,UAAU,sBAAsB8E,KAAK9B,MAAMxC,aAAakZ,QAAQC,OACnE,kBAACtX,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,kBAA5F,SAEA,kBAACvC,EAAA,EAAUC,KAAX,KACA,uBAAGxC,UAAU,iBAAb,UACA,uBAAGA,UAAU,sBAAsB8E,KAAK9B,MAAMxC,aAAakZ,QAAQE,OACnE,kBAACvX,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,kBAA5F,QACA,uBAAG9E,UAAU,iBAAb,YACA,uBAAGA,UAAU,sBAAsB8E,KAAK9B,MAAMxC,aAAakZ,QAAQG,QACnE,kBAACxX,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,mBAA5F,WAIJ,kBAACoU,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,uBAAGtZ,UAAU,oBAAb,UACA,kBAACuC,EAAA,EAAD,CAAWvC,UAAU,yBACnB,kBAACuC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,WACA,uBAAGA,UAAU,sBAAsB8E,KAAK9B,MAAMxC,aAAasZ,qBAE7D,kBAACvX,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,oBACC8E,KAAK9B,MAAMxC,aAAauZ,gBACvB,uBAAG/Z,UAAU,sBAAsBmD,IAAOC,KAAK0B,KAAK9B,MAAMxC,aAAauZ,eAAezW,OAAO,EAAE,IAAIC,IAAI,EAAE,QAAQC,OAAO,eAGnG,UAAtBsB,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,mBAA5F,SAGJ,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,OACA,uBAAGA,UAAU,sBAAsB8E,KAAK9B,MAAMxC,aAAa0C,MAE7D,kBAACX,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,aACA,uBAAGA,UAAU,sBAAsB8E,KAAK9B,MAAMxC,aAAa8G,SAASU,aAEtE,kBAACzF,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,oBACA,uBAAGA,UAAU,sBAAsB8E,KAAK9B,MAAMxC,aAAawZ,gBAAgBhS,aAE7E,kBAACzF,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,aACA,uBAAGA,UAAU,sBAAsB8E,KAAK9B,MAAMxC,aAAayZ,aAAaC,SAASlS,YACjF,uBAAGhI,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsB8E,KAAK9B,MAAMxC,aAAayZ,aAAa7X,MACxE,uBAAGpC,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsB8E,KAAK9B,MAAMxC,aAAayZ,aAAaE,SAI9E,kBAACjB,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,cACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACA,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,YAApE,SAE2B,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,YAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKsP,qBAChBvK,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnBwJ,UAAWrL,KAAK9B,MAAMxC,aAAa2P,UACnCd,OAAQvK,KAAK9B,MAAMxC,aAAa0C,IAChCuD,SAAU3B,KAAKwP,cACfnO,UAAWrB,KAAK9B,MAAMmD,UACtB6J,YAAalL,KAAK0P,qBAGtB,kBAAC0E,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,eACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACA,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,eAApE,SAE2B,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,eAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAK4P,wBAChB7K,SAAU/E,KAAKqT,YAGrB,kBAACiC,EAAA,EAAD,CAAMjB,iBAAiB,IAAI/F,GAAG,4BAC5B,kBAAC8F,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,QACxB,kBAAC,GAAD,CACEiD,OAAQ7B,KAAK9B,MAAM2D,OACnB4J,WAAYzL,KAAK9B,MAAMxC,aAAa+P,WACpClB,OAAQvK,KAAK9B,MAAMxC,aAAa0C,IAChCiD,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKkQ,oBAGjB,kBAACkE,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,WAAW1D,UAAU,eAC3C,wCACA,kBAAC,IAAD,CACEqa,YAAY,eACZC,QAAS,CAACC,KACVC,OAAQ1V,KAAK9B,MAAM+Q,mBACnB0G,WAAY3V,KAAKuT,uBAMzB,kBAACa,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACA,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,UAApE,SAE2B,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,UAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKoQ,mBAChBrL,SAAU/E,KAAKqT,YAGrB,kBAACiC,EAAA,EAAD,CAAMjB,iBAAiB,IAAI/F,GAAG,4BAC5B,kBAAC8F,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,QACxB,kBAAC,GAAD,CACEiD,OAAQ7B,KAAK9B,MAAM2D,OACnBkK,MAAO/L,KAAK9B,MAAMxC,aAAaqQ,MAC/BxB,OAAQvK,KAAK9B,MAAMxC,aAAa0C,IAChCiD,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKsQ,eAGjB,kBAAC8D,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,WAAW1D,UAAU,eAC3C,wCACA,kBAAC,IAAD,CACEqa,YAAY,eACZC,QAAS,CAACC,KACVC,OAAQ1V,KAAK9B,MAAMgR,cACnByG,WAAY3V,KAAKuT,uBAKzB,kBAACa,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,WACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACA,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,UAApE,SAE2B,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,UAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKyQ,mBAChB1L,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnB4K,OAAQzM,KAAK9B,MAAMxC,aAAa+Q,OAChClC,OAAQvK,KAAK9B,MAAMxC,aAAa0C,IAAIwX,gBAAiB5V,KAAK4V,gBAC1DvU,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAK+R,eAGnB,kBAACqC,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACA,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,SAApE,SAE2B,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,SAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKoS,kBAChBrN,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnBiL,MAAO9M,KAAK9B,MAAMxC,aAAaoR,MAC/BvC,OAAQvK,KAAK9B,MAAMxC,aAAa0C,IAChCiD,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKkS,cAGnB,kBAACkC,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,iBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,WAEF,kBAACoC,EAAA,EAAD,CAAMjB,iBAAiB,IAAI/F,GAAG,4BAC5B,kBAAC8F,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,QACxB,kBAAC,GAAD,CACEiD,OAAQ7B,KAAK9B,MAAM2D,OACnByB,aAActD,KAAK9B,MAAMxC,aAAa4H,aACtCiH,OAAQvK,KAAK9B,MAAMxC,aAAa0C,OAGlC,kBAACgW,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,WAAW1D,UAAU,eAC3C,wCACA,kBAAC,IAAD,CACEqa,YAAY,eACZC,QAAS,CAACC,KACVC,OAAQ1V,KAAK9B,MAAMiR,qBACnBwG,WAAY3V,KAAKuT,uBAMzB,kBAACa,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACA,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,SAApE,SAE2B,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,SAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAK0S,kBAChB3N,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnBwL,MAAOrN,KAAK9B,MAAMxC,aAAa2R,MAC/B9C,OAAQvK,KAAK9B,MAAMxC,aAAa0C,IAChCiD,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAK4S,wB,GAr/DP1S,cAAtByO,GAsCGnE,YAAcC,EAk+DRkE,UCphEAkH,I,cAjCG,SAAC7a,GAEnB,OACA,yBAAKE,UAAU,mBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,qCACA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,YAC7B,kBAACL,EAAA,EAAKM,MAAN,iBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWwH,YAAY,qBAI9C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,YAC7B,kBAACL,EAAA,EAAKM,MAAN,iBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWwH,YAAY,eAI9C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,gBAA1D,SACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAASjC,EAAM8a,qBAAjD,UACA,kBAACvY,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,eAAe+B,QAASjC,EAAM+a,uBAA5E,kBACA,kBAACxY,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,gBAC1C,kBAAC,IAAD,CAAS8B,GAAG,WAAZ,gBCuBOgZ,I,OAjDQ,SAAChb,GAExB,OACA,yBAAKE,UAAU,uBACf,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,sCACA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYvJ,UAAU,cAAcyJ,UAAU,QAC5C,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,2CAIJ,kBAACJ,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,YAC7B,kBAACL,EAAA,EAAKM,MAAN,iBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,eAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,WAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,wBAI5C,kBAACR,EAAA,EAAKnH,IAAN,KACGnC,EAAMib,WACL,kBAAC1Y,EAAA,EAAD,CAAQnC,QAAQ,SAASF,UAAU,aAAa+B,QAASjC,EAAM+J,UAA/D,UAGD/J,EAAMkb,YACL,kBAAC3Y,EAAA,EAAD,CAAQnC,QAAQ,UAAUF,UAAU,aAAaoC,KAAK,UAAtD,eCPW6Y,I,cA7BY,SAACnb,GAE5B,OACA,yBAAKE,UAAU,uBACf,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,+CACA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,YAC7B,kBAACL,EAAA,EAAKM,MAAN,iBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,eAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,QAAQwH,YAAY,YAI3C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,SAASF,UAAU,aAAa+B,QAASjC,EAAM+J,UAA/D,UACA,kBAACxH,EAAA,EAAD,CAAQnC,QAAQ,UAAUF,UAAU,aAAaoC,KAAK,UAAtD,6BCZE8Y,G,4MACJlY,MAAQ,CACNmY,WAAW,EACX1a,KAAM,KACNQ,UAAW,KACX0D,SAAS,EACTC,cAAe,OACfwW,UAAW,SACXC,eAAe,EACf1a,KAAM,GACNJ,UAAW,KACX+a,yBAAyB,EACzBC,SAAU,S,EAQZC,gBAAkB,SAACxO,GACjBA,EAAMC,iBACN,EAAKrL,QAAQL,aAAa,yBAC1BiK,QAAQC,IAAI,yBAEZ,IAAM7F,EAAWoH,EAAMvI,OAAOmB,SAASoB,MACjCyU,EAAWzO,EAAMvI,OAAOgX,SAASzU,MAEvC,GAA+B,IAA3BpB,EAAS8V,OAAOC,QAA2C,IAA3BF,EAASC,OAAOC,OAApD,CAIA,IAAIjQ,EAAc,CACdC,MAAM,gCAAD,OACgB/F,EADhB,uBACuC6V,EADvC,iEAKT7P,MAAM,iEAAkE,CACtEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,sBAGnBE,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,uBACpBhB,QAAQC,IAAI,uBAiBZ,GAdIc,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGnBJ,EAAQ1J,KAAKzB,MAAMuL,QAErBH,EADQD,EAAQ1J,KAAKzB,MAAMuL,OAG7B,EAAK/K,QAAQL,aAAaiL,GACO,KAA7BD,EAAQ1J,KAAKzB,MAAMf,MAAc,CAOnC,IAAMub,EAAgB,CACpBvb,MAAOkM,EAAQ1J,KAAKzB,MAAMf,MAC1BC,WAAYiM,EAAQ1J,KAAKzB,MAAMd,WAC/BG,KAAM8L,EAAQ1J,KAAKzB,MAAMX,KACzBY,gBAAiBkL,EAAQ1J,KAAKzB,MAAMC,iBAEtC,EAAKO,QAAQL,aAAaiL,GAC3BwC,eAAe6M,QAAQ,UAAW9P,KAAKC,UAAU4P,IACjDpQ,QAAQC,IAAI,6BACZ,EAAKtG,SAAS,CAAE5E,UAAU,SAAD,OAAWqb,EAActb,cAClD,EAAKoO,kBAEL,EAAK9M,QAAQR,MACXmL,EAAQ1J,KAAKzB,MAAMf,MACnBkM,EAAQ1J,KAAKzB,MAAMd,WACnBiM,EAAQ1J,KAAKzB,MAAMX,KACnB8L,EAAQ1J,KAAKzB,MAAMC,qBAIvBuL,OAAM,SAAAC,GACL,EAAKjL,QAAQL,aAAasL,WAtE1B,EAAKjL,QAAQL,aAAa,0B,EAyH9Bua,WAAa,SAAC9O,GACZA,EAAMC,iBACNzB,QAAQC,IAAI,qBACZ,IAAMkO,EAAQ3M,EAAMvI,OAAOkV,MAAM3S,MAC3B5E,EAAO4K,EAAMvI,OAAOrC,KAAK4E,MACzBmT,EAAOnN,EAAMvI,OAAO0V,KAAKnT,MACzBpB,EAAWoH,EAAMvI,OAAOmB,SAASoB,MAEjC0E,EAAc,CAClBC,MAAM,iFAAD,OAGa/F,EAHb,yCAIiB+T,EAJjB,6CAKqBvX,EALrB,6CAMqB+X,EANrB,wcAYPvO,MAAM,iEAAkE,CACtEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,sBAEjBE,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAGAD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAIvB,EAAK/K,QAAQL,aAAaiL,GAE1B,EAAK5K,QAAQL,aAAa,8CAE3BqL,OAAM,SAAAC,GACL,EAAKjL,QAAQL,aAAasL,O,EAIhCkP,mBAAqB,WACS,WAAxB,EAAK/Y,MAAMuY,SACb,EAAKpW,SAAS,CACZoW,SAAU,UAGZ,EAAKpW,SAAS,CACZoW,SAAU,Y,EAKhBS,qBAAuB,WACO,mBAAxB,EAAKhZ,MAAMuY,SACb,EAAKpW,SAAS,CACZoW,SAAU,UAGZ,EAAKpW,SAAS,CACZoW,SAAU,oB,EAMhBU,qBAAuB,SAACjP,GACtBA,EAAMC,iBACNzB,QAAQC,IAAI,mCACZ,EAAKtG,SAAS,CAACoF,WAAW,IAE1B,IAAM3E,EAAWoH,EAAMvI,OAAOmB,SAASoB,MACjC2S,EAAQ3M,EAAMvI,OAAOkV,MAAM3S,MAC3B0E,EAAc,CAClBC,MAAM,8FAAD,OAGc/F,EAHd,0CAIkB+T,EAJlB,0GASP/N,MAAM,iEAAkE,CACtEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,sBAEjBE,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GACJf,QAAQC,IAAI,gBAAgBc,EAAQ1J,KAAKoZ,sBACrC1P,EAAQE,OACV,EAAK7K,QAAQL,aAAagL,EAAQE,OAAO,GAAGC,UAE5C,EAAK9K,QAAQL,aAAa,qCAC1B,EAAK4D,SAAS,CAACoF,WAAW,EAAO+Q,yBAAyB,IAC1D,EAAKU,2BAIRpP,OAAM,SAAAC,GACL,EAAK1H,SAAS,CAAClE,UAAW4L,Q,kEAhQ9BrB,QAAQC,IAAI,mC,wCAsFK,IAAD,OAChBD,QAAQC,IAAI,yBACZ,IAAMjB,EAAYuB,KAAKmD,MAAMF,eAAeC,QAAQ,YAC9C3O,EAAakK,EAAUlK,WACvBD,EAAQmK,EAAUnK,MAClBK,EAASJ,EACTyY,EAAUjU,KAAK9B,MAAMzC,UACrByY,EAAe7V,MAASK,OAAO,cACjCkI,EAAc,CAChBC,MAAM,+DAAD,OAEarL,EAFb,qBAEoCI,EAFpC,gEAIiBsY,EAJjB,4CAKoBD,EALpB,2bASPnN,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEAA,EAAQE,QACV,EAAK7K,QAAQL,aAAagL,EAAQE,OAAO,GAAGC,SAE1CH,EAAQ1J,KAAKoW,gBAAgBtM,QAC/B,EAAK/K,QAAQL,aAAagL,EAAQ1J,KAAKoW,gBAAgBtM,OACvDnB,QAAQC,IAAI,qBAAqBc,EAAQ1J,KAAKoW,gBAAgBtM,WAGjEC,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,Q,+BAoIhB,OACE,kBAACvK,EAAA,EAAD,CAAWtC,UAAU,sBAEG,IAAvB8E,KAAK9B,MAAM2B,SACV,kBAAC,EAAD,CACExC,OAAQ2C,KAAK9B,MAAM4B,gBAIE,UAAxBE,KAAK9B,MAAMuY,UACV,kBAACtZ,EAAA,EAAD,CAAKjC,UAAU,wBACb,kBAAC+E,EAAA,EAAD,CAAK/E,UAAU,wBACb,kBAAC,GAAD,CACEsJ,UAAWxE,KAAK0W,gBAChBX,sBAAuB/V,KAAKkX,qBAC5BpB,oBAAqB9V,KAAKiX,uBAMT,WAAxBjX,KAAK9B,MAAMuY,UACV,kBAACtZ,EAAA,EAAD,CAAKjC,UAAU,wBACb,kBAAC+E,EAAA,EAAD,CAAK/E,UAAU,wBACb,kBAACkc,GAAD,CACEnB,WAAS,EACTC,YAAU,EACVnR,SAAU/E,KAAKiX,mBACfzS,UAAWxE,KAAKgX,eAOC,mBAAxBhX,KAAK9B,MAAMuY,UACV,kBAACtZ,EAAA,EAAD,CAAKjC,UAAU,wBACb,kBAAC+E,EAAA,EAAD,CAAK/E,UAAU,wBACb,kBAAC,GAAD,CACE6J,SAAU/E,KAAKkX,qBACf1S,UAAWxE,KAAKmX,8B,GA9TNjX,aAAlBkW,GAcG5L,YAAcC,EA4TR2L,UCnMAiB,GAlJI,SAACrc,GAEpB,OACA,yBAAKE,UAAU,mBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,sCACA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,sBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,QAAQwH,YAAY,sBAGzC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,YAC7B,kBAACL,EAAA,EAAKM,MAAN,iBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWwH,YAAY,eAI9C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,yCACA,yCACA,yCACA,4CAIJ,kBAACJ,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,sCACA,uCACA,sCACA,wCAIJ,kBAACJ,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,UAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,YAC7B,kBAACL,EAAA,EAAKM,MAAN,iBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,eAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,YACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,gBAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,UAC7B,kBAACL,EAAA,EAAKM,MAAN,eACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,0CACA,wCACA,wDAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,kBAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,UAC7B,kBAACL,EAAA,EAAKM,MAAN,eACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,mBAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,iBAC7B,kBAACL,EAAA,EAAKM,MAAN,sBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,SAASwH,YAAY,MAG1C,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,iBAC7B,kBAACL,EAAA,EAAKM,MAAN,sBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,MAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,OAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,MAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,iBAC7B,kBAACL,EAAA,EAAKM,MAAN,sBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,wCACA,2CACA,iDACA,6CACA,4CACA,gDACA,6CACA,8CACA,2CACA,iDACA,4CACA,4CACA,8CACA,4CACA,gDAIJ,kBAACJ,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,kBAC7B,kBAACL,EAAA,EAAKM,MAAN,uBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,MAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,qBAC7B,kBAACL,EAAA,EAAKM,MAAN,0BACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,OAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,gBAA1D,WAEF,kBAACoJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,gBAC1C,kBAAC,IAAD,CAAS8B,GAAG,UAAZ,cCjIFsa,G,4MACJpZ,MAAQ,CACNmY,WAAW,EACX1a,KAAM,KACNQ,UAAW,KACX0D,SAAS,EACTC,cAAe,OACfwW,UAAW,SACXC,eAAe,EACf1a,KAAM,GACNJ,UAAW,KACX+a,yBAAyB,EACzBe,aAAc,KACdC,SAAS,G,EAUXC,iBAAmB,SAACvP,GAClBA,EAAMC,iBACN,EAAKrL,QAAQL,aAAa,0BAC1BiK,QAAQC,IAAI,0BAEZ,IAAMkO,EAAQ3M,EAAMvI,OAAOkV,MAAM3S,MAC3ByU,EAAWzO,EAAMvI,OAAOgX,SAASzU,MACjCvG,EAAOuM,EAAMvI,OAAOhE,KAAKuG,MACzBX,EAAO2G,EAAMvI,OAAO4B,KAAKW,MACzBtD,EAAQsJ,EAAMvI,OAAOf,MAAMsD,MAC3BpB,EAAWoH,EAAMvI,OAAOmB,SAASoB,MACjCV,EAAM0G,EAAMvI,OAAO6B,IAAIU,MACvBR,EAASwG,EAAMvI,OAAO+B,OAAOQ,MAC7B4S,EAAQ5M,EAAMvI,OAAOmV,MAAM5S,MAC3B6S,EAAS7M,EAAMvI,OAAOoV,OAAO7S,MAC7BwV,EAAgBxP,EAAMvI,OAAO+X,cAAcxV,MAC3CyV,EAAgBzP,EAAMvI,OAAOgY,cAAczV,MAC3C0V,EAAc1P,EAAMvI,OAAOiY,YAAY1V,MACvC2V,EAAc3P,EAAMvI,OAAOkY,YAAY3V,MACvC4V,EAAgB5P,EAAMvI,OAAOmY,cAAc5V,MAC3C6V,EAAiB7P,EAAMvI,OAAOoY,eAAe7V,MAC7C8V,EAAoB9P,EAAMvI,OAAOqY,kBAAkB9V,MAEzD,GAA4B,IAAxB2S,EAAM+B,OAAOC,QACc,IAA3BF,EAASC,OAAOC,QACO,IAAvBlb,EAAKib,OAAOC,QACW,IAAvBtV,EAAKqV,OAAOC,QACe,IAA3B/V,EAAS8V,OAAOC,QACM,IAAtBrV,EAAIoV,OAAOC,QACc,IAAzBnV,EAAOkV,OAAOC,QACU,IAAxB/B,EAAM8B,OAAOC,QACY,IAAzB9B,EAAO6B,OAAOC,QACkB,IAAhCa,EAAcd,OAAOC,QACW,IAAhCc,EAAcf,OAAOC,QACS,IAA9Be,EAAYhB,OAAOC,QACW,IAA9BgB,EAAYjB,OAAOC,QACa,IAAhCiB,EAAclB,OAAOC,QACY,IAAjCkB,EAAenB,OAAOC,QACc,IAApCmB,EAAkBpB,OAAOC,OAf7B,CAoBA,IAAIjQ,EAAc,CACdC,MAAM,6FAAD,OAGe8P,EAHf,sCAIY/X,EAJZ,qCAKW2C,EALX,qCAMW5F,EANX,yCAOemF,EAPf,oCAQUU,EARV,uCASaE,EATb,6CAUmBoT,EAVnB,8CAWoBC,EAXpB,6CAYmBF,EAZnB,6CAamB6C,EAbnB,6CAcoBC,EAdpB,4CAekBC,EAflB,4CAgBkBC,EAhBlB,8CAiBoBC,EAjBpB,+CAkBqBC,EAlBrB,kDAmBwBC,EAnBxB,sdAwBTlR,MAAM,iEAAkE,CACtEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,sBAGnBE,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,wBAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvBH,EAAgB,wBAAwBD,EAAQ1J,KAAKka,WAAW9C,aAAaE,KAC7E,EAAKvY,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CAACkX,aAAc,eAE9BzP,OAAM,SAAAC,GACL,EAAKjL,QAAQL,aAAasL,WA5D1B,EAAKjL,QAAQL,aAAa,0B,EAgE9Byb,iBAAmB,SAAChQ,GAClBA,EAAMC,iBACNzB,QAAQC,IAAI,6BACZ,EAAK7J,QAAQL,aAAa,6BAE1B,IAAM0b,EAAYjQ,EAAMvI,OAAOyY,WAAWlW,MAEtC0E,EAAc,CACdC,MAAM,oDAAD,OACoCsR,EADpC,oBAGTrR,MAAM,iEAAkE,CACtEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,sBAGnBE,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,wBAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAGX,YADAD,EAAQ1J,KAAKsa,kBAE1B,EAAKhY,SAAS,CAACmX,SAAS,IACxB,EAAK1a,QAAQL,aAAa,+BAE1B,EAAKK,QAAQL,aAAa,oDAI7BqL,OAAM,SAAAC,GACL,EAAKjL,QAAQL,aAAasL,O,kEA/J5BrB,QAAQC,IAAI,oC,+BAuKZ,OACE,kBAACnJ,EAAA,EAAD,CAAWtC,UAAU,sBACK,IAAvB8E,KAAK9B,MAAM2B,SACV,kBAAC,EAAD,CACExC,OAAQ2C,KAAK9B,MAAM4B,gBAGvB,kBAAC3C,EAAA,EAAD,CAAKjC,UAAU,wBACb,kBAAC+E,EAAA,EAAD,CAAK/E,UAAU,yBACS,IAAvB8E,KAAK9B,MAAMsZ,SACV,kBAAC,IAAMza,SAAP,KACA,kBAACuH,EAAA,EAAD,CAAMC,SAAUvE,KAAKkY,kBACnB,kBAAC5T,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,cAC7B,kBAACL,EAAA,EAAKM,MAAN,mBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,iBAI1C,kBAACR,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,aAMuB,YAA5B8E,KAAK9B,MAAMqZ,eACW,IAAvBvX,KAAK9B,MAAMsZ,SACT,kBAAC,GAAD,CACEhT,UAAWxE,KAAKyX,mBAGS,YAA5BzX,KAAK9B,MAAMqZ,cACV,kBAAC,IAAMxa,SAAP,KACE,iEACA,kBAACQ,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,gBAC1C,kBAAC,IAAD,CAAS8B,GAAG,UAAZ,kB,GA7NSkD,aAAnBoX,GAeG9M,YAAcC,EA0NR6M,UChNAgB,GAlCW,SAACtd,GAE3B,OACA,yBAAKE,UAAU,uBAEf,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,8CACA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,oBAC7B,kBAACL,EAAA,EAAKM,MAAN,yBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAO4E,MAAOlH,EAAMud,SAG3C,kBAACjU,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,YAC/B,kBAACL,EAAA,EAAKM,MAAN,iBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWwH,YAAY,eAI5C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,UAAUF,UAAU,aAAaoC,KAAK,UAAtD,SAGA,kBAACC,EAAA,EAAD,CAAQnC,QAAQ,SAASF,UAAU,aAAa+B,QAASjC,EAAM+J,UAC7D,kBAAC,IAAD,CAAS/H,GAAG,YAAZ,eChBAwb,G,4MACJta,MAAQ,CACNvC,KAAM,KACNQ,UAAW,KACX0D,SAAS,EACTC,cAAe,OACfwW,UAAW,SACXmC,oBAAqB,KACrB5c,KAAM,GACNJ,UAAW,KACXD,WAAY,KACZkd,SAAU,M,EAcZC,wBAA0B,SAACzQ,GACzBA,EAAMC,iBACN,EAAKrL,QAAQL,aAAa,0BAC1BiK,QAAQC,IAAI,0BAEZ,IAAMgQ,EAAWzO,EAAMvI,OAAOgX,SAASzU,MACjC0W,EAAmB,EAAK1a,MAAMwa,SAC9B9c,EAAS,EAAKsC,MAAM1C,WAC1B,GAA+B,IAA3Bmb,EAASC,OAAOC,QACmB,IAAnC+B,EAAiBhC,OAAOC,OAD5B,CAMA,IAAIjQ,EAAc,CACdC,MAAM,qEAAD,OAEWjL,EAFX,4EAIuBgd,EAJvB,yCAKejC,EALf,wcAST7P,MAAM,iEAAkE,CACtEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,sBAGnBE,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GACJf,QAAQC,IAAI,gBAAgBc,EAAQ1J,KAAK8a,mBACzC,IAAInR,EAAgB,gCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CAACoY,oBAAqB,eAErC3Q,OAAM,SAAAC,GACL,EAAKjL,QAAQL,aAAasL,WA5C1B,EAAKjL,QAAQL,aAAa,0B,kEApB5BiK,QAAQC,IAAI,oCACZD,QAAQC,MACR3G,KAAKK,SAAS,CACZ7E,WAAYwE,KAAKhF,MAAM8D,SAASb,SAASgT,MAAM,KAAK,GAAGA,MAAM,KAAK,GAClEyH,SAAU1Y,KAAKhF,MAAM8D,SAASb,SAASgT,MAAM,KAAK,O,+BAkEpD,OACE,kBAACzT,EAAA,EAAD,CAAWtC,UAAU,sBACK,IAAvB8E,KAAK9B,MAAM2B,SACV,kBAAC,EAAD,CACExC,OAAQ2C,KAAK9B,MAAM4B,gBAGvB,kBAAC3C,EAAA,EAAD,CAAKjC,UAAU,wBACb,kBAAC+E,EAAA,EAAD,CAAK/E,UAAU,wBACqB,YAAnC8E,KAAK9B,MAAMua,qBACV,kBAAC,GAAD,CACEjU,UAAWxE,KAAK2Y,wBAChBJ,KAAMvY,KAAK9B,MAAMwa,WAGe,YAAnC1Y,KAAK9B,MAAMua,qBACV,kBAAC,IAAM1b,SAAP,KACE,gEACA,kBAACQ,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,gBAC1C,kBAAC,IAAD,CAAS8B,GAAG,UAAZ,kB,GAzGgBkD,aAA1BsY,GAaGhO,YAAcC,EA0GR+N,UCxDAM,GA1EQ,SAAA9d,GAAU,IAErB6G,EAFoB,iBAEV7G,EAAM6G,QACtByD,EAAStK,EAAMc,MACfyJ,EAAa,GAEI,UAAjB1D,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC9DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAEzC,UAAjBM,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC9DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAEzC,UAAjBM,EAAOI,OAAoC,aAAfJ,EAAOrB,KAAuC,cAAjBqB,EAAOK,QAClEqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEtB,SAAWuB,EAAEvB,SAAY,GAAK,MAEjD,UAAjBe,EAAOI,OAAoC,aAAfJ,EAAOrB,KAAuC,eAAjBqB,EAAOK,QAClEqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEtB,SAAWuB,EAAEvB,SAAY,GAAK,MAEjD,UAAjBe,EAAOI,OAAoC,UAAfJ,EAAOrB,KAAoC,cAAjBqB,EAAOK,QAC/DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAE3C,UAAjBiD,EAAOI,OAAoC,UAAfJ,EAAOrB,KAAoC,eAAjBqB,EAAOK,QAC/DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAE3C,UAAjBiD,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC9DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzG,KAAO0G,EAAE1G,KAAQ,GAAK,MAEzC,UAAjBkG,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC9DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzG,KAAO0G,EAAE1G,KAAQ,GAAK,MAEzC,UAAjBkG,EAAOI,OAAoC,QAAfJ,EAAOrB,KAAkC,cAAjBqB,EAAOK,QAC7DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEZ,IAAMa,EAAEb,IAAO,GAAK,MAEvC,UAAjBK,EAAOI,OAAoC,QAAfJ,EAAOrB,KAAkC,eAAjBqB,EAAOK,QAC7DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEZ,IAAMa,EAAEb,IAAO,GAAK,MAEvC,UAAjBK,EAAOI,OAAoC,QAAfJ,EAAOrB,KAAkC,cAAjBqB,EAAOK,QAC7DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEX,IAAMY,EAAEZ,IAAO,GAAK,MAEvC,UAAjBI,EAAOI,OAAoC,QAAfJ,EAAOrB,KAAkC,eAAjBqB,EAAOK,QAC7DqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEX,IAAMY,EAAEZ,IAAO,GAAK,MAEvC,UAAjBI,EAAOI,OAAoC,WAAfJ,EAAOrB,KAAqC,cAAjBqB,EAAOK,QAChEqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEV,OAASW,EAAEX,OAAU,GAAK,MAE7C,UAAjBG,EAAOI,OAAoC,WAAfJ,EAAOrB,KAAqC,eAAjBqB,EAAOK,QAChEqD,EAAaD,EAAOnD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEV,OAASW,EAAEX,OAAU,GAAK,MAE7C,UAAjBG,EAAOI,OAAoC,aAAfJ,EAAOrB,MACrC+E,EAAaD,EAAOzD,QAAO,SAAAU,GAAC,OAAIA,EAAEC,WAAaX,EAAOK,UAEnC,UAAjBL,EAAOI,QACTsD,EAAaD,GAGf,IAAI7E,EAAQ,EAEN3E,EAAQyJ,EAAW7C,KAAI,SAAA7G,GAI3B,OAFA4E,EAAQ8E,EAAW5C,QAAQ9G,GAAM,EAG/B,kBAAC,EAAD,CACE2E,IAAKC,EACL5E,KAAMA,EACNwF,UAAWrG,EAAMqG,UACjBJ,YAAajG,EAAMiG,iBAKzB,OAAO,wBAAI/F,UAAU,YAAYY,IC1B7Bid,I,yDAyCJ,WAAY/d,GAAQ,IAAD,8BACjB,cAAMA,IAzCRkD,MAAQ,CACNzC,UAAW,KACXE,KAAM,KACNkE,SAAS,EACTC,cAAe,OACfC,SAAS,EACTjD,QAAS,KACTpB,aAAc,KACd+J,WAAW,EACXC,UAAW,KACXkJ,eAAe,EACfC,QAAS,OACThN,OAAQ,CACNI,MAAO,KACPzB,IAAK,KACL0B,MAAO,MAET4M,aAAc,KACdC,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,MAETZ,WAAW,EACX2N,kBAAmB,CACjB9Q,MAAO,KACP+D,MAAO,MAETlG,aAAc,KACdkT,mBAAoB,KACpBC,cAAe,KACfC,qBAAsB,KACtBC,WAAY,KACZC,QAAS,CACP3P,OAAQ,KACRC,OAAQ,KACRtC,OAAQ,OAKO,EA0HrBiS,qBAAuB,SAACpH,GACtBA,EAAMC,iBACNzB,QAAQC,IAAI,wBACZ,EAAK7J,QAAQL,aAAa,wBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAAS,EAAKZ,MAAMa,KAAKuC,IACzBsF,EAASwE,EAAMvI,OAAO+D,OAAOxB,MAC7B4I,EAAS5C,EAAMvI,OAAOmL,OAAO5I,MAC7B0I,EAAO1C,EAAMvI,OAAOiL,KAAK1I,MACzB6I,EAAO7C,EAAMvI,OAAOoL,KAAK7I,MACzB8I,EAAS9C,EAAMvI,OAAOqL,OAAO9I,MAC7B2I,EAAU3C,EAAMvI,OAAOkL,QAAQ3I,MAC/BqJ,EAAarD,EAAMvI,OAAO4L,WAAWrJ,MAEvC0E,EAAc,CAChBC,MAAM,0DAAD,OAEarL,EAFb,+BAGSI,EAHT,4DAKiB8H,EALjB,uCAMkBoH,EANlB,sCAOgBF,EAPhB,sCAQgBG,EARhB,wCASkBC,EATlB,yCAUmBH,EAVnB,4CAWsBU,EAXtB,4mBAePzE,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,6BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMge,WAAWvR,EAAQ1J,KAAKwR,gBACnC,EAAKlP,SAAS,CACZoF,WAAW,EACX1J,aAAc0L,EAAQ1J,KAAKwR,eAC3B9T,UAAU,6BAAD,OAA+BD,EAA/B,mBAAoDI,GAC7DmT,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQf,aAAe0L,EAAQ1J,KAAKwR,eACzC,EAAK3F,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAxMX,EA2MrB+J,cAAgB,SAAC9S,GACfgK,QAAQC,IAAI,0BACZ,EAAK7J,QAAQL,aAAa,0BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAAS,EAAKZ,MAAMa,KAAKuC,IAE3BwI,EAAc,CAChBC,MAAM,6DAAD,OAEarL,EAFb,+BAGSI,EAHT,4DAKiBc,EAAKgH,OALtB,uCAMkBhH,EAAKoO,OANvB,sCAOgBpO,EAAKkO,KAPrB,sCAQgBlO,EAAKqO,KARrB,wCASkBrO,EAAKsO,OATvB,yCAUmBtO,EAAKmO,QAVxB,4CAWsBnO,EAAK6O,WAX3B,yCAYmB7O,EAAKuO,QAZxB,2mBAgBPnE,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,gCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMge,WAAWvR,EAAQ1J,KAAK0R,mBACnC,EAAKpP,SAAS,CACZoF,WAAW,EACX1J,aAAc0L,EAAQ1J,KAAK0R,kBAC3BhU,UAAU,gCAAD,OAAkCD,EAAlC,mBAAuDI,KAElE,EAAKkB,QAAQf,aAAe0L,EAAQ1J,KAAK0R,kBACzC,EAAK7F,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA9QX,EAiRrBiK,kBAAoB,SAAChT,GACnBgK,QAAQC,IAAI,iCACZ,EAAK7J,QAAQL,aAAa,iCAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAAS,EAAKZ,MAAMa,KAAKuC,IAE3BwI,EAAc,CAChBC,MAAM,iEAAD,OAEarL,EAFb,+BAGSI,EAHT,4DAKiBc,EAAKgH,OALtB,uCAMkBhH,EAAKoO,OANvB,sCAOgBpO,EAAKkO,KAPrB,sCAQgBlO,EAAKqO,KARrB,wCASkBrO,EAAKsO,OATvB,yCAUmBtO,EAAKmO,QAVxB,4CAWsBnO,EAAK6O,WAX3B,4mBAePzE,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,qCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMge,WAAWvR,EAAQ1J,KAAK4R,uBACnC,EAAKtP,SAAS,CACZoF,WAAW,EACX1J,aAAc0L,EAAQ1J,KAAK4R,sBAC3BlU,UAAU,oCAAD,OAAsCD,EAAtC,mBAA2DI,KAEtE,EAAKkB,QAAQf,aAAe0L,EAAQ1J,KAAK4R,sBACzC,EAAK/F,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAnVX,EAsVrBmK,wBAA0B,SAAC1H,GACzBA,EAAMC,iBACNzB,QAAQC,IAAI,2BACZ,EAAK7J,QAAQL,aAAa,oBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAAS,EAAKZ,MAAMa,KAAKuC,IACzByR,EAAiB3H,EAAMvI,OAAOpB,KAAK2D,MACnC4N,EAAmB5H,EAAMvI,OAAOtC,OAAO6E,MACvC6N,EAAwB7H,EAAMvI,OAAOT,YAAYgD,MAEnD0E,EAAc,CAChBC,MAAM,6DAAD,OAEarL,EAFb,+BAGSI,EAHT,8DAKmBiU,EALnB,2CAMqBC,EANrB,gDAO0BC,EAP1B,0mBAWPjJ,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,gCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMge,WAAWvR,EAAQ1J,KAAKiS,mBACnC,EAAK3P,SAAS,CACZoF,WAAW,EACX1J,aAAc0L,EAAQ1J,KAAKiS,kBAC3BvU,UAAU,gCAAD,OAAkCD,EAAlC,mBAAuDI,GAChEmT,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKgO,iBAAiB,CACpBxE,WAAY,EAAKzQ,MAAMa,KAAK4P,WAC5BM,MAAO,EAAK/Q,MAAMa,KAAKkQ,MACvBzI,aAAc,EAAKtI,MAAMa,KAAKyH,eAEhC,EAAKxG,QAAQf,aAAe0L,EAAQ1J,KAAKiS,kBACzC,EAAKpG,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAjaX,EAoarByK,iBAAmB,SAACxT,GAClBgK,QAAQC,IAAI,6BACZ,EAAK7J,QAAQL,aAAa,6BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAAS,EAAKZ,MAAMa,KAAKuC,IAE3BwI,EAAc,CAChBC,MAAM,oEAAD,OAEerL,EAFf,iCAGWI,EAHX,kEAKqBc,EAAK6B,KAL1B,6CAMuB7B,EAAKW,OAN5B,kDAO4BX,EAAKwC,YAPjC,omBAUP4H,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,mCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMge,WAAWvR,EAAQ1J,KAAKoS,sBACnC,EAAK9P,SAAS,CACZoF,WAAW,EACX1J,aAAc0L,EAAQ1J,KAAKoS,qBAC3B1U,UAAU,mCAAD,OAAqCD,EAArC,mBAA0DI,KAErE,EAAKqU,iBAAiB,CACpBxE,WAAY,EAAKzQ,MAAMa,KAAK4P,WAC5BM,MAAO,EAAK/Q,MAAMa,KAAKkQ,MACvBzI,aAAc,EAAKtI,MAAMa,KAAKyH,eAEhC,EAAKxG,QAAQf,aAAe0L,EAAQ1J,KAAKoS,qBACzC,EAAKvG,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAteX,EAyerB2K,mBAAqB,SAAClI,GACpBA,EAAMC,iBACNzB,QAAQC,IAAI,sBACZ,EAAK7J,QAAQL,aAAa,eAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAAS,EAAKZ,MAAMa,KAAKuC,IACzBgB,EAAY8I,EAAMvI,OAAOP,UAAU8C,MACnC7C,EAAU6I,EAAMvI,OAAON,QAAQ6C,MAC/B5E,EAAO4K,EAAMvI,OAAOrC,KAAK4E,MACzBhD,EAAcgJ,EAAMvI,OAAOT,YAAYgD,MAEzC0E,EAAc,CAChBC,MAAM,wDAAD,OAEarL,EAFb,+BAGSI,EAHT,yDAKc0B,EALd,yCAMmB8B,EANnB,uCAOiBC,EAPjB,2CAQqBH,EARrB,kmBAWP4H,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,2BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMge,WAAWvR,EAAQ1J,KAAKsS,cACnC,EAAKhQ,SAAS,CACZoF,WAAW,EACX1J,aAAc0L,EAAQ1J,KAAKsS,aAC3B5U,UAAU,2BAAD,OAA6BD,EAA7B,mBAAkDI,GAC3DmT,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKgO,iBAAiB,CACpBxE,WAAY,EAAKzQ,MAAMa,KAAK4P,WAC5BM,MAAO,EAAK/Q,MAAMa,KAAKkQ,MACvBzI,aAAc,EAAKtI,MAAMa,KAAKyH,eAEhC,EAAKxG,QAAQf,aAAe0L,EAAQ1J,KAAKsS,aACzC,EAAKzG,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QArjBX,EAwjBrB6K,YAAc,SAAC5T,GACbgK,QAAQC,IAAI,wBACZ,EAAK7J,QAAQL,aAAa,wBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAAS,EAAKZ,MAAMa,KAAKuC,IAE3BwI,EAAc,CAChBC,MAAM,+DAAD,OAEerL,EAFf,iCAGWI,EAHX,6DAKgBc,EAAKY,KALrB,2CAMqBZ,EAAK0C,UAN1B,yCAOmB1C,EAAK2C,QAPxB,6CAQuB3C,EAAKwC,YAR5B,gnBAYP4H,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,8BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMge,WAAWvR,EAAQ1J,KAAKwS,iBACnC,EAAKlQ,SAAS,CACZoF,WAAW,EACX1J,aAAc0L,EAAQ1J,KAAKwS,gBAC3B9U,UAAU,8BAAD,OAAgCD,EAAhC,mBAAqDI,KAEhE,EAAKqU,iBAAiB,CACpBxE,WAAY,EAAKzQ,MAAMa,KAAK4P,WAC5BM,MAAO,EAAK/Q,MAAMa,KAAKkQ,MACvBzI,aAAc,EAAKtI,MAAMa,KAAKyH,eAEhC,EAAKxG,QAAQf,aAAe0L,EAAQ1J,KAAKwS,gBACzC,EAAK3G,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA5nBX,EA+nBrBgL,mBAAqB,SAACvI,GACpBA,EAAMC,iBACNzB,QAAQC,IAAI,sBACZ,EAAK7J,QAAQL,aAAa,eAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAIIiL,EACAC,EACAC,EANErV,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAAS,EAAKZ,MAAMa,KAAKuC,IACd,EAAKpD,MAAMa,KAAKiF,SAKjC,GAAqC,KAAjCoH,EAAMvI,OAAOkR,UAAU3O,MAGrB,OAFJ,EAAKpF,QAAQL,aAAa,0CACtB,EAAK4D,SAAS,CAACoF,WAAW,IAIhC,GAAsC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,SAASnV,EAAO,UAC7BoV,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCL,EAHgB,6CAA6CG,EAAS,IAAID,EAAS,IAAIE,EAIvFN,EAHgBI,EAAS,IAAIE,EAI7BL,EAAYK,EAEZ,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,6BAC1BiK,QAAQC,IAAI,2BACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,UAGZE,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,QACRtC,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,QACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,QACRtC,OAAQ,eAMpB,IAAIuJ,EAAc,CAChBC,MAAM,wDAAD,OAEarL,EAFb,+BAGSI,EAHT,yDAKc8U,EALd,oCAMcC,EANd,oCAOcC,EAPd,4mBAWP9J,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,2BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMge,WAAWvR,EAAQ1J,KAAK+T,cACnC,EAAKzR,SAAS,CACZoF,WAAW,EACX1J,aAAc0L,EAAQ1J,KAAK+T,aAC3BrW,UAAU,2BAAD,OAA6BD,EAA7B,mBAAkDI,GAC3DmT,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQf,aAAe0L,EAAQ1J,KAAK+T,aACzC,EAAKlI,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAnxBX,EAsxBrBsM,YAAc,SAACrV,GACbgK,QAAQC,IAAI,wBACZ,EAAK7J,QAAQL,aAAa,wBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAAS,EAAKZ,MAAMa,KAAKuC,IAM3BwI,GALa,EAAK5L,MAAMa,KAAKiF,SAGhBpE,EAAK6E,KAEJ,CAChBsF,MAAM,+DAAD,OAEerL,EAFf,iCAGWI,EAHX,6DAKgBc,EAAK6E,KALrB,sCAMgB7E,EAAKY,KANrB,sCAOgBZ,EAAK4P,KAPrB,inBAWPxF,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,8BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMge,WAAWvR,EAAQ1J,KAAKiU,iBACnC,EAAK3R,SAAS,CACZoF,WAAW,EACX1J,aAAc0L,EAAQ1J,KAAKiU,gBAC3BvW,UAAU,8BAAD,OAAgCD,EAAhC,mBAAqDI,KAEhE,EAAKkB,QAAQf,aAAe0L,EAAQ1J,KAAKiU,gBACzC,EAAKpI,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAGpD,IAAMwV,EAAW,SAASnV,EAAO,UAC3BqW,EAAWvV,EAAK6E,KAChB2P,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,0BAC1BiK,QAAQC,IAAI,0BACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,UAGZE,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,QACRtC,OAAQ,gBAIZqU,EACCQ,WAAWD,EAAUf,GACrB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,EAASvK,SACnC,EAAKvH,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,UAMdiI,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA14BX,EA64BrB2M,kBAAoB,SAAClK,GACnBA,EAAMC,iBACNzB,QAAQC,IAAI,qBACZ,EAAK7J,QAAQL,aAAa,cAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAKI4M,EACAC,EACAC,EAPEhX,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAAS,EAAKZ,MAAMa,KAAKuC,IAEd,EAAKpD,MAAMa,KAAKiF,SAKjC,GAAqC,KAAjCoH,EAAMvI,OAAOkR,UAAU3O,MAGrB,OAFJ,EAAKpF,QAAQL,aAAa,0CACtB,EAAK4D,SAAS,CAACoF,WAAW,IAIhC,GAAsC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,SAASnV,EAAO,SACjC8K,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCsB,EAHgB,6CAA6CxB,EAAS,IAAID,EAAS,IAAIE,EAIvFqB,EAHgBvB,EAAS,IAAIE,EAI7BsB,EAAYtB,EAEZ,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,4BAC1BiK,QAAQC,IAAI,0BACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,SAGZE,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,eAOpB,IAAIuJ,EAAc,CAChBC,MAAM,uDAAD,OAEarL,EAFb,+BAGSI,EAHT,wDAKayW,EALb,mCAMaC,EANb,mCAOaC,EAPb,4mBAWPzL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,0BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMge,WAAWvR,EAAQ1J,KAAKyU,aACnC,EAAKnS,SAAS,CACZoF,WAAW,EACX1J,aAAc0L,EAAQ1J,KAAKyU,YAC3B/W,UAAU,0BAAD,OAA4BD,EAA5B,mBAAiDI,GAC1DmT,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQf,aAAe0L,EAAQ1J,KAAKyU,YACzC,EAAK5I,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QApiCX,EAuiCrByM,WAAa,SAACxV,GACZgK,QAAQC,IAAI,uBACZ,EAAK7J,QAAQL,aAAa,uBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAAS,EAAKZ,MAAMa,KAAKuC,IAI3BwI,GAHa,EAAK5L,MAAMa,KAAKiF,SAChBpE,EAAK6E,KAEJ,CAChBsF,MAAM,8DAAD,OAEerL,EAFf,iCAGWI,EAHX,4DAKec,EAAK6E,KALpB,qCAMe7E,EAAKY,KANpB,qCAOeZ,EAAK4P,KAPpB,inBAWPxF,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,6BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMge,WAAWvR,EAAQ1J,KAAK0U,gBACnC,EAAKpS,SAAS,CACZoF,WAAW,EACX1J,aAAc0L,EAAQ1J,KAAK0U,eAC3BhX,UAAU,6BAAD,OAA+BD,EAA/B,mBAAoDI,KAE/D,EAAKkB,QAAQf,aAAe0L,EAAQ1J,KAAK0U,eACzC,EAAK7I,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAGpD,IAAMwV,EAAW,SAASnV,EAAO,SAC3BqW,EAAWvV,EAAK6E,KAChB2P,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,yBAC1BiK,QAAQC,IAAI,yBACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,SAGZE,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,gBAIZqU,EACCQ,WAAWD,EAAUf,GACrB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,EAASvK,SACnC,EAAKvH,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,UAMdiI,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAzpCX,EA4pCrBiN,kBAAoB,SAACxK,GACnBA,EAAMC,iBACNzB,QAAQC,IAAI,qBACZ,EAAK7J,QAAQL,aAAa,cAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAAS,EAAKZ,MAAMa,KAAKuC,IACzB8O,EAAOhF,EAAMvI,OAAOuN,KAAKhL,MAE3B0E,EAAc,CAChBC,MAAM,wDAAD,OAEarL,EAFb,+BAGSI,EAHT,qDAKUsR,EALV,kmBAQPpG,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,2BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMge,WAAWvR,EAAQ1J,KAAK4U,cACnC,EAAKtS,SAAS,CACZoF,WAAW,EACX1J,aAAc0L,EAAQ1J,KAAK4U,aAC3BlX,UAAU,2BAAD,OAA6BD,EAA7B,mBAAkDI,GAC3DmT,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQf,aAAe0L,EAAQ1J,KAAK4U,aACzC,EAAK/I,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA7tCX,EAguCrBmN,WAAa,SAAClW,GACZgK,QAAQC,IAAI,uBACZ,EAAK7J,QAAQL,aAAa,uBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAAS,EAAKZ,MAAMa,KAAKuC,IAC3BwI,EAAc,CAChBC,MAAM,8DAAD,OAEerL,EAFf,iCAGWI,EAHX,yDAKYc,EALZ,gnBASPoK,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,6BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMge,WAAWvR,EAAQ1J,KAAK8U,gBACnC,EAAKxS,SAAS,CACZoF,WAAW,EACX1J,aAAc0L,EAAQ1J,KAAK8U,eAC3BpX,UAAU,6BAAD,OAA+BD,EAA/B,mBAAoDI,KAE/D,EAAKkB,QAAQf,aAAe0L,EAAQ1J,KAAK8U,eACzC,EAAKjJ,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA3xCX,EA+xCrBqN,4BAA8B,SAAC5K,GAC7BA,EAAMC,iBACNzB,QAAQC,IAAI,+BACZ,EAAK7J,QAAQL,aAAa,+BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAAS,EAAKZ,MAAMa,KAAKuC,IACzB6D,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B2E,EAAQqB,EAAMvI,OAAOkH,MAAM3E,MAE7B0E,EAAc,CAChBC,MAAM,iEAAD,OAEarL,EAFb,+BAGSI,EAHT,8BAIQqG,EAJR,8BAKQ4E,EALR,ymBASPC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,8BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMge,WAAWvR,EAAQ1J,KAAKgV,uBACnC,EAAK1S,SAAS,CACZoF,WAAW,EACX1J,aAAc0L,EAAQ1J,KAAKgV,sBAC3BtX,UAAU,oCAAD,OAAsCD,EAAtC,mBAA2DI,GACpEoT,kBAAmB,CACjB9Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQf,aAAe0L,EAAQ1J,KAAKgV,sBACzC,EAAKnJ,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAl2CX,EAs2CrBuN,uBAAyB,SAACtW,GACxB,EAAK2D,SAAS,CACZ2O,kBAAmB,CACjB9Q,OAAO,EACP+D,MAAOvF,MA12CQ,EA82CrBuW,wBAA0B,WACxB,EAAK5S,SAAS,CACZ2O,kBAAmB,CACjB9Q,MAAO,KACP+D,MAAO,SAl3CQ,EAu3CrBiR,cAAgB,WACa,SAAvB,EAAKhV,MAAM2Q,QACb,EAAKxO,SAAS,CAACwO,QAAS,WAExB,EAAKxO,SAAS,CACZwO,QAAS,UA53CM,EAs4CrBsE,WAAa,SAACzW,GACZ,EAAK2D,SAAS,CAAC8S,WAAYzW,KAv4CR,EAy4CrBuL,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,IAAIlG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B1B,EAAM0H,EAAMvI,OAAOa,IAAI0B,MACvBA,EAAQgG,EAAMvI,OAAOuC,MAAMA,MACjB,SAAVA,IACFA,GAAQ,GAEI,UAAVA,IACFA,GAAQ,GAEV,EAAK7B,SAAS,CACZwB,OAAQ,CACNI,MAAOA,EACPzB,IAAKA,EACL0B,MAAOA,MAx5CQ,EA65CrBkR,SAAW,SAAC1W,GACV,EAAK2D,SAAS,CACZ0O,OAAQ,CACN7Q,OAAO,EACP+D,MAAOvF,MAj6CQ,EAq6CrB2W,UAAY,WACV,EAAKhT,SAAS,CACZ0O,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,SAz6CQ,EA86CrBgO,iBAAmB,SAACvT,GAClBgK,QAAQC,IAAI,0CACZ,IAAIsI,EAAqBvS,EAAK+O,WAAW/I,KAAI,SAAAH,GAAC,MAAK,CAC/C3D,MAAO2D,EAAElF,OACTkB,KAAMF,IAAOC,KAAKiE,EAAEhE,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cAC5D1D,MAAO,CACLuD,KAAMgE,EAAEhE,KACRlB,OAAQkF,EAAElF,OACV6B,YAAaqD,EAAErD,YACf+C,MAAO,kBAGTiN,EAAgBxS,EAAKqP,MAAMrJ,KAAI,SAAAH,GAAC,MAAK,CACrC3D,MAAO2D,EAAEjF,KACTiB,KAAMF,IAAOC,KAAKiE,EAAEnD,UAAUZ,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cACjE4U,IAAKjV,IAAOC,KAAKiE,EAAElD,QAAQb,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cAC9D1D,MAAO,CACLuD,KAAMgE,EAAEhE,KACRjB,KAAMiF,EAAEjF,KACR8B,UAAWmD,EAAEnD,UACbC,QAASkD,EAAElD,QACXH,YAAaqD,EAAErD,YACf+C,MAAO,aAGX,EAAK5B,SAAS,CACZ4O,mBAAoBA,EACpBC,cAAeA,IAEnB,IAAIC,EAAuBzS,EAAK4G,aAAaZ,KAAI,SAAAH,GAAC,MAAK,CACnD3D,MAAO2D,EAAE3D,MACTL,KAAMF,IAAOC,KAAKiE,EAAEhE,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cAC5D1D,MAAO,CACLoD,IAAKmE,EAAEnE,IACPG,KAAMgE,EAAEhE,KACRK,MAAO2D,EAAE3D,MACTtB,KAAMiF,EAAEjF,KACRuB,QAAS0D,EAAE1D,QACXF,KAAM4D,EAAE5D,KACRG,SAAUyD,EAAEzD,SACZI,YAAaqD,EAAErD,YACfH,UAAWwD,EAAExD,UACbkD,MAAO,oBAGX,EAAK5B,SAAS,CACZ4O,mBAAoBA,EACpBC,cAAeA,EACfC,qBAAsBA,KA99CP,EAk+CrBoE,kBAAoB,SAAC7W,GAEnB,IACIqB,EADAyV,EAAQ9W,EAAKwL,MAAMuL,cAAczY,MAEjB,eAAhBwY,EAAMvR,QACRlE,EAAO,CACLQ,KAAMiV,EAAMjV,KACZlB,OAAQmW,EAAMnW,OACd6B,YAAasU,EAAMtU,aAErB,EAAKmB,SAAS,CACZR,SAAS,EACTC,cAAe,CAACxC,KAAM,qBAAsBS,KAAMA,MAGlC,UAAhByV,EAAMvR,QACRlE,EAAO,CACLT,KAAMkW,EAAMlW,KACZ8B,UAAWoU,EAAMpU,UACjBC,QAASmU,EAAMnU,QACfH,YAAasU,EAAMtU,aAErB,EAAKmB,SAAS,CACZR,SAAS,EACTC,cAAe,CAACxC,KAAM,gBAAiBS,KAAMA,MAG7B,iBAAhByV,EAAMvR,QACRlE,EAAO,CACLK,IAAKoV,EAAMpV,IACXG,KAAMiV,EAAMjV,KACZK,MAAO4U,EAAM5U,MACbtB,KAAMkW,EAAMlW,KACZuB,QAAS2U,EAAM3U,QACfF,KAAM6U,EAAM7U,KACZG,SAAU0U,EAAM1U,SAChBI,YAAasU,EAAMtU,YACnBH,UAAWyU,EAAMzU,WAEnB,EAAKsB,SAAS,CACZR,SAAS,EACTC,cAAe,CAACxC,KAAM,sBAAuBS,KAAMA,EAAMC,QAAQ,OA3gDlD,EAihDrBZ,cAAgB,WACd,EAAKiD,SAAS,CACZR,SAAS,KAnhDQ,E,gEAOnB,GADA6G,QAAQC,IAAI,yCACRuD,eAAeC,QAAQ,WAAY,CACrC,IAAMzE,EAAYuB,KAAKmD,MAAMF,eAAeC,QAAQ,YACpDnK,KAAK6T,cAAcnO,GAEK,UAAtB1F,KAAKlD,QAAQnB,MACfqE,KAAKK,SAAS,CACZgB,WAAW,IAGfrB,KAAKK,SAAS,CACZtE,aAAciE,KAAKlD,QAAQf,eAG7BiE,KAAKiQ,iBAAiB,CACpBxE,WAAYzL,KAAKhF,MAAMa,KAAK4P,WAC5BM,MAAO/L,KAAKhF,MAAMa,KAAKkQ,MACvBzI,aAActD,KAAKhF,MAAMa,KAAKyH,iB,oFAUnB5G,GAAO,IAAD,OACjBgK,QAAQC,IAAI,6BACZ3G,KAAKlD,QAAQL,aAAa,6BAC1B,IAAMlB,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAClBoL,EAAc,CACdC,MAAM,kEAAD,OAEarL,EAFb,oBAKXsL,MAAM,iEAAkE,CACtEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG5B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GACJ,GAAIA,EAAQE,OACV,EAAKtH,SAAS,CAAClE,UAAWsL,EAAQE,OAAO,GAAGC,cACvC,CACL,IAAIkM,EAAmB7M,KAAKmD,MAAM3C,EAAQ1J,KAAK8V,eAC/CnN,QAAQC,IAAI,sCACZ,EAAK7J,QAAQL,aAAa,sCAC1B,EAAK4D,SAAS,CACZ+O,WAAY0E,QAKjBhM,OAAM,SAAAC,GACL,EAAK1H,SAAS,CAAClE,UAAW4L,S,sCAIlBrL,GAAO,IAAD,OACpBgK,QAAQC,IAAI,yBACZ,IAAMnL,EAAakB,EAAKlB,WAClBD,EAAQmB,EAAKnB,MACbK,EAASJ,EACTyY,EAAUjU,KAAK9B,MAAMzC,UACrByY,EAAe7V,MAASK,OAAO,cACjCkI,EAAc,CAChBC,MAAM,2DAAD,OAEarL,EAFb,qBAEoCI,EAFpC,4DAIiBsY,EAJjB,0CAKoBD,EALpB,qbASPnN,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEAA,EAAQE,QACV,EAAK7K,QAAQL,aAAagL,EAAQE,OAAO,GAAGC,SAE1CH,EAAQ1J,KAAKoW,gBAAgBtM,OAC/B,EAAK/K,QAAQL,aAAagL,EAAQ1J,KAAKoW,gBAAgBtM,UAG1DC,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,Q,+BAq6ChB,OACE,kBAAC,IAAMhL,SAAP,MAEwB,IAAvBiD,KAAK9B,MAAM2B,SACV,kBAAC,EAAD,CACExC,OAAQ2C,KAAK9B,MAAM4B,cACnB1C,cAAe4C,KAAK5C,gBAIxB,kBAACI,EAAA,EAAD,CAAWtC,UAAU,uBAEnB,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,kCACb,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,2BAGtB,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,GAAIpP,UAAU,2BAElB8E,KAAKhF,MAAMa,MACV,qCAKR,kBAACuY,EAAA,EAAI5W,UAAL,CAAe8Q,GAAG,oBAAoB+F,iBAAiB,KACrD,kBAAClX,EAAA,EAAD,CAAKjC,UAAU,mCACb,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,sCACI,SAAvB8E,KAAK9B,MAAM2Q,SACV,kBAACyF,EAAA,EAAD,CAAKlZ,QAAQ,QAAQF,UAAU,uBAC7B,kBAACoZ,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,UAA3D,UAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,UAA3D,UAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,YAA3D,cAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,eAA3D,eAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,UAA3D,UAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,UAA3D,WAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,SAA3D,UAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,gBAA3D,iBAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,SAA3D,WAIkB,WAAvBA,KAAK9B,MAAM2Q,SACV,kBAAC5O,EAAA,EAAD,KAC6B,YAA1BD,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,eAA1BjI,KAAK9B,MAAMiV,YACV,kBAACsB,GAAD,CACE1P,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,UAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,UAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,SAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,gBAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,SAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,qBAQzBjI,KAAKhF,MAAMa,MACV,kBAACoE,EAAA,EAAD,CAAKqK,GAAI,GAAIpP,UAAU,uCACmB,IAAvC8E,KAAK9B,MAAM8Q,kBAAkB9Q,OAC5B,kBAAC,GAAD,CACE+D,MAAOjC,KAAK9B,MAAM8Q,kBAAkB/M,MACpCuC,UAAWxE,KAAK8S,4BAChB/N,SAAU/E,KAAKiT,0BAGnB,kBAACmB,EAAA,EAAIM,QAAL,CAAaxZ,UAAU,cACrB,kBAACkZ,EAAA,EAAIO,KAAL,CAAUH,SAAS,KAAnB,cAEE,kBAAC/W,EAAA,EAAD,CAAWvC,UAAU,yBACnB,kBAACuC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,UACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMa,KAAK+C,QACzB,IAAzBoB,KAAK9B,MAAMmD,WACR,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,UAA5F,QAEJ,uBAAG9E,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMa,KAAK0F,OACzB,IAAzBvB,KAAK9B,MAAMmD,WACR,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,SAA5F,SAGN,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,aACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMa,KAAKiF,WACzB,IAAzBd,KAAK9B,MAAMmD,WACV,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,aAA5F,QAEF,uBAAG9E,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMa,KAAKF,OAErD,kBAAC8B,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,QACA,uBAAGA,UAAU,sBAAsBmD,IAAOC,KAAK0B,KAAKhF,MAAMa,KAAK2F,IAAIhD,OAAO,EAAE,IAAIC,IAAI,EAAE,QAAQC,OAAO,gBAC3E,IAAzBsB,KAAK9B,MAAMmD,WACV,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,QAA5F,QAEF,uBAAG9E,UAAU,iBAAb,QACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMa,KAAK4F,MAErD,kBAAChE,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,WACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMa,KAAK6F,SACzB,IAAzB1B,KAAK9B,MAAMmD,WACV,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,WAA5F,SAGJ,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,UACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMa,KAAK+Y,QAAQC,QACjC,IAAzB7U,KAAK9B,MAAMmD,WACV,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,kBAA5F,SAGJ,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,UACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMa,KAAK+Y,QAAQE,QACjC,IAAzB9U,KAAK9B,MAAMmD,WACV,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,kBAA5F,QAEF,uBAAG9E,UAAU,iBAAb,YACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMa,KAAK+Y,QAAQG,SACjC,IAAzB/U,KAAK9B,MAAMmD,WACV,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,mBAA5F,SAGJ,kBAACvC,EAAA,EAAUC,KAAX,KACE,4BACA,+BAIN,kBAAC0W,EAAA,EAAIO,KAAL,CAAUH,SAAS,KAAnB,aAEE,kBAAC/W,EAAA,EAAD,CAAWvC,UAAU,yBACnB,kBAACuC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,WACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMa,KAAKmZ,qBAErD,kBAACvX,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,oBACC8E,KAAKhF,MAAMa,KAAKoZ,gBACf,uBAAG/Z,UAAU,sBAAsBmD,IAAOC,KAAK0B,KAAKhF,MAAMa,KAAKoZ,eAAezW,OAAO,EAAE,IAAIC,IAAI,EAAE,QAAQC,OAAO,eAE3F,UAAtBsB,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,mBAA5F,SAGJ,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,OACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMa,KAAKuC,MAErD,kBAACX,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,aACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMa,KAAK2G,SAASU,aAE9D,kBAACzF,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,oBACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMa,KAAKqZ,gBAAgBhS,aAErE,kBAACzF,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,aACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMa,KAAKsZ,aAAaC,SAASlS,YACzE,uBAAGhI,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMa,KAAKsZ,aAAa7X,MAChE,uBAAGpC,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMa,KAAKsZ,aAAaE,SAItE,kBAACjB,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,sBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,WAC0B,IAAzBlT,KAAK9B,MAAMmD,WACV,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,YAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,YAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKsP,qBAChBvK,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnBwJ,UAAWrL,KAAKhF,MAAMa,KAAKwP,UAC3Bd,OAAQvK,KAAKlD,QAAQtB,WACrBmG,SAAU3B,KAAKwP,cACfnO,UAAWrB,KAAK9B,MAAMmD,UACtB6J,YAAalL,KAAK0P,qBAGtB,kBAAC0E,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,yBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,WAC0B,IAAzBlT,KAAK9B,MAAMmD,WACV,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,eAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,eAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAK4P,wBAChB7K,SAAU/E,KAAKqT,YAGrB,kBAACiC,EAAA,EAAD,CAAMjB,iBAAiB,IAAI/F,GAAG,4BAC5B,kBAAC8F,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,QACxB,kBAAC,GAAD,CACEiD,OAAQ7B,KAAK9B,MAAM2D,OACnB4J,WAAYzL,KAAKhF,MAAMa,KAAK4P,WAC5BlB,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKkQ,oBAGjB,kBAACkE,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,WAAW1D,UAAU,eAC3C,wCACA,kBAAC,IAAD,CACEqa,YAAY,eACZC,QAAS,CAACC,KACVC,OAAQ1V,KAAK9B,MAAM+Q,mBACnB0G,WAAY3V,KAAKuT,uBAMzB,kBAACa,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,oBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,WAC0B,IAAzBlT,KAAK9B,MAAMmD,WACV,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,UAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,UAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKoQ,mBAChBrL,SAAU/E,KAAKqT,YAGrB,kBAACiC,EAAA,EAAD,CAAMjB,iBAAiB,IAAI/F,GAAG,4BAC5B,kBAAC8F,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,QACxB,kBAAC,GAAD,CACEiD,OAAQ7B,KAAK9B,MAAM2D,OACnBkK,MAAO/L,KAAKhF,MAAMa,KAAKkQ,MACvBxB,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKsQ,eAGjB,kBAAC8D,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,WAAW1D,UAAU,eAC3C,wCACA,kBAAC,IAAD,CACEqa,YAAY,eACZC,QAAS,CAACC,KACVC,OAAQ1V,KAAK9B,MAAMgR,cACnByG,WAAY3V,KAAKuT,uBAKzB,kBAACa,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,oBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,WAC0B,IAAzBlT,KAAK9B,MAAMmD,WACV,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,UAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,UAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKyQ,mBAChB1L,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnB4K,OAAQzM,KAAKhF,MAAMa,KAAK4Q,OACxBlC,OAAQvK,KAAKlD,QAAQtB,WACrBoa,gBAAiB5V,KAAK4V,gBACtBvU,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAK+R,eAGnB,kBAACqC,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,mBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,WAC0B,IAAzBlT,KAAK9B,MAAMmD,WACV,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,SAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,SAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKoS,kBAChBrN,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnBiL,MAAO9M,KAAKhF,MAAMa,KAAKiR,MACvBvC,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKkS,cAGnB,kBAACkC,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,0BACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,WAEF,kBAACoC,EAAA,EAAD,CAAMjB,iBAAiB,IAAI/F,GAAG,4BAC5B,kBAAC8F,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,QACxB,kBAAC,GAAD,CACEiD,OAAQ7B,KAAK9B,MAAM2D,OACnByB,aAActD,KAAKhF,MAAMa,KAAKyH,aAC9BiH,OAAQvK,KAAKlD,QAAQtB,cAGvB,kBAAC4Y,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,WAAW1D,UAAU,eAC3C,wCACA,kBAAC,IAAD,CACEqa,YAAY,eACZC,QAAS,CAACC,KACVC,OAAQ1V,KAAK9B,MAAMiR,qBACnBwG,WAAY3V,KAAKuT,uBAMzB,kBAACa,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,eACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,WAC0B,IAAzBlT,KAAK9B,MAAMmD,WACV,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,SAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,SAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAK0S,kBAChB3N,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnBwL,MAAOrN,KAAKhF,MAAMa,KAAKwR,MACvB9C,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAK4S,wB,GA59DV1S,cAAnB6Y,GAuCGvO,YAAcC,EAu8DRsO,UCz+DAE,GAhDQ,SAACje,GAExB,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,YAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,wCACA,4CACA,yCACA,wCACA,uCACA,uCACA,0CACA,+CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,8CACA,wCACA,4CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCpBAmU,I,mNACJhb,MAAQ,CACNzC,UAAW,KACXE,KAAM,KACNkE,SAAS,EACTC,cAAe,OACfC,SAAS,EACTjD,QAAS,KACTpB,aAAc,KACdI,MAAO,KACPqd,YAAa,KACb1T,WAAW,EACXC,UAAW,KACXkJ,eAAe,EACfC,QAAS,OACThN,OAAQ,CACNI,MAAO,KACPzB,IAAK,KACL0B,MAAO,MAET4M,aAAc,KACdC,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,MAEThB,aAAa,EACblF,aAAc,KACdsF,WAAW,EACX+X,WAAY,KACZC,SAAU,KACVC,OAAQ,Q,EA+IZH,YAAc,SAACjR,GACbA,EAAMC,iBACNzB,QAAQC,IAAI,yBACZ,EAAK7J,QAAQL,aAAa,yBAG1B,IAsBImK,EAtBErL,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAASJ,EACTyG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B2E,EAAQqB,EAAMvI,OAAOkH,MAAM3E,MAC7BuH,GAAQ,EACE,QAAVxH,GACU,QAAVA,GACU,mBAAVA,GACU,qBAAVA,GACU,sBAAVA,GACU,aAAVA,GACU,oBAAVA,GACU,0BAAVA,GACU,oBAAVA,GACU,oBAAVA,GACU,kBAAVA,IAEAwH,GAAQ,GAEZ/C,QAAQC,IAAI,QAAQ8C,IAGN,IAAVA,IACF7C,EAAc,CACZC,MAAM,iEAAD,OAEarL,EAFb,gCAGQyG,EAHR,gCAIQ4E,EAJR,+mBASK,IAAV4C,IACF7C,EAAc,CACZC,MAAM,4DAAD,OAEarL,EAFb,gCAGQyG,EAHR,gCAIQ4E,EAJR,8mBASTC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAQJ,IAAIC,EAAgB,+BAGN,IAAV+B,IACEhC,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,SAIX,IAAV4B,IACEhC,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,QAKzB,EAAK/K,QAAQL,aAAaiL,IAEZ,IAAV+B,IACF,EAAKpJ,SAAS,CACZoF,WAAW,EACX0T,YAAa1R,EAAQ1J,KAAKiM,qBAC1BvO,UAAU,mCAAD,OAAqCD,EAArC,mBAA0DI,KAErE,EAAKkB,QAAQpB,aAAe+L,EAAQ1J,KAAKiM,uBAE7B,IAAVP,IACF,EAAKpJ,SAAS,CACZoF,WAAW,EACX0T,YAAa1R,EAAQ1J,KAAKkM,gBAC1BxO,UAAU,8BAAD,OAAgCD,EAAhC,mBAAqDI,KAEhE,EAAKkB,QAAQpB,aAAe+L,EAAQ1J,KAAKkM,iBAG3C,EAAKL,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAKhCyN,cAAgB,WACa,SAAvB,EAAKhV,MAAM2Q,QACb,EAAKxO,SAAS,CAACwO,QAAS,WAExB,EAAKxO,SAAS,CACZwO,QAAS,U,EAUfsE,WAAa,SAACzW,GACZ,EAAK2D,SAAS,CACZ8S,WAAYzW,EACZ4c,OAAQ5c,K,EAGZuL,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,IAAIlG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B1B,EAAM0H,EAAMvI,OAAOa,IAAI0B,MACvBA,EAAQgG,EAAMvI,OAAOuC,MAAMA,MACjB,SAAVA,IACFA,GAAQ,GAEI,UAAVA,IACFA,GAAQ,GAEV,EAAK7B,SAAS,CACZwB,OAAQ,CACNI,MAAOA,EACPzB,IAAKA,EACL0B,MAAOA,M,EAMbjB,YAAc,SAACvE,GACb,EAAK2D,SAAS,CACZY,aAAa,EACblF,aAAcW,EACd4c,OAAQ,WAEV,EAAKte,MAAMkK,WAAWxI,GACtB,EAAK1B,MAAMue,uBAAuB,CAAC3d,OAAOc,EAAK0B,IAAIL,KAAK,GAAD,OAAI,EAAKjB,QAAQtB,WAAjB,0B,EAEzD4X,SAAW,SAAC1W,GACV,EAAK2D,SAAS,CACZ0O,OAAQ,CACN7Q,OAAO,EACP+D,MAAOvF,M,EAIb2W,UAAY,WACV,EAAKhT,SAAS,CACZ0O,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,S,EAKb+W,WAAa,SAACtc,GACZgK,QAAQC,IAAI,uBACZ,EAAKtG,SAAS,CACZtE,aAAcW,IAEhB,EAAK1B,MAAMkK,WAAWxI,I,EAGxB8c,WAAa,SAAC9c,GACZgK,QAAQC,IAAI,uBAAuBjK,GACnC,EAAKI,QAAQL,aAAa,wBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAASc,EAAK0B,IAEhBwI,EAAc,CAChBC,MAAM,0DAAD,OAEarL,EAFb,+BAGSI,EAHT,umBAOPkL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,6BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXhK,UAAU,6BAAD,OAA+BD,EAA/B,mBAAoDI,KAE/D,EAAKgO,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IACpD,EAAKkL,YAAY,CAACjL,WAAYA,EAAWD,MAAOA,OAEjDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAIhCgU,YAAc,WACZ,EAAKpZ,SAAS,CACZwB,OAAQ,CACNI,MAAO,KACPzB,IAAK,KACL0B,MAAO,S,kEAnZX,GADAwE,QAAQC,IAAI,qCACRuD,eAAeC,QAAQ,WAAY,CACrC,IAAMzE,EAAYuB,KAAKmD,MAAMF,eAAeC,QAAQ,YAC7B,UAAnBzE,EAAU/J,MACZqE,KAAKK,SAAS,CAACgB,WAAU,IAGvBrB,KAAKhF,MAAM8D,SAASZ,OAClB8B,KAAKhF,MAAM8D,SAASZ,MAAMrC,MAC5BmE,KAAKK,SAAS,CACZ+Y,YAAY,EACZC,SAAUrZ,KAAKhF,MAAM8D,SAASZ,MAAMrC,OAI1CmE,KAAKyG,YAAYf,GACb1F,KAAKhF,MAAMe,eACb2K,QAAQC,IAAI,kDACZ3G,KAAKK,SAAS,CACZY,aAAa,EACblF,aAAciE,KAAKhF,MAAMe,mB,kFASpBW,GAAO,IAAD,OACjBgK,QAAQC,IAAI,8BACZ3G,KAAKlD,QAAQL,aAAa,8BAC1BuD,KAAKK,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAClBI,EAASJ,EAEXoL,EAAc,CAChBC,MAAM,oDAAD,OAEarL,EAFb,kmBAKPsL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJf,QAAQC,IAAI,sCACZ,IAAIe,EAAgB,qCAUpB,GARID,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,QAGO,IAA1B,EAAK3J,MAAMkb,WAAqB,CAClC,IAAIM,EAAajS,EAAQ1J,KAAK0I,YAAY5E,QAAO,SAAAU,GAAC,OAAIA,EAAEnE,MAAQ,EAAKF,MAAMmb,YAAU,GACrF,EAAKhZ,SAAS,CACZY,aAAa,EACblF,aAAc2d,EACdJ,OAAQ,WAEV,EAAKxc,QAAQL,aAAa,+BAE5B,EAAKK,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX3J,MAAO2L,EAAQ1J,KAAK0I,YACpBhL,UAAU,0BAAD,OAA4BD,EAA5B,mBAAiDI,KAE5D,EAAKgO,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,S,sCAGhB/I,GAAO,IAAD,OACpBgK,QAAQC,IAAI,yBACZ,IAAMnL,EAAakB,EAAKlB,WAClBD,EAAQmB,EAAKnB,MACbK,EAASJ,EACTyY,EAAUjU,KAAK9B,MAAMzC,UACrByY,EAAe7V,MAASK,OAAO,cACjCkI,EAAc,CAChBC,MAAM,2DAAD,OAEarL,EAFb,qBAEoCI,EAFpC,4DAIiBsY,EAJjB,0CAKoBD,EALpB,qbASPnN,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GACAA,EAAQE,QACV,EAAK7K,QAAQL,aAAagL,EAAQE,OAAO,GAAGC,SAE1CH,EAAQ1J,KAAK8J,OACf,EAAK/K,QAAQL,aAAagL,EAAQ1J,KAAK8J,UAG1CC,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,Q,+BAqRhB,OACE,kBAAC,IAAMhL,SAAP,MAEwB,IAAvBiD,KAAK9B,MAAM2B,SACV,kBAAC,EAAD,CACExC,OAAQ2C,KAAK9B,MAAM4B,gBAIvB,kBAACtC,EAAA,EAAD,CAAWtC,UAAU,sBACnB,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,iCACb,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,yBACtB,uCAAuC,IAA3B8E,KAAK9B,MAAM+C,aACTjB,KAAK9B,MAAMnC,cACW,WAAtBiE,KAAK9B,MAAMob,QACLtZ,KAAK9B,MAAMnC,aAAawF,OAG5C,kBAACtB,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,yBACnB8E,KAAK9B,MAAMuH,UACV,kBAACnG,EAAA,EAAD,CAAOC,IAAKC,IAAYtE,UAAU,aAAauE,OAAK,IAEpD,kCAKN,kBAAC2U,EAAA,EAAI5W,UAAL,CAAe8Q,GAAG,oBAAoBqL,UAAW3Z,KAAK9B,MAAMob,QAC1D,kBAACnc,EAAA,EAAD,CAAKjC,UAAU,kCAEb,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,qCACI,SAAvB8E,KAAK9B,MAAM2Q,SACV,kBAACyF,EAAA,EAAD,CAAKlZ,QAAQ,QAAQF,UAAU,wBAC7B,kBAACoZ,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,OAAOvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,SAA9D,SAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,SAASvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,WAAhE,WAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,SAASvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,WAAhE,aAIkB,WAAvBA,KAAK9B,MAAM2Q,SACV,kBAAC5O,EAAA,EAAD,KACE,kBAAC,GAAD,CACE8E,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,qBAMvBjI,KAAK9B,MAAMpC,OACV,kBAACmE,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,qCACpB,kBAACkZ,EAAA,EAAIM,QAAL,KACE,kBAACN,EAAA,EAAIO,KAAL,CAAUH,SAAS,QACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACA,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKyZ,aAAhD,UAEF,kBAAC,EAAD,CACE5X,OAAQ7B,KAAK9B,MAAM2D,OACnB/F,MAAOkE,KAAK9B,MAAMpC,MAClByO,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBJ,YAAajB,KAAKiB,YAClBU,SAAU3B,KAAKwZ,cAGnB,kBAACpF,EAAA,EAAIO,KAAL,CAAUH,SAAS,UACnB,kBAACvU,EAAA,EAAD,CAAK/E,UAAU,iBACb,4CACA,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,iBACb,kBAAC,EAAD,CACEsJ,UAAWxE,KAAKmZ,eAGpB,kBAAChc,EAAA,EAAD,KACG6C,KAAK9B,MAAMib,aACV,kBAAC5b,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,eAAe+B,QAAS+C,KAAKkT,eAAzE,WAGJ,kBAAC/V,EAAA,EAAD,CAAKjC,UAAU,yBACZ8E,KAAK9B,MAAMib,aACV,kBAAC,GAAD,CACEtX,OAAQ7B,KAAK9B,MAAM2D,OACnB/F,MAAOkE,KAAK9B,MAAMib,YAClB5O,OAAQvK,KAAKlD,QAAQtB,WACrByF,YAAajB,KAAKiB,iBAM1B,kBAACmT,EAAA,EAAIO,KAAL,CAAUH,SAAS,WACS,IAA3BxU,KAAK9B,MAAM+C,aACVjB,KAAK9B,MAAMnC,cACX,kBAAC,GAAD,CACEF,KAAMmE,KAAK9B,MAAMnC,aACjBid,WAAYhZ,KAAKgZ,wB,GAniBb9Y,cAAlBgZ,GAgCG1O,YAAcC,EAqhBRyO,UC7UAU,I,OA5PW,SAAC5e,GACzB,IAAM6e,EAAQxb,MAASK,OAAO,cAChC,OACA,yBAAKxD,UAAU,mBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,mDACA,8DACA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,UAC7B,kBAACL,EAAA,EAAKM,MAAN,eACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,yCACA,2CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,sCACA,uCACA,sCACA,wCAIJ,kBAACJ,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,UAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,YAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,eAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,YAC7B,kBAACL,EAAA,EAAKM,MAAN,mBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,eAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,gBAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,UAC7B,kBAACL,EAAA,EAAKM,MAAN,iBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,0CACA,wCACA,uDAIJ,kBAACJ,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAO4E,MAAM,uBAIpC,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,gBAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,QAAQwH,YAAY,sBAGzC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,gBAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,kBAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,iBAC7B,kBAACL,EAAA,EAAKM,MAAN,eACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,mBAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,iBAC7B,kBAACL,EAAA,EAAKM,MAAN,sBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,SAASwH,YAAY,MAG1C,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,iBAC7B,kBAACL,EAAA,EAAKM,MAAN,sBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,MAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,OAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,MAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,iBAC7B,kBAACL,EAAA,EAAKM,MAAN,sBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,wCACA,2CACA,iDACA,6CACA,4CACA,gDACA,6CACA,8CACA,2CACA,iDACA,4CACA,4CACA,8CACA,4CACA,gDAIJ,kBAACJ,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,kBAC7B,kBAACL,EAAA,EAAKM,MAAN,uBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,MAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,qBAC7B,kBAACL,EAAA,EAAKM,MAAN,0BACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,OAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,gBAC7B,kBAACL,EAAA,EAAKM,MAAN,iCACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAa+U,KAGzC,kBAACvV,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,kBAC7B,kBAACL,EAAA,EAAKM,MAAN,uBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,qBAIrD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,yBAC7B,kBAACL,EAAA,EAAKM,MAAN,8BACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,2BAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,0BAC7B,kBAACL,EAAA,EAAKM,MAAN,+BACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,4BAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,0BAC7B,kBAACL,EAAA,EAAKM,MAAN,+BACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,QAAQwH,YAAY,uBAI3C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,4BAC7B,kBAACL,EAAA,EAAKM,MAAN,iCACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,+BAIrD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,sBAC7B,kBAACL,EAAA,EAAKM,MAAN,2BACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,yBAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,kBAC7B,kBAACL,EAAA,EAAKM,MAAN,uBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,oBAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,0BAC7B,kBAACL,EAAA,EAAKM,MAAN,+BACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,6BAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,2BAC7B,kBAACL,EAAA,EAAKM,MAAN,gCACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,QAAQwH,YAAY,sBAEzC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,2BAC7B,kBAACL,EAAA,EAAKM,MAAN,gCACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,6BAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,6BAC7B,kBAACL,EAAA,EAAKM,MAAN,kCACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,gCAIrD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,6BAC7B,kBAACL,EAAA,EAAKM,MAAN,kCACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,gCAIrD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,oBAC7B,kBAACL,EAAA,EAAKM,MAAN,yBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,sBAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,yBAC7B,kBAACL,EAAA,EAAKM,MAAN,8BACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,2BAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,uBAC7B,kBAACL,EAAA,EAAKM,MAAN,4BACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAa+U,MAI3C,kBAACvV,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,wBAC7B,kBAACL,EAAA,EAAKM,MAAN,6BACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,2BAIrD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,8BAC7B,kBAACL,EAAA,EAAKM,MAAN,mCACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,gCAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,kCAC7B,kBAACL,EAAA,EAAKM,MAAN,uCACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,qCAIrD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,gBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,iBAAiBF,UAAU,eAAe+B,QAASjC,EAAM+J,UAAzE,eC1KS+U,GA9EW,SAAA9e,GAAU,IAExB6G,EAFuB,iBAEb7G,EAAM6G,QACtBC,EAAY9G,EAAM+G,SAClBC,EAAgB,GAEC,YAAjBH,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAChEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAE/C,YAAjBM,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAChEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAE/C,YAAjBM,EAAOI,OAAsC,aAAfJ,EAAOrB,KAAuC,cAAjBqB,EAAOK,QACpEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEtB,SAAWuB,EAAEvB,SAAY,GAAK,MAEvD,YAAjBe,EAAOI,OAAsC,aAAfJ,EAAOrB,KAAuC,eAAjBqB,EAAOK,QACpEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEtB,SAAWuB,EAAEvB,SAAY,GAAK,MAEvD,YAAjBe,EAAOI,OAAsC,UAAfJ,EAAOrB,KAAoC,cAAjBqB,EAAOK,QACjEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAEjD,YAAjBiD,EAAOI,OAAsC,UAAfJ,EAAOrB,KAAoC,eAAjBqB,EAAOK,QACjEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAEjD,YAAjBiD,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAChEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzG,KAAO0G,EAAE1G,KAAQ,GAAK,MAE/C,YAAjBkG,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAChEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzG,KAAO0G,EAAE1G,KAAQ,GAAK,MAE/C,YAAjBkG,EAAOI,OAAsC,QAAfJ,EAAOrB,KAAkC,cAAjBqB,EAAOK,QAC/DF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEZ,IAAMa,EAAEb,IAAO,GAAK,MAE7C,YAAjBK,EAAOI,OAAsC,QAAfJ,EAAOrB,KAAkC,eAAjBqB,EAAOK,QAC/DF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEZ,IAAMa,EAAEb,IAAO,GAAK,MAE7C,YAAjBK,EAAOI,OAAsC,QAAfJ,EAAOrB,KAAkC,cAAjBqB,EAAOK,QAC/DF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEX,IAAMY,EAAEZ,IAAO,GAAK,MAE7C,YAAjBI,EAAOI,OAAsC,QAAfJ,EAAOrB,KAAkC,eAAjBqB,EAAOK,QAC/DF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEX,IAAMY,EAAEZ,IAAO,GAAK,MAE7C,YAAjBI,EAAOI,OAAsC,WAAfJ,EAAOrB,KAAqC,cAAjBqB,EAAOK,QAClEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEV,OAASW,EAAEX,OAAU,GAAK,MAEnD,YAAjBG,EAAOI,OAAsC,WAAfJ,EAAOrB,KAAqC,eAAjBqB,EAAOK,QAClEF,EAAgBF,EAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEV,OAASW,EAAEX,OAAU,GAAK,MAEnD,YAAjBG,EAAOI,OAAsC,aAAfJ,EAAOrB,MACvCwB,EAAgBF,EAAUD,QAAO,SAAAU,GAAC,OAAIA,EAAEC,WAAaX,EAAOK,UAEzC,YAAjBL,EAAOI,OAAsC,WAAfJ,EAAOrB,MACvCwB,EAAgBF,EAAUD,QAAO,SAAAU,GAAC,OAAIA,EAAEE,SAAWZ,EAAOK,UAGvC,YAAjBL,EAAOI,QACTD,EAAgBF,GAGlB,IAAIrB,EAAQ,EAENsB,EAAWC,EAAcU,KAAI,SAAA7B,GAIjC,OAFAJ,EAAQuB,EAAcW,QAAQ9B,GAAS,EAGrC,kBAAC,EAAD,CACEL,IAAKC,EACLI,QAASA,EACTQ,UAAWrG,EAAMqG,UACjBJ,YAAajG,EAAMiG,iBAKzB,OAAO,wBAAI/F,UAAU,YAAY6G,I,8BCpD7BgY,I,OAASC,KAAWC,OAAO,CAC/BjT,KAAM,CACJkT,WAAY,GACZC,cAAe,GACfC,kBAAmB,IAErBxb,MAAO,CACLyb,SAAU,GACVC,UAAW,SACXC,WAAY,eAEdC,OAAQ,CACNH,SAAU,GACVC,UAAW,SACXG,aAAc,IAEhBC,SAAU,CACRL,SAAU,GACVM,OAAQ,GACRJ,WAAY,eAEdK,KAAM,CACJD,OAAQ,GACRN,SAAU,GACVC,UAAW,UACXC,WAAY,eAEdlO,MAAO,GAIPwO,OAAQ,CACNR,SAAU,GACVI,aAAc,GACdH,UAAW,SACXQ,MAAO,QAETC,WAAY,CACVC,SAAU,WACVX,SAAU,GACVY,OAAQ,GACRC,KAAM,EACNC,MAAO,EACPb,UAAW,SACXQ,MAAO,QAGTM,KAAM,CACJC,cAAe,MACfC,gBAAiB,WAEnBC,QAAS,CACPZ,OAAQ,GACRa,QAAS,GACTC,SAAU,MAwVCC,GAjVC,SAAC1gB,GAEjB,OACE,yBAAKE,UAAU,aACb,yBAAKA,UAAU,WAEf,kBAAC+E,EAAA,EAAD,CAAK/E,UAAU,gBACf,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,iBAAiBiP,KAAK,KAAKsR,MAAM,eAAe1e,QAASjC,EAAM4gB,OAA/E,MAEA,kBAAC3b,EAAA,EAAD,CAAK/E,UAAU,cACf,mDAGA,kBAAC,KAAD,CAAWA,UAAU,UAEO,SAA3BF,EAAM6gB,YAAYve,MACjB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAMwe,MAAO/B,GAAO/S,MAClB,kBAAC,KAAD,CACE8U,MAAO/B,GAAO1N,MACd9M,IAAKwc,OAGP,kBAAC,KAAD,CAAMD,MAAO/B,GAAOnb,OAAQ5D,EAAM6gB,YAAYve,MAC9C,kBAAC,KAAD,CAAMwe,MAAO/B,GAAOS,QAApB,uBAGA,kBAAC,KAAD,CAAMsB,MAAO/B,GAAOW,UAApB,iBACiB1f,EAAM6F,QAAQU,MAE/B,kBAAC,KAAD,CAAMua,MAAO/B,GAAOa,MAApB,kvCAoBA,kBAAC,KAAD,CAAMkB,MAAO/B,GAAOa,MAApB,6DAGA,kBAAC,KAAD,CAAMkB,MAAO/B,GAAOa,MAApB,0zCAqBA,kBAAC,KAAD,CAAMkB,MAAO/B,GAAOa,MAApB,+pBAWA,kBAAC,KAAD,CAAMkB,MAAO/B,GAAOW,SAAUsB,OAAK,GAAnC,iGAKA,kBAAC,KAAD,CAAMF,MAAO/B,GAAOa,MAApB,6wDA0BA,kBAAC,KAAD,CAAMkB,MAAO/B,GAAOa,MAApB,26BAgBA,kBAAC,KAAD,CAAMkB,MAAO/B,GAAOa,MAApB,qfASA,kBAAC,KAAD,CAAMkB,MAAO/B,GAAOa,MAApB,mqBAYA,kBAAC,KAAD,CAAMkB,MAAO/B,GAAOa,MAApB,o8BAoBsB,aAA3B5f,EAAM6gB,YAAYve,MACjB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAMwe,MAAO/B,GAAO/S,MAClB,kBAAC,KAAD,CACE8U,MAAO/B,GAAO1N,MACd9M,IAAKwc,OAGP,kBAAC,KAAD,CAAMD,MAAO/B,GAAOnb,OAAQ5D,EAAM6gB,YAAYve,MAC9C,kBAAC,KAAD,CAAMwe,MAAO/B,GAAOS,QAApB,uBAGA,kBAAC,KAAD,CAAMsB,MAAO/B,GAAOW,UAApB,sGAIA,kBAAC,KAAD,CAAMoB,MAAO/B,GAAOa,MAApB,2LAKA,kBAAC,KAAD,CAAMkB,MAAO/B,GAAOa,MAApB,6DAGA,kBAAC,KAAD,CAAMkB,MAAO/B,GAAOa,MAApB,4LAKA,kBAAC,KAAD,CAAMkB,MAAO/B,GAAOa,MAApB,2MASsB,sBAA3B5f,EAAM6gB,YAAYve,MACjB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAMwe,MAAO/B,GAAO/S,MAClB,kBAAC,KAAD,CACE8U,MAAO/B,GAAO1N,MACd9M,IAAKwc,OAGP,kBAAC,KAAD,CAAMD,MAAO/B,GAAOnb,OAAQ5D,EAAM6gB,YAAYve,MAC9C,kBAAC,KAAD,CAAMwe,MAAO/B,GAAOS,QAApB,uBAGA,kBAAC,KAAD,CAAMsB,MAAO/B,GAAOW,UAApB,sGAIA,kBAAC,KAAD,CAAMoB,MAAO/B,GAAOa,MAApB,2LAKA,kBAAC,KAAD,CAAMkB,MAAO/B,GAAOa,MAApB,6DAGA,kBAAC,KAAD,CAAMkB,MAAO/B,GAAOa,MAApB,uMASsB,aAA3B5f,EAAM6gB,YAAYve,MACjB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAM+M,KAAK,KAAKyR,MAAO/B,GAAOqB,MAC5B,kBAAC,KAAD,CAAMU,MAAO/B,GAAOwB,SAClB,kBAAC,KAAD,KAAOvgB,EAAM6gB,YAAYve,OAE3B,kBAAC,KAAD,CAAMwe,MAAO/B,GAAOwB,SAClB,kBAAC,KAAD,sBAKoB,cAA3BvgB,EAAM6gB,YAAYve,MACjB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAM+M,KAAK,KAAKyR,MAAO/B,GAAOqB,MAC5B,kBAAC,KAAD,CAAMU,MAAO/B,GAAOwB,SAClB,kBAAC,KAAD,KAAOvgB,EAAM6gB,YAAYve,OAE3B,kBAAC,KAAD,CAAMwe,MAAO/B,GAAOwB,SAClB,kBAAC,KAAD,sBAKoB,qBAA3BvgB,EAAM6gB,YAAYve,MACjB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAM+M,KAAK,KAAKyR,MAAO/B,GAAOqB,MAC5B,kBAAC,KAAD,CAAMU,MAAO/B,GAAOwB,SAClB,kBAAC,KAAD,KAAOvgB,EAAM6gB,YAAYve,OAE3B,kBAAC,KAAD,CAAMwe,MAAO/B,GAAOwB,SAClB,kBAAC,KAAD,sBAKoB,iBAA3BvgB,EAAM6gB,YAAYve,MACjB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAM+M,KAAK,KAAKyR,MAAO/B,GAAOqB,MAC5B,kBAAC,KAAD,CAAMU,MAAO/B,GAAOwB,SAClB,kBAAC,KAAD,KAAOvgB,EAAM6gB,YAAYve,OAE3B,kBAAC,KAAD,CAAMwe,MAAO/B,GAAOwB,SAClB,kBAAC,KAAD,sBAKoB,qBAA3BvgB,EAAM6gB,YAAYve,MACjB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAM+M,KAAK,KAAKyR,MAAO/B,GAAOqB,MAC5B,kBAAC,KAAD,CAAMU,MAAO/B,GAAOwB,SAClB,kBAAC,KAAD,KAAOvgB,EAAM6gB,YAAYve,OAE3B,kBAAC,KAAD,CAAMwe,MAAO/B,GAAOwB,SAClB,kBAAC,KAAD,sBAKoB,0BAA3BvgB,EAAM6gB,YAAYve,MACjB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAM+M,KAAK,KAAKyR,MAAO/B,GAAOqB,MAC5B,kBAAC,KAAD,CAAMU,MAAO/B,GAAOwB,SAClB,kBAAC,KAAD,KAAOvgB,EAAM6gB,YAAYve,OAE3B,kBAAC,KAAD,CAAMwe,MAAO/B,GAAOwB,SAClB,kBAAC,KAAD,sBAKoB,eAA3BvgB,EAAM6gB,YAAYve,MACjB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAM+M,KAAK,KAAKyR,MAAO/B,GAAOqB,MAC5B,kBAAC,KAAD,CAAMU,MAAO/B,GAAOwB,SAClB,kBAAC,KAAD,KAAOvgB,EAAM6gB,YAAYve,OAE3B,kBAAC,KAAD,CAAMwe,MAAO/B,GAAOwB,SAClB,kBAAC,KAAD,0BC5UGU,GA3EY,SAAAjhB,GAAU,IAEzB6G,EAFwB,iBAEd7G,EAAM6G,QACtBuJ,EAAapQ,EAAMqQ,UACnBC,EAAiB,GAEA,YAAjBzJ,EAAOI,OAAsC,WAAfJ,EAAOrB,KAAqC,cAAjBqB,EAAOK,QAClEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEsB,OAASrB,EAAEqB,OAAU,GAAK,MAErD,YAAjB7B,EAAOI,OAAsC,WAAfJ,EAAOrB,KAAqC,eAAjBqB,EAAOK,QAClEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEsB,OAASrB,EAAEqB,OAAU,GAAK,MAErD,YAAjB7B,EAAOI,OAAsC,WAAfJ,EAAOrB,KAAqC,cAAjBqB,EAAOK,QAClEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE0I,OAASzI,EAAEyI,OAAU,GAAK,MAErD,YAAjBjJ,EAAOI,OAAsC,WAAfJ,EAAOrB,KAAqC,eAAjBqB,EAAOK,QAClEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE0I,OAASzI,EAAEyI,OAAU,GAAK,MAErD,YAAjBjJ,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAChEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEwI,KAAOvI,EAAEuI,KAAQ,GAAK,MAEjD,YAAjB/I,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAChEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEwI,KAAOvI,EAAEuI,KAAQ,GAAK,MAEjD,YAAjB/I,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAChEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE2I,KAAO1I,EAAE0I,KAAQ,GAAK,MAEjD,YAAjBlJ,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAChEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE2I,KAAO1I,EAAE0I,KAAQ,GAAK,MAEjD,YAAjBlJ,EAAOI,OAAsC,WAAfJ,EAAOrB,KAAqC,cAAjBqB,EAAOK,QAClEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE4I,OAAS3I,EAAE2I,OAAU,GAAK,MAErD,YAAjBnJ,EAAOI,OAAsC,WAAfJ,EAAOrB,KAAqC,eAAjBqB,EAAOK,QAClEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE4I,OAAS3I,EAAE2I,OAAU,GAAK,MAErD,YAAjBnJ,EAAOI,OAAsC,YAAfJ,EAAOrB,KAAsC,cAAjBqB,EAAOK,QACnEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEyI,QAAUxI,EAAEwI,QAAW,GAAK,MAEvD,YAAjBhJ,EAAOI,OAAsC,YAAfJ,EAAOrB,KAAsC,eAAjBqB,EAAOK,QACnEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEyI,QAAUxI,EAAEwI,QAAW,GAAK,MAEvD,YAAjBhJ,EAAOI,OAAsC,eAAfJ,EAAOrB,KAAyC,cAAjBqB,EAAOK,QACtEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEmJ,WAAalJ,EAAEkJ,WAAc,GAAK,MAE7D,YAAjB1J,EAAOI,OAAsC,eAAfJ,EAAOrB,KAAyC,eAAjBqB,EAAOK,QACtEoJ,EAAiBF,EAAWjJ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEmJ,WAAalJ,EAAEkJ,WAAc,GAAK,MAE7D,YAAjB1J,EAAOI,OAAsC,YAAfJ,EAAOrB,MACvC8K,EAAiBF,EAAWvJ,QAAO,SAAAU,GAAC,OAAIA,EAAE0I,UAAYpJ,EAAOK,UAE1C,YAAjBL,EAAOI,QACTqJ,EAAiBF,GAGnB,IAAI3K,EAAQ,EAEN4K,EAAYC,EAAe5I,KAAI,SAAAiI,GAInC,OAFAlK,EAAQ6K,EAAe3I,QAAQgI,GAAS,EAGtC,kBAAC,GAAD,CACEnK,IAAKC,EACLkK,QAASA,EACThJ,SAAU3G,EAAM2G,SAChBN,UAAWrG,EAAMqG,UACjB6J,YAAalQ,EAAMkQ,iBAKzB,OAAO,wBAAIhQ,UAAU,eAAemQ,ICkBvB6Q,GAnFO,SAAAlhB,GAAU,IAAD,EACHoF,oBAAS,GADN,mBACtBlC,EADsB,KACfmC,EADe,OAWUD,oBAAS,GAXnB,mBAWrBE,EAXqB,KAWRC,EAXQ,KAqB7B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMmhB,UAAU5a,OAEhD,kBAACb,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,aACY,0BAAMA,UAAU,QAAQF,EAAMmhB,UAAUC,WAEpD,kBAAC,IAAD,CAAiBxe,KAAMmD,IAAO7F,UAAU,WAAW+B,QA7BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAyBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMmhB,UAAU5a,QAGhD,4BACA,kBAACb,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,aACY,0BAAMA,UAAU,QAAQF,EAAMmhB,UAAUC,YAGpD,4BACA,kBAAC1b,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMmhB,UAAUvH,QAAQC,SAGzD,4BACA,kBAACnU,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMmhB,UAAUvH,QAAQE,SAGzD,4BACA,kBAACpU,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,WACU,0BAAMA,UAAU,QAAQF,EAAMmhB,UAAUvH,QAAQG,WAGrC,IAApB/Z,EAAMqG,WACL,4BACA,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QAlDrC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QAgDS,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMmhB,YAA1E,kBC/BLE,GA7Cc,SAAArhB,GAAU,IAE3B6G,EAF0B,iBAEhB7G,EAAM6G,QACtBya,EAAathB,EAAMmhB,UACnBI,EAAiB,GAEA,cAAjB1a,EAAOI,OAAwC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAClEqa,EAAiBD,EAAWna,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAEjD,cAAjBM,EAAOI,OAAwC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAClEqa,EAAiBD,EAAWna,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAEjD,cAAjBM,EAAOI,OAAwC,aAAfJ,EAAOrB,KAAuC,cAAjBqB,EAAOK,QACtEqa,EAAiBD,EAAWna,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEga,SAAW/Z,EAAE+Z,SAAY,GAAK,MAEzD,cAAjBva,EAAOI,OAAwC,aAAfJ,EAAOrB,KAAuC,eAAjBqB,EAAOK,QACtEqa,EAAiBD,EAAWna,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEga,SAAW/Z,EAAE+Z,SAAY,GAAK,MAKzD,cAAjBva,EAAOI,QACTsa,EAAiBD,GAGnB,IAAI7b,EAAQ,EAEN0b,EAAYI,EAAe7Z,KAAI,SAAA8Z,GAInC,OAFA/b,EAAQ8b,EAAe5Z,QAAQ6Z,GAAe,EAG5C,kBAAC,GAAD,CACEhc,IAAKC,EACL0b,UAAWK,EACX7a,SAAU3G,EAAM2G,SAChBN,UAAWrG,EAAMqG,UACjB6J,YAAalQ,EAAMkQ,iBAKzB,OAAO,wBAAIhQ,UAAU,eAAeihB,ICOvBM,GArCQ,SAAAzhB,GAAU,IAAD,EAEQoF,oBAAS,GAFjB,mBAEvBE,EAFuB,KAEVC,EAFU,KAY9B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAE1B,kBAACiC,EAAA,EAAD,KACE,2BACE,0BAAMjC,UAAU,QAAQF,EAAM0hB,cAEX,IAApB1hB,EAAMqG,WACL,kBAAC,IAAD,CAAiBzD,KAAM+e,IAAUzhB,UAAU,WAAW+B,QAjBhC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,OAeU,IAApBvF,EAAMqG,YACY,IAAhBf,GACD,kBAAC/C,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW,CAClER,KAAMtC,EAAMsC,KACZof,WAAY1hB,EAAM0hB,WAClBE,KAAM5hB,EAAM4hB,QAHd,aCfGC,GAtBe,SAAA7hB,GAE5B,IAAIyF,EAAQ,EAENqc,EAAc9hB,EAAM8hB,YAAYpa,KAAI,SAAAga,GAGxC,OAFAjc,EAAQzF,EAAM8hB,YAAYna,QAAQ+Z,GAAY,EAG5C,kBAAC,GAAD,CACElc,IAAKC,EACLmc,KAAM5hB,EAAM4hB,KACZF,WAAYA,EACZ/a,SAAU3G,EAAM2G,SAChBN,UAAWrG,EAAMqG,UACjB/D,KAAMtC,EAAMsC,UAKlB,OAAO,wBAAIpC,UAAU,eAAe4hB,IC2EvBC,GArFK,SAAA/hB,GAAU,IAAD,EACDoF,oBAAS,GADR,mBACpBlC,EADoB,KACbmC,EADa,OAWYD,oBAAS,GAXrB,mBAWnBE,EAXmB,KAWNC,EAXM,KAsB3B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMgiB,QAAQpe,QAE/C,kBAAC,IAAD,CAAiBhB,KAAMmD,IAAO7F,UAAU,WAAW+B,QA3BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAuBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMgiB,QAAQpe,SAG/C,4BACA,kBAAC8B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMgiB,QAAQ1f,QAG9C,4BACA,kBAACoD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,0BAAMA,UAAU,QAAQF,EAAMgiB,QAAQ9d,eAGrD,4BACA,kBAACwB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,kBAAC,IAAD,CAAiB0C,KAAMqf,IAAc/hB,UAAU,WAAW+B,QAASjC,EAAMkiB,gBAAgBpf,U,EAAW,CAACmE,MAAO,UAAUlE,KAAK/C,EAAMgiB,aAEhJ,kBAAC,GAAD,CACEJ,KAAM5hB,EAAMgiB,QACZF,YAAa9hB,EAAMgiB,QAAQF,YAC3Bzb,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAMmiB,iBAChB7f,KAAK,aAGP,6BACqB,IAApBtC,EAAMqG,WACL,4BACA,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QAnDrC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,SAkDS,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMgiB,UAA1E,kBCnCLI,GA7CY,SAAApiB,GAAU,IAEzB6G,EAFwB,iBAEd7G,EAAM6G,QACtBwb,EAAariB,EAAMsiB,UACnBC,EAAiB,GAEA,YAAjB1b,EAAOI,OAAsC,UAAfJ,EAAOrB,KAAoC,cAAjBqB,EAAOK,QACjEqb,EAAiBF,EAAWlb,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAEnD,YAAjBiD,EAAOI,OAAsC,UAAfJ,EAAOrB,KAAoC,eAAjBqB,EAAOK,QACjEqb,EAAiBF,EAAWlb,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAEnD,YAAjBiD,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAChEqb,EAAiBF,EAAWlb,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEjD,YAAjBuE,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAChEqb,EAAiBF,EAAWlb,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAKjD,YAAjBuE,EAAOI,QACTsb,EAAiBF,GAGnB,IAAI5c,EAAQ,EAEN6c,EAAYC,EAAe7a,KAAI,SAAAsa,GAGnC,OAFAvc,EAAQ8c,EAAe5a,QAAQqa,GAAS,EAGtC,kBAAC,GAAD,CACExc,IAAKC,EACLuc,QAASA,EACTrb,SAAU3G,EAAM2G,SAChBN,UAAWrG,EAAMqG,UACjB6b,gBAAiBliB,EAAMkiB,gBACvBC,iBAAkBniB,EAAMmiB,sBAK9B,OAAO,wBAAIjiB,UAAU,eAAeoiB,ICmDvBE,GApFQ,SAAAxiB,GAAU,IAAD,EACJoF,oBAAS,GADL,mBACvBlC,EADuB,KAChBmC,EADgB,OAWSD,oBAAS,GAXlB,mBAWtBE,EAXsB,KAWTC,EAXS,KAsB9B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMyiB,WAAW7e,QAGlD,kBAAC,IAAD,CAAiBhB,KAAMmD,IAAO7F,UAAU,WAAW+B,QA5BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAwBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMyiB,WAAW7e,SAGlD,4BACA,kBAAC8B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMyiB,WAAWngB,QAGjD,4BACA,kBAACoD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,0BAAMA,UAAU,QAAQF,EAAMyiB,WAAWve,eAGxD,4BACA,kBAACwB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,kBAAC,IAAD,CAAiB0C,KAAMqf,IAAc/hB,UAAU,WAAW+B,QAASjC,EAAMkiB,gBAAgBpf,U,EAAW,CAACmE,MAAO,aAAalE,KAAK/C,EAAMyiB,gBAEnJ,kBAAC,GAAD,CACEb,KAAM5hB,EAAMyiB,WACZX,YAAa9hB,EAAMyiB,WAAWX,YAC9Bzb,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAMmiB,iBAChB7f,KAAK,iBAGc,IAApBtC,EAAMqG,WACL,4BACE,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QAnDvC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QAiDS,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMyiB,aAA1E,kBClCLC,GA7Ce,SAAA1iB,GAAU,IAE5B6G,EAF2B,iBAEjB7G,EAAM6G,QACtB8b,EAAc3iB,EAAMyiB,WACpBG,EAAkB,GAED,eAAjB/b,EAAOI,OAAyC,UAAfJ,EAAOrB,KAAoC,cAAjBqB,EAAOK,QACpE0b,EAAkBD,EAAYxb,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAErD,eAAjBiD,EAAOI,OAAyC,UAAfJ,EAAOrB,KAAoC,eAAjBqB,EAAOK,QACpE0b,EAAkBD,EAAYxb,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAErD,eAAjBiD,EAAOI,OAAyC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QACnE0b,EAAkBD,EAAYxb,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEnD,eAAjBuE,EAAOI,OAAyC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QACnE0b,EAAkBD,EAAYxb,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAKnD,eAAjBuE,EAAOI,QACT2b,EAAkBD,GAGpB,IAAIld,EAAQ,EAENgd,EAAaG,EAAgBlb,KAAI,SAAAmb,GAGrC,OAFApd,EAAQmd,EAAgBjb,QAAQkb,GAAgB,EAG9C,kBAAC,GAAD,CACErd,IAAKC,EACLgd,WAAYI,EACZlc,SAAU3G,EAAM2G,SAChBN,UAAWrG,EAAMqG,UACjB6b,gBAAiBliB,EAAMkiB,gBACvBC,iBAAkBniB,EAAMmiB,sBAK9B,OAAO,wBAAIjiB,UAAU,eAAeuiB,ICuCvBrR,GA1EG,SAACpR,GAAW,IAAD,EACDoF,oBAAS,GADR,mBACpBlC,EADoB,KACbmC,EADa,OAWYD,oBAAS,GAXrB,mBAWnBE,EAXmB,KAWNC,EAXM,KAsB3B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMqR,MAAMC,OAG5C,kBAAC,IAAD,CAAiB1O,KAAMmD,IAAO7F,UAAU,WAAW+B,QA5BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAwBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMqR,MAAM9K,QAG5C,4BACA,kBAACb,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMqR,MAAM/O,QAG5C,4BACA,kBAACoD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMqR,MAAMC,SAGvB,IAApBtR,EAAMqG,WACL,4BACA,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QAvCrC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QAqCS,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMqR,QAA1E,kBCfLyR,GAlDU,SAAA9iB,GAAU,IAEvB6G,EAFsB,iBAEZ7G,EAAM6G,QACtB2K,EAAUxR,EAAMyR,OAChBC,EAAc,GAEG,UAAjB7K,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC9DwK,EAAcF,EAAQrK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAE3C,UAAjBM,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC9DwK,EAAcF,EAAQrK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAE3C,UAAjBM,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC9DwK,EAAcF,EAAQrK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAE3C,UAAjBuE,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC9DwK,EAAcF,EAAQrK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAE3C,UAAjBuE,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC9DwK,EAAcF,EAAQrK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEkK,KAAOjK,EAAEiK,KAAQ,GAAK,MAE3C,UAAjBzK,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC9DwK,EAAcF,EAAQrK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEkK,KAAOjK,EAAEiK,KAAQ,GAAK,MAK3C,UAAjBzK,EAAOI,QACTyK,EAAcF,GAGhB,IAAI/L,EAAQ,EAENgM,EAASC,EAAYhK,KAAI,SAAA2J,GAI7B,OAFA5L,EAAQiM,EAAY/J,QAAQ0J,GAAO,EAGjC,kBAAC,GAAD,CACE7L,IAAKC,EACL4L,MAAOA,EACPhL,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,cAKtB,OAAO,wBAAIzG,UAAU,aAAauR,ICGrBsR,GAlDM,SAAA/iB,GAAU,IAEnB6G,EAFkB,iBAER7G,EAAM6G,QACtBgL,EAAS7R,EAAM8R,MACfC,EAAa,GAEI,SAAjBlL,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC7D6K,EAAaF,EAAO1K,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAEzC,SAAjBM,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC7D6K,EAAaF,EAAO1K,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAEzC,SAAjBM,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC7D6K,EAAaF,EAAO1K,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEzC,SAAjBuE,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC7D6K,EAAaF,EAAO1K,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEzC,SAAjBuE,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC7D6K,EAAaF,EAAO1K,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEkK,KAAOjK,EAAEiK,KAAQ,GAAK,MAEzC,SAAjBzK,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC7D6K,EAAaF,EAAO1K,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEkK,KAAOjK,EAAEiK,KAAQ,GAAK,MAKzC,SAAjBzK,EAAOI,QACT8K,EAAaF,GAGf,IAAIpM,EAAQ,EAENqM,EAAQC,EAAWrK,KAAI,SAAAtG,GAI3B,OAFAqE,EAAQsM,EAAWpK,QAAQvG,GAAM,EAG/B,kBAAC,GAAD,CACEoE,IAAKC,EACLrE,KAAMA,EACNiF,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,cAKtB,OAAO,wBAAIzG,UAAU,YAAY4R,ICTpBG,GAhCE,SAAAjS,GAAU,IAAD,EACEoF,oBAAS,GADX,mBACjBlC,EADiB,KACVmC,EADU,KAUxB,OACE,wBAAIG,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMkS,OAEtC,kBAAC,IAAD,CAAiBtP,KAAM0D,IAAYpG,UAAU,WAAW+B,QAftC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAWM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,sBACQ,IAApBF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMkS,OAA1E,eCWD8Q,GAtCS,SAAAhjB,GAAU,IAEtB6G,EAFqB,iBAEX7G,EAAM6G,QACtBuL,EAASpS,EAAMqS,MACfC,EAAa,GAEI,SAAjBzL,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC7DoL,EAAaF,EAAOjL,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,EAAK,GAAK,MAE/B,SAAjBR,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC7DoL,EAAaF,EAAOjL,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,EAAK,GAAK,MAK/B,SAAjBR,EAAOI,QACTqL,EAAaF,GAGf,IAAI3M,EAAQ,EAEN4M,EAAQC,EAAW5K,KAAI,SAAAwK,GAI3B,OAFAzM,EAAQ6M,EAAW3K,QAAQuK,GAAM,EAG/B,kBAAC,GAAD,CACE1M,IAAKC,EACLyM,KAAMA,EACN7L,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,cAKtB,OAAO,wBAAIzG,UAAU,YAAYmS,ICEpB4Q,GA/BC,SAAAjjB,GAAU,IAAD,EACGoF,oBAAS,GADZ,mBAChBlC,EADgB,KACTmC,EADS,KAUvB,OACE,wBAAIG,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,QACO,0BAAMA,UAAU,QAAQF,EAAMkjB,MAErC,kBAAC,IAAD,CAAiBtgB,KAAM0D,IAAYpG,UAAU,WAAW+B,QAftC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAWM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,sBACQ,IAApBF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMkjB,MAA1E,eCWDC,GAtCQ,SAAAnjB,GAAU,IAErB6G,EAFoB,iBAEV7G,EAAM6G,QACtBuc,EAAQpjB,EAAMqjB,KACdC,EAAY,GAEK,QAAjBzc,EAAOI,OAAkC,QAAfJ,EAAOrB,KAAkC,cAAjBqB,EAAOK,QAC3Doc,EAAYF,EAAMjc,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,EAAK,GAAK,MAE7B,QAAjBR,EAAOI,OAAkC,QAAfJ,EAAOrB,KAAkC,eAAjBqB,EAAOK,QAC3Doc,EAAYF,EAAMjc,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,EAAK,GAAK,MAK7B,QAAjBR,EAAOI,QACTqc,EAAYF,GAGd,IAAI3d,EAAQ,EAEN4d,EAAOC,EAAU5b,KAAI,SAAAwb,GAIzB,OAFAzd,EAAQ6d,EAAU3b,QAAQub,GAAK,EAG7B,kBAAC,GAAD,CACE1d,IAAKC,EACLyd,IAAKA,EACL7c,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,cAKtB,OAAO,wBAAIzG,UAAU,YAAYmjB,IC6FpBE,I,MA/GG,SAAAvjB,GAAU,IAAD,EAECoF,oBAAS,GAFV,mBAElBlC,EAFkB,KAEXmC,EAFW,OAYaD,oBAAS,GAZtB,mBAYlBE,EAZkB,KAYLC,EAZK,KAsBzB,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQmD,IAAOC,KAAKtD,EAAMmE,MAAMZ,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,gBAEhG,kBAACgC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMmE,MAAMR,OAE5C,kBAAC+B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMmE,MAAMP,QAE7C,kBAAC,IAAD,CAAiBhB,KAAMmD,IAAO7F,UAAU,WAAW+B,QAhCjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OA4BHrF,EAAMwjB,aACJ,kBAAC,IAAD,CAAiB5gB,KAAMC,IAAmB3C,UAAU,WAAW+B,QAASjC,EAAMiG,YAAYnD,U,EAAW9C,EAAMmE,SAG9GnE,EAAMwjB,aACL,kBAAC,IAAD,CACExhB,GAAI,CACFiB,SAAU,UACVC,MAAO,CAACiB,MAAOnE,EAAMmE,MAAMf,OAG/B,kBAAC,IAAD,CAAiBR,KAAMC,IAAmB3C,UAAU,cAIrDF,EAAMqG,WACL,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QAvClC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,OAoCA,IAAVrC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,OACM,0BAAMA,UAAU,QAAQF,EAAMmE,MAAMf,OAG1C,4BACA,kBAACsC,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMmE,MAAM7B,QAG5C,4BACA,kBAACoD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMmE,MAAMN,YAG7C7D,EAAMwjB,aACN,4BACA,kBAAC9d,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,cAKAF,EAAMwjB,aACN,4BACA,kBAAC9d,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,OACM,0BAAMA,UAAU,QAAQF,EAAMmE,MAAM0B,QAAQzC,QAIlDpD,EAAMwjB,aACN,4BACA,kBAAC9d,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMmE,MAAM0B,QAAQU,WASzC,IAAhBjB,GACC,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,sBACQ,IAApBF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMmE,QAA1E,gBCtDDsf,I,MAhEG,SAAAzjB,GAAU,IAEhB6G,EAFe,iBAEL7G,EAAM6G,QACtB6c,EAAU1jB,EAAM2jB,OAChBC,EAAc,GAEG,UAAjB/c,EAAOI,OAAoC,UAAfJ,EAAOrB,KAAoC,cAAjBqB,EAAOK,QAC/D0c,EAAcF,EAAQvc,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAE7C,UAAjBiD,EAAOI,OAAoC,UAAfJ,EAAOrB,KAAoC,eAAjBqB,EAAOK,QAC/D0c,EAAcF,EAAQvc,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAE7C,UAAjBiD,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC9D0c,EAAcF,EAAQvc,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE7D,KAAO8D,EAAE9D,KAAQ,GAAK,MAE3C,UAAjBsD,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC9D0c,EAAcF,EAAQvc,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE7D,KAAO8D,EAAE9D,KAAQ,GAAK,MAE3C,UAAjBsD,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC9D0c,EAAcF,EAAQvc,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzD,KAAO0D,EAAE1D,KAAQ,GAAK,MAE3C,UAAjBkD,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC9D0c,EAAcF,EAAQvc,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzD,KAAO0D,EAAE1D,KAAQ,GAAK,MAE3C,UAAjBkD,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC9D0c,EAAcF,EAAQvc,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAE3C,UAAjBuE,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC9D0c,EAAcF,EAAQvc,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAE3C,UAAjBuE,EAAOI,OAAoC,YAAfJ,EAAOrB,KAAsC,cAAjBqB,EAAOK,QACjE0c,EAAcF,EAAQvc,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEvD,QAAUwD,EAAExD,QAAW,GAAK,MAEjD,UAAjBgD,EAAOI,OAAoC,YAAfJ,EAAOrB,KAAsC,eAAjBqB,EAAOK,QACjE0c,EAAcF,EAAQvc,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEvD,QAAUwD,EAAExD,QAAW,GAAK,MAKjD,UAAjBgD,EAAOI,QACT2c,EAAcF,GAGhB,IAAIje,EAAQ,EAENke,EAASC,EAAYlc,KAAI,SAAAvD,GAI7B,OAFAsB,EAAQme,EAAYjc,QAAQxD,GAAO,EAGjC,kBAAC,GAAD,CACEqB,IAAKC,EACLtB,MAAOA,EACPkC,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,SAChBV,YAAajG,EAAMiG,YACnBud,YAAaxjB,EAAMwjB,iBAKzB,OAAO,wBAAItjB,UAAU,aAAayjB,KCnBrBE,GAxCW,SAAC7jB,GAE3B,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,cAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,wCACA,4CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,iDAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCOS+Z,GAxCc,SAAC9jB,GAE9B,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,iBAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACjB,wCACA,4CAKJ,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,iDAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCOSga,GAxCa,SAAC/jB,GAE7B,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,gBAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,wCACA,+CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,iDAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCYSia,GA7CS,SAAChkB,GAEzB,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,YAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,yCACA,wCACA,2CACA,wCACA,2CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,8CACA,wCACA,4CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCCSka,GAvCO,SAACjkB,GAEvB,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,UAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,0CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,iDAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCJSma,GA3BsB,SAAClkB,GAEtC,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,mDACA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAO4E,MAAOlH,EAAMiH,SAGzC,kBAACqC,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,kCAI1C,kBAACR,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cCGSoa,GAvBI,SAACnkB,GAEpB,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,wCAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,sBAIrD,kBAACR,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cC0CSqa,GA1DU,SAACpkB,GAE1B,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,+CAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,UAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,YAC7B,kBAACL,EAAA,EAAKM,MAAN,iBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,0CACA,0CACA,2CACA,0CACA,+CACA,+CACA,yCACA,wCACA,yCACA,yCACA,6CAMN,kBAACJ,EAAA,EAAKnH,IAAN,KACA,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,QAAQwH,YAAY,6BAIzC,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,gBAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,UAC7B,kBAACL,EAAA,EAAKM,MAAN,eACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,iBAI1C,kBAACR,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cCLSsa,GA7CQ,SAACrkB,GAExB,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,2CAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,WAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,wCACA,2CAMN,kBAACJ,EAAA,EAAKnH,IAAN,KACA,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,OAInD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,KACd,kBAACqE,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOgR,GAAG,YAAYxJ,YAAY,OAAOyJ,SAAU,SAACC,GAAO/D,EAAYgE,cAAcrS,KAAOoS,EAAE7O,OAAOmN,MAAM,QAIlI,kBAACxI,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cCGSua,GAzCW,SAACtkB,GAE3B,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,8CAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,WAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,WAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,OAIrD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,KACd,kBAACqE,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOgR,GAAG,YAAYxJ,YAAY,OAAOyJ,SAAU,SAACC,GAAO/D,EAAYgE,cAAcrS,KAAOoS,EAAE7O,OAAOmN,MAAM,QAIlI,kBAACxI,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cCJSwa,GA9BW,SAACvkB,GAE3B,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,8CAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,cAC7B,kBAACL,EAAA,EAAKM,MAAN,mBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWwH,YAAY,wBAI9C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,KACd,kBAACqE,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOgR,GAAG,YAAYxJ,YAAY,OAAOyJ,SAAU,SAACC,GAAO/D,EAAYgE,cAAcrS,KAAOoS,EAAE7O,OAAOmN,MAAM,QAIlI,kBAACxI,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cC8BAya,G,kDAgDJ,WAAYxkB,GAAQ,IAAD,8BACjB,cAAMA,IAhDRkD,MAAQ,CACNzC,UAAW,KACXE,KAAM,KACNkE,SAAS,EACTC,cAAe,OACfC,SAAS,EACTjD,QAAS,KACTpB,aAAc,KACd+J,WAAW,EACXC,UAAW,KACXkJ,eAAe,EACfC,QAAS,OACThN,OAAQ,CACNI,MAAO,KACPzB,IAAK,KACL0B,MAAO,MAET4M,aAAc,KACdC,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,MAETZ,WAAW,EACX2N,kBAAmB,CACjB9Q,MAAO,KACP+D,MAAO,MAETlG,aAAc,KACdC,gBAAiB,EAAKhB,MAAM6F,QAC5B4e,mBAAmB,EACnBC,kBAAmB,KACnBvQ,qBAAsB,KACtBwQ,eAAgB,KAChBvQ,WAAY,KACZC,QAAS,CACP3P,OAAQ,KACRC,OAAQ,KACRtC,OAAQ,MAEVuiB,aAAa,EACbC,YAAa,CACXviB,KAAM,KACNS,KAAM,OAKS,EAmHrBuR,qBAAuB,SAACpH,GACtBA,EAAMC,iBACNzB,QAAQC,IAAI,wBACZ,EAAK7J,QAAQL,aAAa,wBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAC/BsF,EAASwE,EAAMvI,OAAO+D,OAAOxB,MAC7B4I,EAAS5C,EAAMvI,OAAOmL,OAAO5I,MAC7B0I,EAAO1C,EAAMvI,OAAOiL,KAAK1I,MACzB6I,EAAO7C,EAAMvI,OAAOoL,KAAK7I,MACzB8I,EAAS9C,EAAMvI,OAAOqL,OAAO9I,MAC7B2I,EAAU3C,EAAMvI,OAAOkL,QAAQ3I,MAC/BqJ,EAAarD,EAAMvI,OAAO4L,WAAWrJ,MAEvC0E,EAAc,CAChBC,MAAM,6DAAD,OAEarL,EAFb,kCAGYsN,EAHZ,+DAKiBpF,EALjB,uCAMkBoH,EANlB,sCAOgBF,EAPhB,sCAQgBG,EARhB,wCASkBC,EATlB,yCAUmBH,EAVnB,4CAWsBU,EAXtB,04BAePzE,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,6BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAM8kB,cAAcrY,EAAQ1J,KAAKgiB,mBACtC,EAAK1f,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAKgiB,kBAC9BtkB,UAAU,gCAAD,OAAkCD,EAAlC,sBAA0DsN,GACnEiG,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQd,gBAAkByL,EAAQ1J,KAAKgiB,kBAC5C,EAAKnW,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAjMX,EAoMrB+J,cAAgB,SAAC9S,GACfgK,QAAQC,IAAI,0BACZ,EAAK7J,QAAQL,aAAa,0BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAEjCwI,EAAc,CAChBC,MAAM,gEAAD,OAEarL,EAFb,kCAGYsN,EAHZ,+DAKiBpM,EAAKgH,OALtB,uCAMkBhH,EAAKoO,OANvB,sCAOgBpO,EAAKkO,KAPrB,sCAQgBlO,EAAKqO,KARrB,wCASkBrO,EAAKsO,OATvB,yCAUmBtO,EAAKmO,QAVxB,4CAWsBnO,EAAK6O,WAX3B,wCAYkB7O,EAAKuO,QAZvB,y4BAgBPnE,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,gCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAM8kB,cAAcrY,EAAQ1J,KAAKiiB,sBACtC,EAAK3f,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAKiiB,qBAC9BvkB,UAAU,mCAAD,OAAqCD,EAArC,sBAA6DsN,KAExE,EAAKhM,QAAQd,gBAAkByL,EAAQ1J,KAAKiiB,qBAC5C,EAAKpW,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAvQX,EA0QrBiK,kBAAoB,SAAChT,GACnBgK,QAAQC,IAAI,iCACZ,EAAK7J,QAAQL,aAAa,iCAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAEjCwI,EAAc,CAChBC,MAAM,oEAAD,OAEarL,EAFb,kCAGYsN,EAHZ,+DAKiBpM,EAAKgH,OALtB,uCAMkBhH,EAAKoO,OANvB,sCAOgBpO,EAAKkO,KAPrB,sCAQgBlO,EAAKqO,KARrB,wCASkBrO,EAAKsO,OATvB,yCAUmBtO,EAAKmO,QAVxB,4CAWsBnO,EAAK6O,WAX3B,44BAePzE,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,qCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAM8kB,cAAcrY,EAAQ1J,KAAKkiB,0BACtC,EAAK5f,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAKkiB,yBAC9BxkB,UAAU,uCAAD,OAAyCD,EAAzC,sBAAiEsN,KAE5E,EAAKhM,QAAQd,gBAAkByL,EAAQ1J,KAAKkiB,yBAC5C,EAAKrW,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA5UX,EAgVrBya,uBAAyB,SAAChY,GACxBA,EAAMC,iBACNzB,QAAQC,IAAI,yBACZ,EAAK7J,QAAQL,aAAa,4BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAC/BmD,EAAO2G,EAAMvI,OAAO4B,KAAKW,MACzBka,EAAWlU,EAAMvI,OAAOyc,SAASla,MACjC2S,EAAQ3M,EAAMvI,OAAOkV,MAAM3S,MAC3B4S,EAAQ5M,EAAMvI,OAAOmV,MAAM5S,MAC3B6S,EAAS7M,EAAMvI,OAAOoV,OAAO7S,MAE/B0E,EAAc,CAChBC,MAAM,+DAAD,OAEarL,EAFb,kCAGYsN,EAHZ,gEAKkBvH,EALlB,4CAMsB6a,EANtB,gDAO0BvH,EAP1B,iDAQ2BC,EAR3B,iDAS2BC,EAT3B,04BAaPjO,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,iCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAM8kB,cAAcrY,EAAQ1J,KAAKoiB,qBACtC,EAAK9f,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAKoiB,oBAC9B1kB,UAAU,kCAAD,OAAoCD,EAApC,sBAA4DsN,GACrEiG,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQd,gBAAkByL,EAAQ1J,KAAKoiB,oBAC5C,EAAKvW,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA1ZX,EA6ZrB2a,gBAAkB,SAAC1jB,GACjBgK,QAAQC,IAAI,8BACZ,EAAK7J,QAAQL,aAAa,+BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAEjCwI,EAAc,CAChBC,MAAM,kEAAD,OAEarL,EAFb,kCAGYsN,EAHZ,gEAKkBpM,EAAK6E,KALvB,4CAMsB7E,EAAK0f,SAN3B,gDAO0B1f,EAAKkY,QAAQC,MAPvC,iDAQ2BnY,EAAKkY,QAAQyL,OARxC,iDAS2B3jB,EAAKkY,QAAQG,OATxC,04BAaPjO,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GACJf,QAAQC,IAAI,gBAAgBc,EAAQ1J,KAAKuiB,wBACzC,IAAI5Y,EAAgB,oCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAM8kB,cAAcrY,EAAQ1J,KAAKuiB,wBACtC,EAAKjgB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAKuiB,uBAC9B7kB,UAAU,qCAAD,OAAuCD,EAAvC,sBAA+DsN,GACxEiG,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQd,gBAAkByL,EAAQ1J,KAAKuiB,uBAC5C,EAAK1W,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAjeX,EAqerB8a,qBAAuB,SAACrY,GACtBA,EAAMC,iBACNzB,QAAQC,IAAI,qBACZ,EAAK7J,QAAQL,aAAa,wBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAiBI8M,EAjBEhX,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAC/BQ,EAAQsJ,EAAMvI,OAAOf,MAAMsD,MAC3B5E,EAAO4K,EAAMvI,OAAOrC,KAAK4E,MACzBhD,EAAcgJ,EAAMvI,OAAOT,YAAYgD,MAC1BgG,EAAMvI,OAAO+c,WAAWxa,MAE3C,GAC4B,IAAxBtD,EAAMgY,OAAOC,QACiB,IAA9B3X,EAAY0X,OAAOC,OAIrB,OAFA,EAAK/Z,QAAQL,aAAa,8BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAa5B,GAPqC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,QACzBqQ,EAAY,IAMwB,KAAjCrK,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,WAAWjI,EAAU,uBACtCpC,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCsB,EAHgB,6CAA6CxB,EAAS,IAAID,EAAS,IAAIE,EAKvF,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,4BAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,uBAGZE,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,qBACRtC,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,qBACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,qBACRtC,OAAQ,eAMpB,IAAIuJ,EAAc,CAChBC,MAAM,6DAAD,OAEarL,EAFb,kCAGYsN,EAHZ,8DAKgBxL,EALhB,uCAMiBsB,EANjB,6CAOuBM,EAPvB,4CAQsBqT,EARtB,04BAYPzL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,6BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAM8kB,cAAcrY,EAAQ1J,KAAKyiB,mBACtC,EAAKngB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAKyiB,kBAC9B/kB,UAAU,gCAAD,OAAkCD,EAAlC,sBAA0DsN,GACnEiG,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQd,gBAAkByL,EAAQ1J,KAAKyiB,kBAC5C,EAAK5W,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAroBX,EAwoBrBgb,cAAgB,SAAC/jB,GACfgK,QAAQC,IAAI,0BACZ,EAAK7J,QAAQL,aAAa,0BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAEjCwI,EAAc,CAChBC,MAAM,gEAAD,OAEarL,EAFb,kCAGYsN,EAHZ,8DAKgBpM,EAAKY,KALrB,uCAMiBZ,EAAKkC,MANtB,6CAOuBlC,EAAKwC,YAP5B,6CAQuBxC,EAAKogB,YAR5B,04BAYPhW,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,gCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAM8kB,cAAcrY,EAAQ1J,KAAK2iB,sBACtC,EAAKrgB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAK2iB,qBAC9BjlB,UAAU,mCAAD,OAAqCD,EAArC,sBAA6DsN,GACtEiG,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQd,gBAAkByL,EAAQ1J,KAAK2iB,qBAC5C,EAAK9W,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAGpD,IAAMolB,EAAiBjkB,EAAKogB,YAGtB8D,EAAY,qDAAqD9X,EAAU,wBAG3EoI,EAAS,CACbC,WAAY,mBACZC,QANe,WAAWtI,EAAU,uBAOpCuI,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,gCAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAO,wBAGXE,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,gBAIZqJ,QAAQC,IAAI,SACZ,IAAK,IAAIka,EAAQ,EAAGA,EAAQF,EAAe9J,OAAQgK,IAAS,CAC1D,IAAIC,EAAgBH,EAAeE,GACnCna,QAAQC,IAAI,wBAAwBka,GAEpC,IACIE,EADWD,EACUE,QAAQJ,EAAU,IAE3ClP,EACCQ,WAAW6O,EAAW7P,GACtB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,GAC1B,EAAK9R,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,OAMf6G,QAAQC,IAAI,UAKbmB,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA9wBX,EAixBrBwb,wBAA0B,SAAC/Y,GACzBA,EAAMC,iBACNzB,QAAQC,IAAI,wBACZ,EAAK7J,QAAQL,aAAa,2BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAkBI8M,EAlBEhX,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAC/BQ,EAAQsJ,EAAMvI,OAAOf,MAAMsD,MAC3B5E,EAAO4K,EAAMvI,OAAOrC,KAAK4E,MACzBhD,EAAcgJ,EAAMvI,OAAOT,YAAYgD,MAC1BgG,EAAMvI,OAAO+c,WAAWxa,MAE3C,GAC4B,IAAxBtD,EAAMgY,OAAOC,QACU,IAAvBvZ,EAAKsZ,OAAOC,QACkB,IAA9B3X,EAAY0X,OAAOC,OAIrB,OAFA,EAAK/Z,QAAQL,aAAa,8BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAa5B,GAPqC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,QACzBqQ,EAAY,IAMwB,KAAjCrK,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,WAAWjI,EAAU,0BACtCpC,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCsB,EAHgB,6CAA6CxB,EAAS,IAAID,EAAS,IAAIE,EAKvF,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,4BAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,0BAGZE,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,wBACRtC,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,wBACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,wBACRtC,OAAQ,eAMpB,IAAIuJ,EAAc,CAChBC,MAAM,gEAAD,OAEarL,EAFb,kCAGYsN,EAHZ,iEAKmBxL,EALnB,0CAMoBsB,EANpB,gDAO0BM,EAP1B,+CAQyBqT,EARzB,04BAYPzL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,gCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAM8kB,cAAcrY,EAAQ1J,KAAKmjB,sBACtC,EAAK7gB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAKmjB,qBAC9BzlB,UAAU,mCAAD,OAAqCD,EAArC,sBAA6DsN,GACtEiG,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQd,gBAAkByL,EAAQ1J,KAAKmjB,qBAC5C,EAAKtX,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAl7BX,EAq7BrB0b,iBAAmB,SAACzkB,GAClBgK,QAAQC,IAAI,6BACZ,EAAK7J,QAAQL,aAAa,6BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAEjCwI,EAAc,CAChBC,MAAM,mEAAD,OAEarL,EAFb,kCAGYsN,EAHZ,iEAKmBpM,EAAKY,KALxB,0CAMoBZ,EAAKkC,MANzB,gDAO0BlC,EAAKwC,YAP/B,gDAQ0BxC,EAAKogB,YAR/B,04BAYPhW,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,mCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAM8kB,cAAcrY,EAAQ1J,KAAKqjB,yBACtC,EAAK/gB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAKqjB,wBAC9B3lB,UAAU,sCAAD,OAAwCD,EAAxC,sBAAgEsN,GACzEiG,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQd,gBAAkByL,EAAQ1J,KAAKqjB,wBAC5C,EAAKxX,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAGpD,IAAMolB,EAAiBjkB,EAAKogB,YAGtB8D,EAAY,qDAAqD9X,EAAU,2BAG3EoI,EAAS,CACbC,WAAY,mBACZC,QANe,WAAWtI,EAAU,0BAOpCuI,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,gCAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAO,2BAGXE,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,gBAIZqJ,QAAQC,IAAI,SACZ,IAAK,IAAIka,EAAQ,EAAGA,EAAQF,EAAe9J,OAAQgK,IAAS,CAC1D,IAAIC,EAAgBH,EAAeE,GACnCna,QAAQC,IAAI,wBAAwBka,GAEpC,IACIE,EADWD,EACUE,QAAQJ,EAAU,IAE3ClP,EACCQ,WAAW6O,EAAW7P,GACtB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,GAC1B,EAAK9R,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,OAMf6G,QAAQC,IAAI,UAIbmB,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA1jCX,EA8jCrB4b,mBAAqB,SAAC3kB,GACpBgK,QAAQC,IAAI,8BACZ,EAAKtG,SAAS,CACZof,mBAAmB,EACnBC,kBAAmBhjB,KAlkCF,EAqkCrB4kB,oBAAsB,WACpB,EAAKjhB,SAAS,CACZof,mBAAmB,KAvkCF,EA0kCrB8B,cAAgB,SAACrZ,GACfA,EAAMC,iBACNzB,QAAQC,IAAI,2BACZ,EAAK7J,QAAQL,aAAa,2BAC1B,EAAK4D,SAAS,CACZoF,WAAW,EACXga,mBAAmB,IAGrB,IAMIlN,EA+EAiP,EACAC,EACAC,EAEAC,EACAC,EACAC,EAgBAjb,EA3GErL,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAEjC1B,GADgB,EAAK1B,MAAM6F,QAAQU,KAC5B,EAAKrD,MAAMwhB,mBAClBzd,EAAQvF,EAAKuF,MAGjB,GAAqC,KAAjCiG,EAAMvI,OAAOkR,UAAU3O,MAGrB,OAFJ,EAAKpF,QAAQL,aAAa,0CACtB,EAAK4D,SAAS,CAACoF,WAAW,IAIhC,GAAsC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,WAAWjI,EAAU,IAAI7G,EAAM,eAChDyE,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCsB,EAHgB,6CAA6CxB,EAAS,IAAID,EAAS,IAAIE,EAKvF,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,0CAC1BiK,QAAQC,IAAI,wCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAO,GAAD,OAAKsC,EAAL,iBAGVpC,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAO,GAAD,OAAKsC,EAAL,eACN5E,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAO,GAAD,OAAKsC,EAAL,eACN5E,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAO,GAAD,OAAKsC,EAAL,eACN5E,OAAQ,eAgBN,YAAV4E,IACFuf,EAAe9kB,EAAKqB,KAAKa,MACzB6iB,EAAc/kB,EAAKqB,KAAKT,KACxBokB,EAAqBhlB,EAAKqB,KAAKmB,aAGnB,eAAV+C,IACF0f,EAAkBjlB,EAAKqB,KAAKa,MAC5BgjB,EAAiBllB,EAAKqB,KAAKT,KAC3BukB,EAAwBnlB,EAAKqB,KAAKmB,aAKtB,YAAV+C,IACF2E,EAAc,CACZC,MAAM,2EAAD,OAEarL,EAFb,oCAGYsN,EAHZ,kEAKgB2Y,EALhB,yCAMiBD,EANjB,+CAOuBE,EAPvB,8CAQsBnP,EARtB,m5BAaK,eAAVtQ,IACF2E,EAAc,CACZC,MAAM,8EAAD,OAEarL,EAFb,oCAGYsN,EAHZ,qEAKmB8Y,EALnB,4CAMoBD,EANpB,kDAO0BE,EAP1B,iDAQyBtP,EARzB,m5BAgBTzL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAQJ,IAAIC,EAAgB,gCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAIvB,EAAK/K,QAAQL,aAAaiL,GAEZ,YAAVzF,IACF,EAAKjH,MAAM8kB,cAAcrY,EAAQ1J,KAAK+jB,6BACtC,EAAKzhB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAK+jB,4BAC9BrmB,UAAU,+CAAD,OAAiDD,EAAjD,sBAAyEsN,MAGxE,eAAV7G,IACF,EAAKjH,MAAM8kB,cAAcrY,EAAQ1J,KAAKgkB,gCACtC,EAAK1hB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAKgkB,+BAC9BtmB,UAAU,6CAAD,OAA+CD,EAA/C,sBAAuEsN,MAIpF,EAAKc,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA1xCX,EA8xCrB0X,iBAAmB,SAACzgB,GAClBgK,QAAQC,IAAI,6BACZ,EAAK7J,QAAQL,aAAa,2BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IASImB,EATErL,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAG/B6D,GAFc,EAAKjH,MAAM6F,QAAQU,KAEzB7E,EAAKY,MACbof,EAAahgB,EAAKggB,WAClBE,EAAOlgB,EAAKkgB,KAIlB,GAAc,YAAV3a,EAAqB,CACvB,IAAIwf,EAAc7E,EAAKtf,KACnBkkB,EAAe5E,EAAKhe,MACpB8iB,EAAqB9E,EAAK1d,YAC1B8iB,EAAoBtF,EAExB9V,EAAc,CACZC,MAAM,8EAAD,OAEarL,EAFb,oCAGYsN,EAHZ,kEAKgB2Y,EALhB,yCAMiBD,EANjB,+CAOuBE,EAPvB,8CAQsBM,EARtB,k5BAaT,GAAc,eAAV/f,EAAwB,CAC1B,IAAI2f,EAAiBhF,EAAKtf,KACtBqkB,EAAkB/E,EAAKhe,MACvBijB,EAAwBjF,EAAK1d,YAC7B+iB,EAAuBvF,EAE3B9V,EAAc,CACZC,MAAM,iFAAD,OAEarL,EAFb,oCAGYsN,EAHZ,qEAKmB8Y,EALnB,4CAMoBD,EANpB,kDAO0BE,EAP1B,iDAQyBI,EARzB,k5BAcTnb,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAQJ,IAAIC,EAAgB,mCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAIvB,EAAK/K,QAAQL,aAAaiL,GAEZ,YAAVzF,IACF,EAAKjH,MAAM8kB,cAAcrY,EAAQ1J,KAAKmkB,gCACtC,EAAK7hB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAKmkB,+BAC9BzmB,UAAU,6CAAD,OAA+CD,EAA/C,sBAAuEsN,MAGtE,eAAV7G,IACF,EAAKjH,MAAM8kB,cAAcrY,EAAQ1J,KAAKokB,mCACtC,EAAK9hB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAKokB,kCAC9B1mB,UAAU,gDAAD,OAAkDD,EAAlD,sBAA0EsN,MAIvF,EAAKc,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAEpD,IAAMwV,EAAW,WAAWjI,EAAU,IAAI7G,EAAM,eAC1C2e,EAAY,qDAAqD9X,EAAU,IAAI7G,EAAM,gBACrFgQ,EAAWyK,EACXqE,EAAY9O,EAAS+O,QAAQJ,EAAU,IAC7Cla,QAAQC,IAAI,KAAKoK,GACjBrK,QAAQC,IAAI,KAAKsL,GACjBvL,QAAQC,IAAI,KAAKoa,GACjB,IAAM7P,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,+BAC1BiK,QAAQC,IAAI,+BACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAO,GAAD,OAAKsC,EAAL,iBAGVpC,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAO,GAAD,OAAKsC,EAAL,eACN5E,OAAQ,gBAIZqU,EACCQ,WAAW6O,EAAW7P,GACtB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,GAC1B,EAAK9R,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,UAKdiI,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAt8CX,EA28CrBgL,mBAAqB,SAACvI,GACpBA,EAAMC,iBACNzB,QAAQC,IAAI,sBACZ,EAAK7J,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAKIiL,EACAC,EACAC,EAPErV,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAEjB,EAAKpD,MAAM6F,QAAQU,KAKvC,GAAqC,KAAjC2G,EAAMvI,OAAOkR,UAAU3O,MAGrB,OAFJ,EAAKpF,QAAQL,aAAa,0CACtB,EAAK4D,SAAS,CAACoF,WAAW,IAIhC,GAAsC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,WAAWjI,EAAU,UACtCpC,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCL,EAHgB,6CAA6CG,EAAS,IAAID,EAAS,IAAIE,EAIvFN,EAHgBI,EAAS,IAAIE,EAI7BL,EAAYK,EAEZ,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,6BAC1BiK,QAAQC,IAAI,2BACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,UAGZE,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,QACRtC,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,QACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,QACRtC,OAAQ,eAMpB,IAAIuJ,EAAc,CAChBC,MAAM,2DAAD,OAEarL,EAFb,kCAGYsN,EAHZ,4DAKc4H,EALd,oCAMcC,EANd,oCAOcC,EAPd,04BAWP9J,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,2BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAM8kB,cAAcrY,EAAQ1J,KAAKqkB,iBACtC,EAAK/hB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAKqkB,gBAC9B3mB,UAAU,8BAAD,OAAgCD,EAAhC,sBAAwDsN,GACjEiG,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQd,gBAAkByL,EAAQ1J,KAAKqkB,gBAC5C,EAAKxY,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAjmDX,EAomDrBsM,YAAc,SAACrV,GACbgK,QAAQC,IAAI,wBACZ,EAAK7J,QAAQL,aAAa,wBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAG/B2S,GAFc,EAAK/V,MAAM6F,QAAQU,KAEtB,WAAWuH,EAAU,WAChCmJ,EAAWvV,EAAK6E,KAElBqF,EAAc,CAChBC,MAAM,0DAAD,OAEWrL,EAFX,gCAGUsN,EAHV,wDAKYpM,EAAK6E,KALjB,kCAMY7E,EAAKY,KANjB,kCAOYZ,EAAK4P,KAPjB,s4BAWPxF,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,8BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAM8kB,cAAcrY,EAAQ1J,KAAKskB,oBACtC,EAAKhiB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAKskB,mBAC9B5mB,UAAU,iCAAD,OAAmCD,EAAnC,sBAA2DsN,KAEtE,EAAKhM,QAAQd,gBAAkByL,EAAQ1J,KAAKskB,mBAC5C,EAAKzY,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAGpD,IAAM2V,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,0BAC1BiK,QAAQC,IAAI,0BACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,UAGZE,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,QACRtC,OAAQ,gBAIZqU,EACCQ,WAAWD,EAAUf,GACrB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,EAASvK,SACnC,EAAKvH,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,UAKdiI,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QArtDX,EAytDrB2M,kBAAoB,SAAClK,GACnBA,EAAMC,iBACNzB,QAAQC,IAAI,qBACZ,EAAK7J,QAAQL,aAAa,qBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAMI4M,EACAC,EACAC,EAREhX,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAEjB,EAAKpD,MAAM6F,QAAQU,KAMvC,GAAqC,KAAjC2G,EAAMvI,OAAOkR,UAAU3O,MAGrB,OAFJ,EAAKpF,QAAQL,aAAa,0CACtB,EAAK4D,SAAS,CAACoF,WAAW,IAIhC,GAAsC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,WAAWjI,EAAU,SACtCpC,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCsB,EAHgB,6CAA6CxB,EAAS,IAAID,EAAS,IAAIE,EAIvFqB,EAHgBvB,EAAS,IAAIE,EAI7BsB,EAAYtB,EAEZ,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,4BAC1BiK,QAAQC,IAAI,0BACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,SAGZE,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,eAMpB,IAAIuJ,EAAc,CAChBC,MAAM,0DAAD,OAEarL,EAFb,kCAGYsN,EAHZ,2DAKauJ,EALb,mCAMaC,EANb,mCAOaC,EAPb,04BAWPzL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,0BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAM8kB,cAAcrY,EAAQ1J,KAAKukB,gBACtC,EAAKjiB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAKukB,eAC9B7mB,UAAU,6BAAD,OAA+BD,EAA/B,sBAAuDsN,GAChEiG,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQd,gBAAkByL,EAAQ1J,KAAKukB,eAC5C,EAAK1Y,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAh3DX,EAm3DrByM,WAAa,SAACxV,GACZgK,QAAQC,IAAI,uBACZ,EAAK7J,QAAQL,aAAa,uBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAGjCwI,GAFgB,EAAK5L,MAAM6F,QAAQU,KAErB,CAChBsF,MAAM,yDAAD,OAEWrL,EAFX,gCAGUsN,EAHV,uDAKWpM,EAAK6E,KALhB,iCAMW7E,EAAKY,KANhB,iCAOWZ,EAAK4P,KAPhB,u4BAWPxF,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,6BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAM8kB,cAAcrY,EAAQ1J,KAAKwkB,mBACtC,EAAKliB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAKwkB,kBAC9B9mB,UAAU,gCAAD,OAAkCD,EAAlC,sBAA0DsN,KAErE,EAAKhM,QAAQd,gBAAkByL,EAAQ1J,KAAKwkB,kBAC5C,EAAK3Y,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAEpD,IAAMwV,EAAW,WAAWjI,EAAU,SAChCmJ,EAAWvV,EAAK6E,KAChB2P,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,yBAC1BiK,QAAQC,IAAI,yBACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,SAGZE,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,gBAIZqU,EACCQ,WAAWD,EAAUf,GACrB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,EAASvK,SACnC,EAAKvH,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,UAMdiI,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAn+DX,EAu+DrBiN,kBAAoB,SAACxK,GACnBA,EAAMC,iBACNzB,QAAQC,IAAI,sBACZ,EAAK7J,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAC/BiP,EAAQnF,EAAMvI,OAAO0N,MAAMnL,MAE7B0E,EAAc,CAChBC,MAAM,2DAAD,OAEarL,EAFb,kCAGYsN,EAHZ,wDAKUuE,EALV,24BASPvG,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,2BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAM8kB,cAAcrY,EAAQ1J,KAAKykB,iBACtC,EAAKniB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAKykB,gBAC9B/mB,UAAU,8BAAD,OAAgCD,EAAhC,sBAAwDsN,GACjEiG,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQd,gBAAkByL,EAAQ1J,KAAKykB,gBAC5C,EAAK5Y,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAziEX,EA4iErBmN,WAAa,SAAClW,GACZgK,QAAQC,IAAI,uBACZ,EAAK7J,QAAQL,aAAa,uBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAEjCwI,EAAc,CAChBC,MAAM,6DAAD,OAEarL,EAFb,kCAGYsN,EAHZ,uDAKSpM,EALT,44BASPoK,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,6BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAM8kB,cAAcrY,EAAQ1J,KAAK0kB,mBACtC,EAAKpiB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAK0kB,kBAC9BhnB,UAAU,gCAAD,OAAkCD,EAAlC,sBAA0DsN,KAErE,EAAKhM,QAAQd,gBAAkByL,EAAQ1J,KAAK0kB,kBAC5C,EAAK7Y,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAxmEX,EA2mErBid,iBAAmB,SAACxa,GAClBA,EAAMC,iBACNzB,QAAQC,IAAI,qBACZ,EAAK7J,QAAQL,aAAa,qBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAC/BigB,EAAOnW,EAAMvI,OAAO0e,KAAKnc,MAE3B0E,EAAc,CAChBC,MAAM,0DAAD,OAEarL,EAFb,kCAGYsN,EAHZ,uDAKSuV,EALT,24BASPvX,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,0BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAM8kB,cAAcrY,EAAQ1J,KAAK4kB,gBACtC,EAAKtiB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAK4kB,eAC9BlnB,UAAU,6BAAD,OAA+BD,EAA/B,sBAAuDsN,GAChEiG,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQd,gBAAkByL,EAAQ1J,KAAK4kB,eAC5C,EAAK/Y,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA7qEX,EAgrErBmd,UAAY,SAAClmB,GACXgK,QAAQC,IAAI,sBACZ,EAAK7J,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAEjCwI,EAAc,CAChBC,MAAM,4DAAD,OAEarL,EAFb,kCAGYsN,EAHZ,sDAKQpM,EALR,44BASPoK,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,4BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAM8kB,cAAcrY,EAAQ1J,KAAK8kB,kBACtC,EAAKxiB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAK8kB,iBAC9BpnB,UAAU,8BAAD,OAAgCD,EAAhC,sBAAwDsN,KAEnE,EAAKhM,QAAQd,gBAAkByL,EAAQ1J,KAAK8kB,iBAC5C,EAAKjZ,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA5uEX,EAgvErBqN,4BAA8B,SAAC5K,GAC7BA,EAAMC,iBACNzB,QAAQC,IAAI,+BACZ,EAAK7J,QAAQL,aAAa,+BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK9N,MAAM6F,QAAQzC,IAC/B6D,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B2E,EAAQqB,EAAMvI,OAAOkH,MAAM3E,MAE7B0E,EAAc,CAChBC,MAAM,gEAAD,OAEWrL,EAFX,gCAGUsN,EAHV,4BAIM7G,EAJN,4BAKM4E,EALN,m4BASPC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,8BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAM8kB,cAAcrY,EAAQ1J,KAAK+kB,0BACtC,EAAKziB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAK+kB,yBAC9BrnB,UAAU,uCAAD,OAAyCD,EAAzC,sBAAiEsN,GAC1EkG,kBAAmB,CACjB9Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQd,gBAAkByL,EAAQ1J,KAAK+kB,yBAC5C,EAAKlZ,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAnzEX,EAszErBuN,uBAAyB,SAACtW,GACxB,EAAK2D,SAAS,CACZ2O,kBAAmB,CACjB9Q,OAAO,EACP+D,MAAOvF,MA1zEQ,EA8zErBuW,wBAA0B,WACxB,EAAK5S,SAAS,CACZ2O,kBAAmB,CACjB9Q,MAAO,KACP+D,MAAO,SAl0EQ,EAu0ErBiR,cAAgB,WACa,SAAvB,EAAKhV,MAAM2Q,QACb,EAAKxO,SAAS,CAACwO,QAAS,WAExB,EAAKxO,SAAS,CACZwO,QAAS,UA50EM,EAs1ErBsE,WAAa,SAACzW,GACZ,EAAK2D,SAAS,CAAC8S,WAAYzW,KAv1ER,EAy1ErBuL,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,IAAIlG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B1B,EAAM0H,EAAMvI,OAAOa,IAAI0B,MACvBA,EAAQgG,EAAMvI,OAAOuC,MAAMA,MACjB,SAAVA,IACFA,GAAQ,GAEI,UAAVA,IACFA,GAAQ,GAEV,EAAK7B,SAAS,CACZwB,OAAQ,CACNI,MAAOA,EACPzB,IAAKA,EACL0B,MAAOA,MAx2EQ,EA62ErBkR,SAAW,SAAC1W,GACV,EAAK2D,SAAS,CACZ0O,OAAQ,CACN7Q,OAAO,EACP+D,MAAOvF,MAj3EQ,EAq3ErB2W,UAAY,WACV,EAAKhT,SAAS,CACZ0O,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,SAz3EQ,EA83ErBgO,iBAAmB,SAACvT,GAClBgK,QAAQC,IAAI,4CAEZ,IAAIwI,EAAuBzS,EAAK4G,aAAaZ,KAAI,SAAAH,GAAC,MAAK,CACnD3D,MAAO2D,EAAE3D,MACTL,KAAMF,IAAOC,KAAKiE,EAAEhE,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cAC5D1D,MAAO,CACLoD,IAAKmE,EAAEnE,IACPG,KAAMgE,EAAEhE,KACRK,MAAO2D,EAAE3D,MACTtB,KAAMiF,EAAEjF,KACRuB,QAAS0D,EAAE1D,QACXF,KAAM4D,EAAE5D,KACRG,SAAUyD,EAAEzD,SACZI,YAAaqD,EAAErD,YACfH,UAAWwD,EAAExD,UACbkD,MAAO,oBAGT0d,EAAiBjjB,EAAKiiB,OAAOjc,KAAI,SAAAH,GAAC,MAAK,CACvC3D,MAAO2D,EAAE3D,MACTL,KAAMF,IAAOC,KAAKiE,EAAEhE,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cAC5D1D,MAAO,CACLoD,IAAKmE,EAAEnE,IACPG,KAAMgE,EAAEhE,KACRK,MAAO2D,EAAE3D,MACTtB,KAAMiF,EAAEjF,KACRuB,QAAS0D,EAAE1D,QACXF,KAAM4D,EAAE5D,KACRsD,MAAO,cAGX,EAAK5B,SAAS,CACZ8O,qBAAsBA,EACtBwQ,eAAgBA,KAh6ED,EAo6ErBpM,kBAAoB,SAAC7W,GAEnB,IACIqB,EADAyV,EAAQ9W,EAAKwL,MAAMuL,cAAczY,MAGjB,iBAAhBwY,EAAMvR,QACRlE,EAAO,CACLK,IAAKoV,EAAMpV,IACXG,KAAMiV,EAAMjV,KACZK,MAAO4U,EAAM5U,MACbtB,KAAMkW,EAAMlW,KACZuB,QAAS2U,EAAM3U,QACfF,KAAM6U,EAAM7U,KACZG,SAAU0U,EAAM1U,SAChBI,YAAasU,EAAMtU,YACnBH,UAAWyU,EAAMzU,WAEnB,EAAKsB,SAAS,CACZR,SAAS,EACTC,cAAe,CAACxC,KAAM,sBAAuBS,KAAMA,EAAMC,QAAQ,MAGjD,WAAhBwV,EAAMvR,QACRlE,EAAO,CACLK,IAAKoV,EAAMpV,IACXG,KAAMiV,EAAMjV,KACZK,MAAO4U,EAAM5U,MACbtB,KAAMkW,EAAMlW,KACZuB,QAAS2U,EAAM3U,QACfF,KAAM6U,EAAM7U,MAEd,EAAK0B,SAAS,CACZR,SAAS,EACTC,cAAe,CAACxC,KAAM,gBAAiBS,KAAMA,EAAMC,QAAQ,OAr8E5C,EA28ErBZ,cAAgB,WACd,EAAKiD,SAAS,CACZR,SAAS,KA78EQ,EAg9ErB+f,YAAc,SAACljB,GACb,EAAK2D,SAAS,CACZuf,aAAa,EACbC,YAAa,CACXviB,KAAMZ,EAAKY,KACXS,KAAMrB,EAAKqB,SAr9EI,EA29ErBglB,aAAe,WACb,EAAK1iB,SAAS,CACZuf,aAAa,EACbC,YAAa,CACXviB,KAAM,KACNS,KAAM,SA99ER,EAAKilB,aAAe,EAAKhoB,MAAM6F,QAFd,E,gEAOnB,GADA6F,QAAQC,IAAI,2CACRuD,eAAeC,QAAQ,WAAY,CACrC,IAAMzE,EAAYuB,KAAKmD,MAAMF,eAAeC,QAAQ,YACpDnK,KAAK6T,cAAcnO,GAErB1F,KAAKK,SAAS,CACZrE,gBAAiBgE,KAAKlD,QAAQd,kBAEN,UAAtBgE,KAAKlD,QAAQnB,MACfqE,KAAKK,SAAS,CACZgB,WAAW,IAGfrB,KAAKiQ,iBAAiB,CACpB3M,aAActD,KAAKhF,MAAM6F,QAAQyC,aACjCqb,OAAQ3e,KAAKhF,MAAM6F,QAAQ8d,W,oFAQhBjiB,GAAO,IAAD,OACjBgK,QAAQC,IAAI,6BACZ3G,KAAKlD,QAAQL,aAAa,6BAC1B,IAAMlB,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAClBoL,EAAc,CACdC,MAAM,kEAAD,OAEarL,EAFb,oBAKXsL,MAAM,iEAAkE,CACtEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG5B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GACJ,GAAIA,EAAQE,OACV,EAAKtH,SAAS,CAAClE,UAAWsL,EAAQE,OAAO,GAAGC,cACvC,CACL,IAAIkM,EAAmB7M,KAAKmD,MAAM3C,EAAQ1J,KAAK8V,eAC/CnN,QAAQC,IAAI,sCACZ,EAAK7J,QAAQL,aAAa,sCAC1B,EAAK4D,SAAS,CACZ+O,WAAY0E,QAKjBhM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,Q,sCAIlBrL,GACdgK,QAAQC,IAAI,yBACZ,IAAMnL,EAAakB,EAAKlB,WAClBD,EAAQmB,EAAKnB,MACbK,EAASJ,EACTyY,EAAUjU,KAAK9B,MAAMzC,UACrByY,EAAe7V,MAASK,OAAO,cACjCkI,EAAc,CAChBC,MAAM,2DAAD,OAEarL,EAFb,qBAEoCI,EAFpC,4DAIiBsY,EAJjB,0CAKoBD,EALpB,qbASPnN,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEAA,EAAQ1J,KAAKoW,gBAAgBtM,OAC/BnB,QAAQC,IAAI,qBAAqBc,EAAQ1J,KAAKoW,gBAAgBtM,UAGjEC,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,Q,+BAw3EhB,OACE,kBAAC,IAAMhL,SAAP,MAEwB,IAAvBiD,KAAK9B,MAAM2B,SACV,kBAAC,EAAD,CACExC,OAAQ2C,KAAK9B,MAAM4B,cACnB1C,cAAe4C,KAAK5C,gBAIxB,kBAACI,EAAA,EAAD,CAAWtC,UAAU,uBAEnB,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,kCACb,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,2BAGtB,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,GAAIpP,UAAU,2BACnB8E,KAAKhF,MAAM6F,SACX,qCAIN,kBAACuT,EAAA,EAAI5W,UAAL,CAAe8Q,GAAG,oBAAoB+F,iBAAiB,KACrD,kBAAClX,EAAA,EAAD,CAAKjC,UAAU,mCACb,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,sCACI,SAAvB8E,KAAK9B,MAAM2Q,SACV,kBAACyF,EAAA,EAAD,CAAKlZ,QAAQ,QAAQF,UAAU,uBAC7B,kBAACoZ,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,UAA3D,UAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,UAA3D,UAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,YAA3D,cAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,cAA3D,gBAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,YAA3D,cAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,eAA3D,eAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,UAA3D,WAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,SAA3D,UAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,gBAA3D,iBAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,KAAKvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,UAA5D,WAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,KAAKvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,SAA5D,UAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,KAAKvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,QAA5D,QAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,KAAKvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,QAA5D,cAIkB,WAAvBA,KAAK9B,MAAM2Q,SACV,kBAAC5O,EAAA,EAAD,KAC6B,YAA1BD,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,cAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,YAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,eAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,UAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,SAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,gBAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,UAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,SAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,QAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,qBAQzBjI,KAAKhF,MAAM6F,SACV,kBAACZ,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,uCACoB,IAAvC8E,KAAK9B,MAAM8Q,kBAAkB9Q,OAC5B,kBAAC,GAAD,CACE+D,MAAOjC,KAAK9B,MAAM8Q,kBAAkB/M,MACpCuC,UAAWxE,KAAK8S,4BAChB/N,SAAU/E,KAAKiT,0BAGjB,kBAACmB,EAAA,EAAIM,QAAL,CAAaxZ,UAAU,cACrB,kBAACkZ,EAAA,EAAIO,KAAL,CAAUH,SAAS,KAAnB,iBAEE,kBAAC/W,EAAA,EAAD,CAAWvC,UAAU,yBACnB,kBAACuC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,UACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQjC,OACtD,kBAACrB,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,UAA5F,QACA,uBAAG9E,UAAU,iBAAb,eACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQU,MACtD,kBAAChE,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,SAA5F,QACA,uBAAG9E,UAAU,iBAAb,cACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQoiB,UACtD,kBAAC1lB,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,aAA5F,SAEF,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,UACA,uBAAGA,UAAU,iBAAb,aACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQC,UACtD,kBAACvD,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,aAA5F,SAEF,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,QACA,uBAAGA,UAAU,sBAAsBmD,IAAOC,KAAK0B,KAAKhF,MAAM6F,QAAQW,IAAIhD,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,eACzG,kBAACnB,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,QAA5F,QACA,uBAAG9E,UAAU,iBAAb,QACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQY,MAExD,kBAAChE,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,QACA,uBAAGA,UAAU,iBAAb,WACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQa,QACtD,kBAACnE,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,WAA5F,SAEF,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,UACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQ+T,QAAQC,OAC9D,kBAACtX,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,kBAA5F,SAEF,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,UACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQ+T,QAAQE,OAC9D,kBAACvX,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,kBAA5F,QACA,uBAAG9E,UAAU,iBAAb,YACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQ+T,QAAQG,QAC9D,kBAACxX,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,mBAA5F,SAEF,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQlF,MACtD,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,SAA5F,SAEF,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,iBACA,uBAAGA,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsBmD,IAAOC,KAAK0B,KAAKhF,MAAM6F,QAAQyB,aAAa/D,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,eACvH,uBAAGxD,UAAU,iBAAb,WACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQyB,aAAaoB,SAErE,kBAACjG,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,gBACA,uBAAGA,UAAU,sBAAsBmD,IAAOC,KAAK0B,KAAKhF,MAAM6F,QAAQqiB,WAAW1kB,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,eAChH,kBAACnB,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,eAA5F,SAEF,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,aACA,uBAAGA,UAAU,iBAAb,SACC8E,KAAKhF,MAAM6F,QAAQsiB,SAAS5kB,MAC3B,uBAAGrD,UAAU,sBAAsBmD,IAAOC,KAAK0B,KAAKhF,MAAM6F,QAAQsiB,SAAS5kB,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,eAGrH,kBAACnB,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,kBAA5F,QACA,uBAAG9E,UAAU,iBAAb,WACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQsiB,SAASC,QAC/D,kBAAC7lB,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,oBAA5F,QACA,uBAAG9E,UAAU,iBAAb,uBACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQsiB,SAASE,UAAU9hB,MACzE,kBAAChE,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,4BAA5F,SAEF,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,uBACA,uBAAGA,UAAU,iBAAb,UACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQsiB,SAASE,UAAUxO,OACzE,kBAACtX,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,6BAA5F,QACA,uBAAG9E,UAAU,iBAAb,UACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQsiB,SAASE,UAAUvO,OACzE,kBAACvX,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,6BAA5F,SAGF,kBAACvC,EAAA,EAAUC,KAAX,KACA,uBAAGxC,UAAU,iBAAb,wBACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQyiB,oBACtD,kBAAC/lB,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,uBAA5F,SAEA,kBAACvC,EAAA,EAAUC,KAAX,KACA,uBAAGxC,UAAU,iBAAb,eACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQ0iB,WAAW5nB,MACjE,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,oBAA5F,QACA,uBAAG9E,UAAU,iBAAb,aACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQ0iB,WAAWC,SAASjiB,MAC1E,kBAAChE,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,6BAA5F,SAEA,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,YACA,uBAAGA,UAAU,iBAAb,UACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQ0iB,WAAWC,SAAS1O,OAC1E,kBAACvX,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,8BAA5F,QACA,uBAAG9E,UAAU,iBAAb,UACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQ0iB,WAAWC,SAAS3O,OAC1E,kBAACtX,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,8BAA5F,SAEF,kBAACvC,EAAA,EAAUC,KAAX,KACA,uBAAGxC,UAAU,iBAAb,YACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQ0iB,WAAWC,SAAS7Y,SAC1E,kBAACpN,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,gCAA5F,SAEA,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,cACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQ4iB,UAAUC,SAChE,kBAACnmB,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,sBAA5F,QACA,uBAAG9E,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQ4iB,UAAUE,cAChE,kBAACpmB,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,2BAA5F,SAEF,kBAACvC,EAAA,EAAUC,KAAX,KACA,uBAAGxC,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQ4iB,UAAUvkB,aAChE,kBAAC3B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,0BAA5F,QACCA,KAAKhF,MAAM6F,QAAQ4iB,UAAUP,YAC5B,uBAAGhoB,UAAU,sBAAsBmD,IAAOC,KAAK0B,KAAKhF,MAAM6F,QAAQ4iB,UAAUP,WAAW1kB,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,eAE5H,kBAACnB,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,yBAA5F,SAEA,kBAACvC,EAAA,EAAUC,KAAX,KACA,uBAAGxC,UAAU,iBAAb,eACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQ4iB,UAAUG,WAAWF,SAC3E,kBAACnmB,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,iCAA5F,QACA,uBAAG9E,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQ4iB,UAAUG,WAAW1kB,aAC3E,kBAAC3B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,qCAA5F,SAEA,kBAACvC,EAAA,EAAUC,KAAX,QAKJ,kBAAC0W,EAAA,EAAIO,KAAL,CAAUH,SAAS,KAAnB,gBAEE,kBAAC/W,EAAA,EAAD,CAAWvC,UAAU,yBACnB,kBAACuC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,OACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQzC,MAExD,kBAACX,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,aACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQ2B,SAASU,aAEjE,kBAACzF,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,oBACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQqU,gBAAgBhS,aAExE,kBAACzF,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,aACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQsU,aAAaC,SAASlS,YAC5E,uBAAGhI,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQsU,aAAa7X,MACnE,uBAAGpC,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAM6F,QAAQsU,aAAaE,SAIzE,kBAACjB,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,sBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UAEE,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,YAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,YAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKsP,qBAChBvK,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnBwJ,UAAWrL,KAAKhF,MAAM6F,QAAQwK,UAC9Bd,OAAQvK,KAAKlD,QAAQtB,WACrBmG,SAAU3B,KAAKwP,cACfnO,UAAWrB,KAAK9B,MAAMmD,UACtB6J,YAAalL,KAAK0P,qBAGtB,kBAAC0E,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,6BACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UAEE,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,cAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,cAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKkgB,uBAChBnb,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnBsa,UAAWnc,KAAKhF,MAAM6F,QAAQsb,UAC9B5R,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKogB,mBAGnB,kBAAChM,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,2BACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UAEE,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,YAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,YAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKugB,qBAChBxb,SAAU/E,KAAKqT,aAGa,IAAjCrT,KAAK9B,MAAMuhB,mBACV,kBAAC,GAAD,CACE1a,SAAU/E,KAAKshB,oBACf9c,UAAWxE,KAAKuhB,gBAGpB,kBAAC,GAAD,CACE1f,OAAQ7B,KAAK9B,MAAM2D,OACnByb,UAAWtd,KAAKhF,MAAM6F,QAAQyc,UAC9B/S,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKygB,cACfvD,gBAAiBld,KAAKqhB,mBACtBlE,iBAAkBnd,KAAKmd,oBAG3B,kBAAC/I,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,4BACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UAEE,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,eAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,eAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKihB,wBAChBlc,SAAU/E,KAAKqT,aAGa,IAAjCrT,KAAK9B,MAAMuhB,mBACV,kBAAC,GAAD,CACE1a,SAAU/E,KAAKshB,oBACf9c,UAAWxE,KAAKuhB,gBAGpB,kBAAC,GAAD,CACE1f,OAAQ7B,KAAK9B,MAAM2D,OACnB4b,WAAYzd,KAAKhF,MAAM6F,QAAQ4c,WAC/BlT,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKmhB,iBACfjE,gBAAiBld,KAAKqhB,mBACtBlE,iBAAkBnd,KAAKmd,oBAG3B,kBAAC/I,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,uBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UAEE,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,UAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,UAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKyQ,mBAChB1L,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnB4K,OAAQzM,KAAKhF,MAAM6F,QAAQ4L,OAC3BlC,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAK+R,eAGnB,kBAACqC,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,sBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UAEE,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,SAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,SAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKoS,kBAChBrN,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnBiL,MAAO9M,KAAKhF,MAAM6F,QAAQiM,MAC1BvC,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKkS,cAGnB,kBAACkC,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,6BACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,WAEF,kBAACoC,EAAA,EAAD,CAAMjB,iBAAiB,IAAI/F,GAAG,4BAC5B,kBAAC8F,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,QACxB,kBAAC,GAAD,CACEiD,OAAQ7B,KAAK9B,MAAM2D,OACnByB,aAActD,KAAKhF,MAAM6F,QAAQyC,aACjCiH,OAAQvK,KAAKlD,QAAQtB,cAGvB,kBAAC4Y,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,WAAW1D,UAAU,eAC3C,wCACA,kBAAC,IAAD,CACEqa,YAAY,eACZC,QAAS,CAACC,KACVC,OAAQ1V,KAAK9B,MAAMiR,qBACnBwG,WAAY3V,KAAKuT,uBAMzB,kBAACa,EAAA,EAAIO,KAAL,CAAUH,SAAS,MACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,uBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,WAEF,kBAACoC,EAAA,EAAD,CAAMjB,iBAAiB,IAAI/F,GAAG,4BAC5B,kBAAC8F,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,QACxB,kBAAC,GAAD,CACEiD,OAAQ7B,KAAK9B,MAAM2D,OACnB8c,OAAQ3e,KAAKhF,MAAM6F,QAAQ8d,OAC3BpU,OAAQvK,KAAKlD,QAAQtB,WACrBgjB,aAAa,KAGf,kBAACpK,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,WAAW1D,UAAU,eAC3C,wCACA,kBAAC,IAAD,CACEqa,YAAY,eACZC,QAAS,CAACC,KACVC,OAAQ1V,KAAK9B,MAAMyhB,eACnBhK,WAAY3V,KAAKuT,uBAMzB,kBAACa,EAAA,EAAIO,KAAL,CAAUH,SAAS,MACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,kBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACuB,UAAtBlT,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,SAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,SAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAK0S,kBAChB3N,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnBwL,MAAOrN,KAAKhF,MAAM6F,QAAQwM,MAC1B9C,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAK4S,cAGnB,kBAACwB,EAAA,EAAIO,KAAL,CAAUH,SAAS,MACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,iBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UAEE,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,QAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,QAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAK0iB,iBAChB3d,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnBwc,KAAMre,KAAKhF,MAAM6F,QAAQwd,KACzB9T,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAK4iB,aAGnB,kBAACxO,EAAA,EAAIO,KAAL,CAAUH,SAAS,MACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,cAGF,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,sBACb,kBAACuC,EAAA,EAAD,CAAWvC,UAAU,yBACnB,kBAACuC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,QACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAK4f,YAAY9hB,KAAKkC,KAAM,CAAC1C,KAAM,OAAQS,KAAM,aAAtG,WAEF,kBAACN,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,YACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAK4f,YAAY9hB,KAAKkC,KAAM,CAAC1C,KAAM,WAAYS,KAAM,aAA1G,WAEF,kBAACN,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,qBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAK4f,YAAY9hB,KAAKkC,KAAM,CAAC1C,KAAM,oBAAqBS,KAAM,aAAnH,WAEF,kBAACN,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,YACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAK4f,YAAY9hB,KAAKkC,KAAM,CAAC1C,KAAM,WAAYS,KAAM,aAA1G,WAEF,kBAACN,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,aACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAK4f,YAAY9hB,KAAKkC,KAAM,CAAC1C,KAAM,YAAaS,KAAM,aAA3G,WAEF,kBAACN,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,oBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAK4f,YAAY9hB,KAAKkC,KAAM,CAAC1C,KAAM,mBAAoBS,KAAM,aAAlH,WAEF,kBAACN,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,gBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAK4f,YAAY9hB,KAAKkC,KAAM,CAAC1C,KAAM,eAAgBS,KAAM,aAA9G,WAEF,kBAACN,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,oBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAK4f,YAAY9hB,KAAKkC,KAAM,CAAC1C,KAAM,mBAAoBS,KAAM,aAAlH,WAEF,kBAACN,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,yBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAK4f,YAAY9hB,KAAKkC,KAAM,CAAC1C,KAAM,wBAAyBS,KAAM,aAAvH,WAEF,kBAACN,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,cACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAK4f,YAAY9hB,KAAKkC,KAAM,CAAC1C,KAAM,aAAcS,KAAM,aAA5G,cAIsB,IAA3BiC,KAAK9B,MAAM0hB,aACV,kBAAC,GAAD,CACE/D,YAAa7b,KAAK9B,MAAM2hB,YACxBjE,MAAO5b,KAAK+iB,aACZliB,QAASb,KAAKhF,MAAM6F,qB,GAhoGhBX,aAAtBsf,GA8CGhV,YAAcC,EAomGR+U,UCzoGAqE,GAhEW,SAAC7oB,GAE3B,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,cAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,0CACA,wCACA,4CACA,yCACA,wCACA,uCACA,uCACA,0CACA,qDACA,uDACA,iDACA,iDACA,kDACA,oDACA,oDACA,kDACA,kDACA,oDACA,qDACA,wDACA,qDACA,yDACA,8CACA,+CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,8CACA,wCACA,4CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCnCA+e,I,mNACJ5lB,MAAQ,CACNzC,UAAW,KACXE,KAAM,KACNkE,SAAS,EACTC,cAAe,OACfC,SAAS,EACTjD,QAAS,KACTpB,aAAc,KACdI,MAAO,KACPiG,SAAU,KACVgiB,eAAgB,KAChBte,WAAW,EACXC,UAAW,KACXkJ,eAAe,EACfvN,WAAW,EACXwN,QAAS,OACThN,OAAQ,CACNI,MAAO,KACPzB,IAAK,KACL0B,MAAO,MAET4M,aAAc,KACdC,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,MAEThB,aAAa,EACblF,aAAc,KACdC,gBAAiB,KACjBgoB,iBAAiB,EACjBC,WAAY,KACZ7K,WAAY,KACZC,SAAU,KACVC,OAAQ,Q,EAkJZyK,eAAiB,SAAC7b,GAChBA,EAAMC,iBACNzB,QAAQC,IAAI,4BACZ,EAAK7J,QAAQL,aAAa,4BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAwBImB,EAxBErL,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAAS,EAAKkB,QAAQtB,WACtByG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B2E,EAAQqB,EAAMvI,OAAOkH,MAAM3E,MAC7BuH,GAAQ,EACE,WAAVxH,GACU,QAAVA,GACU,QAAVA,GACU,qBAAVA,GACU,sBAAVA,GACU,aAAVA,GACU,oBAAVA,GACU,0BAAVA,GACU,sBAAVA,GACU,eAAVA,GACU,kBAAVA,GACU,yBAAVA,GACU,yBAAVA,IAEAwH,GAAQ,IAKE,IAAVA,IACF7C,EAAc,CACZC,MAAM,oEAAD,OAEarL,EAFb,gCAGQyG,EAHR,gCAIQ4E,EAJR,+4BASK,IAAV4C,IACF7C,EAAc,CACZC,MAAM,+DAAD,OAEarL,EAFb,gCAGQyG,EAHR,gCAIQ4E,EAJR,84BASTC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAQJ,IAAIC,EAAgB,iCAGN,IAAV+B,IACEhC,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,SAIX,IAAV4B,IACEhC,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,QAKzB,EAAK/K,QAAQL,aAAaiL,IAEZ,IAAV+B,GACF,EAAKpJ,SAAS,CACZoF,WAAW,EACXse,eAAgBtc,EAAQ1J,KAAK2L,wBAC7BjO,UAAU,sCAAD,OAAwCD,EAAxC,mBAA6DI,MAG5D,IAAV6N,GACF,EAAKpJ,SAAS,CACZoF,WAAW,EACXse,eAAgBtc,EAAQ1J,KAAK4L,mBAC7BlO,UAAU,iCAAD,OAAmCD,EAAnC,mBAAwDI,KAIrE,EAAKgO,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAKhCye,wBAA0B,WACxB,EAAK7jB,SAAS,CACZ2jB,iBAAiB,K,EAGrBG,uBAAyB,WACvB,EAAK9jB,SAAS,CACZ2jB,iBAAiB,K,EAGrBI,2BAA6B,SAAClc,GAC5BA,EAAMC,iBACNzB,QAAQC,IAAI,8BACZ,EAAK7J,QAAQL,aAAa,8BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAE1BiH,EAASyF,EAAMvI,OAAO8C,OAAOP,MAC7BtD,EAAQsJ,EAAMvI,OAAOf,MAAMsD,MAC3BX,EAAO2G,EAAMvI,OAAO4B,KAAKW,MACzB+gB,EAAW/a,EAAMvI,OAAOsjB,SAAS/gB,MACjCpB,EAAWoH,EAAMvI,OAAOmB,SAASoB,MACjCV,EAAM0G,EAAMvI,OAAO6B,IAAIU,MACvBvG,EAAOuM,EAAMvI,OAAOhE,KAAKuG,MACzBR,EAASwG,EAAMvI,OAAO+B,OAAOQ,MAC7BmiB,EAAenc,EAAMvI,OAAO0kB,aAAaniB,MACzCoiB,EAAepc,EAAMvI,OAAO2kB,aAAapiB,MACzCqiB,EAAgBrc,EAAMvI,OAAO4kB,cAAcriB,MAC7CwV,EAAgBxP,EAAMvI,OAAO+X,cAAcxV,MACzB,KAAlBwV,IACFA,EAAgB,GAElB,IAAMC,EAAgBzP,EAAMvI,OAAOgY,cAAczV,MAC3C0V,EAAc1P,EAAMvI,OAAOiY,YAAY1V,MACvC2V,EAAc3P,EAAMvI,OAAOkY,YAAY3V,MACvC4V,EAAgB5P,EAAMvI,OAAOmY,cAAc5V,MAC3C6V,EAAiB7P,EAAMvI,OAAOoY,eAAe7V,MAC7C8V,EAAoB9P,EAAMvI,OAAOqY,kBAAkB9V,MACnDsiB,EAAetc,EAAMvI,OAAO6kB,aAAatiB,MACzCuiB,EAAiBvc,EAAMvI,OAAO8kB,eAAeviB,MAC7CwiB,EAAwBxc,EAAMvI,OAAO+kB,sBAAsBxiB,MAC3DyiB,EAAyBzc,EAAMvI,OAAOglB,uBAAuBziB,MAC7D0iB,EAAyB1c,EAAMvI,OAAOilB,uBAAuB1iB,MAE7DohB,GAD2Bpb,EAAMvI,OAAOklB,yBAAyB3iB,MAC5CgG,EAAMvI,OAAO2jB,mBAAmBphB,OACrD4iB,EAAiB5c,EAAMvI,OAAOmlB,eAAe5iB,MAC7C6iB,EAAyB7c,EAAMvI,OAAOolB,uBAAuB7iB,MAC7D8iB,EAA0B9c,EAAMvI,OAAOqlB,wBAAwB9iB,MAC/D+iB,EAA0B/c,EAAMvI,OAAOslB,wBAAwB/iB,MAC/DgjB,EAA4Bhd,EAAMvI,OAAOulB,0BAA0BhjB,MACnEijB,EAAmBjd,EAAMvI,OAAOwlB,iBAAiBjjB,MACjDkjB,EAAwBld,EAAMvI,OAAOylB,sBAAsBljB,MAC3DmjB,EAAuBnd,EAAMvI,OAAO0lB,qBAAqBnjB,MACzDojB,EAAsBpd,EAAMvI,OAAO2lB,oBAAoBpjB,MACvDqjB,EAA6Brd,EAAMvI,OAAO4lB,2BAA2BrjB,MACrEsjB,EAAiCtd,EAAMvI,OAAO6lB,+BAA+BtjB,MAEnF,GAC6B,IAAzBO,EAAOmU,OAAOC,QACU,IAAxBjY,EAAMgY,OAAOC,QACU,IAAvBtV,EAAKqV,OAAOC,QACe,IAA3B/V,EAAS8V,OAAOC,QACM,IAAtBrV,EAAIoV,OAAOC,QACY,IAAvBlb,EAAKib,OAAOC,QACa,IAAzBnV,EAAOkV,OAAOC,QACiB,IAA/BwN,EAAazN,OAAOC,QACW,IAA/ByN,EAAa1N,OAAOC,OAItB,OAFA,EAAK/Z,QAAQL,aAAa,8BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAK5B,IAAImB,EAAc,CAChBC,MAAM,yDAAD,OAEarL,EAFb,wDAIUiH,EAJV,kCAKa3B,EALb,8BAMQU,EANR,gCAOU5C,EAPV,+BAQS2C,EART,mCASa0hB,EATb,+BAUStnB,EAVT,iCAWW+F,EAXX,uCAYiB2iB,EAZjB,uCAaiBC,EAbjB,wCAckBC,EAdlB,uCAeiB7M,EAfjB,uCAgBkBC,EAhBlB,sCAiBgBC,EAjBhB,sCAkBgBC,EAlBhB,wCAmBkBC,EAnBlB,yCAoBmBC,EApBnB,4CAqBsBC,EArBtB,uCAsBiBwM,EAtBjB,yCAuBmBC,EAvBnB,gDAwB0BC,EAxB1B,iDAyB2BE,EAzB3B,iDA0B2BD,EA1B3B,6CA2BuBrB,EA3BvB,yCA4BmBwB,EA5BnB,iDA6B2BC,EA7B3B,kDA8B4BE,EA9B5B,kDA+B4BD,EA/B5B,oDAgC8BE,EAhC9B,2CAiCqBC,EAjCrB,gDAkC0BC,EAlC1B,+CAmCyBC,EAnCzB,8CAoCwBC,EApCxB,qDAqC+BC,EArC/B,yDAsCmCC,EAtCnC,44BA0CP1e,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,gCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXxE,aAAa,EACb+iB,iBAAiB,EACjB1K,OAAQ,SACRtd,gBAAiByL,EAAQ1J,KAAK0nB,cAC9BxB,WAAYxc,EAAQ1J,KAAK0nB,cACzBhqB,UAAU,4BAAD,OAA8BD,EAA9B,sBAAsDiM,EAAQ1J,KAAK0nB,cAAcrnB,OAE5F,EAAKwL,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IACpD,IAAMmK,EAAYuB,KAAKmD,MAAMF,eAAeC,QAAQ,YACpD,EAAK3D,eAAed,MAErBoC,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAKhCyN,cAAgB,WACa,SAAvB,EAAKhV,MAAM2Q,QACb,EAAKxO,SAAS,CAACwO,QAAS,WAExB,EAAKxO,SAAS,CACZwO,QAAS,U,EAUfsE,WAAa,SAACzW,GACZ,EAAK2D,SAAS,CACZ8S,WAAYzW,EACZ4c,OAAQ5c,K,EAIZuL,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,IAAIlG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B1B,EAAM0H,EAAMvI,OAAOa,IAAI0B,MACvBA,EAAQgG,EAAMvI,OAAOuC,MAAMA,MACjB,SAAVA,IACFA,GAAQ,GAEI,UAAVA,IACFA,GAAQ,GAEV,EAAK7B,SAAS,CACZwB,OAAQ,CACNI,MAAOA,EACPzB,IAAKA,EACL0B,MAAOA,M,EAMbjB,YAAc,SAACvE,GAEb,EAAK2D,SAAS,CACZY,aAAa,EACbjF,gBAAiBU,EACjB4c,OAAQ,WAEV,EAAKte,MAAM2N,cAAcjM,I,EAE3B0W,SAAW,SAAC1W,GACV,EAAK2D,SAAS,CACZ0O,OAAQ,CACN7Q,OAAO,EACP+D,MAAOvF,M,EAIb2W,UAAY,WACV,EAAKhT,SAAS,CACZ0O,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,S,EAKb6d,cAAgB,SAACpjB,GACfgK,QAAQC,IAAI,mCACZ,EAAKtG,SAAS,CACZrE,gBAAiBU,IAEnB,EAAK1B,MAAM2N,cAAcjM,I,EAG3BgpB,cAAgB,SAAChpB,GACfgK,QAAQC,IAAI,0BAA0BjK,GACtC,EAAKI,QAAQL,aAAa,2BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAYpM,EAAK0B,IAEnBwI,EAAc,CAChBC,MAAM,6DAAD,OAEarL,EAFb,kCAGYsN,EAHZ,u4BAOPhC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,gCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXhK,UAAU,gCAAD,OAAkCD,EAAlC,sBAA0DsN,KAErE,EAAKc,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IACpD,EAAKiL,eAAe,CAAChL,WAAYA,EAAWD,MAAOA,OAEpDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAIhCgU,YAAc,WACZ,EAAKpZ,SAAS,CACZwB,OAAQ,CACNI,MAAO,KACPzB,IAAK,KACL0B,MAAO,S,kEAjkBX,GADAwE,QAAQC,IAAI,wCACRuD,eAAeC,QAAQ,WAAY,CACrC,IAAMzE,EAAYuB,KAAKmD,MAAMF,eAAeC,QAAQ,YAC7B,UAAnBzE,EAAU/J,MACZqE,KAAKK,SAAS,CAACgB,WAAU,IAGvBrB,KAAKhF,MAAM8D,SAASZ,OAClB8B,KAAKhF,MAAM8D,SAASZ,MAAM2C,SAC5Bb,KAAKK,SAAS,CACZ+Y,YAAY,EACZC,SAAUrZ,KAAKhF,MAAM8D,SAASZ,MAAM2C,UAI1Cb,KAAKwG,eAAed,GAChB1F,KAAKhF,MAAMgB,kBACb0K,QAAQC,IAAI,qDACZ3G,KAAKK,SAAS,CACZY,aAAa,EACbjF,gBAAiBgE,KAAKhF,MAAMgB,sB,qFASpBU,GAAO,IAAD,OACpBgK,QAAQC,IAAI,iCACZ3G,KAAKlD,QAAQL,aAAa,iCAC1BuD,KAAKK,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAClBI,EAASJ,EAEXoL,EAAc,CAChBC,MAAM,uDAAD,OAEarL,EAFb,u4BAMPsL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,wCAYpB,GATID,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,QAGO,IAA1B,EAAK3J,MAAMkb,WAAqB,CAClC,IAAIuM,EAAgBle,EAAQ1J,KAAKyI,eAAe3E,QAAO,SAAAU,GAAC,OAAIA,EAAEnE,MAAQ,EAAKF,MAAMmb,YAAU,GAC3F,EAAKhZ,SAAS,CACZY,aAAa,EACbjF,gBAAiB2pB,EACjBrM,OAAQ,WAEV,EAAKxc,QAAQL,aAAa,+BAE5B,EAAKK,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX1D,SAAU0F,EAAQ1J,KAAKyI,eACvB/K,UAAU,6BAAD,OAA+BD,EAA/B,mBAAoDI,KAE/D,EAAKgO,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,S,sCAGhB/I,GAAO,IAAD,OACpBgK,QAAQC,IAAI,yBACZ,IAAMnL,EAAakB,EAAKlB,WAClBD,EAAQmB,EAAKnB,MACbK,EAASJ,EACTyY,EAAUjU,KAAK9B,MAAMzC,UACrByY,EAAe7V,MAASK,OAAO,cACjCkI,EAAc,CAChBC,MAAM,2DAAD,OAEarL,EAFb,qBAEoCI,EAFpC,4DAIiBsY,EAJjB,0CAKoBD,EALpB,qbASPnN,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEAA,EAAQE,QACV,EAAK7K,QAAQL,aAAagL,EAAQE,OAAO,GAAGC,SAE1CH,EAAQ1J,KAAK8J,OACf,EAAK/K,QAAQL,aAAagL,EAAQ1J,KAAK8J,UAG1CC,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,Q,+BAgchB,OACE,kBAAC,IAAMhL,SAAP,MAEwB,IAAvBiD,KAAK9B,MAAM2B,SACV,kBAAC,EAAD,CACExC,OAAQ2C,KAAK9B,MAAM4B,gBAIvB,kBAACtC,EAAA,EAAD,CAAWtC,UAAU,sBACnB,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,iCACb,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,yBACtB,0CAA0C,IAA3B8E,KAAK9B,MAAM+C,aACZjB,KAAK9B,MAAMlC,iBACW,WAAtBgE,KAAK9B,MAAMob,QACLtZ,KAAK9B,MAAMlC,gBAAgBuF,OAG/C,kBAACtB,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,yBACnB8E,KAAK9B,MAAMuH,UACV,kBAACnG,EAAA,EAAD,CAAOC,IAAKC,IAAYtE,UAAU,aAAauE,OAAK,IAEpD,kCAKN,kBAAC2U,EAAA,EAAI5W,UAAL,CAAe8Q,GAAG,oBAAoBqL,UAAW3Z,KAAK9B,MAAMob,QAC1D,kBAACnc,EAAA,EAAD,CAAKjC,UAAU,kCAEb,kBAAC+E,EAAA,EAAD,CAAK2lB,GAAI,EAAG1qB,UAAU,qCACI,SAAvB8E,KAAK9B,MAAM2Q,SACV,kBAACyF,EAAA,EAAD,CAAKlZ,QAAQ,QAAQF,UAAU,wBAC7B,kBAACoZ,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,OAAOvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,SAA9D,SAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,SAASvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,WAAhE,WAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,SAASvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,WAAhE,YAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,MAAMvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,QAA7D,SAIkB,WAAvBA,KAAK9B,MAAM2Q,SACV,kBAAC5O,EAAA,EAAD,KACE,kBAAC,GAAD,CACE8E,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,qBAMvBjI,KAAK9B,MAAM6D,UACV,kBAAC9B,EAAA,EAAD,CAAK2lB,GAAI,EAAG1qB,UAAU,qCACpB,kBAACkZ,EAAA,EAAIM,QAAL,KACE,kBAACN,EAAA,EAAIO,KAAL,CAAUH,SAAS,QACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACA,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKyZ,aAAhD,UAEA,kBAAC,EAAD,CACE5X,OAAQ7B,KAAK9B,MAAM2D,OACnBE,SAAU/B,KAAK9B,MAAM6D,SACrBwI,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBJ,YAAajB,KAAKiB,YAClBU,SAAU3B,KAAK0lB,iBAGrB,kBAACtR,EAAA,EAAIO,KAAL,CAAUH,SAAS,UACnB,kBAACvU,EAAA,EAAD,CAAK/E,UAAU,iBACb,8CACA,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,iBACb,kBAAC,EAAD,CACEsJ,UAAWxE,KAAK+jB,kBAGpB,kBAAC5mB,EAAA,EAAD,KACG6C,KAAK9B,MAAM6lB,gBACV,kBAACxmB,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,eAAe+B,QAAS+C,KAAKkT,eAAzE,WAGJ,kBAAC/V,EAAA,EAAD,CAAKjC,UAAU,yBACZ8E,KAAK9B,MAAM6lB,gBACV,kBAAC,GAAD,CACEliB,OAAQ7B,KAAK9B,MAAM2D,OACnBE,SAAU/B,KAAK9B,MAAM6lB,eACrBxZ,OAAQvK,KAAKlD,QAAQtB,WACrByF,YAAajB,KAAKiB,iBAM1B,kBAACmT,EAAA,EAAIO,KAAL,CAAUH,SAAS,WACS,IAA3BxU,KAAK9B,MAAM+C,aACVjB,KAAK9B,MAAMlC,iBACX,kBAAC,GAAD,CACE6E,QAASb,KAAK9B,MAAMlC,gBACpB8jB,cAAe9f,KAAK8f,iBAIxB,kBAAC1L,EAAA,EAAIO,KAAL,CAAUH,SAAS,QACa,IAA/BxU,KAAK9B,MAAM8lB,iBACV,kBAACzmB,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAAS+C,KAAKkkB,yBAA5E,eAE8B,IAA/BlkB,KAAK9B,MAAM8lB,iBACV,kBAAC,GAAD,CACExf,UAAWxE,KAAKokB,2BAChBrf,SAAU/E,KAAKmkB,yBAGlBnkB,KAAK9B,MAAM+lB,YACV,kBAAC9mB,EAAA,EAAD,KACE,kDACC6C,KAAK9B,MAAM+lB,WAAWnjB,qB,GAzuBjBZ,cAApB4jB,GAoCGtZ,YAAcC,EAutBRqZ,UCvsBA+B,GA1Ee,SAAC7qB,GAE/B,OACA,yBAAKE,UAAU,mBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,uDAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,aAC7B,kBAACL,EAAA,EAAKM,MAAN,iBAAsB5J,EAAM6F,QAAQC,UACpC,kBAACwD,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAO4E,MAAOlH,EAAM6F,QAAQzC,QAInD,kBAACkG,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,WAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,UAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,WAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,gBAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,WAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,YAC7B,kBAACL,EAAA,EAAKM,MAAN,iBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,kBAIrD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,aAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,yCACA,2CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,gBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,iBAAiBF,UAAU,eAAe+B,QAASjC,EAAM+J,UAAzE,c,qBC/BSkI,GAhCE,SAAAjS,GAAU,IAAD,EACEoF,oBAAS,GADX,mBACjBlC,EADiB,KACVmC,EADU,KAUxB,OACE,wBAAIG,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMkS,OAEtC,kBAAC,IAAD,CAAiBtP,KAAM0D,IAAYpG,UAAU,WAAW+B,QAftC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAWM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,sBACQ,IAApBF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMkS,OAA1E,eCWD4Y,GAtCa,SAAA9qB,GAAU,IAE1B6G,EAFyB,iBAEf7G,EAAM6G,QACtBuL,EAASpS,EAAMqS,MACfC,EAAa,GAEI,SAAjBzL,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC7DoL,EAAaF,EAAOjL,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,EAAK,GAAK,MAE/B,SAAjBR,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC7DoL,EAAaF,EAAOjL,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,EAAK,GAAK,MAK/B,SAAjBR,EAAOI,QACTqL,EAAaF,GAGf,IAAI3M,EAAQ,EAEN4M,EAAQC,EAAW5K,KAAI,SAAAwK,GAI3B,OAFAzM,EAAQ6M,EAAW3K,QAAQuK,GAAM,EAG/B,kBAAC,GAAD,CACE1M,IAAKC,EACLyM,KAAMA,EACN7L,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,cAKtB,OAAO,wBAAIzG,UAAU,YAAYmS,ICEpB4Q,GA/BC,SAAAjjB,GAAU,IAAD,EACGoF,oBAAS,GADZ,mBAChBlC,EADgB,KACTmC,EADS,KAUvB,OACE,wBAAIG,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,QACO,0BAAMA,UAAU,QAAQF,EAAMkjB,MAErC,kBAAC,IAAD,CAAiBtgB,KAAM0D,IAAYpG,UAAU,WAAW+B,QAftC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAWM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,sBACQ,IAApBF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMkjB,MAA1E,eCWD6H,GAtCY,SAAA/qB,GAAU,IAEzB6G,EAFwB,iBAEd7G,EAAM6G,QACtBuc,EAAQpjB,EAAMqjB,KACdC,EAAY,GAEK,QAAjBzc,EAAOI,OAAkC,QAAfJ,EAAOrB,KAAkC,cAAjBqB,EAAOK,QAC3Doc,EAAYF,EAAMjc,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,EAAK,GAAK,MAE7B,QAAjBR,EAAOI,OAAkC,QAAfJ,EAAOrB,KAAkC,eAAjBqB,EAAOK,QAC3Doc,EAAYF,EAAMjc,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,EAAK,GAAK,MAK7B,QAAjBR,EAAOI,QACTqc,EAAYF,GAGd,IAAI3d,EAAQ,EAEN4d,EAAOC,EAAU5b,KAAI,SAAAwb,GAIzB,OAFAzd,EAAQ6d,EAAU3b,QAAQub,GAAK,EAG7B,kBAAC,GAAD,CACE1d,IAAKC,EACLyd,IAAKA,EACL7c,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,cAKtB,OAAO,wBAAIzG,UAAU,YAAYmjB,ICKpB2H,GApCK,SAAChrB,GAAW,IAAD,EAELoF,mBAAS,IAFJ,mBAEtBvE,EAFsB,KAEhBoqB,EAFgB,KAO/B,OACA,yBAAK/qB,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,yCAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAAC,EAAD,CACErB,MAAOd,EAAMc,MACboJ,WAZgB,SAACxI,GACrBupB,EAAQvpB,IAYJmF,OAAQ7G,EAAM6G,UAIlB,kBAACyC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAO4E,MAAOrG,EAAKuC,QAI1C,kBAACkG,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cCmBAmhB,G,kDA6CJ,WAAYlrB,GAAQ,IAAD,8BACjB,cAAMA,IA7CRkD,MAAQ,CACNzC,UAAW,KACXE,KAAM,KACNkE,SAAS,EACTC,cAAe,OACfC,SAAS,EACTjD,QAAS,KACTpB,aAAc,KACd+J,WAAW,EACXC,UAAW,KACXkJ,eAAe,EACfC,QAAS,OACThN,OAAQ,CACNI,MAAO,KACPzB,IAAK,KACL0B,MAAO,MAET4M,aAAc,KACdC,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,MAETZ,WAAW,EACX2N,kBAAmB,CACjB9Q,MAAO,KACP+D,MAAO,MAETlG,aAAc,KACdC,gBAAiB,KACjBC,oBAAqB,EAAKjB,MAAMmD,YAChCshB,mBAAmB,EACnBC,kBAAmB,KACnByG,uBAAuB,EACvBrqB,MAAO,KACPsqB,SAAU,CACRxnB,MAAO,EAAK5D,MAAMmD,YAAYS,MAC9BM,YAAa,EAAKlE,MAAMmD,YAAYe,YACpCJ,SAAU,EAAK9D,MAAMmD,YAAYW,SACjCunB,UAAWhoB,IAAOC,KAAK,EAAKtD,MAAMmD,YAAYI,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cAAc,IAAI,EAAK1D,MAAMmD,YAAYQ,KAAK,YACpI2nB,QAASjoB,IAAOC,KAAK,EAAKtD,MAAMmD,YAAYI,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cAAc,IAAI,EAAK1D,MAAMmD,YAAYQ,KAAK,cAKnH,EA8HrB+T,kBAAoB,SAACxK,GACnBA,EAAMC,iBACNzB,QAAQC,IAAI,sBACZ,EAAK7J,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1B+qB,EAAgB,EAAKvrB,MAAMmD,YAAYC,IACvCiP,EAAQnF,EAAMvI,OAAO0N,MAAMnL,MAE7B0E,EAAc,CAChBC,MAAM,+DAAD,OAEarL,EAFb,sCAGgB+qB,EAHhB,4DAKUlZ,EALV,kuBASPvG,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,2BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMwrB,kBAAkB/e,EAAQ1J,KAAK0oB,qBAC1C,EAAKpmB,SAAS,CACZoF,WAAW,EACXxJ,oBAAqBwL,EAAQ1J,KAAK0oB,oBAClChrB,UAAU,kCAAD,OAAoCD,EAApC,0BAAgE+qB,GACzExX,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQb,oBAAsBwL,EAAQ1J,KAAK0oB,oBAChD,EAAK7c,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAhMX,EAmMrBmN,WAAa,SAAClW,GAEZgK,QAAQC,IAAI,wBACZ,EAAK7J,QAAQL,aAAa,wBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1B+qB,EAAgB,EAAKvrB,MAAMmD,YAAYC,IACvC8O,EAAOxQ,EAETkK,EAAc,CAChBC,MAAM,iEAAD,OAEarL,EAFb,sCAGgB+qB,EAHhB,2DAKSrZ,EALT,kuBASPpG,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,6BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMwrB,kBAAkB/e,EAAQ1J,KAAK2oB,uBAC1C,EAAKrmB,SAAS,CACZoF,WAAW,EACXxJ,oBAAqBwL,EAAQ1J,KAAK2oB,sBAClCjrB,UAAU,oCAAD,OAAsCD,EAAtC,0BAAkE+qB,GAC3ExX,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQb,oBAAsBwL,EAAQ1J,KAAK2oB,sBAChD,EAAK9c,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QArQX,EAwQrBid,iBAAmB,SAACxa,GAClBA,EAAMC,iBACNzB,QAAQC,IAAI,qBACZ,EAAK7J,QAAQL,aAAa,qBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1B+qB,EAAgB,EAAKvrB,MAAMmD,YAAYC,IACvCigB,EAAOnW,EAAMvI,OAAO0e,KAAKnc,MAE3B0E,EAAc,CAChBC,MAAM,8DAAD,OAEarL,EAFb,sCAGgB+qB,EAHhB,2DAKSlI,EALT,kuBASPvX,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,0BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMwrB,kBAAkB/e,EAAQ1J,KAAK4oB,oBAC1C,EAAKtmB,SAAS,CACZoF,WAAW,EACXxJ,oBAAqBwL,EAAQ1J,KAAK4oB,mBAClClrB,UAAU,iCAAD,OAAmCD,EAAnC,0BAA+D+qB,GACxExX,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQb,oBAAsBwL,EAAQ1J,KAAK4oB,mBAChD,EAAK/c,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA1UX,EA6UrBmd,UAAY,SAAClmB,GAEXgK,QAAQC,IAAI,uBACZ,EAAK7J,QAAQL,aAAa,uBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1B+qB,EAAgB,EAAKvrB,MAAMmD,YAAYC,IACvC8f,EAAMxhB,EAERkK,EAAc,CAChBC,MAAM,gEAAD,OAEarL,EAFb,sCAGgB+qB,EAHhB,0DAKQrI,EALR,kuBASPpX,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,4BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMwrB,kBAAkB/e,EAAQ1J,KAAK6oB,sBAC1C,EAAKvmB,SAAS,CACZoF,WAAW,EACXxJ,oBAAqBwL,EAAQ1J,KAAK6oB,qBAClCnrB,UAAU,mCAAD,OAAqCD,EAArC,0BAAiE+qB,GAC1ExX,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQb,oBAAsBwL,EAAQ1J,KAAK6oB,qBAChD,EAAKhd,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA/YX,EAmZrBohB,kBAAoB,SAAC3e,GACnBA,EAAMC,iBACNzB,QAAQC,IAAI,2BACZ,EAAK7J,QAAQL,aAAa,2BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BuN,EAAeb,EAAMvI,OAAO9D,KAAKqG,MACjCqkB,EAAgB,EAAKvrB,MAAMmD,YAAYC,IAEvC0oB,EAAW,EAAK5oB,MAAMpC,MAAM+F,QAAO,SAAAU,GAAC,OAAIA,EAAEnE,MAAQ2K,KAAc,GAAGpN,KACzE,GAAiB,WAAbmrB,GAAsC,UAAbA,EAG3B,OAFApgB,QAAQC,IAAI,4DACZ,EAAK7J,QAAQL,aAAa,uDAI5B,IAAImK,EAAc,CAChBC,MAAM,oEAAD,OAEarL,EAFb,sCAGgB+qB,EAHhB,qCAIexd,EAJf,6tBAQPjC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,gCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMwrB,kBAAkB/e,EAAQ1J,KAAKgpB,0BAC1C,EAAK1mB,SAAS,CACZoF,WAAW,EACXhK,UAAU,uCAAD,OAAyCD,EAAzC,0BAAqE+qB,EAArE,yBAAmGxd,KAE9G,EAAKa,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IACpD,EAAK8X,eAENvL,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAtdX,EAydrBuhB,iBAAmB,SAACtqB,GAClBgK,QAAQC,IAAI,6BACZ,EAAK7J,QAAQL,aAAa,6BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BuN,EAAerM,EAAK0B,IACpBmoB,EAAgB,EAAKvrB,MAAMmD,YAAYC,IAEzCwI,EAAc,CAChBC,MAAM,uEAAD,OAEarL,EAFb,sCAGgB+qB,EAHhB,qCAIexd,EAJf,6tBAQPjC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,mCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMwrB,kBAAkB/e,EAAQ1J,KAAKkpB,6BAC1C,EAAK5mB,SAAS,CACZoF,WAAW,EACXhK,UAAU,0CAAD,OAA4CD,EAA5C,0BAAwE+qB,EAAxE,yBAAsGxd,KAEjH,EAAKa,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IACpD,EAAK8X,eAENvL,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAphBX,EAuhBrByhB,mBAAqB,WACnBxgB,QAAQC,IAAI,oCAxhBO,EA2hBrBmM,4BAA8B,SAAC5K,GAC7BA,EAAMC,iBACNzB,QAAQC,IAAI,+BACZ,EAAK7J,QAAQL,aAAa,+BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1B+qB,EAAgB,EAAKvrB,MAAMmD,YAAYC,IACvC6D,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B2E,EAAQqB,EAAMvI,OAAOkH,MAAM3E,MAE7B0E,EAAc,CAChBC,MAAM,wEAAD,OAEarL,EAFb,sCAGgB+qB,EAHhB,8BAIQtkB,EAJR,8BAKQ4E,EALR,6tBASPC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,8BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMwrB,kBAAkB/e,EAAQ1J,KAAKopB,8BAC1C,EAAK9mB,SAAS,CACZoF,WAAW,EACXzJ,gBAAiByL,EAAQ1J,KAAKopB,6BAC9B1rB,UAAU,2CAAD,OAA6CD,EAA7C,0BAAyE+qB,GAClFvX,kBAAmB,CACjB9Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQd,gBAAkByL,EAAQ1J,KAAKopB,6BAC5C,EAAKvd,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA9lBX,EAimBrBuN,uBAAyB,SAACtW,GACxB,EAAK2D,SAAS,CACZ2O,kBAAmB,CACjB9Q,OAAO,EACP+D,MAAOvF,MArmBQ,EAymBrBuW,wBAA0B,WACxB,EAAK5S,SAAS,CACZ2O,kBAAmB,CACjB9Q,MAAO,KACP+D,MAAO,SA7mBQ,EAknBrBiR,cAAgB,WACa,SAAvB,EAAKhV,MAAM2Q,QACb,EAAKxO,SAAS,CAACwO,QAAS,WAExB,EAAKxO,SAAS,CACZwO,QAAS,UAvnBM,EAioBrBsE,WAAa,SAACzW,GACZ,EAAK2D,SAAS,CAAC8S,WAAYzW,KAloBR,EAooBrBuL,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,IAAIlG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B1B,EAAM0H,EAAMvI,OAAOa,IAAI0B,MACvBA,EAAQgG,EAAMvI,OAAOuC,MAAMA,MACjB,SAAVA,IACFA,GAAQ,GAEI,UAAVA,IACFA,GAAQ,GAEV,EAAK7B,SAAS,CACZwB,OAAQ,CACNI,MAAOA,EACPzB,IAAKA,EACL0B,MAAOA,MAnpBQ,EAwpBrBkR,SAAW,SAAC1W,GACV,EAAK2D,SAAS,CACZ0O,OAAQ,CACN7Q,OAAO,EACP+D,MAAOvF,MA5pBQ,EAgqBrB2W,UAAY,WACV,EAAKhT,SAAS,CACZ0O,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,SAlqBT,EAAK+gB,aAAe,EAAKhoB,MAAMmD,YAFd,E,gEAQnB,IAAIuH,EAFJgB,QAAQC,IAAI,+CAGRuD,eAAeC,QAAQ,aACzBzE,EAAYuB,KAAKmD,MAAMF,eAAeC,QAAQ,aAEhDnK,KAAKK,SAAS,CACZrE,gBAAiBgE,KAAKlD,QAAQd,kBAEN,UAAtBgE,KAAKlD,QAAQnB,MACfqE,KAAKK,SAAS,CACZgB,WAAW,IAGfrB,KAAKyG,YAAYf,K,sFAOHhJ,GACdgK,QAAQC,IAAI,yBACZ,IAAMnL,EAAakB,EAAKlB,WAClBD,EAAQmB,EAAKnB,MACbK,EAASJ,EACTyY,EAAUjU,KAAK9B,MAAMzC,UACrByY,EAAe7V,MAASK,OAAO,cACjCkI,EAAc,CAChBC,MAAM,2DAAD,OAEarL,EAFb,qBAEoCI,EAFpC,4DAIiBsY,EAJjB,0CAKoBD,EALpB,qbASPnN,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEAA,EAAQ1J,KAAKoW,gBAAgBtM,OAC/BnB,QAAQC,IAAI,qBAAqBc,EAAQ1J,KAAKoW,gBAAgBtM,UAGjEC,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,Q,kCAGLrL,GAAO,IAAD,OACjBgK,QAAQC,IAAI,8BACZ3G,KAAKlD,QAAQL,aAAa,8BAC1BuD,KAAKK,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAClBI,EAASJ,EAEXoL,EAAc,CAChBC,MAAM,oDAAD,OAEarL,EAFb,kmBAKPsL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,qCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX3J,MAAO2L,EAAQ1J,KAAK0I,YACpBhL,UAAU,0BAAD,OAA4BD,EAA5B,mBAAiDI,KAE5D,EAAKgO,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,S,+BAijB9B,OACE,kBAAC,IAAM1I,SAAP,MAEwB,IAAvBiD,KAAK9B,MAAM2B,SACV,kBAAC,EAAD,CACExC,OAAQ2C,KAAK9B,MAAM4B,gBAIvB,kBAACtC,EAAA,EAAD,CAAWtC,UAAU,uBAEnB,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,kCACb,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,2BAGtB,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,GAAIpP,UAAU,2BACnB8E,KAAKhF,MAAMmD,aACX,qCAIN,kBAACiW,EAAA,EAAI5W,UAAL,CAAe8Q,GAAG,oBAAoB+F,iBAAiB,KACrD,kBAAClX,EAAA,EAAD,CAAKjC,UAAU,mCACb,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,sCACI,SAAvB8E,KAAK9B,MAAM2Q,SACV,kBAACyF,EAAA,EAAD,CAAKlZ,QAAQ,QAAQF,UAAU,uBAC7B,kBAACoZ,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,UAA3D,UAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,UAA3D,UAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,eAA3D,gBAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,SAA3D,UAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,QAA3D,UAIkB,WAAvBA,KAAK9B,MAAM2Q,SACV,kBAAC5O,EAAA,EAAD,KAC6B,eAA1BD,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,SAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,QAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,qBAQzBjI,KAAKhF,MAAMmD,aACV,kBAAC8B,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,uCACoB,IAAvC8E,KAAK9B,MAAM8Q,kBAAkB9Q,OAC5B,kBAAC,GAAD,CACE+D,MAAOjC,KAAK9B,MAAM8Q,kBAAkB/M,MACpCuC,UAAWxE,KAAK8S,4BAChB/N,SAAU/E,KAAKiT,0BAGjB,kBAACmB,EAAA,EAAIM,QAAL,CAAaxZ,UAAU,cACrB,kBAACkZ,EAAA,EAAIO,KAAL,CAAUH,SAAS,KAAnB,qBAEE,kBAAC/W,EAAA,EAAD,CAAWvC,UAAU,yBACnB,kBAACuC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,UACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmD,YAAYS,OAC1D,kBAACrB,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,UAA5F,SAEF,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmD,YAAYb,MAC1D,kBAACC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,SAA5F,QACA,uBAAG9E,UAAU,iBAAb,YACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmD,YAAYU,SAC1D,kBAACtB,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,YAA5F,SAEF,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsBmD,IAAOC,KAAK0B,KAAKhF,MAAMmD,YAAYI,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,eAC9G,uBAAGxD,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmD,YAAYQ,MAC1D,kBAACpB,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,SAA5F,SAEF,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,aACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmD,YAAYW,UAC1D,kBAACvB,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,aAA5F,SAEF,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,gBACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmD,YAAYe,aAC1D,kBAAC3B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,gBAA5F,SAEF,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,cACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmD,YAAYY,UAAUmE,YACpE,kBAAC3F,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,cAA5F,QACA,uBAAG9E,UAAU,iBAAb,gBACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmD,YAAY8E,WAAWC,YACrE,kBAAC3F,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,eAA5F,QACA,uBAAG9E,UAAU,iBAAb,aACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmD,YAAYgF,SAASD,YACnE,kBAAC3F,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,aAA5F,SAEF,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,aAEF,kBAACuC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmD,YAAY0C,QAAQjC,OAClE,uBAAG1D,UAAU,sBAAsB8E,KAAKhF,MAAMmD,YAAY0C,QAAQU,MAClE,kBAAC,IAAD,CACEvE,GAAI,CACFiB,SAAU,YACVC,MAAO,CAAC2C,QAASb,KAAKhF,MAAMmD,YAAY0C,QAAQzC,OAGpD,kBAAC,IAAD,CAAiBR,KAAMC,IAAmB3C,UAAU,eAGtD,kBAACuC,EAAA,EAAUC,KAAX,KACA,uBAAGxC,UAAU,iBAAb,OACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmD,YAAY0C,QAAQzC,MAEjE4B,KAAKhF,MAAMmD,YAAYgB,OACtB,kBAAC1B,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,UACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmD,YAAYgB,MAAMf,MAGpE,kBAACX,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,WACA,kBAAC,KAAD,CAAegN,MAAOlI,KAAK9B,MAAMkoB,cAIvC,kBAAChS,EAAA,EAAIO,KAAL,CAAUH,SAAS,KAAnB,oBAEE,kBAAC/W,EAAA,EAAD,CAAWvC,UAAU,yBACnB,kBAACuC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,OACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmD,YAAYC,MAE5D,kBAACX,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,YACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmD,YAAYgG,QAAQ/F,QAIxE,kBAACgW,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,gCACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UAEE,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,eAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,eAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAClBjC,KAAK9B,MAAMpC,OACT,kBAAC,GAAD,CACE0I,UAAWxE,KAAK6mB,kBAChB9hB,SAAU/E,KAAKqT,UACfxR,OAAQ7B,KAAK9B,MAAM2D,OACnB/F,MAAOkE,KAAK9B,MAAMpC,QAGxB,kBAAC,EAAD,CACE+F,OAAQ7B,KAAK9B,MAAM2D,OACnB0I,OAAQvK,KAAKlD,QAAQtB,WACrBM,MAAOkE,KAAKhF,MAAMmD,YAAYipB,YAC9BpmB,iBAAiB,EACjBK,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKgnB,oBAGnB,kBAAC5S,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,0BACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UAEE,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,SAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,SAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAK0S,kBAChB3N,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnBwL,MAAOrN,KAAKhF,MAAMmD,YAAYkP,MAC9B9C,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAK4S,cAGnB,kBAACwB,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,yBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UAEE,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,QAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,QAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAK0iB,iBAChB3d,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnBwc,KAAMre,KAAKhF,MAAMmD,YAAYkgB,KAC7B9T,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAK4iB,uB,GAr8BL1iB,aAA1BgmB,GA2CG1b,YAAcC,EA46BRyb,UC/9BAmB,GA1Ce,SAACrsB,GAE/B,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WAEpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACjB,yCACA,wCACA,2CACA,wCACA,wCACA,+CACA,4CACA,4CACA,+CACA,8CACA,4CACA,6CACA,yCACA,0CAIF,kBAACJ,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,gCAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCLAuiB,I,mNACJppB,MAAQ,CACNzC,UAAW,KACXE,KAAM,KACNkE,SAAS,EACTC,cAAe,OACfC,SAAS,EACTjD,QAAS,KACTpB,aAAc,KACdI,MAAO,KACPiG,SAAU,KACVV,WAAW,EACXiC,aAAc,KACdikB,mBAAoB,KACpB9hB,WAAW,EACXC,UAAW,KACXkJ,eAAe,EACfC,QAAS,OACThN,OAAQ,CACNI,MAAO,KACPzB,IAAK,KACL0B,MAAO,MAET4M,aAAc,KACdC,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,MAEThB,aAAa,EACblF,aAAc,KACdC,gBAAiB,KACjBC,oBAAqB,KACrBurB,qBAAqB,EACrBC,eAAgB,KAChBtY,qBAAsB,KACtBiK,WAAY,KACZC,SAAU,KACVqO,eAAe,EACfpO,OAAQ,Q,EA+MZiO,mBAAqB,SAACrf,GACpBA,EAAMC,iBACNzB,QAAQC,IAAI,gCACZ,EAAK7J,QAAQL,aAAa,gCAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAgBImB,EAhBErL,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAASJ,EACTyG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B2E,EAAQqB,EAAMvI,OAAOkH,MAAM3E,MAC7BuH,GAAQ,EACE,SAAVxH,GACU,eAAVA,GACU,aAAVA,GACU,cAAVA,GACU,cAAVA,IAEAwH,GAAQ,IAKE,IAAVA,IACF7C,EAAc,CACZC,MAAM,wEAAD,OAEarL,EAFb,gCAGQyG,EAHR,gCAIQ4E,EAJR,gOASK,IAAV4C,IACF7C,EAAc,CACZC,MAAM,+DAAD,OAEWrL,EAFX,8BAGMyG,EAHN,8BAIM4E,EAJN,2NASTC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAQJ,IAAIC,EAAgB,qCAGN,IAAV+B,IACEhC,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,SAIX,IAAV4B,IACEhC,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,QAKzB,EAAK/K,QAAQL,aAAaiL,IAEZ,IAAV+B,GACF,EAAKpJ,SAAS,CACZoF,WAAW,EACX8hB,mBAAoB9f,EAAQ1J,KAAK4pB,4BACjClsB,UAAU,0CAAD,OAA4CD,EAA5C,mBAAiEI,MAGhE,IAAV6N,GACF,EAAKpJ,SAAS,CACZoF,WAAW,EACX8hB,mBAAoB9f,EAAQ1J,KAAK6pB,uBACjCnsB,UAAU,qCAAD,OAAuCD,EAAvC,mBAA4DI,KAIzE,EAAKgO,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAKhCoiB,4BAA8B,WAC5B,EAAKxnB,SAAS,CACZmnB,qBAAqB,K,EAGzBM,2BAA6B,WAC3B,EAAKznB,SAAS,CACZmnB,qBAAqB,EACrBxrB,gBAAiB,Q,EAGrB+rB,+BAAiC,SAAC7f,GAChCA,EAAMC,iBACNzB,QAAQC,IAAI,kCACZ,EAAK7J,QAAQL,aAAa,kCAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BsN,EAAY,EAAK5K,MAAMlC,gBAAgBoC,IAEvCQ,EAAQsJ,EAAMvI,OAAOf,MAAMsD,MAC3B5E,EAAO4K,EAAMvI,OAAOrC,KAAK4E,MACzBrD,EAAUqJ,EAAMvI,OAAOd,QAAQqD,MAC/B3D,EAAO2J,EAAMvI,OAAOpB,KAAK2D,MACzBvD,EAAOuJ,EAAMvI,OAAOhB,KAAKuD,MACzBpD,EAAWoJ,EAAMvI,OAAOb,SAASoD,MACjChD,EAAcgJ,EAAMvI,OAAOT,YAAYgD,MACvCnD,EAAYmJ,EAAMvI,OAAOZ,UAAUmD,MAEzC,GAC4B,IAAxBtD,EAAMgY,OAAOC,QACU,IAAvBtY,EAAKqY,OAAOC,QACW,IAAvBlY,EAAKiY,OAAOC,QACe,IAA3B/X,EAAS8X,OAAOC,OAJpB,CAWA,GAFAnQ,QAAQC,IAAI,MAAMpI,GAEdA,EAAOF,MAASK,OAAO,cAIzB,OAHAgI,QAAQC,IAAI,4DACZ,EAAK7J,QAAQL,aAAa,iEAC1B,EAAK4D,SAAS,CAACoF,WAAU,IAI3B,IAAImB,EAAc,CAChBC,MAAM,6DAAD,OAEarL,EAFb,kCAGYsN,EAHZ,4DAKUlK,EALV,+BAMStB,EANT,kCAOYuB,EAPZ,+BAQSN,EART,+BASSI,EATT,mCAUaG,EAVb,sCAWgBI,EAXhB,mCAYaH,EAZb,4NAgBP+H,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,oCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXxE,aAAa,EACbumB,qBAAqB,EACrBvrB,oBAAqBwL,EAAQ1J,KAAKiqB,kBAClCP,eAAgBhgB,EAAQ1J,KAAKiqB,kBAC7B1O,OAAQ,SACR7d,UAAU,gCAAD,OAAkCD,EAAlC,0BAA8DiM,EAAQ1J,KAAKiqB,kBAAkB5pB,OAExG,EAAKwL,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IACpD,IAAMmK,EAAYuB,KAAKmD,MAAMF,eAAeC,QAAQ,YACpD,EAAK8d,mBAAmBviB,MAEzBoC,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,YA1E5B,EAAK3I,QAAQL,aAAa,0B,EA+E9ByW,cAAgB,WACa,SAAvB,EAAKhV,MAAM2Q,QACb,EAAKxO,SAAS,CAACwO,QAAS,WAExB,EAAKxO,SAAS,CACZwO,QAAS,U,EAUfsE,WAAa,SAACzW,GACZ,EAAK2D,SAAS,CACZ8S,WAAYzW,EACZ4c,OAAQ5c,K,EAGZuL,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,IAAIlG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B1B,EAAM0H,EAAMvI,OAAOa,IAAI0B,MACvBA,EAAQgG,EAAMvI,OAAOuC,MAAMA,MACjB,SAAVA,IACFA,GAAQ,GAEI,UAAVA,IACFA,GAAQ,GAEV,EAAK7B,SAAS,CACZwB,OAAQ,CACNI,MAAOA,EACPzB,IAAKA,EACL0B,MAAOA,M,EAMbjB,YAAc,SAACvE,GACb,EAAK2D,SAAS,CACZY,aAAa,EACbhF,oBAAqBS,EACrBmD,SAAS,EACTyZ,OAAQ,WAEV,EAAKte,MAAMktB,kBAAkBxrB,I,EAE/B0W,SAAW,SAAC1W,GACV,EAAK2D,SAAS,CACZ0O,OAAQ,CACN7Q,OAAO,EACP+D,MAAOvF,M,EAIb2W,UAAY,WACV,EAAKhT,SAAS,CACZ0O,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,S,EAIb0G,cAAgB,SAACjM,GACf,EAAK2D,SAAS,CACZrE,gBAAiBU,K,EAIrB8pB,kBAAoB,SAAC9pB,GACnBgK,QAAQC,IAAI,uCACZ,EAAKtG,SAAS,CACZpE,oBAAqBS,IAEvB,EAAK1B,MAAMktB,kBAAkBxrB,I,EAG/ByrB,kBAAoB,SAACzrB,GACnBgK,QAAQC,IAAI,8BAA8BjK,GAC1C,EAAKI,QAAQL,aAAa,+BAE1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1B+qB,EAAgB7pB,EAAK0B,IAEvBwI,EAAc,CAChBC,MAAM,iEAAD,OAEarL,EAFb,sCAGgB+qB,EAHhB,6tBAOPzf,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,oCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXhK,UAAU,oCAAD,OAAsCD,EAAtC,0BAAkE+qB,KAE7E,EAAK3c,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IACpD,EAAK0sB,mBAAmB,CAACzsB,WAAYA,EAAWD,MAAOA,OAExDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAIhCwK,iBAAmB,SAACvT,GAClBgK,QAAQC,IAAI,2CACZ,IAAIwI,EAAuBzS,EAAKgG,KAAI,SAAAH,GAAC,MAAK,CACtC3D,MAAO2D,EAAE3D,MACTL,KAAMF,IAAOC,KAAKiE,EAAEhE,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cAC5D1D,MAAO,CACLoD,IAAKmE,EAAEnE,IACPG,KAAMgE,EAAEhE,KACRK,MAAO2D,EAAE3D,MACTtB,KAAMiF,EAAEjF,KACRuB,QAAS0D,EAAE1D,QACXF,KAAM4D,EAAE5D,KACRG,SAAUyD,EAAEzD,SACZI,YAAaqD,EAAErD,YACfH,UAAWwD,EAAExD,eAGjB,EAAKsB,SAAS,CACZ8O,qBAAsBA,K,EAK5BoE,kBAAoB,SAAC7W,GACnBgK,QAAQC,IAAI,qCAAqCjK,EAAKwL,MAAMuL,cAAczY,OAC1E,IAAMmD,EAAc,EAAKD,MAAMoF,aAAazB,QAAO,SAAAU,GAAC,OAAIA,EAAEnE,MAAQ1B,EAAKwL,MAAMuL,cAAczY,MAAMoD,OAAK,GACtG,EAAKiC,SAAS,CACZR,SAAS,EACTC,cAAe,CAACxC,KAAM,sBAAuBS,KAAMI,M,EAGvDf,cAAgB,WACd,EAAKiD,SAAS,CACZR,SAAS,K,EAIbuoB,mBAAqB,WACnB,EAAK/nB,SAAS,CACZqnB,eAAe,K,EAGnBW,oBAAsB,WACpB,EAAKhoB,SAAS,CACZqnB,eAAe,IAEjB,EAAKlhB,eAAe,CAAChL,WAAY,EAAKsB,QAAQtB,WAAWD,MAAO,EAAKuB,QAAQvB,S,EAE/E+sB,wBAA0B,SAACpgB,GACzBA,EAAMC,iBACNzB,QAAQC,IAAI,mCACZ,EAAK7J,QAAQL,aAAa,mCAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAwBImB,EAxBErL,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAASJ,EACTyG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B2E,EAAQqB,EAAMvI,OAAOkH,MAAM3E,MAC7BuH,GAAQ,EACE,WAAVxH,GACU,QAAVA,GACU,QAAVA,GACU,qBAAVA,GACU,sBAAVA,GACU,aAAVA,GACU,oBAAVA,GACU,0BAAVA,GACU,sBAAVA,GACU,eAAVA,GACU,kBAAVA,GACU,yBAAVA,GACU,yBAAVA,IAEAwH,GAAQ,IAKE,IAAVA,IACF7C,EAAc,CACZC,MAAM,oEAAD,OAEarL,EAFb,gCAGQyG,EAHR,gCAIQ4E,EAJR,+4BASK,IAAV4C,IACF7C,EAAc,CACZC,MAAM,+DAAD,OAEarL,EAFb,gCAGQyG,EAHR,gCAIQ4E,EAJR,84BASTC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAQJ,IAAIC,EAAgB,iCAGN,IAAV+B,IACEhC,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,SAIX,IAAV4B,IACEhC,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,QAKzB,EAAK/K,QAAQL,aAAaiL,IAEZ,IAAV+B,GACF,EAAKpJ,SAAS,CACZoF,WAAW,EACX1D,SAAU0F,EAAQ1J,KAAK2L,wBACvBjO,UAAU,sCAAD,OAAwCD,EAAxC,mBAA6DI,MAG5D,IAAV6N,GACF,EAAKpJ,SAAS,CACZoF,WAAW,EACX1D,SAAU0F,EAAQ1J,KAAK4L,mBACvBlO,UAAU,iCAAD,OAAmCD,EAAnC,mBAAwDI,KAIrE,EAAKgO,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAIhCgU,YAAc,WACZ,EAAKpZ,SAAS,CACZwB,OAAQ,CACNI,MAAO,KACPzB,IAAK,KACL0B,MAAO,S,kEAjvBX,GAFAwE,QAAQC,IAAI,4CAERuD,eAAeC,QAAQ,WAAY,CACrC,IAAMzE,EAAYuB,KAAKmD,MAAMF,eAAeC,QAAQ,YAC7B,UAAnBzE,EAAU/J,MACZqE,KAAKK,SAAS,CAACgB,WAAU,IAG3BrB,KAAKwG,eAAed,GAChB1F,KAAKhF,MAAM8D,SAASZ,OAClB8B,KAAKhF,MAAM8D,SAASZ,MAAMC,aAC5B6B,KAAKK,SAAS,CACZ+Y,YAAY,EACZC,SAAUrZ,KAAKhF,MAAM8D,SAASZ,MAAMC,cAI1C6B,KAAKioB,mBAAmBviB,GACpB1F,KAAKhF,MAAMiB,sBACbyK,QAAQC,IAAI,yDACZ3G,KAAKK,SAAS,CACZY,aAAa,EACbhF,oBAAqB+D,KAAKhF,MAAMiB,0B,yFASpBS,GAAO,IAAD,OACxBgK,QAAQC,IAAI,qCACZ3G,KAAKlD,QAAQL,aAAa,qCAC1BuD,KAAKK,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAEpBoL,EAAc,CAChBC,MAAM,2DAAD,OAEarL,EAFb,6tBAMPsL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,4CAYpB,GATID,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,QAGO,IAA1B,EAAK3J,MAAMkb,WAAqB,CAClC,IAAImP,EAAoB9gB,EAAQ1J,KAAKkqB,mBAAmBpmB,QAAO,SAAAU,GAAC,OAAIA,EAAEnE,MAAQ,EAAKF,MAAMmb,YAAU,GACnG,EAAKhZ,SAAS,CACZY,aAAa,EACbhF,oBAAqBssB,EACrBjP,OAAQ,WAEV,EAAKxc,QAAQL,aAAa,+BAE5B,EAAKK,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXnC,aAAcmE,EAAQ1J,KAAKkqB,mBAC3BxsB,UAAU,iCAAD,OAAmCD,KAE9C,EAAKoO,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IACpD,EAAK0U,iBAAiBxI,EAAQ1J,KAAKkqB,uBAEpCngB,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,S,qCAIhB/I,GAAO,IAAD,OACpBgK,QAAQC,IAAI,iCACZ3G,KAAKlD,QAAQL,aAAa,iCAC1BuD,KAAKK,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAEpBoL,EAAc,CAChBC,MAAM,uDAAD,OAEarL,EAFb,u4BAMPsL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,wCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX1D,SAAU0F,EAAQ1J,KAAKyI,eACvB/K,UAAU,6BAAD,OAA+BD,KAE1C,EAAKoO,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,S,sCAIhB/I,GAAO,IAAD,OACpBgK,QAAQC,IAAI,yBACZ,IAAMnL,EAAakB,EAAKlB,WAClBD,EAAQmB,EAAKnB,MACbK,EAASJ,EACTyY,EAAUjU,KAAK9B,MAAMzC,UACrByY,EAAe7V,MAASK,OAAO,cACjCkI,EAAc,CAChBC,MAAM,2DAAD,OAEarL,EAFb,qBAEoCI,EAFpC,4DAIiBsY,EAJjB,0CAKoBD,EALpB,qbASPnN,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEAA,EAAQE,QACV,EAAK7K,QAAQL,aAAagL,EAAQE,OAAO,GAAGC,SAE1CH,EAAQ1J,KAAKoW,gBAAgBtM,OAC/B,EAAK/K,QAAQL,aAAagL,EAAQ1J,KAAKoW,gBAAgBtM,UAG1DC,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,Q,+BAqjBhB,OACE,kBAAC,IAAMhL,SAAP,MAEwB,IAAvBiD,KAAK9B,MAAM2B,SACV,kBAAC,EAAD,CACExC,OAAQ2C,KAAK9B,MAAM4B,cACnBnC,sBAAuBqC,KAAKiB,YAC5B7D,cAAe4C,KAAK5C,gBAIxB,kBAACI,EAAA,EAAD,CAAWtC,UAAU,sBACnB,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,iCACb,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,yBACtB,8CAA8C,IAA3B8E,KAAK9B,MAAM+C,aAChBjB,KAAK9B,MAAMjC,qBACW,WAAtB+D,KAAK9B,MAAMob,QACLtZ,KAAK9B,MAAMjC,oBAAoB2C,QAGnD,kBAACqB,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,yBACnB8E,KAAK9B,MAAMuH,UACV,kBAACnG,EAAA,EAAD,CAAOC,IAAKC,IAAYtE,UAAU,aAAauE,OAAK,IAEpD,kCAKN,kBAAC2U,EAAA,EAAI5W,UAAL,CAAe8Q,GAAG,oBAAoBqL,UAAW3Z,KAAK9B,MAAMob,QAC1D,kBAACnc,EAAA,EAAD,CAAKjC,UAAU,kCAEb,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,qCACI,SAAvB8E,KAAK9B,MAAM2Q,SACV,kBAACyF,EAAA,EAAD,CAAKlZ,QAAQ,QAAQF,UAAU,wBAC7B,kBAACoZ,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,OAAOvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,SAA9D,SAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,SAASvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,WAAhE,WAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,SAASvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,WAAhE,YAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,MAAMvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,QAA7D,SAIkB,WAAvBA,KAAK9B,MAAM2Q,SACV,kBAAC5O,EAAA,EAAD,KACE,kBAAC,GAAD,CACE8E,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,qBAMvBjI,KAAK9B,MAAMoF,cACV,kBAACrD,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,qCACpB,kBAACkZ,EAAA,EAAIM,QAAL,KACE,kBAACN,EAAA,EAAIO,KAAL,CAAUH,SAAS,OAAOtZ,UAAU,YAEpC,kBAACoa,EAAA,EAAD,CAAMjB,iBAAiB,IAAI/F,GAAG,4BAC5B,kBAAC8F,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,QACxB,kBAACzB,EAAA,EAAD,CAAKjC,UAAU,sBACb,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACA,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKyZ,aAAhD,UAEA,kBAAC,EAAD,CACE5X,OAAQ7B,KAAK9B,MAAM2D,OACnByB,aAActD,KAAK9B,MAAMoF,aACzBiH,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBJ,YAAajB,KAAKiB,YAClBU,SAAU3B,KAAKmoB,qBAGnB,kBAAC/T,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,WAAW1D,UAAU,eAC3C,wCACA,kBAAC,IAAD,CACEqa,YAAY,eACZC,QAAS,CAACC,KACVC,OAAQ1V,KAAK9B,MAAMiR,qBACnBwG,WAAY3V,KAAKuT,uBAOvB,kBAACa,EAAA,EAAIO,KAAL,CAAUH,SAAS,UACnB,kBAACvU,EAAA,EAAD,CAAK/E,UAAU,iBACb,kDACA,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,4BACb,kBAAC,GAAD,CACEsJ,UAAWxE,KAAKunB,sBAGpB,kBAACpqB,EAAA,EAAD,KACG6C,KAAK9B,MAAMqpB,oBACV,kBAAChqB,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,eAAe+B,QAAS+C,KAAKkT,eAAzE,WAGJ,kBAAC/V,EAAA,EAAD,CAAKjC,UAAU,yBACZ8E,KAAK9B,MAAMqpB,oBACV,kBAAC,EAAD,CACE1lB,OAAQ7B,KAAK9B,MAAM2D,OACnByB,aAActD,KAAK9B,MAAMqpB,mBACzBhd,OAAQvK,KAAKlD,QAAQtB,WACrByF,YAAajB,KAAKiB,iBAM1B,kBAACmT,EAAA,EAAIO,KAAL,CAAUH,SAAS,WACS,IAA3BxU,KAAK9B,MAAM+C,aACVjB,KAAK9B,MAAMjC,qBACX,kBAAC,GAAD,CACEkC,YAAa6B,KAAK9B,MAAMjC,oBACxBuqB,kBAAmBxmB,KAAKwmB,qBAI5B,kBAACpS,EAAA,EAAIO,KAAL,CAAUH,SAAS,QACiB,IAAnCxU,KAAK9B,MAAMspB,qBACV,kBAACjqB,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAAS+C,KAAK6nB,6BAA5E,eAEkC,IAAnC7nB,KAAK9B,MAAMspB,qBACVxnB,KAAK9B,MAAM6D,WACV/B,KAAK9B,MAAMlC,iBACZ,kBAACiE,EAAA,EAAD,CAAK/E,UAAU,qBACf,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,qBACf,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,0BAA0B+B,QAAS+C,KAAKooB,oBAApF,WAEA,kBAACjrB,EAAA,EAAD,CAAKjC,UAAU,sBACe,IAA7B8E,KAAK9B,MAAMwpB,eACV,kBAAC,EAAD,CACE3iB,SAAU/E,KAAKqoB,oBACf7jB,UAAWxE,KAAKsoB,2BAIpB,kBAACnrB,EAAA,EAAD,CAAKjC,UAAU,qBACf,kBAAC,EAAD,CACE2G,OAAQ7B,KAAK9B,MAAM2D,OACnBE,SAAU/B,KAAK9B,MAAM6D,SACrBwI,OAAQvK,KAAKlD,QAAQtB,WACrB4F,SAAUpB,KAAK2I,cACf3H,iBAAiB,OAMe,IAAnChB,KAAK9B,MAAMspB,qBACVxnB,KAAK9B,MAAMlC,iBACX,kBAACmB,EAAA,EAAD,KACE,kBAAC,GAAD,CACEqH,UAAWxE,KAAK+nB,+BAChBhjB,SAAU/E,KAAK8nB,2BACfjnB,QAASb,KAAK9B,MAAMlC,mBAIzBgE,KAAK9B,MAAMupB,gBACV,kBAACtqB,EAAA,EAAD,KACE,sDAA4B6C,KAAK9B,MAAMupB,eAAerpB,iB,GA/8B5C8B,cAAxBonB,GAwCG9c,YAAcC,EAy7BR6c,UCv9BAkB,GAxCS,SAACxtB,GAEzB,OACA,yBAAKE,UAAU,mBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,iDAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,iBAC7B,kBAACL,EAAA,EAAKM,MAAN,qBAA0B5J,EAAMmD,YAAYS,OAC5C,kBAAC0F,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAO4E,MAAOlH,EAAMmD,YAAYC,QAIvD,kBAACkG,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,WAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,UAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,WAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,gBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,iBAAiBF,UAAU,eAAe+B,QAASjC,EAAM+J,UAAzE,cC0DS0jB,GAlFO,SAAAztB,GAAU,IAAD,EACHoF,oBAAS,GADN,mBACtBlC,EADsB,KACfmC,EADe,OAWUD,oBAAS,GAXnB,mBAWrBE,EAXqB,KAWRC,EAXQ,KAqB7B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAM0tB,UAAU9pB,QAEjD,kBAAC,IAAD,CAAiBhB,KAAMmD,IAAO7F,UAAU,WAAW+B,QA1BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAsBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAM0tB,UAAU9pB,SAGjD,4BACA,kBAAC8B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,0BAAMA,UAAU,QAAQF,EAAM0tB,UAAUxpB,eAGvD,4BACA,kBAACwB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,cACa,0BAAMA,UAAU,QAAQF,EAAM0tB,UAAUC,aAGrD,4BACA,kBAACjoB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,kBAAC,IAAD,CAAiB0C,KAAMqf,IAAc/hB,UAAU,WAAW+B,QAASjC,EAAMkiB,gBAAgBpf,U,EAAW,CAACmE,MAAO,YAAYlE,KAAK/C,EAAM0tB,eAElJ,kBAAC,GAAD,CACE9L,KAAM5hB,EAAM0tB,UACZ5L,YAAa9hB,EAAM0tB,UAAU5L,YAC7Bzb,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAMmiB,iBAChB7f,KAAK,gBAGc,IAApBtC,EAAMqG,WACL,4BACE,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QAjDvC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QA+CS,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAM0tB,YAA1E,kBC3BLE,GApDY,SAAA5tB,GAAU,IAEzB6G,EAFwB,iBAEd7G,EAAM6G,QACtBgnB,EAAc7tB,EAAM8tB,WACpBC,EAAkB,GAED,cAAjBlnB,EAAOI,OAAwC,UAAfJ,EAAOrB,KAAoC,cAAjBqB,EAAOK,QACnE6mB,EAAkBF,EAAY1mB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAErD,cAAjBiD,EAAOI,OAAwC,UAAfJ,EAAOrB,KAAoC,eAAjBqB,EAAOK,QACnE6mB,EAAkBF,EAAY1mB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAErD,cAAjBiD,EAAOI,OAAwC,gBAAfJ,EAAOrB,KAA0C,cAAjBqB,EAAOK,QACzE6mB,EAAkBF,EAAY1mB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElD,YAAcmD,EAAEnD,YAAe,GAAK,MAEjE,cAAjB2C,EAAOI,OAAwC,gBAAfJ,EAAOrB,KAA0C,eAAjBqB,EAAOK,QACzE6mB,EAAkBF,EAAY1mB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElD,YAAcmD,EAAEnD,YAAe,GAAK,MAEjE,cAAjB2C,EAAOI,OAAwC,cAAfJ,EAAOrB,KAAwC,cAAjBqB,EAAOK,QACvE6mB,EAAkBF,EAAY1mB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEumB,UAAYtmB,EAAEsmB,UAAa,GAAK,MAE7D,cAAjB9mB,EAAOI,OAAwC,cAAfJ,EAAOrB,KAAwC,eAAjBqB,EAAOK,QACvE6mB,EAAkBF,EAAY1mB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEumB,UAAYtmB,EAAEsmB,UAAa,GAAK,MAK7D,cAAjB9mB,EAAOI,QACT8mB,EAAkBF,GAGpB,IAAIpoB,EAAQ,EAENqoB,EAAaC,EAAgBrmB,KAAI,SAAAgmB,GAIrC,OAFAjoB,EAAQsoB,EAAgBpmB,QAAQ+lB,GAAW,EAGzC,kBAAC,GAAD,CACEloB,IAAKC,EACLioB,UAAWA,EACXrnB,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,SAChBub,gBAAiBliB,EAAMkiB,gBACvBC,iBAAkBniB,EAAMmiB,sBAK9B,OAAO,wBAAIjiB,UAAU,aAAa4tB,ICuCrBE,GA7EI,SAAAhuB,GAAU,IAAD,EACAoF,oBAAS,GADT,mBACnBlC,EADmB,KACZmC,EADY,OAWaD,oBAAS,GAXtB,mBAWlBE,EAXkB,KAWLC,EAXK,KAqB1B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMiuB,OAAOrqB,QAE9C,kBAAC,IAAD,CAAiBhB,KAAMmD,IAAO7F,UAAU,WAAW+B,QA1BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAsBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMiuB,OAAOrqB,SAG9C,4BACA,kBAAC8B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,0BAAMA,UAAU,QAAQF,EAAMiuB,OAAO/pB,eAGpD,4BACA,kBAACwB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,kBAAC,IAAD,CAAiB0C,KAAMqf,IAAc/hB,UAAU,WAAW+B,QAASjC,EAAMkiB,gBAAgBpf,U,EAAW,CAACmE,MAAO,SAASlE,KAAK/C,EAAMiuB,YAE/I,kBAAC,GAAD,CACErM,KAAM5hB,EAAMiuB,OACZnM,YAAa9hB,EAAMiuB,OAAOnM,YAC1Bzb,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAMmiB,iBAChB7f,KAAK,aAGc,IAApBtC,EAAMqG,WACL,4BACE,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QA5CvC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QA0CS,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMiuB,SAA1E,kBC5BLC,GA9CS,SAAAluB,GAAU,IAEtB6G,EAFqB,iBAEX7G,EAAM6G,QACtBsnB,EAAWnuB,EAAMouB,QACjBC,EAAe,GAEE,WAAjBxnB,EAAOI,OAAqC,UAAfJ,EAAOrB,KAAoC,cAAjBqB,EAAOK,QAChEmnB,EAAeF,EAAShnB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAE/C,WAAjBiD,EAAOI,OAAqC,UAAfJ,EAAOrB,KAAoC,eAAjBqB,EAAOK,QAChEmnB,EAAeF,EAAShnB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAE/C,WAAjBiD,EAAOI,OAAqC,gBAAfJ,EAAOrB,KAA0C,cAAjBqB,EAAOK,QACtEmnB,EAAeF,EAAShnB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElD,YAAcmD,EAAEnD,YAAe,GAAK,MAE3D,WAAjB2C,EAAOI,OAAqC,gBAAfJ,EAAOrB,KAA0C,eAAjBqB,EAAOK,QACtEmnB,EAAeF,EAAShnB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElD,YAAcmD,EAAEnD,YAAe,GAAK,MAK3D,WAAjB2C,EAAOI,QACTonB,EAAeF,GAGjB,IAAI1oB,EAAQ,EAEN2oB,EAAUC,EAAa3mB,KAAI,SAAAumB,GAI/B,OAFAxoB,EAAQ4oB,EAAa1mB,QAAQsmB,GAAQ,EAGnC,kBAAC,GAAD,CACEzoB,IAAKC,EACLwoB,OAAQA,EACR5nB,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,SAChBub,gBAAiBliB,EAAMkiB,gBACvBC,iBAAkBniB,EAAMmiB,sBAK9B,OAAO,wBAAIjiB,UAAU,aAAakuB,IC8CrBE,GA9Ee,SAAAtuB,GAAU,IAAD,EACXoF,oBAAS,GADE,mBAC9BlC,EAD8B,KACvBmC,EADuB,OAWED,oBAAS,GAXX,mBAW7BE,EAX6B,KAWhBC,EAXgB,KAsBrC,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMuuB,kBAAkB3qB,QAEzD,kBAAC,IAAD,CAAiBhB,KAAMmD,IAAO7F,UAAU,WAAW+B,QA3BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAuBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMuuB,kBAAkB3qB,SAGzD,4BACA,kBAAC8B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,0BAAMA,UAAU,QAAQF,EAAMuuB,kBAAkBrqB,eAG/D,4BACA,kBAACwB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,kBAAC,IAAD,CAAiB0C,KAAMqf,IAAc/hB,UAAU,WAAW+B,QAASjC,EAAMkiB,gBAAgBpf,U,EAAW,CAACmE,MAAO,oBAAoBlE,KAAK/C,EAAMuuB,uBAE1J,kBAAC,GAAD,CACE3M,KAAM5hB,EAAMuuB,kBACZzM,YAAa9hB,EAAMuuB,kBAAkBzM,YACrCzb,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAMmiB,iBAChB7f,KAAK,wBAGc,IAApBtC,EAAMqG,WACL,4BACE,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QA7CvC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QA2CS,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMuuB,oBAA1E,kBC7BLC,GA9CoB,SAAAxuB,GAAU,IAEjC6G,EAFgC,iBAEtB7G,EAAM6G,QACtB4nB,EAAsBzuB,EAAMuuB,kBAC5BG,EAA0B,GAET,sBAAjB7nB,EAAOI,OAAgD,UAAfJ,EAAOrB,KAAoC,cAAjBqB,EAAOK,QAC3EwnB,EAA0BD,EAAoBtnB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAErE,sBAAjBiD,EAAOI,OAAgD,UAAfJ,EAAOrB,KAAoC,eAAjBqB,EAAOK,QAC3EwnB,EAA0BD,EAAoBtnB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAErE,sBAAjBiD,EAAOI,OAAgD,gBAAfJ,EAAOrB,KAA0C,cAAjBqB,EAAOK,QACjFwnB,EAA0BD,EAAoBtnB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElD,YAAcmD,EAAEnD,YAAe,GAAK,MAEjF,sBAAjB2C,EAAOI,OAAgD,gBAAfJ,EAAOrB,KAA0C,eAAjBqB,EAAOK,QACjFwnB,EAA0BD,EAAoBtnB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElD,YAAcmD,EAAEnD,YAAe,GAAK,MAKjF,sBAAjB2C,EAAOI,QACTynB,EAA0BD,GAG5B,IAAIhpB,EAAQ,EAENkpB,EAAqBD,EAAwBhnB,KAAI,SAAA6mB,GAIrD,OAFA9oB,EAAQipB,EAAwB/mB,QAAQ4mB,GAAmB,EAGzD,kBAAC,GAAD,CACE/oB,IAAKC,EACL8oB,kBAAmBA,EACnBloB,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,SAChBub,gBAAiBliB,EAAMkiB,gBACvBC,iBAAkBniB,EAAMmiB,sBAK9B,OAAO,wBAAIjiB,UAAU,aAAayuB,IC2BrBC,GAhEI,SAAA5uB,GAAU,IAAD,EACAoF,oBAAS,GADT,mBACnBlC,EADmB,KACZmC,EADY,KAU1B,OACE,wBAAIG,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAM6uB,OAAOC,KAEnD,kBAACppB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,qBACoB,0BAAMA,UAAU,QAAQF,EAAM6uB,OAAOE,KAEzD,kBAAC,IAAD,CAAiBnsB,KAAMmD,IAAO7F,UAAU,WAAW+B,QAlBjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAcM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACb,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAM6uB,OAAOC,KAEnD,kBAACppB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,qBACoB,0BAAMA,UAAU,QAAQF,EAAM6uB,OAAOE,KAEzD,kBAACrpB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,oBACmB,0BAAMA,UAAU,QAAQF,EAAM6uB,OAAOG,KADxD,MACsE,0BAAM9uB,UAAU,QAAQF,EAAM6uB,OAAOI,MAE3G,kBAACvpB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,0BAAMA,UAAU,QAAQF,EAAM6uB,OAAOK,OAEpD,kBAACxpB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAM6uB,OAAOM,OAE7C,kBAACzpB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAM6uB,OAAOO,aADhD,KACqE,0BAAMlvB,UAAU,QAAQF,EAAM6uB,OAAOQ,aAE1G,kBAAC3pB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAM6uB,OAAOS,aADhD,KACqE,0BAAMpvB,UAAU,QAAQF,EAAM6uB,OAAOU,aAE1G,kBAAC7pB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAM6uB,OAAOW,MAE7C,kBAAC9pB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SAGA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAM6uB,OAAOY,MAAMntB,MADnD,WACuE,0BAAMpC,UAAU,QAAQF,EAAM6uB,OAAOY,MAAMvoB,SAE7F,IAApBlH,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAM6uB,SAA1E,eCuCDa,GAnGS,SAAA1vB,GAAU,IAEtB6G,EAFqB,iBAEX7G,EAAM6G,QACtB8oB,EAAU3vB,EAAM6uB,OAChBe,EAAc,GAEG,WAAjB/oB,EAAOI,OAAqC,OAAfJ,EAAOrB,KAAiC,cAAjBqB,EAAOK,QAC7D0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE0nB,GAAKznB,EAAEynB,GAAM,GAAK,MAEvC,WAAjBjoB,EAAOI,OAAqC,OAAfJ,EAAOrB,KAAiC,eAAjBqB,EAAOK,QAC7D0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE0nB,GAAKznB,EAAEynB,GAAM,GAAK,MAEvC,WAAjBjoB,EAAOI,OAAqC,QAAfJ,EAAOrB,KAAkC,cAAjBqB,EAAOK,QAC9D0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE4nB,IAAM3nB,EAAE2nB,IAAO,GAAK,MAEzC,WAAjBnoB,EAAOI,OAAqC,QAAfJ,EAAOrB,KAAkC,eAAjBqB,EAAOK,QAC9D0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE4nB,IAAM3nB,EAAE2nB,IAAO,GAAK,MAEzC,WAAjBnoB,EAAOI,OAAqC,QAAfJ,EAAOrB,KAAkC,cAAjBqB,EAAOK,QAC9D0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE6nB,IAAM5nB,EAAE4nB,IAAO,GAAK,MAEzC,WAAjBpoB,EAAOI,OAAqC,QAAfJ,EAAOrB,KAAkC,eAAjBqB,EAAOK,QAC9D0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE6nB,IAAM5nB,EAAE4nB,IAAO,GAAK,MAEzC,WAAjBpoB,EAAOI,OAAqC,OAAfJ,EAAOrB,KAAiC,cAAjBqB,EAAOK,QAC7D0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE2nB,GAAK1nB,EAAE0nB,GAAM,GAAK,MAEvC,WAAjBloB,EAAOI,OAAqC,OAAfJ,EAAOrB,KAAiC,eAAjBqB,EAAOK,QAC7D0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE2nB,GAAK1nB,EAAE0nB,GAAM,GAAK,MAEvC,WAAjBloB,EAAOI,OAAqC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC/D0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE8nB,KAAO7nB,EAAE6nB,KAAQ,GAAK,MAE3C,WAAjBroB,EAAOI,OAAqC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC/D0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE8nB,KAAO7nB,EAAE6nB,KAAQ,GAAK,MAE3C,WAAjBroB,EAAOI,OAAqC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC/D0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE+nB,KAAO9nB,EAAE8nB,KAAQ,GAAK,MAE3C,WAAjBtoB,EAAOI,OAAqC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC/D0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE+nB,KAAO9nB,EAAE8nB,KAAQ,GAAK,MAE3C,WAAjBtoB,EAAOI,OAAqC,gBAAfJ,EAAOrB,KAA0C,cAAjBqB,EAAOK,QACtE0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEgoB,YAAc/nB,EAAE+nB,YAAe,GAAK,MAEzD,WAAjBvoB,EAAOI,OAAqC,gBAAfJ,EAAOrB,KAA0C,eAAjBqB,EAAOK,QACtE0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEgoB,YAAc/nB,EAAE+nB,YAAe,GAAK,MAEzD,WAAjBvoB,EAAOI,OAAqC,gBAAfJ,EAAOrB,KAA0C,cAAjBqB,EAAOK,QACtE0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEkoB,YAAcjoB,EAAEioB,YAAe,GAAK,MAEzD,WAAjBzoB,EAAOI,OAAqC,gBAAfJ,EAAOrB,KAA0C,eAAjBqB,EAAOK,QACtE0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEkoB,YAAcjoB,EAAEioB,YAAe,GAAK,MAEzD,WAAjBzoB,EAAOI,OAAqC,QAAfJ,EAAOrB,KAAkC,cAAjBqB,EAAOK,QAC9D0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEooB,IAAMnoB,EAAEmoB,IAAO,GAAK,MAEzC,WAAjB3oB,EAAOI,OAAqC,QAAfJ,EAAOrB,KAAkC,eAAjBqB,EAAOK,QAC9D0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEooB,IAAMnoB,EAAEmoB,IAAO,GAAK,MAEzC,WAAjB3oB,EAAOI,OAAqC,eAAfJ,EAAOrB,KAAyC,cAAjBqB,EAAOK,QACrE0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEqoB,MAAMntB,KAAO+E,EAAEooB,MAAMntB,KAAQ,GAAK,MAEvD,WAAjBuE,EAAOI,OAAqC,eAAfJ,EAAOrB,KAAyC,eAAjBqB,EAAOK,QACrE0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEqoB,MAAMntB,KAAO+E,EAAEooB,MAAMntB,KAAQ,GAAK,MAEvD,WAAjBuE,EAAOI,OAAqC,gBAAfJ,EAAOrB,KAA0C,cAAjBqB,EAAOK,QACtE0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEqoB,MAAMvoB,MAAQG,EAAEooB,MAAMvoB,MAAS,GAAK,MAEzD,WAAjBL,EAAOI,OAAqC,gBAAfJ,EAAOrB,KAA0C,eAAjBqB,EAAOK,QACtE0oB,EAAcD,EAAQxoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEqoB,MAAMvoB,MAAQG,EAAEooB,MAAMvoB,MAAS,GAAK,MAKzD,WAAjBL,EAAOI,QACT2oB,EAAcD,GAGhB,IAAIlqB,EAAQ,EAENopB,EAASe,EAAYloB,KAAI,SAAAmoB,GAI7B,OAFApqB,EAAQmqB,EAAYjoB,QAAQkoB,GAAY,EAGtC,kBAAC,GAAD,CACErqB,IAAKC,EACLopB,OAAQgB,EACRxpB,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,SAChBub,gBAAiBliB,EAAMkiB,qBAK7B,OAAO,wBAAIhiB,UAAU,aAAa2uB,ICyBrBiB,GAzGS,SAAA9vB,GAAU,IAAD,EACLoF,oBAAS,GADJ,mBACxBlC,EADwB,KACjBmC,EADiB,OAWQD,oBAAS,GAXjB,mBAWvBE,EAXuB,KAWVC,EAXU,KAqB/B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAM+vB,YAAYC,UAErD,kBAACtqB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAM+vB,YAAYE,OAElD,kBAAC,IAAD,CAAiBrtB,KAAMmD,IAAO7F,UAAU,WAAW+B,QA7BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAyBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAM+vB,YAAYC,WAGrD,4BACA,kBAACtqB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAM+vB,YAAYE,QAGlD,4BACA,kBAACvqB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAM+vB,YAAYztB,QAGlD,4BACA,kBAACoD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAM+vB,YAAYG,WAGrD,4BACA,kBAACxqB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAM+vB,YAAY7oB,SAGnD,4BACA,kBAACxB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,0BAAMA,UAAU,QAAQF,EAAM+vB,YAAY7rB,eAGzD,4BACA,kBAACwB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,aACa,0BAAMA,UAAU,SAAuC,IAA/BF,EAAM+vB,YAAYI,SAAoB,kBAAC,IAAD,CAAiBvtB,KAAMoB,IAAe9D,UAAU,aAAe,kBAAC,IAAD,CAAiB0C,KAAMqB,IAAO/D,UAAU,gBAGlL,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,kBAAC,IAAD,CAAiB0C,KAAMqf,IAAc/hB,UAAU,WAAW+B,QAASjC,EAAMkiB,gBAAgBpf,U,EAAW,CAACmE,MAAO,cAAclE,KAAK/C,EAAM+vB,iBAEpJ,kBAAC,GAAD,CACEnO,KAAM5hB,EAAM+vB,YACZjO,YAAa9hB,EAAM+vB,YAAYjO,YAC/Bzb,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAMmiB,iBAChB7f,KAAK,kBAGc,IAApBtC,EAAMqG,WACL,4BACE,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QAxEvC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QAsES,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAM+vB,cAA1E,kBCrCLK,GAtEc,SAAApwB,GAAU,IAE3B6G,EAF0B,iBAEhB7G,EAAM6G,QACtBwpB,EAAgBrwB,EAAM+vB,YACtBO,EAAoB,GAEH,gBAAjBzpB,EAAOI,OAA0C,YAAfJ,EAAOrB,KAAsC,cAAjBqB,EAAOK,QACvEopB,EAAoBD,EAAclpB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE4oB,QAAU3oB,EAAE2oB,QAAW,GAAK,MAE7D,gBAAjBnpB,EAAOI,OAA0C,YAAfJ,EAAOrB,KAAsC,eAAjBqB,EAAOK,QACvEopB,EAAoBD,EAAclpB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE4oB,QAAU3oB,EAAE2oB,QAAW,GAAK,MAE7D,gBAAjBnpB,EAAOI,OAA0C,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QACpEopB,EAAoBD,EAAclpB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE6oB,KAAO5oB,EAAE4oB,KAAQ,GAAK,MAEvD,gBAAjBppB,EAAOI,OAA0C,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QACpEopB,EAAoBD,EAAclpB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE6oB,KAAO5oB,EAAE4oB,KAAQ,GAAK,MAEvD,gBAAjBppB,EAAOI,OAA0C,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QACpEopB,EAAoBD,EAAclpB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEvD,gBAAjBuE,EAAOI,OAA0C,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QACpEopB,EAAoBD,EAAclpB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEvD,gBAAjBuE,EAAOI,OAA0C,YAAfJ,EAAOrB,KAAsC,cAAjBqB,EAAOK,QACvEopB,EAAoBD,EAAclpB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE8oB,QAAU7oB,EAAE6oB,QAAW,GAAK,MAE7D,gBAAjBrpB,EAAOI,OAA0C,YAAfJ,EAAOrB,KAAsC,eAAjBqB,EAAOK,QACvEopB,EAAoBD,EAAclpB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE8oB,QAAU7oB,EAAE6oB,QAAW,GAAK,MAE7D,gBAAjBrpB,EAAOI,OAA0C,UAAfJ,EAAOrB,KAAoC,cAAjBqB,EAAOK,QACrEopB,EAAoBD,EAAclpB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEF,MAAQG,EAAEH,MAAS,GAAK,MAEzD,gBAAjBL,EAAOI,OAA0C,UAAfJ,EAAOrB,KAAoC,eAAjBqB,EAAOK,QACrEopB,EAAoBD,EAAclpB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEF,MAAQG,EAAEH,MAAS,GAAK,MAEzD,gBAAjBL,EAAOI,OAA0C,gBAAfJ,EAAOrB,KAA0C,cAAjBqB,EAAOK,QAC3EopB,EAAoBD,EAAclpB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElD,YAAcmD,EAAEnD,YAAe,GAAK,MAErE,gBAAjB2C,EAAOI,OAA0C,gBAAfJ,EAAOrB,KAA0C,eAAjBqB,EAAOK,QAC3EopB,EAAoBD,EAAclpB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElD,YAAcmD,EAAEnD,YAAe,GAAK,MAErE,gBAAjB2C,EAAOI,OAA0C,aAAfJ,EAAOrB,MAC3C8qB,EAAoBD,EAAcxpB,QAAO,SAAAU,GAAC,OAAIA,EAAE4oB,WAAatpB,EAAOK,UAEjD,gBAAjBL,EAAOI,QACTqpB,EAAoBD,GAGtB,IAAI5qB,EAAQ,EAEN8qB,EAAeD,EAAkB5oB,KAAI,SAAAqoB,GAIzC,OAFAtqB,EAAQ6qB,EAAkB3oB,QAAQooB,GAAa,EAG7C,kBAAC,GAAD,CACEvqB,IAAKC,EACLsqB,YAAaA,EACb1pB,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,SAChBub,gBAAiBliB,EAAMkiB,gBACvBC,iBAAkBniB,EAAMmiB,sBAK9B,OAAO,wBAAIjiB,UAAU,aAAaqwB,ICgCrBC,GAtFW,SAAAxwB,GAAU,IAAD,EACPoF,oBAAS,GADF,mBAC1BlC,EAD0B,KACnBmC,EADmB,OAWMD,oBAAS,GAXf,mBAWzBE,EAXyB,KAWZC,EAXY,KAqBjC,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMywB,cAAc7sB,QAErD,kBAAC8B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMywB,cAAcnuB,OAEpD,kBAAC,IAAD,CAAiBM,KAAMmD,IAAO7F,UAAU,WAAW+B,QA7BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAyBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMywB,cAAc7sB,SAGrD,4BACA,kBAAC8B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMywB,cAAcnuB,QAGpD,4BACA,kBAACoD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,0BAAMA,UAAU,QAAQF,EAAMywB,cAAcvsB,eAG3D,4BACA,kBAACwB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,kBAAC,IAAD,CAAiB0C,KAAMqf,IAAc/hB,UAAU,WAAW+B,QAASjC,EAAMkiB,gBAAgBpf,U,EAAW,CAACmE,MAAO,gBAAgBlE,KAAK/C,EAAMywB,mBAEtJ,kBAAC,GAAD,CACE7O,KAAM5hB,EAAMywB,cACZ3O,YAAa9hB,EAAMywB,cAAc3O,YACjCzb,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAMmiB,iBAChB7f,KAAK,oBAGc,IAApBtC,EAAMqG,WACL,4BACE,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QApDvC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QAkDS,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMywB,gBAA1E,kBCtCLC,GA9CgB,SAAA1wB,GAAU,IAE7B6G,EAF4B,iBAElB7G,EAAM6G,QACtB8pB,EAAkB3wB,EAAMywB,cACxBG,EAAsB,GAEL,kBAAjB/pB,EAAOI,OAA4C,UAAfJ,EAAOrB,KAAoC,cAAjBqB,EAAOK,QACvE0pB,EAAsBD,EAAgBxpB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAE7D,kBAAjBiD,EAAOI,OAA4C,UAAfJ,EAAOrB,KAAoC,eAAjBqB,EAAOK,QACvE0pB,EAAsBD,EAAgBxpB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAE7D,kBAAjBiD,EAAOI,OAA4C,gBAAfJ,EAAOrB,KAA0C,cAAjBqB,EAAOK,QAC7E0pB,EAAsBD,EAAgBxpB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElD,YAAcmD,EAAEnD,YAAe,GAAK,MAEzE,kBAAjB2C,EAAOI,OAA4C,gBAAfJ,EAAOrB,KAA0C,eAAjBqB,EAAOK,QAC7E0pB,EAAsBD,EAAgBxpB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElD,YAAcmD,EAAEnD,YAAe,GAAK,MAKzE,kBAAjB2C,EAAOI,QACT2pB,EAAsBD,GAGxB,IAAIlrB,EAAQ,EAENorB,EAAiBD,EAAoBlpB,KAAI,SAAA+oB,GAI7C,OAFAhrB,EAAQmrB,EAAoBjpB,QAAQ8oB,GAAe,EAGjD,kBAAC,GAAD,CACEjrB,IAAKC,EACLgrB,cAAeA,EACfpqB,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,SAChBub,gBAAiBliB,EAAMkiB,gBACvBC,iBAAkBniB,EAAMmiB,sBAK9B,OAAO,wBAAIjiB,UAAU,aAAa2wB,ICyDrBC,GArFO,SAAA9wB,GAAU,IAAD,EACHoF,oBAAS,GADN,mBACtBlC,EADsB,KACfmC,EADe,OAWUD,oBAAS,GAXnB,mBAWrBE,EAXqB,KAWRC,EAXQ,KAqB7B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAM+wB,UAAUntB,QAEjD,kBAAC8B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAM+wB,UAAUzuB,OAEhD,kBAAC,IAAD,CAAiBM,KAAMmD,IAAO7F,UAAU,WAAW+B,QA7BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAyBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAM+wB,UAAUntB,SAGjD,4BACA,kBAAC8B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAM+wB,UAAUzuB,QAGhD,4BACA,kBAACoD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,0BAAMA,UAAU,QAAQF,EAAM+wB,UAAU7sB,eAGvD,4BACA,kBAACwB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,kBAAC,IAAD,CAAiB0C,KAAMqf,IAAc/hB,UAAU,WAAW+B,QAASjC,EAAMkiB,gBAAgBpf,U,EAAW,CAACmE,MAAO,YAAYlE,KAAK/C,EAAM+wB,eAElJ,kBAAC,GAAD,CACEnP,KAAM5hB,EAAM+wB,UACZjP,YAAa9hB,EAAM+wB,UAAUjP,YAC7Bzb,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAMmiB,iBAChB7f,KAAK,gBAGc,IAApBtC,EAAMqG,WACL,4BACE,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QApDvC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QAkDS,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAM+wB,YAA1E,kBClCLC,GApDY,SAAAhxB,GAAU,IAEzB6G,EAFwB,iBAEd7G,EAAM6G,QACtBoqB,EAAajxB,EAAM+wB,UACnBG,EAAiB,GAEA,cAAjBrqB,EAAOI,OAAwC,UAAfJ,EAAOrB,KAAoC,cAAjBqB,EAAOK,QACnEgqB,EAAiBD,EAAW9pB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAEnD,cAAjBiD,EAAOI,OAAwC,UAAfJ,EAAOrB,KAAoC,eAAjBqB,EAAOK,QACnEgqB,EAAiBD,EAAW9pB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAEnD,cAAjBiD,EAAOI,OAAwC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAClEgqB,EAAiBD,EAAW9pB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEjD,cAAjBuE,EAAOI,OAAwC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAClEgqB,EAAiBD,EAAW9pB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEjD,cAAjBuE,EAAOI,OAAwC,gBAAfJ,EAAOrB,KAA0C,cAAjBqB,EAAOK,QACzEgqB,EAAiBD,EAAW9pB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElD,YAAcmD,EAAEnD,YAAe,GAAK,MAE/D,cAAjB2C,EAAOI,OAAwC,gBAAfJ,EAAOrB,KAA0C,eAAjBqB,EAAOK,QACzEgqB,EAAiBD,EAAW9pB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElD,YAAcmD,EAAEnD,YAAe,GAAK,MAK/D,cAAjB2C,EAAOI,QACTiqB,EAAiBD,GAGnB,IAAIxrB,EAAQ,EAEN0rB,EAAYD,EAAexpB,KAAI,SAAAqpB,GAInC,OAFAtrB,EAAQyrB,EAAevpB,QAAQopB,GAAW,EAGxC,kBAAC,GAAD,CACEvrB,IAAKC,EACLsrB,UAAWA,EACX1qB,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,SAChBub,gBAAiBliB,EAAMkiB,gBACvBC,iBAAkBniB,EAAMmiB,sBAK9B,OAAO,wBAAIjiB,UAAU,aAAaixB,IC2DrBC,GA/FO,SAAApxB,GAAU,IAAD,EACHoF,oBAAS,GADN,mBACtBlC,EADsB,KACfmC,EADe,OAWUD,oBAAS,GAXnB,mBAWrBE,EAXqB,KAWRC,EAXQ,KAqB7B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMqxB,UAAUztB,QAEjD,kBAAC8B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMqxB,UAAU/uB,OAEhD,kBAAC,IAAD,CAAiBM,KAAMmD,IAAO7F,UAAU,WAAW+B,QA7BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAyBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMqxB,UAAUztB,SAGjD,4BACA,kBAAC8B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMqxB,UAAU/uB,QAGhD,4BACA,kBAACoD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,0BAAMA,UAAU,QAAQF,EAAMqxB,UAAUntB,eAGvD,4BACA,kBAACwB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMqxB,UAAUC,QAGhD,4BACA,kBAAC5rB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,cACa,0BAAMA,UAAU,QAAQF,EAAMqxB,UAAUE,aAGrD,4BACA,kBAAC7rB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,kBAAC,IAAD,CAAiB0C,KAAMqf,IAAc/hB,UAAU,WAAW+B,QAASjC,EAAMkiB,gBAAgBpf,U,EAAW,CAACmE,MAAO,YAAYlE,KAAK/C,EAAMqxB,eAElJ,kBAAC,GAAD,CACEzP,KAAM5hB,EAAMqxB,UACZvP,YAAa9hB,EAAMqxB,UAAUvP,YAC7Bzb,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAMmiB,iBAChB7f,KAAK,gBAGc,IAApBtC,EAAMqG,WACL,4BACE,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QA9DvC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QA4DS,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMqxB,YAA1E,kBC9BLG,GAhEY,SAAAxxB,GAAU,IAEzB6G,EAFwB,iBAEd7G,EAAM6G,QACtB4qB,EAAazxB,EAAMqxB,UACnBK,EAAiB,GAEA,cAAjB7qB,EAAOI,OAAwC,UAAfJ,EAAOrB,KAAoC,cAAjBqB,EAAOK,QACnEwqB,EAAiBD,EAAWtqB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAEnD,cAAjBiD,EAAOI,OAAwC,UAAfJ,EAAOrB,KAAoC,eAAjBqB,EAAOK,QACnEwqB,EAAiBD,EAAWtqB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAEnD,cAAjBiD,EAAOI,OAAwC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAClEwqB,EAAiBD,EAAWtqB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEjD,cAAjBuE,EAAOI,OAAwC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAClEwqB,EAAiBD,EAAWtqB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEjD,cAAjBuE,EAAOI,OAAwC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAClEwqB,EAAiBD,EAAWtqB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEkqB,KAAOjqB,EAAEiqB,KAAQ,GAAK,MAEjD,cAAjBzqB,EAAOI,OAAwC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAClEwqB,EAAiBD,EAAWtqB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEkqB,KAAOjqB,EAAEiqB,KAAQ,GAAK,MAEjD,cAAjBzqB,EAAOI,OAAwC,cAAfJ,EAAOrB,KAAwC,cAAjBqB,EAAOK,QACvEwqB,EAAiBD,EAAWtqB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEmqB,UAAYlqB,EAAEkqB,UAAa,GAAK,MAE3D,cAAjB1qB,EAAOI,OAAwC,cAAfJ,EAAOrB,KAAwC,eAAjBqB,EAAOK,QACvEwqB,EAAiBD,EAAWtqB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEmqB,UAAYlqB,EAAEkqB,UAAa,GAAK,MAE3D,cAAjB1qB,EAAOI,OAAwC,gBAAfJ,EAAOrB,KAA0C,cAAjBqB,EAAOK,QACzEwqB,EAAiBD,EAAWtqB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElD,YAAcmD,EAAEnD,YAAe,GAAK,MAE/D,cAAjB2C,EAAOI,OAAwC,gBAAfJ,EAAOrB,KAA0C,eAAjBqB,EAAOK,QACzEwqB,EAAiBD,EAAWtqB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElD,YAAcmD,EAAEnD,YAAe,GAAK,MAK/D,cAAjB2C,EAAOI,QACTyqB,EAAiBD,GAGnB,IAAIhsB,EAAQ,EAENksB,EAAaD,EAAehqB,KAAI,SAAA2pB,GAIpC,OAFA5rB,EAAQisB,EAAe/pB,QAAQ0pB,GAAW,EAGxC,kBAAC,GAAD,CACE7rB,IAAKC,EACL4rB,UAAWA,EACXhrB,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,SAChBub,gBAAiBliB,EAAMkiB,gBACvBC,iBAAkBniB,EAAMmiB,sBAK9B,OAAO,wBAAIjiB,UAAU,aAAayxB,ICuDrBC,GApGK,SAAA5xB,GAAU,IAAD,EACDoF,oBAAS,GADR,mBACpBlC,EADoB,KACbmC,EADa,OAWYD,oBAAS,GAXrB,mBAWnBE,EAXmB,KAWNC,EAXM,KAqB3B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAM6xB,QAAQjuB,QAE/C,kBAAC8B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAM6xB,QAAQvvB,OAE9C,kBAAC,IAAD,CAAiBM,KAAMmD,IAAO7F,UAAU,WAAW+B,QA7BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAyBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAM6xB,QAAQjuB,SAG/C,4BACA,kBAAC8B,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAM6xB,QAAQvvB,QAG9C,4BACA,kBAACoD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,0BAAMA,UAAU,QAAQF,EAAM6xB,QAAQ3tB,eAGrD,4BACA,kBAACwB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAM6xB,QAAQxf,SAG/C,4BACA,kBAAC3M,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,WACU,0BAAMA,UAAU,QAAQF,EAAM6xB,QAAQC,UAGhD,4BACA,kBAACpsB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,SAA+B,IAAvBF,EAAM6xB,QAAQE,KAAgB,kBAAC,IAAD,CAAiBnvB,KAAMoB,IAAe9D,UAAU,aAAe,kBAAC,IAAD,CAAiB0C,KAAMqB,IAAO/D,UAAU,gBAGrK,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,gBACe,kBAAC,IAAD,CAAiB0C,KAAMqf,IAAc/hB,UAAU,WAAW+B,QAASjC,EAAMkiB,gBAAgBpf,U,EAAW,CAACmE,MAAO,UAAUlE,KAAK/C,EAAM6xB,aAEhJ,kBAAC,GAAD,CACEjQ,KAAM5hB,EAAM6xB,QACZ/P,YAAa9hB,EAAM6xB,QAAQ/P,YAC3Bzb,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAMmiB,iBAChB7f,KAAK,cAGc,IAApBtC,EAAMqG,WACL,4BACE,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QAnEvC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QAiES,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAM6xB,UAA1E,kBCtCLG,GAhEU,SAAAhyB,GAAU,IAEvB6G,EAFsB,iBAEZ7G,EAAM6G,QACtBorB,EAAWjyB,EAAM6xB,QACjBK,EAAe,GAEE,YAAjBrrB,EAAOI,OAAsC,UAAfJ,EAAOrB,KAAoC,cAAjBqB,EAAOK,QACjEgrB,EAAeD,EAAS9qB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAE/C,YAAjBiD,EAAOI,OAAsC,UAAfJ,EAAOrB,KAAoC,eAAjBqB,EAAOK,QACjEgrB,EAAeD,EAAS9qB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,MAAQyD,EAAEzD,MAAS,GAAK,MAE/C,YAAjBiD,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAChEgrB,EAAeD,EAAS9qB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAE7C,YAAjBuE,EAAOI,OAAsC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAChEgrB,EAAeD,EAAS9qB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAE7C,YAAjBuE,EAAOI,OAAsC,WAAfJ,EAAOrB,KAAqC,cAAjBqB,EAAOK,QAClEgrB,EAAeD,EAAS9qB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE0qB,OAASzqB,EAAEyqB,OAAU,GAAK,MAEjD,YAAjBjrB,EAAOI,OAAsC,WAAfJ,EAAOrB,KAAqC,eAAjBqB,EAAOK,QAClEgrB,EAAeD,EAAS9qB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE0qB,OAASzqB,EAAEyqB,OAAU,GAAK,MAEjD,YAAjBjrB,EAAOI,OAAsC,gBAAfJ,EAAOrB,KAA0C,cAAjBqB,EAAOK,QACvEgrB,EAAeD,EAAS9qB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElD,YAAcmD,EAAEnD,YAAe,GAAK,MAE3D,YAAjB2C,EAAOI,OAAsC,gBAAfJ,EAAOrB,KAA0C,eAAjBqB,EAAOK,QACvEgrB,EAAeD,EAAS9qB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElD,YAAcmD,EAAEnD,YAAe,GAAK,MAE3D,YAAjB2C,EAAOI,OAAsC,UAAfJ,EAAOrB,KAAoC,cAAjBqB,EAAOK,QACjEgrB,EAAeD,EAAS9qB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEiL,MAAQhL,EAAEgL,MAAS,GAAK,MAE/C,YAAjBxL,EAAOI,OAAsC,UAAfJ,EAAOrB,KAAoC,eAAjBqB,EAAOK,QACjEgrB,EAAeD,EAAS9qB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEiL,MAAQhL,EAAEgL,MAAS,GAAK,MAE/C,YAAjBxL,EAAOI,OAAsC,SAAfJ,EAAOrB,MACvC0sB,EAAeD,EAASprB,QAAO,SAAAU,GAAC,OAAIA,EAAEwqB,OAASlrB,EAAOK,UAEnC,YAAjBL,EAAOI,QACTirB,EAAeD,GAGjB,IAAIxsB,EAAQ,EAEN0sB,EAAWD,EAAaxqB,KAAI,SAAAmqB,GAIhC,OAFApsB,EAAQysB,EAAavqB,QAAQkqB,GAAS,EAGpC,kBAAC,GAAD,CACErsB,IAAKC,EACLosB,QAASA,EACTxrB,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,SAChBub,gBAAiBliB,EAAMkiB,gBACvBC,iBAAkBniB,EAAMmiB,sBAK9B,OAAO,wBAAIjiB,UAAU,aAAaiyB,IC6OrBC,GApSO,SAACpyB,GAAW,IAAD,EACLoF,oBAAS,GADJ,mBACxBlC,EADwB,KACjBmC,EADiB,KAU/B,OACE,wBAAIG,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,WACU,0BAAMA,UAAU,QAAQF,EAAMwF,MAExC,kBAAC,IAAD,CAAiB5C,KAAMmD,IAAO7F,UAAU,WAAW+B,QAfjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAWM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACb,+CACA,uCACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUC,eAAeC,SAAS9P,aAE9E,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUC,eAAeC,SAASC,UAE3E,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUC,eAAeC,SAASE,UAG3E,iDACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUC,eAAeI,IAAIjQ,aAEzE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUC,eAAeI,IAAIF,UAEtE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUC,eAAeI,IAAID,UAGtE,2CACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUC,eAAeK,aAAalQ,aAElF,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUC,eAAeK,aAAaH,UAE/E,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUC,eAAeK,aAAaF,UAG/E,kCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUC,eAAeM,IAAInQ,aAEzE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUC,eAAeM,IAAIJ,UAEtE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUC,eAAeM,IAAIH,UAGtE,yCACA,qCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUC,OAAOrQ,aAEvE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUC,OAAON,UAEpE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUC,OAAOL,UAGpE,mCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUE,KAAKtQ,aAErE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUE,KAAKP,UAElE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUE,KAAKN,UAGlE,sCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUG,QAAQvQ,aAExE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUG,QAAQR,UAErE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUG,QAAQP,UAGrE,6CACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUI,eAAexQ,aAE/E,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUI,eAAeT,UAE5E,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUI,eAAeR,UAG5E,uCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUK,SAASzQ,aAEzE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUK,SAASV,UAEtE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUK,SAAST,UAGtE,wCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUvQ,UAAUG,aAE1E,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUvQ,UAAUkQ,UAEvE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUvQ,UAAUmQ,UAGvE,qCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUM,OAAO1Q,aAEvE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUM,OAAOX,UAEpE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUQ,UAAUM,OAAOV,UAGpE,yCACA,qCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUe,UAAUC,OAAO5Q,aAEvE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUe,UAAUC,OAAOb,UAEpE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUe,UAAUC,OAAOZ,UAGpE,uCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUe,UAAUE,SAAS7Q,aAEzE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUe,UAAUE,SAASd,UAEtE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUe,UAAUE,SAASb,UAGtE,qCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUe,UAAUG,OAAO9Q,aAEvE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUe,UAAUG,OAAOf,UAEpE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUe,UAAUG,OAAOd,UAGpE,oCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUe,UAAUI,MAAM/Q,aAEtE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUe,UAAUI,MAAMhB,UAEnE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUe,UAAUI,MAAMf,UAGnE,qCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUe,UAAUK,OAAOhR,aAEvE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUe,UAAUK,OAAOjB,UAEpE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUe,UAAUK,OAAOhB,UAGpE,wCACA,wCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASC,UAAUlR,aAEzE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASC,UAAUnB,UAEtE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASC,UAAUlB,UAGtE,wCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASE,UAAUnR,aAEzE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASE,UAAUpB,UAEtE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASE,UAAUnB,UAGtE,kCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASG,IAAIpR,aAEnE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASG,IAAIrB,UAEhE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASG,IAAIpB,UAGhE,kCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASI,IAAIrR,aAEnE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASI,IAAItB,UAEhE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASI,IAAIrB,UAGhE,sCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASK,QAAQtR,aAEvE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASK,QAAQvB,UAEpE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASK,QAAQtB,UAGpE,wCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASM,UAAUvR,aAEzE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASM,UAAUxB,UAEtE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASM,UAAUvB,UAGtE,oCACA,kBAAC/sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,UACS,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASO,MAAM1tB,OAEhE,kBAACb,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,eACc,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASO,MAAMxR,aAErE,kBAAC/c,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASO,MAAMzB,UAElE,kBAAC9sB,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,YACW,0BAAMA,UAAU,QAAQF,EAAMqyB,UAAUqB,SAASO,MAAMxB,WAI7C,IAApBzyB,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMqyB,YAA1E,eC7PD6B,GAnCY,SAAAl0B,GAAU,IAEzB6G,EAFwB,iBAEd7G,EAAM6G,QACtBstB,EAAan0B,EAAMqyB,UACnB+B,EAAiB,GAEA,cAAjBvtB,EAAOI,OAAwC,uCAAfJ,EAAOrB,MACzC4uB,EAAiBD,EAAWttB,QAAO,SAAAU,GAAC,OAAIA,EAAE+qB,eAAeC,SAAS9P,aAAe5b,EAAOK,UAKrE,cAAjBL,EAAOI,QACTmtB,EAAiBD,GAGnB,IAAI1uB,EAAQ,EAEN4uB,EAAaD,EAAe1sB,KAAI,SAAA2qB,GAIpC,OAFA5sB,EAAQ2uB,EAAezsB,QAAQ0qB,GAAW,EAGxC,kBAAC,GAAD,CACE7sB,IAAKC,EACL4sB,UAAWA,EACXhsB,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,cAKtB,OAAO,wBAAIzG,UAAU,YAAYm0B,ICgDpBjjB,GAzEG,SAACpR,GAAW,IAAD,EACDoF,oBAAS,GADR,mBACpBlC,EADoB,KACbmC,EADa,OAWYD,oBAAS,GAXrB,mBAWnBE,EAXmB,KAWNC,EAXM,KAqB3B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMqR,MAAMC,OAG5C,kBAAC,IAAD,CAAiB1O,KAAMmD,IAAO7F,UAAU,WAAW+B,QA3BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAuBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMqR,MAAM9K,QAG5C,4BACA,kBAACb,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMqR,MAAM/O,QAG5C,4BACA,kBAACoD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMqR,MAAMC,SAGvB,IAApBtR,EAAMqG,WACL,4BACA,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QAtCrC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QAoCS,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMqR,QAA1E,kBCdLijB,GAlDQ,SAAAt0B,GAAU,IAErB6G,EAFoB,iBAEV7G,EAAM6G,QACtB2K,EAAUxR,EAAMyR,OAChBC,EAAc,GAEG,UAAjB7K,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC9DwK,EAAcF,EAAQrK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAE3C,UAAjBM,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC9DwK,EAAcF,EAAQrK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAE3C,UAAjBM,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC9DwK,EAAcF,EAAQrK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAE3C,UAAjBuE,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC9DwK,EAAcF,EAAQrK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAE3C,UAAjBuE,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC9DwK,EAAcF,EAAQrK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEkK,KAAOjK,EAAEiK,KAAQ,GAAK,MAE3C,UAAjBzK,EAAOI,OAAoC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC9DwK,EAAcF,EAAQrK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEkK,KAAOjK,EAAEiK,KAAQ,GAAK,MAK3C,UAAjBzK,EAAOI,QACTyK,EAAcF,GAGhB,IAAI/L,EAAQ,EAENgM,EAASC,EAAYhK,KAAI,SAAA2J,GAI7B,OAFA5L,EAAQiM,EAAY/J,QAAQ0J,GAAO,EAGjC,kBAAC,GAAD,CACE7L,IAAKC,EACL4L,MAAOA,EACPhL,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,cAKtB,OAAO,wBAAIzG,UAAU,aAAauR,IC+BrBE,GAvEE,SAAC3R,GAAW,IAAD,EACAoF,oBAAS,GADT,mBACnBlC,EADmB,KACZmC,EADY,OAWaD,oBAAS,GAXtB,mBAWlBE,EAXkB,KAWLC,EAXK,KAqB1B,OACE,wBAAIC,IAAKxF,EAAMwF,IAAKtF,UAAU,IAC5B,kBAACwF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAWzF,UAAU,YACnB,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMoB,KAAKkQ,OAE3C,kBAAC,IAAD,CAAiB1O,KAAMmD,IAAO7F,UAAU,WAAW+B,QA1BjC,YACV,IAAViB,GACFmC,GAAS,IAEG,IAAVnC,GACFmC,GAAS,OAsBM,IAAVnC,GACC,kBAACf,EAAA,EAAD,CAAKjC,UAAU,qBACf,4BACE,4BACA,kBAACwF,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMoB,KAAKmF,QAG3C,4BACA,kBAACb,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMoB,KAAKkB,QAG3C,4BACA,kBAACoD,EAAA,EAAKE,KAAN,CAAW1F,UAAU,YAArB,SACQ,0BAAMA,UAAU,QAAQF,EAAMoB,KAAKkQ,SAGtB,IAApBtR,EAAMqG,WACL,4BACA,kBAAC,IAAD,CAAiBzD,KAAM0D,IAAYpG,UAAU,WAAW+B,QArCrC,YACV,IAAhBqD,GACFC,GAAe,IAEG,IAAhBD,GACFC,GAAe,QAmCS,IAAhBD,GACC,4BACA,kBAACnD,EAAA,EAAD,CAAKjC,UAAU,qBACZF,EAAMqG,WACL,kBAAC9D,EAAA,EAAD,CAAQnC,QAAQ,iBAAiB6B,QAASjC,EAAM2G,SAAS7D,U,EAAW9C,EAAMoB,OAA1E,kBCbLmzB,GAlDO,SAAAv0B,GAAU,IAEpB6G,EAFmB,iBAET7G,EAAM6G,QACtBgL,EAAS7R,EAAM8R,MACfC,EAAa,GAEI,SAAjBlL,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC7D6K,EAAaF,EAAO1K,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAEzC,SAAjBM,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC7D6K,EAAaF,EAAO1K,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,KAAOc,EAAEd,KAAQ,GAAK,MAEzC,SAAjBM,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC7D6K,EAAaF,EAAO1K,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEzC,SAAjBuE,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC7D6K,EAAaF,EAAO1K,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9E,KAAO+E,EAAE/E,KAAQ,GAAK,MAEzC,SAAjBuE,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,cAAjBqB,EAAOK,QAC7D6K,EAAaF,EAAO1K,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEkK,KAAOjK,EAAEiK,KAAQ,GAAK,MAEzC,SAAjBzK,EAAOI,OAAmC,SAAfJ,EAAOrB,KAAmC,eAAjBqB,EAAOK,QAC7D6K,EAAaF,EAAO1K,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEkK,KAAOjK,EAAEiK,KAAQ,GAAK,MAKzC,SAAjBzK,EAAOI,QACT8K,EAAaF,GAGf,IAAIpM,EAAQ,EAENqM,EAAQC,EAAWrK,KAAI,SAAAtG,GAI3B,OAFAqE,EAAQsM,EAAWpK,QAAQvG,GAAM,EAG/B,kBAAC,GAAD,CACEoE,IAAKC,EACLrE,KAAMA,EACNiF,UAAWrG,EAAMqG,UACjBM,SAAU3G,EAAM2G,cAKtB,OAAO,wBAAIzG,UAAU,YAAY4R,ICJpB0iB,GAzCa,SAACx0B,GAE7B,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,gBAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACjB,yCACA,+CACA,gDAKJ,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,iDAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCMS0qB,GAxCU,SAACz0B,GAE1B,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,aAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACjB,yCACA,kDAKJ,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,iDAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCOS2qB,GAxCqB,SAAC10B,GAErC,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,wBAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACjB,yCACA,kDAKJ,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,iDAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCQS4qB,GAzCa,SAAC30B,GAE7B,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,gBAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACjB,wCACA,yCACA,kDAKJ,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,iDAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCiBS6qB,GAnDU,SAAC50B,GAE1B,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,aAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACjB,sCACA,uCACA,uCACA,sCACA,wCACA,wCACA,8CACA,+CACA,8CACA,+CACA,uCACA,8CACA,kDAKJ,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,iDAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCGS8qB,GA/Ce,SAAC70B,GAE/B,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,kBAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACjB,2CACA,wCACA,wCACA,2CACA,yCACA,+CACA,+CAKJ,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,8CACA,wCACA,4CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCCS+qB,GAzCiB,SAAC90B,GAEjC,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,oBAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACjB,wCACA,yCACA,kDAKJ,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,iDAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCSSgrB,GA3Ca,SAAC/0B,GAE7B,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,gBAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACjB,wCACA,yCACA,+CACA,wCACA,gDAKJ,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,iDAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCUSirB,GA9CW,SAACh1B,GAE3B,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOkQ,OAAO,OAAOtL,MAAM,cAIlD,kBAACoC,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACjB,wCACA,yCACA,+CACA,0CACA,wCACA,4CAKJ,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACf,6CACA,8CACA,wCACA,4CAKN,kBAACJ,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCGSkrB,GAxCU,SAACj1B,GAE1B,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,6CAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,YAG1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,iBAEnD,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,aAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,gBAIrD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,KACd,kBAACqE,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOgR,GAAG,YAAYxJ,YAAY,OAAOyJ,SAAU,SAACC,GAAO/D,EAAYgE,cAAcrS,KAAOoS,EAAE7O,OAAOmN,MAAM,QAIlI,kBAACxI,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cCGSmrB,GApCO,SAACl1B,GAEvB,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,0CAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,YAG1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,kBAIrD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,KACd,kBAACqE,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOgR,GAAG,YAAYxJ,YAAY,OAAOyJ,SAAU,SAACC,GAAO/D,EAAYgE,cAAcrS,KAAOoS,EAAE7O,OAAOmN,MAAM,QAIlI,kBAACxI,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cCOSorB,GApCkB,SAACn1B,GAElC,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,qDAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,YAG1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,kBAIrD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,KACd,kBAACqE,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOgR,GAAG,YAAYxJ,YAAY,OAAOyJ,SAAU,SAACC,GAAO/D,EAAYgE,cAAcrS,KAAOoS,EAAE7O,OAAOmN,MAAM,QAIlI,kBAACxI,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cCiFSqrB,GAlGO,SAACp1B,GAAW,IAAD,EAEAoF,mBAAS,OAFT,mBAExBmqB,EAFwB,KAEZlqB,EAFY,KAajC,OACA,yBAAKnF,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,0CAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,MAC7B,kBAACL,EAAA,EAAKM,MAAN,mBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,SAAS+yB,KAAK,QAAQvrB,YAAY,SAGzD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,6BACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,SAAS+yB,KAAK,QAAQvrB,YAAY,SAEvD,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,OAC7B,kBAACL,EAAA,EAAKM,MAAN,gCACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,SAAS+yB,KAAK,QAAQvrB,YAAY,UAGzD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,MAC7B,kBAACL,EAAA,EAAKM,MAAN,yBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,SAAS+yB,KAAK,QAAQvrB,YAAY,QAEvD,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,SAAS+yB,KAAK,QAAQvrB,YAAY,UAEvD,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,SAAS+yB,KAAK,QAAQvrB,YAAY,WAGzD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,cAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,SAAS6J,SAAU,SAAAC,GAAC,MA9C5B,OAFY9R,EAgDsC8R,EAAE7O,OAAOuC,QA7CtE7B,EAAS,WAEE,OAAT3D,GACF2D,EAAS,QANa,IAAC3D,IAiDnB,sCACA,uCAGJ,kBAAC4H,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,sBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,SAAS+yB,KAAK,QAAQvrB,YAAY,iBAEvD,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,cAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAO4E,MAAOqoB,KAEnC,kBAACjmB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,sBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,SAAS+yB,KAAK,QAAQvrB,YAAY,kBAYzD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,aAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,eAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,cAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,iBAI1C,kBAACR,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cC1CSurB,GA7DY,SAACt1B,GAE5B,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,+CAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,WAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,aAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,WAG1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,UAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,WAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAG1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,WAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,kBAIrD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,YAC7B,kBAACL,EAAA,EAAKM,MAAN,mBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,cAIzE,kBAACjsB,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,KACd,kBAACqE,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOgR,GAAG,YAAYxJ,YAAY,OAAOyJ,SAAU,SAACC,GAAO/D,EAAYgE,cAAcrS,KAAOoS,EAAE7O,OAAOmN,MAAM,QAIlI,kBAACxI,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cCdSyrB,GAxCc,SAACx1B,GAE9B,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,iDAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,WAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,WAG1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,kBAIrD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,KACd,kBAACqE,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOgR,GAAG,YAAYxJ,YAAY,OAAOyJ,SAAU,SAACC,GAAO/D,EAAYgE,cAAcrS,KAAOoS,EAAE7O,OAAOmN,MAAM,QAIlI,kBAACxI,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cCOS0rB,GAxCU,SAACz1B,GAE1B,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,6CAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,WAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,WAG1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,kBAIrD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,KACd,kBAACqE,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOgR,GAAG,YAAYxJ,YAAY,OAAOyJ,SAAU,SAACC,GAAO/D,EAAYgE,cAAcrS,KAAOoS,EAAE7O,OAAOmN,MAAM,QAIlI,kBAACxI,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cCiBS2rB,GAlDU,SAAC11B,GAE1B,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,6CAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,WAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,WAG1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,kBAGrD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,UAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,aAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,gBAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,KACd,kBAACqE,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOgR,GAAG,YAAYxJ,YAAY,OAAOyJ,SAAU,SAACC,GAAO/D,EAAYgE,cAAcrS,KAAOoS,EAAE7O,OAAOmN,MAAM,QAIlI,kBAACxI,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cCaS4rB,GAxDQ,SAAC31B,GAExB,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,2CAEA,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,WAExC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,WAG1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,eAC7B,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,kBAGrD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,UAC7B,kBAACL,EAAA,EAAKM,MAAN,eACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,SAAS+yB,KAAK,QAAQvrB,YAAY,YAEvD,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,QAC7B,kBAACL,EAAA,EAAKM,MAAN,eACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,cAGzE,kBAACjsB,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,WAAWwJ,KAAK,IAAIpJ,YAAY,YAIrD,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,KACd,kBAACqE,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOgR,GAAG,YAAYxJ,YAAY,OAAOyJ,SAAU,SAACC,GAAO/D,EAAYgE,cAAcrS,KAAOoS,EAAE7O,OAAOmN,MAAM,QAIlI,kBAACxI,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cC0YS6rB,GA5bU,SAAC51B,GAE1B,OACA,yBAAKE,UAAU,iBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WACpB,6CAEA,kBAACF,EAAA,EAAKnH,IAAN,KACA,gDACA,uCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,6CAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,0CAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,0CAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,gDACA,kCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,wCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,qCAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,qCAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,gDACA,2CACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,iDAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,8CAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,8CAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,gDACA,kCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,wCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,qCAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,qCAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,0CACA,qCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,sCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,mCAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,mCAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,mCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,oCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,iCAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,iCAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,sCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,uCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,oCAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,oCAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,6CACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,8CAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,2CAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,2CAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,uCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,wCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,qCAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,qCAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,wCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,yCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,sCAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,sCAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,qCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,sCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,mCAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,mCAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,0CACA,qCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,sCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,mCAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,mCAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,uCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,wCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,qCAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,qCAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,qCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,sCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,mCAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,mCAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,oCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,qCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,kCAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,kCAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,qCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,sCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,mCAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,mCAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,wCACA,wCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,wCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,qCAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,qCAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,wCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,wCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,qCAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,qCAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,kCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,kCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,+BAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,+BAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,kCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,kCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,+BAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,+BAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,sCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,sCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,mCAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,mCAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,wCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,wCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,qCAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,qCAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACA,oCACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,8BAC7B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,UAGxC,kBAACR,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,oCAC7B,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,iCAC7B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,WAAWiR,SAAU,SAACC,GAAO9H,QAAQC,IAAI6H,EAAE7O,OAAO4wB,aAGvE,kBAACjsB,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,iCAC7B,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,cAM1C,kBAACR,EAAA,EAAKnH,IAAN,CAAUjC,UAAU,cAClB,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,cAA1D,OACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBF,UAAU,aAAa+B,QAASjC,EAAM+J,UAAxE,cCpWA8rB,G,kDAoDJ,WAAY71B,GAAQ,IAAD,8BACjB,cAAMA,IApDRkD,MAAQ,CACNzC,UAAW,KACXE,KAAM,KACNkE,SAAS,EACTC,cAAe,OACfC,SAAS,EACTjD,QAAS,KACTpB,aAAc,KACd+J,WAAW,EACXC,UAAW,KACXkJ,eAAe,EACfC,QAAS,OACThN,OAAQ,CACNI,MAAO,KACPzB,IAAK,KACL0B,MAAO,MAET4M,aAAc,KACdC,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,MAETZ,WAAW,EACX2N,kBAAmB,CACjB9Q,MAAO,KACP+D,MAAO,MAETlG,aAAc,KACdC,gBAAiB,KACjBE,cAAe,KACfD,oBAAqB,KACrBwjB,mBAAmB,EACnBC,kBAAmB,KACnByG,uBAAuB,EACvBrqB,MAAO,KACPsqB,SAAU,CACRxnB,MAAO,EAAK5D,MAAMmE,MAAMP,MACxBM,YAAa,EAAKlE,MAAMmE,MAAMhB,YAAYe,YAC1CJ,SAAU,EAAK9D,MAAMmE,MAAMhB,YAAYW,SACvCunB,UAAWhoB,IAAOC,KAAK,EAAKtD,MAAMmE,MAAMZ,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cAAc,IAAI,EAAK1D,MAAMmE,MAAMR,KAAK,YACxH2nB,QAASjoB,IAAOC,KAAK,EAAKtD,MAAMmE,MAAMZ,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cAAc,IAAI,EAAK1D,MAAMmE,MAAMR,KAAK,aAExHyQ,WAAY,KACZC,QAAS,CACP3P,OAAQ,KACRC,OAAQ,KACRtC,OAAQ,OAKO,EA6KrByzB,uBAAyB,SAAC5oB,GACxBA,EAAMC,iBACNzB,QAAQC,IAAI,0BACZ,EAAK7J,QAAQL,aAAa,0BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAkBI8M,EAlBEhX,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAC3BQ,EAAQsJ,EAAMvI,OAAOf,MAAMsD,MAC3BhD,EAAcgJ,EAAMvI,OAAOT,YAAYgD,MACvCymB,EAAYzgB,EAAMvI,OAAOgpB,UAAUzmB,MACtBgG,EAAMvI,OAAO+c,WAAWxa,MAE3C,GAC4B,IAAxBtD,EAAMgY,OAAOC,QACiB,IAA9B3X,EAAY0X,OAAOC,QACS,IAA5B8R,EAAU/R,OAAOC,OAInB,OAFA,EAAK/Z,QAAQL,aAAa,8BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAa5B,GAPqC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,QACzBqQ,EAAY,IAMwB,KAAjCrK,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,SAASggB,EAAQ,yBAClCrqB,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCsB,EAHgB,6CAA6CxB,EAAS,IAAID,EAAS,IAAIE,EAKvF,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,4BAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,yBAGZE,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,uBACRtC,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,uBACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,uBACRtC,OAAQ,eAMpB,IAAIuJ,EAAc,CAChBC,MAAM,+DAAD,OAEerL,EAFf,kCAGYu1B,EAHZ,mEAKqBnyB,EALrB,iDAM2BM,EAN3B,+CAOyBypB,EAPzB,gDAQ0BpW,EAR1B,q5DAYPzL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,+BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKkzB,mBACpC,EAAK5wB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKkzB,kBAC5Bx1B,UAAU,gCAAD,OAAkCD,EAAlC,oBAAwDu1B,GACjEhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAKkzB,kBAC1C,EAAKrnB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA9UX,EAiVrByrB,gBAAkB,SAACx0B,GAEjBgK,QAAQC,IAAI,4BACZ,EAAK7J,QAAQL,aAAa,4BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAC3BQ,EAAQlC,EAAKkC,MACbM,EAAcxC,EAAKwC,YACnBypB,EAAYjsB,EAAKisB,UACjB7L,EAAcpgB,EAAKogB,YAErBlW,EAAc,CAChBC,MAAM,kEAAD,OAEerL,EAFf,kCAGYu1B,EAHZ,mEAKqBnyB,EALrB,iDAM2BM,EAN3B,+CAOyBypB,EAPzB,iDAQ2B7L,EAR3B,q5DAYPhW,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,kCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKozB,sBACpC,EAAK9wB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKozB,qBAC5B11B,UAAU,mCAAD,OAAqCD,EAArC,oBAA2Du1B,GACpEhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAKozB,qBAC1C,EAAKvnB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAGpD,IAAMolB,EAAiBjkB,EAAKogB,YAGtB8D,EAAY,mDAAmDmQ,EAAQ,0BAGvE7f,EAAS,CACbC,WAAY,mBACZC,QANe,SAAS2f,EAAQ,yBAOhC1f,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,gCAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAO,0BAGXE,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,gBAIZqJ,QAAQC,IAAI,SACZ,IAAK,IAAIka,EAAQ,EAAGA,EAAQF,EAAe9J,OAAQgK,IAAS,CAC1D,IAAIC,EAAgBH,EAAeE,GACnCna,QAAQC,IAAI,wBAAwBka,GAEpC,IACIE,EADWD,EACUE,QAAQJ,EAAU,IAE3ClP,EACCQ,WAAW6O,EAAW7P,GACtB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,GAC1B,EAAK9R,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,OAMf6G,QAAQC,IAAI,UAIbmB,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA3dX,EA+drB2rB,oBAAsB,SAAClpB,GACrBA,EAAMC,iBACNzB,QAAQC,IAAI,uBACZ,EAAK7J,QAAQL,aAAa,uBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAiBI8M,EAjBEhX,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE3BQ,EAAQsJ,EAAMvI,OAAOf,MAAMsD,MAC3BhD,EAAcgJ,EAAMvI,OAAOT,YAAYgD,MAC1BgG,EAAMvI,OAAO+c,WAAWxa,MAE3C,GAC4B,IAAxBtD,EAAMgY,OAAOC,QACiB,IAA9B3X,EAAY0X,OAAOC,OAIrB,OAFA,EAAK/Z,QAAQL,aAAa,8BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAa5B,GAPqC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,QACzBqQ,EAAY,IAMwB,KAAjCrK,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,SAASggB,EAAQ,sBAClCrqB,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCsB,EAHgB,6CAA6CxB,EAAS,IAAID,EAAS,IAAIE,EAKvF,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,4BAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,sBAGZE,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,oBACRtC,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,oBACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,oBACRtC,OAAQ,eAMpB,IAAIuJ,EAAc,CAChBC,MAAM,0DAAD,OAEarL,EAFb,gCAGUu1B,EAHV,4DAKgBnyB,EALhB,4CAMsBM,EANtB,2CAOqBqT,EAPrB,i5DAWPzL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,4BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKszB,gBACpC,EAAKhxB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKszB,eAC5B51B,UAAU,6BAAD,OAA+BD,EAA/B,oBAAqDu1B,GAC9DhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAKszB,eAC1C,EAAKznB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA9nBX,EAioBrB6rB,aAAe,SAAC50B,GAEdgK,QAAQC,IAAI,yBACZ,EAAK7J,QAAQL,aAAa,yBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAC3BQ,EAAQlC,EAAKkC,MACbM,EAAcxC,EAAKwC,YACnB4d,EAAcpgB,EAAKogB,YAErBlW,EAAc,CAChBC,MAAM,6DAAD,OAEarL,EAFb,gCAGUu1B,EAHV,4DAKgBnyB,EALhB,4CAMsBM,EANtB,4CAOsB4d,EAPtB,i5DAWPhW,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,+BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKwzB,mBACpC,EAAKlxB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKwzB,kBAC5B91B,UAAU,gCAAD,OAAkCD,EAAlC,oBAAwDu1B,GACjEhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAKwzB,kBAC1C,EAAK3nB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAGpD,IAAMolB,EAAiBjkB,EAAKogB,YAGtB8D,EAAY,mDAAmDmQ,EAAQ,uBAGvE7f,EAAS,CACbC,WAAY,mBACZC,QANe,SAAS2f,EAAQ,sBAOhC1f,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,gCAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAO,uBAGXE,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,gBAIZqJ,QAAQC,IAAI,SACZ,IAAK,IAAIka,EAAQ,EAAGA,EAAQF,EAAe9J,OAAQgK,IAAS,CAC1D,IAAIC,EAAgBH,EAAeE,GACnCna,QAAQC,IAAI,wBAAwBka,GAEpC,IACIE,EADWD,EACUE,QAAQJ,EAAU,IAE3ClP,EACCQ,WAAW6O,EAAW7P,GACtB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,GAC1B,EAAK9R,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,OAMf6G,QAAQC,IAAI,UAIbmB,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAzwBX,EA6wBrB+rB,+BAAiC,SAACtpB,GAChCA,EAAMC,iBACNzB,QAAQC,IAAI,kCACZ,EAAK7J,QAAQL,aAAa,kCAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAiBI8M,EAjBEhX,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE3BQ,EAAQsJ,EAAMvI,OAAOf,MAAMsD,MAC3BhD,EAAcgJ,EAAMvI,OAAOT,YAAYgD,MAC1BgG,EAAMvI,OAAO+c,WAAWxa,MAE3C,GAC4B,IAAxBtD,EAAMgY,OAAOC,QACiB,IAA9B3X,EAAY0X,OAAOC,OAIrB,OAFA,EAAK/Z,QAAQL,aAAa,8BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAa5B,GAPqC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,QACzBqQ,EAAY,IAMwB,KAAjCrK,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,SAASggB,EAAQ,iCAClCrqB,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCsB,EAHgB,6CAA6CxB,EAAS,IAAID,EAAS,IAAIE,EAKvF,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,4BAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,iCAGZE,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,+BACRtC,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,+BACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,+BACRtC,OAAQ,eAMpB,IAAIuJ,EAAc,CAChBC,MAAM,8DAAD,OAEarL,EAFb,gCAGUu1B,EAHV,uEAK2BnyB,EAL3B,uDAMiCM,EANjC,sDAOgCqT,EAPhC,i5DAWPzL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,uCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAK0zB,oBACpC,EAAKpxB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAK0zB,mBAC5Bh2B,UAAU,iCAAD,OAAmCD,EAAnC,oBAAyDu1B,GAClEhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAK0zB,mBAC1C,EAAK7nB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA56BX,EA+6BrBisB,wBAA0B,SAACh1B,GAEzBgK,QAAQC,IAAI,oCACZ,EAAK7J,QAAQL,aAAa,oCAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAC3BQ,EAAQlC,EAAKkC,MACbM,EAAcxC,EAAKwC,YACnB4d,EAAcpgB,EAAKogB,YAErBlW,EAAc,CAChBC,MAAM,iEAAD,OAEarL,EAFb,gCAGUu1B,EAHV,uEAK2BnyB,EAL3B,uDAMiCM,EANjC,uDAOiC4d,EAPjC,i5DAWPhW,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,oCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAK4zB,uBACpC,EAAKtxB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAK4zB,sBAC5Bl2B,UAAU,oCAAD,OAAsCD,EAAtC,oBAA4Du1B,GACrEhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAK4zB,sBAC1C,EAAK/nB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAGpD,IAAMolB,EAAiBjkB,EAAKogB,YAGtB8D,EAAY,mDAAmDmQ,EAAQ,kCAGvE7f,EAAS,CACbC,WAAY,mBACZC,QANe,SAAS2f,EAAQ,iCAOhC1f,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,gCAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAO,kCAGXE,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,gBAIZqJ,QAAQC,IAAI,SACZ,IAAK,IAAIka,EAAQ,EAAGA,EAAQF,EAAe9J,OAAQgK,IAAS,CAC1D,IAAIC,EAAgBH,EAAeE,GACnCna,QAAQC,IAAI,wBAAwBka,GAEpC,IACIE,EADWD,EACUE,QAAQJ,EAAU,IAE3ClP,EACCQ,WAAW6O,EAAW7P,GACtB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,GAC1B,EAAK9R,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,OAMf6G,QAAQC,IAAI,UAGbmB,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAtjCX,EA0jCrBmsB,oBAAsB,SAAC1pB,GACrBA,EAAMC,iBACNzB,QAAQC,IAAI,uBACZ,EAAK7J,QAAQL,aAAa,uBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE3B0rB,EAAK5hB,EAAMvI,OAAOmqB,GAAG5nB,MACrB8nB,EAAM9hB,EAAMvI,OAAOqqB,IAAI9nB,MACvB+nB,EAAM/hB,EAAMvI,OAAOsqB,IAAI/nB,MACvB6nB,EAAK7hB,EAAMvI,OAAOoqB,GAAG7nB,MACrBgoB,EAAOhiB,EAAMvI,OAAOuqB,KAAKhoB,MACzBioB,EAAOjiB,EAAMvI,OAAOwqB,KAAKjoB,MACzBmoB,EAAaniB,EAAMvI,OAAO0qB,WAAWnoB,MACrCkoB,EAAcliB,EAAMvI,OAAOyqB,YAAYloB,MACvCqoB,EAAariB,EAAMvI,OAAO4qB,WAAWroB,MACrCooB,EAAcpiB,EAAMvI,OAAO2qB,YAAYpoB,MACzCsoB,EAAM,EACJqH,EAAY3pB,EAAMvI,OAAOkyB,UAAU3vB,MACnC4vB,EAAa5pB,EAAMvI,OAAOmyB,WAAW5vB,MAU3C,GATmB,MAAfmoB,IACFG,EAAMF,EAAY,KAAD,IAAEF,EAAa,IAEf,OAAfC,IACFG,EAAaF,EAAY,KAAD,IAAEF,EAAa,GAAjC,KAERI,EAAMA,EAAIuH,QAAQ,GAClBrrB,QAAQC,IAAI,MAAM6jB,GAGO,IAArBV,EAAGlT,OAAOC,QACY,IAAtBmT,EAAIpT,OAAOC,QACW,IAAtBoT,EAAIrT,OAAOC,QACU,IAArBkT,EAAGnT,OAAOC,QACa,IAAvBqT,EAAKtT,OAAOC,QACW,IAAvBsT,EAAKvT,OAAOC,QACiB,IAA7BwT,EAAWzT,OAAOC,QACY,IAA9BuT,EAAYxT,OAAOC,QACU,IAA7B0T,EAAW3T,OAAOC,QACY,IAA9ByT,EAAY1T,OAAOC,QACS,IAA5Bgb,EAAUjb,OAAOC,QACY,IAA7Bib,EAAWlb,OAAOC,OAIpB,OAFA,EAAK/Z,QAAQL,aAAa,8BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAI5B,IAAImB,EAAc,CAChBC,MAAM,0DAAD,OAEarL,EAFb,gCAGUu1B,EAHV,wDAKYjH,EALZ,kCAMaE,EANb,kCAOaC,EAPb,iCAQYF,EARZ,mCAScG,EATd,mCAUcC,EAVd,0CAWqBE,EAXrB,2CAYqBD,EAZrB,0CAaqBG,EAbrB,2CAcqBD,EAdrB,kCAeaE,EAfb,yCAgBoBqH,EAhBpB,2CAiBqBC,EAjBrB,i5DAqBPhrB,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,4BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKi0B,gBACpC,EAAK3xB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKi0B,eAC5Bv2B,UAAU,6BAAD,OAA+BD,EAA/B,oBAAqDu1B,GAC9DhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAKi0B,eAC1C,EAAKpoB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAhrCX,EAmrCrBwsB,aAAe,SAACv1B,GAEdgK,QAAQC,IAAI,yBACZ,EAAK7J,QAAQL,aAAa,yBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE3B0rB,EAAKptB,EAAKotB,GACVE,EAAMttB,EAAKstB,IACXC,EAAMvtB,EAAKutB,IACXF,EAAKrtB,EAAKqtB,GACVG,EAAOxtB,EAAKwtB,KACZC,EAAOztB,EAAKytB,KACZE,EAAa3tB,EAAK2tB,WAClBD,EAAc1tB,EAAK0tB,YACnBG,EAAa7tB,EAAK6tB,WAClBD,EAAc5tB,EAAK4tB,YACnBE,EAAM9tB,EAAK8tB,IACXqH,EAAYn1B,EAAK+tB,MAAMntB,KACvBw0B,EAAap1B,EAAK+tB,MAAMvoB,MAE1B0E,EAAc,CAChBC,MAAM,yDAAD,OAEWrL,EAFX,8BAGQu1B,EAHR,oDAKUjH,EALV,gCAMWE,EANX,gCAOWC,EAPX,+BAQUF,EARV,iCASYG,EATZ,iCAUYC,EAVZ,wCAWmBE,EAXnB,yCAYmBD,EAZnB,wCAamBG,EAbnB,yCAcmBD,EAdnB,gCAeWE,EAfX,uCAgBkBqH,EAhBlB,yCAiBmBC,EAjBnB,64DAqBPhrB,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,+BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKm0B,mBACpC,EAAK7xB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKm0B,kBAC5Bz2B,UAAU,gCAAD,OAAkCD,EAAlC,oBAAwDu1B,GACjEhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAKm0B,kBAC1C,EAAKtoB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA9wCX,EAkxCrB0sB,yBAA2B,SAACjqB,GAC1BA,EAAMC,iBACNzB,QAAQC,IAAI,4BACZ,EAAK7J,QAAQL,aAAa,4BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAyBI8M,EAzBEhX,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE3B4sB,EAAU9iB,EAAMvI,OAAOqrB,QAAQ9oB,MAC/B+oB,EAAO/iB,EAAMvI,OAAOsrB,KAAK/oB,MACzB5E,EAAO4K,EAAMvI,OAAOrC,KAAK4E,MACzBgpB,EAAUhjB,EAAMvI,OAAOurB,QAAQhpB,MAC/BA,EAAQgG,EAAMvI,OAAOuC,MAAMA,MAC3BhD,EAAcgJ,EAAMvI,OAAOT,YAAYgD,MACvCipB,EAAWjjB,EAAMvI,OAAOwrB,SAASoF,QACpBroB,EAAMvI,OAAO+c,WAAWxa,MAE3C,GAC8B,IAA1B8oB,EAAQpU,OAAOC,QACQ,IAAvBoU,EAAKrU,OAAOC,QACW,IAAvBvZ,EAAKsZ,OAAOC,QACc,IAA1BqU,EAAQtU,OAAOC,QACS,IAAxB3U,EAAM0U,OAAOC,OAIf,OAFA,EAAK/Z,QAAQL,aAAa,8BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAa5B,GAPqC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,QACzBqQ,EAAY,IAMwB,KAAjCrK,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,SAASggB,EAAQ,2BAClCrqB,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCsB,EAHgB,6CAA6CxB,EAAS,IAAID,EAAS,IAAIE,EAKvF,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,4BAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,2BAGZE,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,yBACRtC,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,yBACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,yBACRtC,OAAQ,eAMpB,IAAIuJ,EAAc,CAChBC,MAAM,+DAAD,OAEarL,EAFb,gCAGUu1B,EAHV,mEAKuB/F,EALvB,0CAMoBC,EANpB,0CAOoB3tB,EAPpB,6CAQuB4tB,EARvB,2CASqBhpB,EATrB,iDAU2BhD,EAV3B,6CAWuBisB,EAXvB,+CAY0B5Y,EAZ1B,ijDAgBPzL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,iCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKq0B,qBACpC,EAAK/xB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKq0B,oBAC5B32B,UAAU,kCAAD,OAAoCD,EAApC,oBAA0Du1B,GACnEhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAKq0B,oBAC1C,EAAKxoB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA97CX,EAi8CrB4sB,kBAAoB,SAAC31B,GAEnBgK,QAAQC,IAAI,8BACZ,EAAK7J,QAAQL,aAAa,8BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE3B4sB,EAAUtuB,EAAKsuB,QACfC,EAAOvuB,EAAKuuB,KACZ3tB,EAAOZ,EAAKY,KACZ4tB,EAAUxuB,EAAKwuB,QACfhpB,EAAQxF,EAAKwF,MACbhD,EAAcxC,EAAKwC,YACnBisB,EAAWzuB,EAAKyuB,SAChBrO,EAAcpgB,EAAKogB,YAErBlW,EAAc,CAChBC,MAAM,kEAAD,OAEarL,EAFb,gCAGUu1B,EAHV,mEAKuB/F,EALvB,0CAMoBC,EANpB,0CAOoB3tB,EAPpB,6CAQuB4tB,EARvB,2CASqBhpB,EATrB,iDAU2BhD,EAV3B,6CAWuBisB,EAXvB,gDAY2BrO,EAZ3B,ijDAgBPhW,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,oCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKu0B,wBACpC,EAAKjyB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKu0B,uBAC5B72B,UAAU,qCAAD,OAAuCD,EAAvC,oBAA6Du1B,GACtEhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAKu0B,uBAC1C,EAAK1oB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAGpD,IAAMolB,EAAiBjkB,EAAKogB,YAGtB8D,EAAY,mDAAmDmQ,EAAQ,4BAGvE7f,EAAS,CACbC,WAAY,mBACZC,QANe,SAAS2f,EAAQ,2BAOhC1f,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,gCAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAO,4BAGXE,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,gBAIZqJ,QAAQC,IAAI,SACZ,IAAK,IAAIka,EAAQ,EAAGA,EAAQF,EAAe9J,OAAQgK,IAAS,CAC1D,IAAIC,EAAgBH,EAAeE,GACnCna,QAAQC,IAAI,wBAAwBka,GAEpC,IACIE,EADWD,EACUE,QAAQJ,EAAU,IAE3ClP,EACCQ,WAAW6O,EAAW7P,GACtB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,GAC1B,EAAK9R,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,OAMf6G,QAAQC,IAAI,UAIbmB,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAplDX,EAwlDrB8sB,2BAA6B,SAACrqB,GAC5BA,EAAMC,iBACNzB,QAAQC,IAAI,8BACZ,EAAK7J,QAAQL,aAAa,8BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAkBI8M,EAlBEhX,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE3BQ,EAAQsJ,EAAMvI,OAAOf,MAAMsD,MAC3B5E,EAAO4K,EAAMvI,OAAOrC,KAAK4E,MACzBhD,EAAcgJ,EAAMvI,OAAOT,YAAYgD,MAC1BgG,EAAMvI,OAAO+c,WAAWxa,MAE3C,GAC4B,IAAxBtD,EAAMgY,OAAOC,QACiB,IAA9B3X,EAAY0X,OAAOC,OAIrB,OAFA,EAAK/Z,QAAQL,aAAa,8BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAa5B,GAPqC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,QACzBqQ,EAAY,IAMwB,KAAjCrK,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,SAASggB,EAAQ,6BAClCrqB,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCsB,EAHgB,6CAA6CxB,EAAS,IAAID,EAAS,IAAIE,EAKvF,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,4BAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,6BAGZE,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,2BACRtC,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,2BACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,2BACRtC,OAAQ,eAMpB,IAAIuJ,EAAc,CAChBC,MAAM,iEAAD,OAEarL,EAFb,gCAGUu1B,EAHV,mEAKuBnyB,EALvB,4CAMsBtB,EANtB,mDAO6B4B,EAP7B,kDAQ4BqT,EAR5B,ijDAYPzL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,mCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKy0B,uBACpC,EAAKnyB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKy0B,sBAC5B/2B,UAAU,oCAAD,OAAsCD,EAAtC,oBAA4Du1B,GACrEhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAKy0B,sBAC1C,EAAK5oB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAzvDX,EA4vDrBgtB,oBAAsB,SAAC/1B,GAErBgK,QAAQC,IAAI,gCACZ,EAAK7J,QAAQL,aAAa,gCAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE3BQ,EAAQlC,EAAKkC,MACbtB,EAAOZ,EAAKY,KACZ4B,EAAcxC,EAAKwC,YACnB4d,EAAcpgB,EAAKogB,YAErBlW,EAAc,CAChBC,MAAM,oEAAD,OAEarL,EAFb,gCAGUu1B,EAHV,mEAKuBnyB,EALvB,4CAMsBtB,EANtB,mDAO6B4B,EAP7B,mDAQ6B4d,EAR7B,ijDAYPhW,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,sCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAK20B,0BACpC,EAAKryB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAK20B,yBAC5Bj3B,UAAU,uCAAD,OAAyCD,EAAzC,oBAA+Du1B,GACxEhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAK20B,yBAC1C,EAAK9oB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAGpD,IAAMolB,EAAiBjkB,EAAKogB,YAGtB8D,EAAY,mDAAmDmQ,EAAQ,8BAGvE7f,EAAS,CACbC,WAAY,mBACZC,QANe,SAAS2f,EAAQ,6BAOhC1f,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,gCAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAO,8BAGXE,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,gBAIZqJ,QAAQC,IAAI,SACZ,IAAK,IAAIka,EAAQ,EAAGA,EAAQF,EAAe9J,OAAQgK,IAAS,CAC1D,IAAIC,EAAgBH,EAAeE,GACnCna,QAAQC,IAAI,wBAAwBka,GAEpC,IACIE,EADWD,EACUE,QAAQJ,EAAU,IAE3ClP,EACCQ,WAAW6O,EAAW7P,GACtB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,GAC1B,EAAK9R,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,OAMf6G,QAAQC,IAAI,UAIbmB,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAv4DX,EA24DrBktB,uBAAyB,SAACzqB,GACxBA,EAAMC,iBACNzB,QAAQC,IAAI,0BACZ,EAAK7J,QAAQL,aAAa,0BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAkBI8M,EAlBEhX,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE3BQ,EAAQsJ,EAAMvI,OAAOf,MAAMsD,MAC3B5E,EAAO4K,EAAMvI,OAAOrC,KAAK4E,MACzBhD,EAAcgJ,EAAMvI,OAAOT,YAAYgD,MAC1BgG,EAAMvI,OAAO+c,WAAWxa,MAE3C,GAC4B,IAAxBtD,EAAMgY,OAAOC,QACiB,IAA9B3X,EAAY0X,OAAOC,OAIrB,OAFA,EAAK/Z,QAAQL,aAAa,8BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAa5B,GAPqC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,QACzBqQ,EAAY,IAMwB,KAAjCrK,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,SAASggB,EAAQ,yBAClCrqB,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCsB,EAHgB,6CAA6CxB,EAAS,IAAID,EAAS,IAAIE,EAKvF,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,4BAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,yBAGZE,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,uBACRtC,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,uBACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,uBACRtC,OAAQ,eAMpB,IAAIuJ,EAAc,CAChBC,MAAM,6DAAD,OAEarL,EAFb,gCAGUu1B,EAHV,+DAKmBnyB,EALnB,wCAMkBtB,EANlB,+CAOyB4B,EAPzB,8CAQwBqT,EARxB,+4DAYPzL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,+BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAK60B,mBACpC,EAAKvyB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAK60B,kBAC5Bn3B,UAAU,gCAAD,OAAkCD,EAAlC,oBAAwDu1B,GACjEhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAK60B,kBAC1C,EAAKhpB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA5iEX,EA+iErBotB,gBAAkB,SAACn2B,GAEjBgK,QAAQC,IAAI,4BACZ,EAAK7J,QAAQL,aAAa,4BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE3BQ,EAAQlC,EAAKkC,MACbtB,EAAOZ,EAAKY,KACZ4B,EAAcxC,EAAKwC,YACnB4d,EAAcpgB,EAAKogB,YAErBlW,EAAc,CAChBC,MAAM,gEAAD,OAEarL,EAFb,gCAGUu1B,EAHV,+DAKmBnyB,EALnB,wCAMkBtB,EANlB,+CAOyB4B,EAPzB,+CAQyB4d,EARzB,ijDAYPhW,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,kCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAK+0B,sBACpC,EAAKzyB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAK+0B,qBAC5Br3B,UAAU,mCAAD,OAAqCD,EAArC,oBAA2Du1B,GACpEhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAK+0B,qBAC1C,EAAKlpB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAEpD,IAAMolB,EAAiBjkB,EAAKogB,YAGtB8D,EAAY,mDAAmDmQ,EAAQ,0BAGvE7f,EAAS,CACbC,WAAY,mBACZC,QANe,SAAS2f,EAAQ,yBAOhC1f,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,gCAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAO,0BAGXE,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,gBAIZqJ,QAAQC,IAAI,SACZ,IAAK,IAAIka,EAAQ,EAAGA,EAAQF,EAAe9J,OAAQgK,IAAS,CAC1D,IAAIC,EAAgBH,EAAeE,GACnCna,QAAQC,IAAI,wBAAwBka,GAEpC,IACIE,EADWD,EACUE,QAAQJ,EAAU,IAE3ClP,EACCQ,WAAW6O,EAAW7P,GACtB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,GAC1B,EAAK9R,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,OAMf6G,QAAQC,IAAI,UAIbmB,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAzrEX,EA6rErBstB,uBAAyB,SAAC7qB,GACxBA,EAAMC,iBACNzB,QAAQC,IAAI,0BACZ,EAAK7J,QAAQL,aAAa,0BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAwBI8M,EAxBEhX,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE3BQ,EAAQsJ,EAAMvI,OAAOf,MAAMsD,MAC3B5E,EAAO4K,EAAMvI,OAAOrC,KAAK4E,MACzBhD,EAAcgJ,EAAMvI,OAAOT,YAAYgD,MACvCoqB,EAAOpkB,EAAMvI,OAAO2sB,KAAKpqB,MACzBqqB,EAAYrkB,EAAMvI,OAAO4sB,UAAUrqB,MACtBgG,EAAMvI,OAAO+c,WAAWxa,MAG3C,GAC4B,IAAxBtD,EAAMgY,OAAOC,QACU,IAAvBvZ,EAAKsZ,OAAOC,QACkB,IAA9B3X,EAAY0X,OAAOC,QACI,IAAvByV,EAAK1V,OAAOC,QACgB,IAA5B0V,EAAU3V,OAAOC,OAInB,OAFA,EAAK/Z,QAAQL,aAAa,8BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAa5B,GAPqC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,QACzBqQ,EAAY,IAMwB,KAAjCrK,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,SAASggB,EAAQ,yBAClCrqB,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCsB,EAHgB,6CAA6CxB,EAAS,IAAID,EAAS,IAAIE,EAKvF,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,4BAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,yBAGZE,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,uBACRtC,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,uBACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,uBACRtC,OAAQ,eAOpB,IAAIuJ,EAAc,CAChBC,MAAM,iEAAD,OAEerL,EAFf,kCAGYu1B,EAHZ,kEAKoBzzB,EALpB,2CAMqBsB,EANrB,iDAO2BM,EAP3B,0CAQoBotB,EARpB,+CASyBC,EATzB,gDAU0Bha,EAV1B,q5DAcPzL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,+BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKi1B,mBACpC,EAAK3yB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKi1B,kBAC5Bv3B,UAAU,gCAAD,OAAkCD,EAAlC,oBAAwDu1B,GACjEhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAKi1B,kBAC1C,EAAKppB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAv2EX,EA02ErBwtB,gBAAkB,SAACv2B,GAEjBgK,QAAQC,IAAI,4BACZ,EAAK7J,QAAQL,aAAa,4BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE3BQ,EAAQlC,EAAKkC,MACbtB,EAAOZ,EAAKY,KACZ4B,EAAcxC,EAAKwC,YACnBotB,EAAO5vB,EAAK4vB,KACZC,EAAY7vB,EAAK6vB,UACjBzP,EAAcpgB,EAAKogB,YAErBlW,EAAc,CAChBC,MAAM,oEAAD,OAEerL,EAFf,kCAGYu1B,EAHZ,kEAKoBzzB,EALpB,2CAMqBsB,EANrB,iDAO2BM,EAP3B,0CAQoBotB,EARpB,+CASyBC,EATzB,iDAU2BzP,EAV3B,q5DAcPhW,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,kCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKm1B,sBACpC,EAAK7yB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKm1B,qBAC5Bz3B,UAAU,mCAAD,OAAqCD,EAArC,oBAA2Du1B,GACpEhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAKm1B,qBAC1C,EAAKtpB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAGpD,IAAMolB,EAAiBjkB,EAAKogB,YAGtB8D,EAAY,mDAAmDmQ,EAAQ,0BAGvE7f,EAAS,CACbC,WAAY,mBACZC,QANe,SAAS2f,EAAQ,yBAOhC1f,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,gCAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAO,0BAGXE,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,gBAIZqJ,QAAQC,IAAI,SACZ,IAAK,IAAIka,EAAQ,EAAGA,EAAQF,EAAe9J,OAAQgK,IAAS,CAC1D,IAAIC,EAAgBH,EAAeE,GACnCna,QAAQC,IAAI,wBAAwBka,GAEpC,IACIE,EADWD,EACUE,QAAQJ,EAAU,IAE3ClP,EACCQ,WAAW6O,EAAW7P,GACtB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,GAC1B,EAAK9R,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,OAMf6G,QAAQC,IAAI,UAIbmB,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAz/EX,EA6/ErB0tB,qBAAuB,SAACjrB,GACtBA,EAAMC,iBACNzB,QAAQC,IAAI,wBACZ,EAAK7J,QAAQL,aAAa,wBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAwBI8M,EAxBEhX,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE3BQ,EAAQsJ,EAAMvI,OAAOf,MAAMsD,MAC3B5E,EAAO4K,EAAMvI,OAAOrC,KAAK4E,MACzBhD,EAAcgJ,EAAMvI,OAAOT,YAAYgD,MACvC4qB,EAAS5kB,EAAMvI,OAAOmtB,OAAO5qB,MAC7B6qB,EAAO7kB,EAAMvI,OAAOotB,KAAKwD,QACzBljB,EAAQnF,EAAMvI,OAAO0N,MAAMnL,MACdgG,EAAMvI,OAAO+c,WAAWxa,MAG3C,GAC4B,IAAxBtD,EAAMgY,OAAOC,QACiB,IAA9B3X,EAAY0X,OAAOC,QACnBiW,GAAU,GACc,IAAxBzf,EAAMuJ,OAAOC,OAIf,OAFA,EAAK/Z,QAAQL,aAAa,8BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAa5B,GAPqC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,QACzBqQ,EAAY,IAMwB,KAAjCrK,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,SAASggB,EAAQ,uBAClCrqB,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCsB,EAHgB,6CAA6CxB,EAAS,IAAID,EAAS,IAAIE,EAKvF,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,4BAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,uBAGZE,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,qBACRtC,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,qBACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,qBACRtC,OAAQ,eAOpB,IAAIuJ,EAAc,CAChBC,MAAM,+DAAD,OAEerL,EAFf,kCAGYu1B,EAHZ,iEAKmBnyB,EALnB,wCAMkBtB,EANlB,+CAOyB4B,EAPzB,yCAQmB4tB,EARnB,sCASiBC,EATjB,6CAUwBxa,EAVxB,yCAWmBlF,EAXnB,q5DAePvG,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,6BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKq1B,iBACpC,EAAK/yB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKq1B,gBAC5B33B,UAAU,8BAAD,OAAgCD,EAAhC,oBAAsDu1B,GAC/DhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAKq1B,gBAC1C,EAAKxpB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAxqFX,EA2qFrB4tB,cAAgB,SAAC32B,GAEfgK,QAAQC,IAAI,yBAAyBjK,GACrC,EAAKI,QAAQL,aAAa,0BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE3BQ,EAAQlC,EAAKkC,MACbtB,EAAOZ,EAAKY,KACZ4B,EAAcxC,EAAKwC,YACnB4tB,EAASpwB,EAAKowB,OACdC,EAAOrwB,EAAKqwB,KACZ1f,EAAQ3Q,EAAK2Q,MACbyP,EAAcpgB,EAAKogB,YAErBlW,EAAc,CAChBC,MAAM,kEAAD,OAEerL,EAFf,kCAGYu1B,EAHZ,iEAKmBnyB,EALnB,wCAMkBtB,EANlB,+CAOyB4B,EAPzB,yCAQmB4tB,EARnB,sCASiBC,EATjB,8CAUyBjQ,EAVzB,yCAWmBzP,EAXnB,q5DAePvG,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,gCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKu1B,oBACpC,EAAKjzB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKu1B,mBAC5B73B,UAAU,iCAAD,OAAmCD,EAAnC,oBAAyDu1B,GAClEhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAKu1B,mBAC1C,EAAK1pB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAEpD,IAAMolB,EAAiBjkB,EAAKogB,YAGtB8D,EAAY,mDAAmDmQ,EAAQ,wBAGvE7f,EAAS,CACbC,WAAY,mBACZC,QANe,SAAS2f,EAAQ,uBAOhC1f,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,gCAC1BiK,QAAQC,IAAI,gCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAO,wBAGXE,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,gBAIZqJ,QAAQC,IAAI,SACZ,IAAK,IAAIka,EAAQ,EAAGA,EAAQF,EAAe9J,OAAQgK,IAAS,CAC1D,IAAIC,EAAgBH,EAAeE,GACnCna,QAAQC,IAAI,wBAAwBka,GAEpC,IACIE,EADWD,EACUE,QAAQJ,EAAU,IAE3ClP,EACCQ,WAAW6O,EAAW7P,GACtB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,GAC1B,EAAK9R,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,OAMf6G,QAAQC,IAAI,UAIbmB,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA3zFX,EA+zFrBgL,mBAAqB,SAACvI,GACpBA,EAAMC,iBACNzB,QAAQC,IAAI,sBACZ,EAAK7J,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAIIiL,EACAC,EACAC,EANErV,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAMjC,GAAqC,KAAjC8J,EAAMvI,OAAOkR,UAAU3O,MAGrB,OAFJ,EAAKpF,QAAQL,aAAa,0CACtB,EAAK4D,SAAS,CAACoF,WAAW,IAIhC,GAAsC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,SAASggB,EAAQ,UAClCrqB,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCL,EAHgB,6CAA6CG,EAAS,IAAID,EAAS,IAAIE,EAIvFN,EAHgBI,EAAS,IAAIE,EAI7BL,EAAYK,EAEZ,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,6BAC1BiK,QAAQC,IAAI,2BACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,UAGZE,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,QACRtC,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,QACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,QACRtC,OAAQ,eAOpB,IAAIuJ,EAAc,CAChBC,MAAM,6DAAD,OAEerL,EAFf,kCAGYu1B,EAHZ,8DAKgBrgB,EALhB,sCAMgBC,EANhB,sCAOgBC,EAPhB,m5DAWP9J,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,2BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKw1B,eACpC,EAAKlzB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKw1B,cAC5B93B,UAAU,4BAAD,OAA8BD,EAA9B,oBAAoDu1B,GAC7DhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAKw1B,cAC1C,EAAK3pB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAr9FX,EAw9FrBsM,YAAc,SAACrV,GAEbgK,QAAQC,IAAI,uBAAuBjK,GACnC,EAAKI,QAAQL,aAAa,wBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE3BmD,EAAO7E,EAAK6E,KACZjE,EAAOZ,EAAKY,KACZgP,EAAO5P,EAAK4P,KAEd1F,EAAc,CAChBC,MAAM,wDAAD,OAEWrL,EAFX,8BAGQu1B,EAHR,sDAKYxvB,EALZ,kCAMYjE,EANZ,kCAOYgP,EAPZ,24DAWPxF,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,8BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKy1B,kBACpC,EAAKnzB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKy1B,iBAC5B/3B,UAAU,+BAAD,OAAiCD,EAAjC,oBAAuDu1B,GAChEhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAKy1B,iBAC1C,EAAK5pB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAGpD,IAAMwV,EAAW,SAASggB,EAAQ,UAC5B9e,EAAWvV,EAAK6E,KAEhB2P,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,0BAC1BiK,QAAQC,IAAI,0BACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,UAGZE,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,QACRtC,OAAQ,gBAIZqU,EACCQ,WAAWD,EAAUf,GACrB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,EAASvK,SACnC,EAAKvH,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,UAMdiI,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAllGX,EAslGrB2M,kBAAoB,SAAClK,GACnBA,EAAMC,iBACNzB,QAAQC,IAAI,qBACZ,EAAK7J,QAAQL,aAAa,qBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAII4M,EACAC,EACAC,EANEhX,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAMjC,GAAqC,KAAjC8J,EAAMvI,OAAOkR,UAAU3O,MAGrB,OAFJ,EAAKpF,QAAQL,aAAa,0CACtB,EAAK4D,SAAS,CAACoF,WAAW,IAIhC,GAAsC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,SAASggB,EAAQ,SAClCrqB,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCsB,EAHgB,6CAA6CxB,EAAS,IAAID,EAAS,IAAIE,EAIvFqB,EAHgBvB,EAAS,IAAIE,EAI7BsB,EAAYtB,EAEZ,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,4BAC1BiK,QAAQC,IAAI,0BACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,SAGZE,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,eAMpB,IAAIuJ,EAAc,CAChBC,MAAM,4DAAD,OAEerL,EAFf,kCAGYu1B,EAHZ,6DAKe1e,EALf,qCAMeC,EANf,qCAOeC,EAPf,m5DAWPzL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,0BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAK01B,cACpC,EAAKpzB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAK01B,aAC5Bh4B,UAAU,2BAAD,OAA6BD,EAA7B,oBAAmDu1B,GAC5DhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAK01B,aAC1C,EAAK7pB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA3uGX,EA8uGrByM,WAAa,SAACxV,GAEZgK,QAAQC,IAAI,sBAAsBjK,GAClC,EAAKI,QAAQL,aAAa,uBAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE3BmD,EAAO7E,EAAK6E,KACZjE,EAAOZ,EAAKY,KACZgP,EAAO5P,EAAK4P,KAEd1F,EAAc,CAChBC,MAAM,uDAAD,OAEWrL,EAFX,8BAGQu1B,EAHR,qDAKWxvB,EALX,iCAMWjE,EANX,iCAOWgP,EAPX,24DAWPxF,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,6BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAK21B,iBACpC,EAAKrzB,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAK21B,gBAC5Bj4B,UAAU,8BAAD,OAAgCD,EAAhC,oBAAsDu1B,GAC/DhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAK21B,gBAC1C,EAAK9pB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAEpD,IAAMwV,EAAW,SAASggB,EAAQ,SAC5B9e,EAAWvV,EAAK6E,KAChB2P,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,yBAC1BiK,QAAQC,IAAI,yBACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAQ,SAGZE,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,OACRtC,OAAQ,gBAIZqU,EACCQ,WAAWD,EAAUf,GACrB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,EAASvK,SACnC,EAAKvH,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,UAMdiI,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAt2GX,EA02GrBkuB,uBAAyB,SAACzrB,GACxBA,EAAMC,iBACNzB,QAAQC,IAAI,0BACZ,EAAK7J,QAAQL,aAAa,0BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE7BwI,EAAc,CAChBC,MAAM,yDAAD,OAEWrL,EAFX,8BAGQu1B,EAHR,qFAK2C7oB,EAAMvI,OAAOi0B,0CAA0CrD,QALlG,6DAMwCroB,EAAMvI,OAAOk0B,uCAAuCtD,QAN5F,8DAOyCroB,EAAMvI,OAAOm0B,uCAAuC5xB,MAP7F,4DAQsCgG,EAAMvI,OAAOo0B,qCAAqCxD,QARxF,wDASmCroB,EAAMvI,OAAOq0B,kCAAkCzD,QATlF,yDAUoCroB,EAAMvI,OAAOs0B,kCAAkC/xB,MAVnF,qEAW+CgG,EAAMvI,OAAOu0B,8CAA8C3D,QAX1G,iEAY4CroB,EAAMvI,OAAOw0B,2CAA2C5D,QAZpG,kEAa6CroB,EAAMvI,OAAOy0B,2CAA2ClyB,MAbrG,4DAcsCgG,EAAMvI,OAAO00B,qCAAqC9D,QAdxF,wDAemCroB,EAAMvI,OAAO20B,kCAAkC/D,QAflF,yDAgBoCroB,EAAMvI,OAAO40B,kCAAkCryB,MAhBnF,0DAiBoCgG,EAAMvI,OAAO60B,mCAAmCjE,QAjBpF,sDAkBiCroB,EAAMvI,OAAO80B,gCAAgClE,QAlB9E,uDAmBkCroB,EAAMvI,OAAO+0B,gCAAgCxyB,MAnB/E,wDAoBkCgG,EAAMvI,OAAOg1B,iCAAiCpE,QApBhF,oDAqB+BroB,EAAMvI,OAAOi1B,8BAA8BrE,QArB1E,qDAsBgCroB,EAAMvI,OAAOk1B,8BAA8B3yB,MAtB3E,2DAuBqCgG,EAAMvI,OAAOm1B,oCAAoCvE,QAvBtF,uDAwBkCroB,EAAMvI,OAAOo1B,iCAAiCxE,QAxBhF,wDAyBmCroB,EAAMvI,OAAOq1B,iCAAiC9yB,MAzBjF,kEA0B4CgG,EAAMvI,OAAOs1B,2CAA2C1E,QA1BpG,8DA2ByCroB,EAAMvI,OAAOu1B,wCAAwC3E,QA3B9F,+DA4B0CroB,EAAMvI,OAAOw1B,wCAAwCjzB,MA5B/F,4DA6BsCgG,EAAMvI,OAAOy1B,qCAAqC7E,QA7BxF,wDA8BmCroB,EAAMvI,OAAO01B,kCAAkC9E,QA9BlF,yDA+BoCroB,EAAMvI,OAAO21B,kCAAkCpzB,MA/BnF,6DAgCuCgG,EAAMvI,OAAO41B,sCAAsChF,QAhC1F,yDAiCoCroB,EAAMvI,OAAO61B,mCAAmCjF,QAjCpF,0DAkCqCroB,EAAMvI,OAAO81B,mCAAmCvzB,MAlCrF,0DAmCoCgG,EAAMvI,OAAO+1B,mCAAmCnF,QAnCpF,sDAoCiCroB,EAAMvI,OAAOg2B,gCAAgCpF,QApC9E,uDAqCkCroB,EAAMvI,OAAOi2B,gCAAgC1zB,MArC/E,0DAsCoCgG,EAAMvI,OAAOk2B,mCAAmCtF,QAtCpF,sDAuCiCroB,EAAMvI,OAAOm2B,gCAAgCvF,QAvC9E,uDAwCkCroB,EAAMvI,OAAOo2B,gCAAgC7zB,MAxC/E,4DAyCsCgG,EAAMvI,OAAOq2B,qCAAqCzF,QAzCxF,wDA0CmCroB,EAAMvI,OAAOs2B,kCAAkC1F,QA1ClF,yDA2CoCroB,EAAMvI,OAAOu2B,kCAAkCh0B,MA3CnF,0DA4CoCgG,EAAMvI,OAAOw2B,mCAAmC5F,QA5CpF,sDA6CiCroB,EAAMvI,OAAOy2B,gCAAgC7F,QA7C9E,uDA8CkCroB,EAAMvI,OAAO02B,gCAAgCn0B,MA9C/E,yDA+CmCgG,EAAMvI,OAAO22B,kCAAkC/F,QA/ClF,qDAgDgCroB,EAAMvI,OAAO42B,+BAA+BhG,QAhD5E,sDAiDiCroB,EAAMvI,OAAO62B,+BAA+Bt0B,MAjD7E,0DAkDoCgG,EAAMvI,OAAO82B,mCAAmClG,QAlDpF,sDAmDiCroB,EAAMvI,OAAO+2B,gCAAgCnG,QAnD9E,uDAoDkCroB,EAAMvI,OAAOg3B,gCAAgCz0B,MApD/E,4DAqDsCgG,EAAMvI,OAAOi3B,qCAAqCrG,QArDxF,wDAsDmCroB,EAAMvI,OAAOk3B,kCAAkCtG,QAtDlF,yDAuDoCroB,EAAMvI,OAAOm3B,kCAAkC50B,MAvDnF,4DAwDsCgG,EAAMvI,OAAOo3B,qCAAqCxG,QAxDxF,wDAyDmCroB,EAAMvI,OAAOq3B,kCAAkCzG,QAzDlF,yDA0DoCroB,EAAMvI,OAAOs3B,kCAAkC/0B,MA1DnF,sDA2DgCgG,EAAMvI,OAAOu3B,+BAA+B3G,QA3D5E,kDA4D6BroB,EAAMvI,OAAOw3B,4BAA4B5G,QA5DtE,mDA6D8BroB,EAAMvI,OAAOy3B,4BAA4Bl1B,MA7DvE,sDA8DgCgG,EAAMvI,OAAO03B,+BAA+B9G,QA9D5E,kDA+D6BroB,EAAMvI,OAAO23B,4BAA4B/G,QA/DtE,mDAgE8BroB,EAAMvI,OAAO43B,4BAA4Br1B,MAhEvE,0DAiEoCgG,EAAMvI,OAAO63B,mCAAmCjH,QAjEpF,sDAkEiCroB,EAAMvI,OAAO83B,gCAAgClH,QAlE9E,uDAmEkCroB,EAAMvI,OAAO+3B,gCAAgCx1B,MAnE/E,4DAoEsCgG,EAAMvI,OAAOg4B,qCAAqCpH,QApExF,wDAqEmCroB,EAAMvI,OAAOi4B,kCAAkCrH,QArElF,yDAsEoCroB,EAAMvI,OAAOk4B,kCAAkC31B,MAtEnF,mDAuE6BgG,EAAMvI,OAAOm4B,2BAA2B51B,MAvErE,wDAwEkCgG,EAAMvI,OAAOo4B,iCAAiCxH,QAxEhF,oDAyE+BroB,EAAMvI,OAAOq4B,8BAA8BzH,QAzE1E,qDA0EgCroB,EAAMvI,OAAOs4B,8BAA8B/1B,MA1E3E,24DA8EP4E,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,+BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKm6B,mBACpC,EAAK73B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKm6B,kBAC5Bz8B,UAAU,gCAAD,OAAkCD,EAAlC,oBAAwDu1B,GACjEhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAKm6B,kBAC1C,EAAKtuB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAh/GX,EAm/GrB0yB,gBAAkB,SAACz7B,GAEjBgK,QAAQC,IAAI,4BACZ,EAAK7J,QAAQL,aAAa,4BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE7BwI,EAAc,CAChBC,MAAM,oEAAD,OAEerL,EAFf,kCAGYu1B,EAHZ,6FAK+Cr0B,EAAK4wB,eAAeC,SAAS9P,WAL5E,iEAM4C/gB,EAAK4wB,eAAeC,SAASC,QANzE,kEAO6C9wB,EAAK4wB,eAAeC,SAASE,QAP1E,gEAQ0C/wB,EAAK4wB,eAAeI,IAAIjQ,WARlE,4DASuC/gB,EAAK4wB,eAAeI,IAAIF,QAT/D,6DAUwC9wB,EAAK4wB,eAAeI,IAAID,QAVhE,yEAWmD/wB,EAAK4wB,eAAeK,aAAalQ,WAXpF,qEAYgD/gB,EAAK4wB,eAAeK,aAAaH,QAZjF,sEAaiD9wB,EAAK4wB,eAAeK,aAAaF,QAblF,gEAc0C/wB,EAAK4wB,eAAeM,IAAInQ,WAdlE,4DAeuC/gB,EAAK4wB,eAAeM,IAAIJ,QAf/D,6DAgBwC9wB,EAAK4wB,eAAeM,IAAIH,QAhBhE,8DAiBwC/wB,EAAKmxB,UAAUC,OAAOrQ,WAjB9D,0DAkBqC/gB,EAAKmxB,UAAUC,OAAON,QAlB3D,2DAmBsC9wB,EAAKmxB,UAAUC,OAAOL,QAnB5D,4DAoBsC/wB,EAAKmxB,UAAUE,KAAKtQ,WApB1D,wDAqBmC/gB,EAAKmxB,UAAUE,KAAKP,QArBvD,yDAsBoC9wB,EAAKmxB,UAAUE,KAAKN,QAtBxD,+DAuByC/wB,EAAKmxB,UAAUG,QAAQvQ,WAvBhE,2DAwBsC/gB,EAAKmxB,UAAUG,QAAQR,QAxB7D,4DAyBuC9wB,EAAKmxB,UAAUG,QAAQP,QAzB9D,sEA0BgD/wB,EAAKmxB,UAAUI,eAAexQ,WA1B9E,kEA2B6C/gB,EAAKmxB,UAAUI,eAAeT,QA3B3E,mEA4B8C9wB,EAAKmxB,UAAUI,eAAeR,QA5B5E,gEA6B0C/wB,EAAKmxB,UAAUK,SAASzQ,WA7BlE,4DA8BuC/gB,EAAKmxB,UAAUK,SAASV,QA9B/D,6DA+BwC9wB,EAAKmxB,UAAUK,SAAST,QA/BhE,iEAgC2C/wB,EAAKmxB,UAAUvQ,UAAUG,WAhCpE,6DAiCwC/gB,EAAKmxB,UAAUvQ,UAAUkQ,QAjCjE,8DAkCyC9wB,EAAKmxB,UAAUvQ,UAAUmQ,QAlClE,8DAmCwC/wB,EAAKmxB,UAAUM,OAAO1Q,WAnC9D,0DAoCqC/gB,EAAKmxB,UAAUM,OAAOX,QApC3D,2DAqCsC9wB,EAAKmxB,UAAUM,OAAOV,QArC5D,8DAsCwC/wB,EAAK0xB,UAAUC,OAAO5Q,WAtC9D,0DAuCqC/gB,EAAK0xB,UAAUC,OAAOb,QAvC3D,2DAwCsC9wB,EAAK0xB,UAAUC,OAAOZ,QAxC5D,gEAyC0C/wB,EAAK0xB,UAAUE,SAAS7Q,WAzClE,4DA0CuC/gB,EAAK0xB,UAAUE,SAASd,QA1C/D,6DA2CwC9wB,EAAK0xB,UAAUE,SAASb,QA3ChE,8DA4CwC/wB,EAAK0xB,UAAUG,OAAO9Q,WA5C9D,0DA6CqC/gB,EAAK0xB,UAAUG,OAAOf,QA7C3D,2DA8CsC9wB,EAAK0xB,UAAUG,OAAOd,QA9C5D,6DA+CuC/wB,EAAK0xB,UAAUI,MAAM/Q,WA/C5D,yDAgDoC/gB,EAAK0xB,UAAUI,MAAMhB,QAhDzD,0DAiDqC9wB,EAAK0xB,UAAUI,MAAMf,QAjD1D,8DAkDwC/wB,EAAK0xB,UAAUK,OAAOhR,WAlD9D,0DAmDqC/gB,EAAK0xB,UAAUK,OAAOjB,QAnD3D,2DAoDsC9wB,EAAK0xB,UAAUK,OAAOhB,QApD5D,gEAqD0C/wB,EAAKgyB,SAASC,UAAUlR,WArDlE,4DAsDuC/gB,EAAKgyB,SAASC,UAAUnB,QAtD/D,6DAuDwC9wB,EAAKgyB,SAASC,UAAUlB,QAvDhE,gEAwD0C/wB,EAAKgyB,SAASE,UAAUnR,WAxDlE,4DAyDuC/gB,EAAKgyB,SAASE,UAAUpB,QAzD/D,6DA0DwC9wB,EAAKgyB,SAASE,UAAUnB,QA1DhE,0DA2DoC/wB,EAAKgyB,SAASG,IAAIpR,WA3DtD,sDA4DiC/gB,EAAKgyB,SAASG,IAAIrB,QA5DnD,uDA6DkC9wB,EAAKgyB,SAASG,IAAIpB,QA7DpD,0DA8DoC/wB,EAAKgyB,SAASI,IAAIrR,WA9DtD,sDA+DiC/gB,EAAKgyB,SAASI,IAAItB,QA/DnD,uDAgEkC9wB,EAAKgyB,SAASI,IAAIrB,QAhEpD,8DAiEwC/wB,EAAKgyB,SAASK,QAAQtR,WAjE9D,0DAkEqC/gB,EAAKgyB,SAASK,QAAQvB,QAlE3D,2DAmEsC9wB,EAAKgyB,SAASK,QAAQtB,QAnE5D,gEAoE0C/wB,EAAKgyB,SAASM,UAAUvR,WApElE,4DAqEuC/gB,EAAKgyB,SAASM,UAAUxB,QArE/D,6DAsEwC9wB,EAAKgyB,SAASM,UAAUvB,QAtEhE,uDAuEiC/wB,EAAKgyB,SAASO,MAAM1tB,KAvErD,4DAwEsC7E,EAAKgyB,SAASO,MAAMxR,WAxE1D,wDAyEmC/gB,EAAKgyB,SAASO,MAAMzB,QAzEvD,yDA0EoC9wB,EAAKgyB,SAASO,MAAMxB,QA1ExD,m5DA8EP3mB,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,kCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKq6B,sBACpC,EAAK/3B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKq6B,qBAC5B38B,UAAU,8BAAD,OAAgCD,EAAhC,oBAAsDu1B,GAC/DhiB,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAKq6B,qBAC1C,EAAKxuB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAznHX,EA6nHrBohB,kBAAoB,SAAC3e,GACnBA,EAAMC,iBACNzB,QAAQC,IAAI,2BACZ,EAAK7J,QAAQL,aAAa,2BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BuN,EAAeb,EAAMvI,OAAO9D,KAAKqG,MACjC6uB,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE3B0oB,EAAW,EAAK5oB,MAAMpC,MAAM+F,QAAO,SAAAU,GAAC,OAAIA,EAAEnE,MAAQ2K,KAAc,GAAGpN,KACzE,GAAiB,WAAbmrB,GAAsC,UAAbA,EAG3B,OAFApgB,QAAQC,IAAI,4DACZ,EAAK7J,QAAQL,aAAa,uDAI5B,IAAImK,EAAc,CAChBC,MAAM,8DAAD,OAEarL,EAFb,gCAGUu1B,EAHV,qCAIehoB,EAJf,44DAQPjC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,gCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKs6B,oBACpC,EAAKh4B,SAAS,CACZoF,WAAW,EACXhK,UAAU,iCAAD,OAAmCD,EAAnC,oBAAyDu1B,EAAzD,yBAAiFhoB,KAE5F,EAAKa,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IACpD,EAAK8X,eAENvL,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAhsHX,EAmsHrBuhB,iBAAmB,SAACtqB,GAClBgK,QAAQC,IAAI,6BACZ,EAAK7J,QAAQL,aAAa,6BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BuN,EAAerM,EAAK0B,IACpB2yB,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE7BwI,EAAc,CAChBC,MAAM,iEAAD,OAEarL,EAFb,gCAGUu1B,EAHV,qCAIehoB,EAJf,44DAQPjC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,mCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKu6B,uBACpC,EAAKj4B,SAAS,CACZoF,WAAW,EACXhK,UAAU,oCAAD,OAAsCD,EAAtC,oBAA4Du1B,EAA5D,yBAAoFhoB,KAE/F,EAAKa,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IACpD,EAAK8X,eAENvL,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA9vHX,EAkwHrB4b,mBAAqB,SAAC3kB,GACpBgK,QAAQC,IAAI,8BACZ,EAAKtG,SAAS,CACZof,mBAAmB,EACnBC,kBAAmBhjB,KAtwHF,EAywHrB4kB,oBAAsB,WACpB,EAAKjhB,SAAS,CACZof,mBAAmB,KA3wHF,EA8wHrB8B,cAAgB,SAACrZ,GACfA,EAAMC,iBACNzB,QAAQC,IAAI,2BACZ,EAAK7J,QAAQL,aAAa,2BAC1B,EAAK4D,SAAS,CACZoF,WAAW,EACXga,mBAAmB,IAGrB,IAMIlN,EA8EA3L,EApFErL,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAC7B1B,EAAO,EAAKwB,MAAMwhB,kBAClBzd,EAAQvF,EAAKuF,MAIjB,GAAqC,KAAjCiG,EAAMvI,OAAOkR,UAAU3O,MAGrB,OAFJ,EAAKpF,QAAQL,aAAa,0CACtB,EAAK4D,SAAS,CAACoF,WAAW,IAIhC,GAAsC,KAAjCyC,EAAMvI,OAAOkR,UAAU3O,MAAe,CACzC,IAAI9F,EAAOqO,EAAYgE,cAAcrS,KAE/B0U,EAAW1U,EAAKmF,KAEhBwP,EAAW,SAASggB,EAAQ,IAAI9uB,EAAM,eAC5CyE,QAAQC,IAAI,sBACZ,IAAIqK,EAAW5U,EAAKkB,KAAK2T,MAAM,KAAK,GAIpCsB,EAHgB,6CAA6CxB,EAAS,IAAID,EAAS,IAAIE,EAKvF,IAAME,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,0CAC1BiK,QAAQC,IAAI,wCACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAO,GAAD,OAAKsC,EAAL,iBAGVpC,SAAS,EACXwP,QAAU,CACR3P,OAAQ,SACRC,OAAO,GAAD,OAAKsC,EAAL,eACN5E,OAAQ,gBAIVqU,EACKE,WAAWxV,EAAM0U,GACjBzJ,MAAK,SAAAtJ,GACJ2I,QAAQC,IAAI,6BAA6B5I,GACzC,EAAKjB,QAAQL,aAAa,sBAC1B,EAAK4D,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,qBACRtC,OAAQ,iBAIbyK,OAAM,SAAAC,GACLrB,QAAQmB,MAAM,gBAAgBE,GAC9B,EAAKjL,QAAQL,aAAa,qBAAqBsL,EAAI8J,YACnD,EAAKxR,SAAS,CACZP,cAAe,KACfD,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAQ,qBACRtC,OAAQ,eAQpB,GAAc,cAAV4E,EAAuB,CACzB,IAAIs2B,EAAiB77B,EAAKqB,KAAKa,MAC3B45B,EAAuB97B,EAAKqB,KAAKmB,YACjCu5B,EAAqB/7B,EAAKqB,KAAK4qB,UAC/B+P,EAAsBnmB,EAE1B3L,EAAc,CACZC,MAAM,2EAAD,OAEarL,EAFb,kCAGUu1B,EAHV,mEAKmBwH,EALnB,iDAMyBC,EANzB,+CAOuBC,EAPvB,gDAQwBC,EARxB,q5DAaT,GAAc,WAAVz2B,EAAoB,CACtB,IAAI02B,EAAcj8B,EAAKqB,KAAKa,MACxBg6B,EAAoBl8B,EAAKqB,KAAKmB,YAC9B25B,EAAmBtmB,EAEvB3L,EAAc,CACZC,MAAM,wEAAD,OAEarL,EAFb,kCAGUu1B,EAHV,gEAKgB4H,EALhB,8CAMsBC,EANtB,6CAOqBC,EAPrB,u5DAYT,GAAc,sBAAV52B,EAA+B,CACjC,IAAI62B,EAAyBp8B,EAAKqB,KAAKa,MACnCm6B,EAA+Br8B,EAAKqB,KAAKmB,YACzC85B,EAA8BzmB,EAElC3L,EAAc,CACZC,MAAM,4EAAD,OAEarL,EAFb,kCAGUu1B,EAHV,2EAK2B+H,EAL3B,yDAMiCC,EANjC,wDAOgCC,EAPhC,u5DAYT,GAAc,gBAAV/2B,EAAyB,CAC3B,IAAIg3B,EAAqBv8B,EAAKqB,KAAKitB,QAC/BkO,EAAkBx8B,EAAKqB,KAAKktB,KAC5BkO,EAAkBz8B,EAAKqB,KAAKT,KAC5B87B,EAAqB18B,EAAKqB,KAAKmtB,QAC/BmO,EAAmB38B,EAAKqB,KAAKmE,MAC7Bo3B,EAAyB58B,EAAKqB,KAAKmB,YACnCq6B,EAAsB78B,EAAKqB,KAAKotB,SAChCqO,EAAwBjnB,EAE5B3L,EAAc,CACZC,MAAM,6EAAD,OAEarL,EAFb,kCAGUu1B,EAHV,uEAKuBkI,EALvB,4CAMoBC,EANpB,4CAOoBC,EAPpB,+CAQuBC,EARvB,6CASqBC,EATrB,mDAU2BC,EAV3B,+CAWuBC,EAXvB,iDAY0BC,EAZ1B,u5DAiBT,GAAc,kBAAVv3B,EAA2B,CAC7B,IAAIw3B,EAAqB/8B,EAAKqB,KAAKa,MAC/B86B,EAAoBh9B,EAAKqB,KAAKT,KAC9Bq8B,EAA2Bj9B,EAAKqB,KAAKmB,YACrC06B,EAA0BrnB,EAE9B3L,EAAc,CACZC,MAAM,+EAAD,OAEarL,EAFb,kCAGUu1B,EAHV,uEAKuB0I,EALvB,8CAMsBC,EANtB,qDAO6BC,EAP7B,oDAQ4BC,EAR5B,u5DAaT,GAAc,cAAV33B,EAAuB,CACzB,IAAI43B,EAAiBn9B,EAAKqB,KAAKa,MAC3Bk7B,EAAgBp9B,EAAKqB,KAAKT,KAC1By8B,EAAuBr9B,EAAKqB,KAAKmB,YACjC86B,EAAsBznB,EAE1B3L,EAAc,CACZC,MAAM,2EAAD,OAEarL,EAFb,kCAGUu1B,EAHV,mEAKmB8I,EALnB,0CAMkBC,EANlB,iDAOyBC,EAPzB,gDAQwBC,EARxB,u5DAaT,GAAc,cAAV/3B,EAAuB,CACzB,IAAIg4B,EAAgBv9B,EAAKqB,KAAKT,KAC1B48B,EAAiBx9B,EAAKqB,KAAKa,MAC3Bu7B,EAAuBz9B,EAAKqB,KAAKmB,YACjCk7B,EAAgB19B,EAAKqB,KAAKuuB,KAC1B+N,EAAqB39B,EAAKqB,KAAKwuB,UAC/B+N,EAAsB/nB,EAE1B3L,EAAc,CACZC,MAAM,2EAAD,OAEarL,EAFb,kCAGUu1B,EAHV,kEAKkBkJ,EALlB,2CAMmBC,EANnB,iDAOyBC,EAPzB,0CAQkBC,EARlB,+CASuBC,EATvB,gDAUwBC,EAVxB,m5DAeT,GAAc,YAAVr4B,EAAqB,CACvB,IAAIs4B,EAAgB79B,EAAKqB,KAAK+uB,OAC1B0N,EAAc99B,EAAKqB,KAAKgvB,KACxB0N,EAAe/9B,EAAKqB,KAAKa,MACzB87B,EAAch+B,EAAKqB,KAAKT,KACxBq9B,EAAqBj+B,EAAKqB,KAAKmB,YAC/B07B,EAAel+B,EAAKqB,KAAKsP,MACzBwtB,GAAoBtoB,EAExB3L,EAAc,CACZC,MAAM,yEAAD,OAEarL,EAFb,kCAGUu1B,EAHV,iEAKiB0J,EALjB,wCAMgBC,EANhB,+CAOuBC,EAPvB,yCAQiBJ,EARjB,sCASeC,EATf,6CAUsBK,GAVtB,yCAWiBD,EAXjB,u5DAiBT9zB,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GA0BJ,IAAIC,EAAgB,gCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAKvB,EAAK/K,QAAQL,aAAaiL,GAEZ,cAAVzF,IACF,EAAKjH,MAAMg2B,YAAYvpB,EAAQ1J,KAAK+8B,6BACpC,EAAKz6B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAK+8B,4BAC5Br/B,UAAU,0CAAD,OAA4CD,EAA5C,oBAAkEu1B,MAGjE,WAAV9uB,IACF,EAAKjH,MAAMg2B,YAAYvpB,EAAQ1J,KAAKg9B,0BACpC,EAAK16B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKg9B,yBAC5Bt/B,UAAU,uCAAD,OAAyCD,EAAzC,oBAA+Du1B,MAG9D,sBAAV9uB,IACF,EAAKjH,MAAMg2B,YAAYvpB,EAAQ1J,KAAKi9B,8BACpC,EAAK36B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKi9B,6BAC5Bv/B,UAAU,2CAAD,OAA6CD,EAA7C,oBAAmEu1B,MAGlE,gBAAV9uB,IACF,EAAKjH,MAAMg2B,YAAYvpB,EAAQ1J,KAAKk9B,+BACpC,EAAK56B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKk9B,8BAC5Bx/B,UAAU,4CAAD,OAA8CD,EAA9C,oBAAoEu1B,MAGnE,kBAAV9uB,IACF,EAAKjH,MAAMg2B,YAAYvpB,EAAQ1J,KAAKm9B,iCACpC,EAAK76B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKm9B,gCAC5Bz/B,UAAU,8CAAD,OAAgDD,EAAhD,oBAAsEu1B,MAGrE,cAAV9uB,IACF,EAAKjH,MAAMg2B,YAAYvpB,EAAQ1J,KAAKo9B,6BACpC,EAAK96B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKo9B,4BAC5B1/B,UAAU,0CAAD,OAA4CD,EAA5C,oBAAkEu1B,MAGjE,cAAV9uB,IACF,EAAKjH,MAAMg2B,YAAYvpB,EAAQ1J,KAAKq9B,6BACpC,EAAK/6B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKq9B,4BAC5B3/B,UAAU,0CAAD,OAA4CD,EAA5C,oBAAkEu1B,MAGjE,YAAV9uB,IACF,EAAKjH,MAAMg2B,YAAYvpB,EAAQ1J,KAAKs9B,2BACpC,EAAKh7B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKs9B,0BAC5B5/B,UAAU,wCAAD,OAA0CD,EAA1C,oBAAgEu1B,MAI7E,EAAKnnB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAzpIX,EA6pIrB0X,iBAAmB,SAACzgB,GAClBgK,QAAQC,IAAI,4BAA6BjK,EAAKY,MAC9C,EAAKR,QAAQL,aAAa,2BAG1B,IAQImK,EARErL,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE3B6D,EAAQvF,EAAKY,KACbof,EAAahgB,EAAKggB,WAClBE,EAAOlgB,EAAKkgB,KAIlB,GAAc,cAAV3a,EAAuB,CACzB,IAAIs2B,EAAiB3b,EAAKhe,MACtB45B,EAAuB5b,EAAK1d,YAC5Bu5B,EAAqB7b,EAAK+L,UAC1B+P,EAAsBhc,EAE1B9V,EAAc,CACZC,MAAM,8EAAD,OAEarL,EAFb,kCAGUu1B,EAHV,mEAKmBwH,EALnB,iDAMyBC,EANzB,+CAOuBC,EAPvB,gDAQwBC,EARxB,u5DAaT,GAAc,WAAVz2B,EAAoB,CACtB,IAAI02B,EAAc/b,EAAKhe,MACnBg6B,EAAoBhc,EAAK1d,YACzB25B,EAAmBnc,EAEvB9V,EAAc,CACZC,MAAM,2EAAD,OAEarL,EAFb,kCAGUu1B,EAHV,gEAKgB4H,EALhB,8CAMsBC,EANtB,6CAOqBC,EAPrB,u5DAYT,GAAc,sBAAV52B,EAA+B,CACjC,IAAI62B,EAAyBlc,EAAKhe,MAC9Bm6B,EAA+Bnc,EAAK1d,YACpC85B,EAA8Btc,EAElC9V,EAAc,CACZC,MAAM,+EAAD,OAEarL,EAFb,kCAGUu1B,EAHV,2EAK2B+H,EAL3B,yDAMiCC,EANjC,wDAOgCC,EAPhC,u5DAYT,GAAc,gBAAV/2B,EAAyB,CAC3B,IAAIg3B,EAAqBrc,EAAKoO,QAC1BkO,EAAkBtc,EAAKqO,KACvBkO,EAAkBvc,EAAKtf,KACvB87B,EAAqBxc,EAAKsO,QAC1BmO,EAAmBzc,EAAK1a,MACxBo3B,EAAyB1c,EAAK1d,YAC9Bq6B,EAAsB3c,EAAKuO,SAC3BqO,EAAwB9c,EAE5B9V,EAAc,CACZC,MAAM,gFAAD,OAEarL,EAFb,kCAGUu1B,EAHV,uEAKuBkI,EALvB,4CAMoBC,EANpB,4CAOoBC,EAPpB,+CAQuBC,EARvB,6CASqBC,EATrB,mDAU2BC,EAV3B,+CAWuBC,EAXvB,iDAY0BC,EAZ1B,u5DAiBT,GAAc,kBAAVv3B,EAA2B,CAC7B,IAAIw3B,EAAqB7c,EAAKhe,MAC1B86B,EAAoB9c,EAAKtf,KACzBq8B,EAA2B/c,EAAK1d,YAChC06B,EAA0Bld,EAE9B9V,EAAc,CACZC,MAAM,kFAAD,OAEarL,EAFb,kCAGUu1B,EAHV,uEAKuB0I,EALvB,8CAMsBC,EANtB,qDAO6BC,EAP7B,oDAQ4BC,EAR5B,u5DAaT,GAAc,cAAV33B,EAAuB,CACzB,IAAI43B,EAAiBjd,EAAKhe,MACtBk7B,EAAgBld,EAAKtf,KACrBy8B,EAAuBnd,EAAK1d,YAC5B86B,EAAsBtd,EAE1B9V,EAAc,CACZC,MAAM,8EAAD,OAEarL,EAFb,kCAGUu1B,EAHV,mEAKmB8I,EALnB,0CAMkBC,EANlB,iDAOyBC,EAPzB,gDAQwBC,EARxB,u5DAaT,GAAc,cAAV/3B,EAAuB,CAEzB,IAAIg4B,EAAgBrd,EAAKtf,KACrB48B,EAAiBtd,EAAKhe,MACtBu7B,EAAuBvd,EAAK1d,YAC5Bk7B,EAAgBxd,EAAK0P,KACrB+N,EAAqBzd,EAAK2P,UAC1B+N,EAAsB5d,EAE1B9V,EAAc,CACZC,MAAM,8EAAD,OAEarL,EAFb,kCAGUu1B,EAHV,kEAKkBkJ,EALlB,2CAMmBC,EANnB,iDAOyBC,EAPzB,0CAQkBC,EARlB,+CASuBC,EATvB,gDAUwBC,EAVxB,u5DAeT,GAAc,YAAVr4B,EAAqB,CAEvB,IAAIw4B,EAAe7d,EAAKhe,MACpB87B,EAAc9d,EAAKtf,KACnBq9B,EAAqB/d,EAAK1d,YAC1Bq7B,EAAgB3d,EAAKkQ,OACrB0N,EAAc5d,EAAKmQ,KACnB8N,EAAoBne,EACpBke,EAAehe,EAAKvP,MAExBzG,EAAc,CACZC,MAAM,4EAAD,OAEarL,EAFb,kCAGUu1B,EAHV,iEAKiB0J,EALjB,wCAMgBC,EANhB,+CAOuBC,EAPvB,yCAQiBJ,EARjB,sCASeC,EATf,6CAUsBK,EAVtB,yCAWiBD,EAXjB,u5DAiBT9zB,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GA0BJ,IAAIC,EAAgB,mCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAKvB,EAAK/K,QAAQL,aAAaiL,GAEZ,cAAVzF,IACF,EAAKjH,MAAMg2B,YAAYvpB,EAAQ1J,KAAKu9B,gCACpC,EAAKj7B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKu9B,+BAC5B7/B,UAAU,6CAAD,OAA+CD,EAA/C,oBAAqEu1B,MAGpE,WAAV9uB,IACF,EAAKjH,MAAMg2B,YAAYvpB,EAAQ1J,KAAKw9B,6BACpC,EAAKl7B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKw9B,4BAC5B9/B,UAAU,0CAAD,OAA4CD,EAA5C,oBAAkEu1B,MAGjE,sBAAV9uB,IACF,EAAKjH,MAAMg2B,YAAYvpB,EAAQ1J,KAAKy9B,iCACpC,EAAKn7B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKy9B,gCAC5B//B,UAAU,8CAAD,OAAgDD,EAAhD,oBAAsEu1B,MAGrE,gBAAV9uB,IACF,EAAKjH,MAAMg2B,YAAYvpB,EAAQ1J,KAAK09B,kCACpC,EAAKp7B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAK09B,iCAC5BhgC,UAAU,+CAAD,OAAiDD,EAAjD,oBAAuEu1B,MAGtE,kBAAV9uB,IACF,EAAKjH,MAAMg2B,YAAYvpB,EAAQ1J,KAAK29B,oCACpC,EAAKr7B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAK29B,mCAC5BjgC,UAAU,iDAAD,OAAmDD,EAAnD,oBAAyEu1B,MAGxE,cAAV9uB,IACF,EAAKjH,MAAMg2B,YAAYvpB,EAAQ1J,KAAK49B,gCACpC,EAAKt7B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAK49B,+BAC5BlgC,UAAU,6CAAD,OAA+CD,EAA/C,oBAAqEu1B,MAGpE,cAAV9uB,IACF,EAAKjH,MAAMg2B,YAAYvpB,EAAQ1J,KAAK69B,gCACpC,EAAKv7B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAK69B,+BAC5BngC,UAAU,6CAAD,OAA+CD,EAA/C,oBAAqEu1B,MAGpE,YAAV9uB,IACF,EAAKjH,MAAMg2B,YAAYvpB,EAAQ1J,KAAK89B,8BACpC,EAAKx7B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAK89B,6BAC5BpgC,UAAU,2CAAD,OAA6CD,EAA7C,oBAAmEu1B,MAIhF,EAAKnnB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IAGpD,IAAMwV,EAAW,SAASggB,EAAQ,IAAI9uB,EAAM,eACtC2e,EAAY,mDAAmDmQ,EAAQ,IAAI9uB,EAAM,gBACjFgQ,EAAWyK,EACXqE,EAAY9O,EAAS+O,QAAQJ,EAAU,IAC7Cla,QAAQC,IAAI,KAAKoK,GACjBrK,QAAQC,IAAI,KAAKsL,GACjBvL,QAAQC,IAAI,KAAKoa,GACjB,IAAM7P,EAAS,CACbC,WAAY,mBACZC,QAASL,EACTM,OAAQ,YACRC,YAAa,EAAKpT,MAAMkR,WAAWmC,GAAGnP,EACtCoP,gBAAiB,EAAKtT,MAAMkR,WAAWmC,GAAGlP,EAC1CoP,MAAO,6CAEHC,EAAgB,IAAIC,KAAGT,GAC7B,EAAKpU,QAAQL,aAAa,+BAC1BiK,QAAQC,IAAI,+BACZ,EAAKtG,SAAS,CACZP,cAAe,CACbxC,KAAM,KACNS,KAAM,CACJ2B,OAAQ,SACRC,OAAO,GAAD,OAAKsC,EAAL,iBAGVpC,SAAS,EACTwP,QAAU,CACR3P,OAAQ,SACRC,OAAO,GAAD,OAAKsC,EAAL,eACN5E,OAAQ,gBAIZqU,EACCQ,WAAW6O,EAAW7P,GACtB7J,MAAK,SAAA8K,GACJzL,QAAQC,IAAIwL,GACZ,EAAKrV,QAAQL,aAAa0V,GAC1B,EAAK9R,SAAS,CACZP,cAAe,KACfD,SAAS,OAGZiI,OAAM,SAAAC,GACLrB,QAAQmB,MAAME,GACd,EAAK1H,SAAS,CACZP,cAAe,KACfD,SAAS,UAOdiI,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAlhJX,EAuhJrBqN,4BAA8B,SAAC5K,GAC7BA,EAAMC,iBACNzB,QAAQC,IAAI,+BACZ,EAAK7J,QAAQL,aAAa,+BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAC3B6D,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B2E,EAAQqB,EAAMvI,OAAOkH,MAAM3E,MAE7B0E,EAAc,CAChBC,MAAM,kEAAD,OAEarL,EAFb,gCAGUu1B,EAHV,8BAIQ9uB,EAJR,8BAKQ4E,EALR,44DASPC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,8BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAK+9B,wBACpC,EAAKz7B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAK+9B,uBAC5BrgC,UAAU,qCAAD,OAAuCD,EAAvC,oBAA6Du1B,GACtE/hB,kBAAmB,CACjB9Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAK+9B,uBAC1C,EAAKlyB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QA1lJX,EA6lJrBuN,uBAAyB,SAACtW,GACxB,EAAK2D,SAAS,CACZ2O,kBAAmB,CACjB9Q,OAAO,EACP+D,MAAOvF,MAjmJQ,EAqmJrBuW,wBAA0B,WACxB,EAAK5S,SAAS,CACZ2O,kBAAmB,CACjB9Q,MAAO,KACP+D,MAAO,SAzmJQ,EA8mJrBiR,cAAgB,WACa,SAAvB,EAAKhV,MAAM2Q,QACb,EAAKxO,SAAS,CAACwO,QAAS,WAExB,EAAKxO,SAAS,CACZwO,QAAS,UAnnJM,EA6nJrBsE,WAAa,SAACzW,GACZ,EAAK2D,SAAS,CAAC8S,WAAYzW,KA9nJR,EAgoJrBuL,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,IAAIlG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B1B,EAAM0H,EAAMvI,OAAOa,IAAI0B,MACvBA,EAAQgG,EAAMvI,OAAOuC,MAAMA,MACjB,SAAVA,IACFA,GAAQ,GAEI,UAAVA,IACFA,GAAQ,GAEV,EAAK7B,SAAS,CACZwB,OAAQ,CACNI,MAAOA,EACPzB,IAAKA,EACL0B,MAAOA,MA/oJQ,EAopJrBkR,SAAW,SAAC1W,GACV,EAAK2D,SAAS,CACZ0O,OAAQ,CACN7Q,OAAO,EACP+D,MAAOvF,MAxpJQ,EA4pJrB2W,UAAY,WACV,EAAKhT,SAAS,CACZ0O,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,SAhqJQ,EAqqJrB85B,cAAgB,WACdr1B,QAAQC,IAAI,0BACZ,EAAK7J,QAAQL,aAAa,0BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAU,EAAK/1B,MAAMmE,MAAMf,IAE7BwI,EAAc,CAChBC,MAAM,6DAAD,OAEarL,EAFb,gCAGUu1B,EAHV,84DAOPjqB,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,yBAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAK1M,MAAMg2B,YAAYvpB,EAAQ1J,KAAKi+B,mBACpC,EAAK37B,SAAS,CACZoF,WAAW,EACXvJ,cAAeuL,EAAQ1J,KAAKi+B,kBAC5BvgC,UAAU,gCAAD,OAAkCD,EAAlC,oBAAwDu1B,GACjE/hB,kBAAmB,CACjB9Q,MAAO,KACP+D,MAAO,QAGX,EAAKnF,QAAQZ,cAAgBuL,EAAQ1J,KAAKi+B,kBAC1C,EAAKpyB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,QAjuJ5B,EAAKw2B,WAAa,EAAKjhC,MAAMmE,MAFZ,E,gEAOnB,IAAIuG,EADJgB,QAAQC,IAAI,yCAERuD,eAAeC,QAAQ,aACzBzE,EAAYuB,KAAKmD,MAAMF,eAAeC,QAAQ,YAC9CnK,KAAK6T,cAAcnO,IAEK,UAAtB1F,KAAKlD,QAAQnB,MACS,WAAtBqE,KAAKlD,QAAQnB,MACS,UAAtBqE,KAAKlD,QAAQnB,MAEfqE,KAAKK,SAAS,CACZgB,WAAW,IAIfrB,KAAKyG,YAAYf,K,oFAMJhJ,GAAO,IAAD,OACnBgK,QAAQC,IAAI,6BACZ3G,KAAKlD,QAAQL,aAAa,6BAC1B,IAAMlB,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAClBoL,EAAc,CACdC,MAAM,8DAAD,OAEarL,EAFb,kBAKXsL,MAAM,iEAAkE,CACtEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG5B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GACJ,GAAIA,EAAQE,OACV,EAAKtH,SAAS,CAAClE,UAAWsL,EAAQE,OAAO,GAAGC,cACvC,CACL,IAAIkM,EAAmB7M,KAAKmD,MAAM3C,EAAQ1J,KAAK8V,eAC/CnN,QAAQC,IAAI,sCACZ,EAAK7J,QAAQL,aAAa,sCAC1B,EAAK4D,SAAS,CACZ+O,WAAY0E,QAKjBhM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,Q,sCAIhBrL,GAAO,IAAD,OACpBgK,QAAQC,IAAI,yBACZ,IAAMnL,EAAakB,EAAKlB,WAClBD,EAAQmB,EAAKnB,MACbK,EAASJ,EACTyY,EAAUjU,KAAK9B,MAAMzC,UACrByY,EAAe7V,MAASK,OAAO,cACjCkI,EAAc,CAChBC,MAAM,2DAAD,OAEarL,EAFb,qBAEoCI,EAFpC,4DAIiBsY,EAJjB,0CAKoBD,EALpB,qbASPnN,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEAA,EAAQE,QACV,EAAK7K,QAAQL,aAAagL,EAAQE,OAAO,GAAGC,SAE1CH,EAAQ1J,KAAKoW,gBAAgBtM,OAC/B,EAAK/K,QAAQL,aAAagL,EAAQ1J,KAAKoW,gBAAgBtM,UAG1DC,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,Q,kCAGLrL,GAAO,IAAD,OACjBgK,QAAQC,IAAI,8BACZ3G,KAAKlD,QAAQL,aAAa,8BAC1BuD,KAAKK,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAClBI,EAASJ,EAEXoL,EAAc,CAChBC,MAAM,oDAAD,OAEarL,EAFb,kmBAKPsL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,qCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX3J,MAAO2L,EAAQ1J,KAAK0I,YACpBhL,UAAU,0BAAD,OAA4BD,EAA5B,mBAAiDI,KAE5D,EAAKgO,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,S,+BAikJ9B,OACE,kBAAC,IAAM1I,SAAP,MAEwB,IAAvBiD,KAAK9B,MAAM2B,SACV,kBAAC,EAAD,CACExC,OAAQ2C,KAAK9B,MAAM4B,gBAIvB,kBAACtC,EAAA,EAAD,CAAWtC,UAAU,uBACnB,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,kCACb,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,2BAGtB,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,GAAIpP,UAAU,2BACnB8E,KAAKhF,MAAMmE,OACX,qCAIN,kBAACiV,EAAA,EAAI5W,UAAL,CAAe8Q,GAAG,oBAAoB+F,iBAAiB,KACrD,kBAAClX,EAAA,EAAD,CAAKjC,UAAU,mCACb,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,sCACI,SAAvB8E,KAAK9B,MAAM2Q,SACV,kBAACyF,EAAA,EAAD,CAAKlZ,QAAQ,QAAQF,UAAU,uBAC7B,kBAACoZ,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,UAA3D,UAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,UAA3D,UAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,eAA3D,gBAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,cAA3D,eAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,WAA3D,WAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,sBAA3D,uBAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,WAA3D,WAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,gBAA3D,gBAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,IAAIvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,kBAA3D,kBAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,KAAKvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,cAA5D,cAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,KAAKvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,cAA5D,cAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,KAAKvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,YAA5D,YAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,KAAKvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,cAA5D,cAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,KAAKvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,UAA5D,WAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,KAAKvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,SAA5D,WAIkB,WAAvBA,KAAK9B,MAAM2Q,SACV,kBAAC5O,EAAA,EAAD,KAC6B,eAA1BD,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,cAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,WAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,sBAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,WAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,gBAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,kBAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,cAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,cAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,YAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,cAA1BjI,KAAK9B,MAAMiV,YACV,qDAEyB,UAA1BnT,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,mBAGO,SAA1BjI,KAAK9B,MAAMiV,YACV,kBAAC,GAAD,CACEpO,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,qBAOzBjI,KAAKhF,MAAMmE,OACV,kBAACc,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,uCACoB,IAAvC8E,KAAK9B,MAAM8Q,kBAAkB9Q,OAC5B,kBAAC,GAAD,CACE+D,MAAOjC,KAAK9B,MAAM8Q,kBAAkB/M,MACpCuC,UAAWxE,KAAK8S,4BAChB/N,SAAU/E,KAAKiT,0BAGjB,kBAACmB,EAAA,EAAIM,QAAL,CAAaxZ,UAAU,cACrB,kBAACkZ,EAAA,EAAIO,KAAL,CAAUH,SAAS,KAAnB,eAEE,kBAAC/W,EAAA,EAAD,CAAWvC,UAAU,yBACnB,kBAACuC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,UACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmE,MAAMP,OAC7B,UAAtBoB,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,UAA5F,SAGJ,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmE,MAAM7B,MAC7B,UAAtB0C,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,SAA5F,QAEF,uBAAG9E,UAAU,iBAAb,YACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmE,MAAMN,SAC7B,UAAtBmB,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,YAA5F,SAGJ,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsBmD,IAAOC,KAAK0B,KAAKhF,MAAMmE,MAAMZ,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,eACxG,uBAAGxD,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmE,MAAMR,MAC7B,UAAtBqB,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAKgT,uBAAuBlV,KAAKkC,KAAM,SAA5F,SAGJ,kBAACvC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,aAEF,kBAACuC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmE,MAAM0B,QAAQjC,OAC5D,uBAAG1D,UAAU,sBAAsB8E,KAAKhF,MAAMmE,MAAM0B,QAAQU,MAC5D,kBAAC,IAAD,CACEvE,GAAI,CACFiB,SAAU,YACVC,MAAO,CAAC2C,QAASb,KAAKhF,MAAMmE,MAAM0B,QAAQzC,OAG9C,kBAAC,IAAD,CAAiBR,KAAMC,IAAmB3C,UAAU,eAGtD,kBAACuC,EAAA,EAAUC,KAAX,KACA,uBAAGxC,UAAU,iBAAb,wBACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmE,MAAM0B,QAAQyiB,qBAE5D,kBAAC7lB,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,iBAEF,kBAACuC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,UACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmE,MAAMhB,YAAYS,OAChE,uBAAG1D,UAAU,iBAAb,SACA,uBAAGA,UAAU,sBAAsBmD,IAAOC,KAAK0B,KAAKhF,MAAMmE,MAAMhB,YAAYI,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,eACpH,kBAAC,IAAD,CACE1B,GAAI,CACFiB,SAAU,gBACVC,MAAO,CAACC,YAAa6B,KAAKhF,MAAMmE,MAAMhB,YAAYC,OAGtD,kBAAC,IAAD,CAAiBR,KAAMC,IAAmB3C,UAAU,iBAK1D,kBAACkZ,EAAA,EAAIO,KAAL,CAAUH,SAAS,KAAnB,cAEE,kBAAC/W,EAAA,EAAD,CAAWvC,UAAU,yBACnB,kBAACuC,EAAA,EAAUC,KAAX,KACE,uBAAGxC,UAAU,iBAAb,OACA,uBAAGA,UAAU,sBAAsB8E,KAAKhF,MAAMmE,MAAMf,QAI1D,kBAACgW,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,0BACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACuB,UAAtBlT,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,eAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,eAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAClBjC,KAAK9B,MAAMpC,OACT,kBAAC,GAAD,CACE0I,UAAWxE,KAAK6mB,kBAChB9hB,SAAU/E,KAAKqT,UACfxR,OAAQ7B,KAAK9B,MAAM2D,OACnB/F,MAAOkE,KAAK9B,MAAMpC,QAGxB,kBAAC,EAAD,CACE+F,OAAQ7B,KAAK9B,MAAM2D,OACnB0I,OAAQvK,KAAKlD,QAAQtB,WACrBM,MAAOkE,KAAKhF,MAAMmE,MAAMioB,YACxBvkB,WAAW,EACXxB,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKgnB,oBAGnB,kBAAC5S,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,yBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACuB,UAAtBlT,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,cAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,cAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAK8wB,uBAChB/rB,SAAU/E,KAAKqT,aAGa,IAAjCrT,KAAK9B,MAAMuhB,mBACV,kBAAC,GAAD,CACE1a,SAAU/E,KAAKshB,oBACf9c,UAAWxE,KAAKuhB,gBAGpB,kBAAC,GAAD,CACE1f,OAAQ7B,KAAK9B,MAAM2D,OACnBinB,WAAY9oB,KAAKhF,MAAMmE,MAAM2pB,WAC7Bve,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKkxB,gBACfhU,gBAAiBld,KAAKqhB,mBACtBlE,iBAAkBnd,KAAKmd,oBAG3B,kBAAC/I,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,sBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACuB,UAAtBlT,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,WAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,WAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKoxB,oBAChBrsB,SAAU/E,KAAKqT,aAGa,IAAjCrT,KAAK9B,MAAMuhB,mBACV,kBAAC,GAAD,CACE1a,SAAU/E,KAAKshB,oBACf9c,UAAWxE,KAAKuhB,gBAGpB,kBAAC,GAAD,CACE1f,OAAQ7B,KAAK9B,MAAM2D,OACnBunB,QAASppB,KAAKhF,MAAMmE,MAAMiqB,QAC1B7e,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKsxB,aACfpU,gBAAiBld,KAAKqhB,mBACtBlE,iBAAkBnd,KAAKmd,oBAG3B,kBAAC/I,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,iCACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACuB,UAAtBlT,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,sBAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,sBAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKwxB,+BAChBzsB,SAAU/E,KAAKqT,aAGa,IAAjCrT,KAAK9B,MAAMuhB,mBACV,kBAAC,GAAD,CACE1a,SAAU/E,KAAKshB,oBACf9c,UAAWxE,KAAKuhB,gBAGpB,kBAAC,GAAD,CACE1f,OAAQ7B,KAAK9B,MAAM2D,OACnB0nB,kBAAmBvpB,KAAKhF,MAAMmE,MAAMoqB,kBACpChf,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAK0xB,wBACfxU,gBAAiBld,KAAKqhB,mBACtBlE,iBAAkBnd,KAAKmd,oBAG3B,kBAAC/I,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,sBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACuB,UAAtBlT,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,WAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,WAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAK4xB,oBAChB7sB,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnBgoB,OAAQ7pB,KAAKhF,MAAMmE,MAAM0qB,OACzBtf,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKiyB,gBAGnB,kBAAC7d,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,2BACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACuB,UAAtBlT,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,gBAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,gBAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKmyB,yBAChBptB,SAAU/E,KAAKqT,aAGa,IAAjCrT,KAAK9B,MAAMuhB,mBACV,kBAAC,GAAD,CACE1a,SAAU/E,KAAKshB,oBACf9c,UAAWxE,KAAKuhB,gBAGpB,kBAAC,GAAD,CACE1f,OAAQ7B,KAAK9B,MAAM2D,OACnBkpB,YAAa/qB,KAAKhF,MAAMmE,MAAM4rB,YAC9BxgB,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKqyB,kBACfnV,gBAAiBld,KAAKqhB,mBACtBlE,iBAAkBnd,KAAKmd,oBAG3B,kBAAC/I,EAAA,EAAIO,KAAL,CAAUH,SAAS,KACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,6BACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACuB,UAAtBlT,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,kBAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,kBAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKuyB,2BAChBxtB,SAAU/E,KAAKqT,aAGa,IAAjCrT,KAAK9B,MAAMuhB,mBACV,kBAAC,GAAD,CACE1a,SAAU/E,KAAKshB,oBACf9c,UAAWxE,KAAKuhB,gBAGpB,kBAAC,GAAD,CACE1f,OAAQ7B,KAAK9B,MAAM2D,OACnB4pB,cAAezrB,KAAKhF,MAAMmE,MAAMssB,cAChClhB,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKyyB,oBACfvV,gBAAiBld,KAAKqhB,mBACtBlE,iBAAkBnd,KAAKmd,oBAG3B,kBAAC/I,EAAA,EAAIO,KAAL,CAAUH,SAAS,MACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,yBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACuB,UAAtBlT,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,cAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,cAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAK2yB,uBAChB5tB,SAAU/E,KAAKqT,aAGa,IAAjCrT,KAAK9B,MAAMuhB,mBACV,kBAAC,GAAD,CACE1a,SAAU/E,KAAKshB,oBACf9c,UAAWxE,KAAKuhB,gBAGpB,kBAAC,GAAD,CACE1f,OAAQ7B,KAAK9B,MAAM2D,OACnBkqB,UAAW/rB,KAAKhF,MAAMmE,MAAM4sB,UAC5BxhB,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAK6yB,gBACf3V,gBAAiBld,KAAKqhB,mBACtBlE,iBAAkBnd,KAAKmd,oBAG3B,kBAAC/I,EAAA,EAAIO,KAAL,CAAUH,SAAS,MACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,yBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACuB,UAAtBlT,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,cAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,cAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAK+yB,uBAChBhuB,SAAU/E,KAAKqT,aAGa,IAAjCrT,KAAK9B,MAAMuhB,mBACV,kBAAC,GAAD,CACE1a,SAAU/E,KAAKshB,oBACf9c,UAAWxE,KAAKuhB,gBAGpB,kBAAC,GAAD,CACE1f,OAAQ7B,KAAK9B,MAAM2D,OACnBwqB,UAAWrsB,KAAKhF,MAAMmE,MAAMktB,UAC5B9hB,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKizB,gBACf/V,gBAAiBld,KAAKqhB,mBACtBlE,iBAAkBnd,KAAKmd,oBAG3B,kBAAC/I,EAAA,EAAIO,KAAL,CAAUH,SAAS,MACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,uBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UAEE,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,YAApE,OACA,kBAACzC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBiP,KAAK,KAAKpN,QAAS+C,KAAK+7B,eAA1D,oBAGyB,IAA5B/7B,KAAK9B,MAAM6Q,OAAO7Q,OACW,YAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKmzB,qBAChBpuB,SAAU/E,KAAKqT,aAGa,IAAjCrT,KAAK9B,MAAMuhB,mBACV,kBAAC,GAAD,CACE1a,SAAU/E,KAAKshB,oBACf9c,UAAWxE,KAAKuhB,gBAGpB,kBAAC,GAAD,CACE1f,OAAQ7B,KAAK9B,MAAM2D,OACnBgrB,QAAS7sB,KAAKhF,MAAMmE,MAAM0tB,QAC1BtiB,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKqzB,cACfnW,gBAAiBld,KAAKqhB,mBACtBlE,iBAAkBnd,KAAKmd,oBAG3B,kBAAC/I,EAAA,EAAIO,KAAL,CAAUH,SAAS,MACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,yBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACuB,UAAtBlT,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,cAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,cAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAK2zB,uBAChB5uB,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnBwrB,UAAWrtB,KAAKhF,MAAMmE,MAAMkuB,UAC5B9iB,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKm4B,mBAGnB,kBAAC/jB,EAAA,EAAIO,KAAL,CAAUH,SAAS,MACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,qBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACuB,UAAtBlT,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,UAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,UAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKyQ,mBAChB1L,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnB4K,OAAQzM,KAAKhF,MAAMmE,MAAMsN,OACzBlC,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAK+R,eAGnB,kBAACqC,EAAA,EAAIO,KAAL,CAAUH,SAAS,MACjB,kBAACrX,EAAA,EAAD,CAAKjC,UAAU,sBACb,uBAAGA,UAAU,oBAAb,oBACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACuB,UAAtBlT,KAAKlD,QAAQnB,MACZ,kBAAC4B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKoT,SAAStV,KAAKkC,KAAM,SAApE,SAGyB,IAA5BA,KAAK9B,MAAM6Q,OAAO7Q,OACW,SAA5B8B,KAAK9B,MAAM6Q,OAAO9M,OAChB,kBAAC,GAAD,CACEuC,UAAWxE,KAAKoS,kBAChBrN,SAAU/E,KAAKqT,YAGrB,kBAAC,GAAD,CACExR,OAAQ7B,KAAK9B,MAAM2D,OACnBiL,MAAO9M,KAAKhF,MAAMmE,MAAM2N,MACxBvC,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBM,SAAU3B,KAAKkS,wB,GA73KXhS,aAApB2wB,GAkDGrmB,YAAcC,EA61KRomB,UCh8KAqL,GAjCS,SAAClhC,GAEzB,OACA,yBAAKE,UAAU,oBACb,kBAACoJ,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,WAEpB,kBAACF,EAAA,EAAKnH,IAAN,KACE,kBAACmH,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcH,GAAG,UACjB,wCACA,wCACA,yCACA,wCACA,6CAIF,kBAACJ,EAAA,EAAKG,MAAN,CAAYC,GAAIzE,IAAK0E,UAAU,SAC7B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAcvH,KAAK,OAAOwH,YAAY,gCAI1C,kBAACR,EAAA,EAAKnH,IAAN,KACE,kBAACI,EAAA,EAAD,CAAQnC,QAAQ,kBAAkBkC,KAAK,SAASpC,UAAU,iBAA1D,UACA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAASjC,EAAM+J,UAA7E,cCKAo3B,I,mNACJj+B,MAAQ,CACNzC,UAAW,KACXE,KAAM,KACNkE,SAAS,EACTC,cAAe,OACfC,SAAS,EACTjD,QAAS,KACTpB,aAAc,KACdI,MAAO,KACPiG,SAAU,KACVuB,aAAc,KACdjC,WAAW,EACXsd,OAAQ,KACRyd,aAAc,KACd32B,WAAW,EACXC,UAAW,KACXkJ,eAAe,EACfC,QAAS,OACThN,OAAQ,CACNI,MAAO,KACPzB,IAAK,KACL0B,MAAO,MAET4M,aAAc,KACdC,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,MAEThB,aAAa,EACblF,aAAc,KACdC,gBAAiB,KACjBC,oBAAqB,KACrBC,cAAe,KACfmgC,eAAe,EACfC,SAAU,KACV3c,eAAgB,KAChBvG,WAAY,KACZC,SAAU,KACVqO,eAAe,EACfpO,OAAQ,Q,EA2QZ8iB,aAAe,SAACl0B,GACdA,EAAMC,iBACNzB,QAAQC,IAAI,0BACZ,EAAK7J,QAAQL,aAAa,0BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAWImB,EAXErL,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAE1ByG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B2E,EAAQqB,EAAMvI,OAAOkH,MAAM3E,MAC7BuH,GAAQ,EACE,SAAVxH,IACAwH,GAAQ,IAKE,IAAVA,IACF7C,EAAc,CACZC,MAAM,8DAAD,OAEWrL,EAFX,8BAGMyG,EAHN,8BAIM4E,EAJN,g5DASK,IAAV4C,IACF7C,EAAc,CACZC,MAAM,6DAAD,OAEarL,EAFb,gCAGQyG,EAHR,gCAIQ4E,EAJR,m5DASTC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAQJ,IAAIC,EAAgB,+BAGN,IAAV+B,IACEhC,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,SAIX,IAAV4B,IACEhC,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,QAKzB,EAAK/K,QAAQL,aAAaiL,IAEZ,IAAV+B,GACF,EAAKpJ,SAAS,CACZoF,WAAW,EACX22B,aAAc30B,EAAQ1J,KAAKw+B,sBAC3B9gC,UAAU,oCAAD,OAAsCD,MAGrC,IAAViO,GACF,EAAKpJ,SAAS,CACZoF,WAAW,EACX22B,aAAc30B,EAAQ1J,KAAKy+B,iBAC3B/gC,UAAU,+BAAD,OAAiCD,KAI9C,EAAKoO,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAKhCg3B,sBAAwB,WACtB,EAAKp8B,SAAS,CACZg8B,eAAe,K,EAGnBK,qBAAuB,WACrB,EAAKr8B,SAAS,CACZg8B,eAAe,EACfpgC,oBAAqB,Q,EAGzB0gC,yBAA2B,SAACz0B,GAC1BA,EAAMC,iBACNzB,QAAQC,IAAI,4BACZ,EAAK7J,QAAQL,aAAa,4BAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1B+qB,EAAgB,EAAKroB,MAAMjC,oBAAoBmC,IAE/CQ,EAAQsJ,EAAMvI,OAAOf,MAAMsD,MAC3B5E,EAAO4K,EAAMvI,OAAOrC,KAAK4E,MACzBrD,EAAUqJ,EAAMvI,OAAOd,QAAQqD,MAErC,GAC4B,IAAxBtD,EAAMgY,OAAOC,QACU,IAAvBvZ,EAAKsZ,OAAOC,OAFhB,CAQA,IAAM+lB,EAAWv+B,MAASK,OAAO,cAAgBL,IAAOC,KAAK,EAAKJ,MAAMjC,oBAAoBsC,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cAC9Hm+B,EAAUx+B,MAASK,OAAO,cAAgBL,IAAOC,KAAK,EAAKJ,MAAMjC,oBAAoBsC,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cAEnI,IAAiB,IAAbk+B,EAIF,OAHAl2B,QAAQC,IAAI,+FACZ,EAAK7J,QAAQL,aAAa,oGAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAG5B,IAAgB,IAAZo3B,EAIF,OAHAn2B,QAAQC,IAAI,wFACZ,EAAK7J,QAAQL,aAAa,6FAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAI5B,IAAImB,EAAc,CAChBC,MAAM,uDAAD,OAEarL,EAFb,sCAGgB+qB,EAHhB,sDAKU3nB,EALV,+BAMStB,EANT,kCAOYuB,EAPZ,i5DAWPiI,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GACJf,QAAQC,IAAI,gBAAgBc,EAAQ1J,KAAK++B,aACzC,IAAIp1B,EAAgB,8BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXxE,aAAa,EACbo7B,eAAe,EACfngC,cAAeuL,EAAQ1J,KAAK++B,YAC5BR,SAAU70B,EAAQ1J,KAAK++B,YACvBxjB,OAAQ,SACR7d,UAAU,gCAAD,OAAkCD,EAAlC,oBAAwDiM,EAAQ1J,KAAK++B,YAAY1+B,OAE5F,EAAKwL,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IACpD,IAAMmK,EAAYuB,KAAKmD,MAAMF,eAAeC,QAAQ,YACpD,EAAK4yB,aAAar3B,MAEnBoC,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,YA7E5B,EAAK3I,QAAQL,aAAa,0B,EAkF9ByW,cAAgB,WACa,SAAvB,EAAKhV,MAAM2Q,QACb,EAAKxO,SAAS,CAACwO,QAAS,WAExB,EAAKxO,SAAS,CACZwO,QAAS,U,EAUfsE,WAAa,SAACzW,GACZ,EAAK2D,SAAS,CACZ8S,WAAYzW,EACZ4c,OAAQ5c,K,EAGZuL,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,IAAIlG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B1B,EAAM0H,EAAMvI,OAAOa,IAAI0B,MACvBA,EAAQgG,EAAMvI,OAAOuC,MAAMA,MACjB,SAAVA,IACFA,GAAQ,GAEI,UAAVA,IACFA,GAAQ,GAEV,EAAK7B,SAAS,CACZwB,OAAQ,CACNI,MAAOA,EACPzB,IAAKA,EACL0B,MAAOA,M,EAMbgmB,kBAAoB,SAACxrB,GACnB,EAAK2D,SAAS,CACZpE,oBAAqBS,K,EAIzBuE,YAAc,SAACvE,GACb,EAAK2D,SAAS,CACZY,aAAa,EACb/E,cAAeQ,EACfmD,SAAS,EACTyZ,OAAQ,WAEV,EAAKte,MAAMgiC,YAAYtgC,I,EAEzB0W,SAAW,SAAC1W,GACV,EAAK2D,SAAS,CACZ0O,OAAQ,CACN7Q,OAAO,EACP+D,MAAOvF,M,EAIb2W,UAAY,WACV,EAAKhT,SAAS,CACZ0O,OAAQ,CACN7Q,MAAO,KACP+D,MAAO,S,EAIb+uB,YAAc,SAACt0B,GACbgK,QAAQC,IAAI,iCACZ,EAAKtG,SAAS,CACZnE,cAAeQ,IAEjB,EAAK1B,MAAMgiC,YAAYtgC,I,EAGzBugC,YAAc,SAACvgC,GACbgK,QAAQC,IAAI,yBACZ,EAAK7J,QAAQL,aAAa,yBAE1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1Bu1B,EAAUr0B,EAAK0B,IAEjBwI,EAAc,CAChBC,MAAM,2DAAD,OAEarL,EAFb,gCAGUu1B,EAHV,44DAOPjqB,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,8BAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXhK,UAAU,8BAAD,OAAgCD,EAAhC,oBAAsDu1B,KAEjE,EAAKnnB,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IACpD,EAAKwhC,aAAa,CAACvhC,WAAYA,EAAWD,MAAOA,OAElDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAIhCwK,iBAAmB,SAACvT,GAClBgK,QAAQC,IAAI,qCACZ,IAAIgZ,EAAiBjjB,EAAKgG,KAAI,SAAAH,GAAC,MAAK,CAChC3D,MAAO2D,EAAE3D,MACTL,KAAMF,IAAOC,KAAKiE,EAAEhE,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cAC5D1D,MAAO,CACLoD,IAAKmE,EAAEnE,IACPQ,MAAO2D,EAAE3D,MACTtB,KAAMiF,EAAEjF,KACRiB,KAAMF,IAAOC,KAAKiE,EAAEhE,KAAKC,OAAO,EAAE,KAAKC,IAAI,EAAE,QAAQC,OAAO,cAC5DC,KAAM4D,EAAE5D,KACRE,QAAS0D,EAAE1D,aAGf,EAAKwB,SAAS,CACZsf,eAAgBA,K,EAItBpM,kBAAoB,SAAC7W,GACnBgK,QAAQC,IAAI,gCACZ,IAAMxH,EAAQ,EAAKjB,MAAMygB,OAAO9c,QAAO,SAAAU,GAAC,OAAIA,EAAEnE,MAAQ1B,EAAKwL,MAAMuL,cAAczY,MAAMoD,OAAK,GAC1F,EAAKiC,SAAS,CACZR,SAAS,EACTC,cAAe,CAACxC,KAAM,gBAAiBS,KAAMoB,M,EAGjD/B,cAAgB,WACd,EAAKiD,SAAS,CACZR,SAAS,K,EAIbuoB,mBAAqB,WACnB,EAAK/nB,SAAS,CACZqnB,eAAe,K,EAGnBW,oBAAsB,WACpB,EAAKhoB,SAAS,CACZqnB,eAAe,IAEjB,EAAKO,mBAAmB,CAACzsB,WAAY,EAAKsB,QAAQtB,WAAWD,MAAO,EAAKuB,QAAQvB,S,EAEnF+sB,wBAA0B,SAACpgB,GACzBA,EAAMC,iBACNzB,QAAQC,IAAI,gCACZ,EAAK7J,QAAQL,aAAa,gCAC1B,EAAK4D,SAAS,CAACoF,WAAW,IAE1B,IAgBImB,EAhBErL,EAAQ,EAAKuB,QAAQvB,MACrBC,EAAa,EAAKsB,QAAQtB,WAC1BI,EAASJ,EACTyG,EAAQiG,EAAMvI,OAAOsC,MAAMC,MAC3B2E,EAAQqB,EAAMvI,OAAOkH,MAAM3E,MAC7BuH,GAAQ,EACE,SAAVxH,GACU,eAAVA,GACU,aAAVA,GACU,cAAVA,GACU,cAAVA,IAEAwH,GAAQ,IAKE,IAAVA,IACF7C,EAAc,CACZC,MAAM,wEAAD,OAEarL,EAFb,gCAGQyG,EAHR,gCAIQ4E,EAJR,gOASK,IAAV4C,IACF7C,EAAc,CACZC,MAAM,+DAAD,OAEWrL,EAFX,8BAGMyG,EAHN,8BAIM4E,EAJN,2NASTC,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAQJ,IAAIC,EAAgB,qCAGN,IAAV+B,IACEhC,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,SAIX,IAAV4B,IACEhC,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAGxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,QAKzB,EAAK/K,QAAQL,aAAaiL,IAEZ,IAAV+B,GACF,EAAKpJ,SAAS,CACZoF,WAAW,EACXnC,aAAcmE,EAAQ1J,KAAK4pB,4BAC3BlsB,UAAU,0CAAD,OAA4CD,EAA5C,mBAAiEI,MAGhE,IAAV6N,GACF,EAAKpJ,SAAS,CACZoF,WAAW,EACXnC,aAAcmE,EAAQ1J,KAAK6pB,uBAC3BnsB,UAAU,qCAAD,OAAuCD,EAAvC,mBAA4DI,KAIzE,EAAKgO,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,Q,EAIhCgU,YAAc,WACZ,EAAKpZ,SAAS,CACZwB,OAAQ,CACNI,MAAO,KACPzB,IAAK,KACL0B,MAAO,S,kEAzxBX,GADAwE,QAAQC,IAAI,sCACRuD,eAAeC,QAAQ,WAAY,CACrC,IAAMzE,EAAYuB,KAAKmD,MAAMF,eAAeC,QAAQ,YAC7B,UAAnBzE,EAAU/J,MACZqE,KAAKK,SAAS,CAACgB,WAAU,IAGvBrB,KAAKhF,MAAM8D,SAASZ,OAClB8B,KAAKhF,MAAM8D,SAASZ,MAAMiB,OAC5Ba,KAAKK,SAAS,CACZ+Y,YAAY,EACZC,SAAUrZ,KAAKhF,MAAM8D,SAASZ,MAAMiB,QAI1Ca,KAAK+8B,aAAar3B,GAClB1F,KAAKioB,mBAAmBviB,GAEpB1F,KAAKhF,MAAMkB,gBACbwK,QAAQC,IAAI,mDACZ3G,KAAKK,SAAS,CACZY,aAAa,EACb/E,cAAe8D,KAAKhF,MAAMkB,oB,iIAWpBQ,GAAO,IAAD,OAClBgK,QAAQC,IAAI,+BACZ3G,KAAKlD,QAAQL,aAAa,+BAC1BuD,KAAKK,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAEpBoL,EAAc,CAChBC,MAAM,qDAAD,OAEarL,EAFb,44DAMPsL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,sCAYpB,GATID,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,QAGO,IAA1B,EAAK3J,MAAMkb,WAAqB,CAClC,IAAI8jB,EAAcz1B,EAAQ1J,KAAKg/B,aAAal7B,QAAO,SAAAU,GAAC,OAAIA,EAAEnE,MAAQ,EAAKF,MAAMmb,YAAU,GACvF,EAAKhZ,SAAS,CACZY,aAAa,EACb/E,cAAeghC,EACf5jB,OAAQ,WAEV,EAAKxc,QAAQL,aAAa,+BAE5B,EAAKK,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXkZ,OAAQlX,EAAQ1J,KAAKg/B,aACrBthC,UAAU,2BAAD,OAA6BD,KAExC,EAAKoO,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,IACpD,EAAK0U,iBAAiBxI,EAAQ1J,KAAKg/B,iBAEpCj1B,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,S,yCAIZ/I,GAAO,IAAD,OACxBgK,QAAQC,IAAI,qCACZ3G,KAAKlD,QAAQL,aAAa,qCAC1BuD,KAAKK,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAEpBoL,EAAc,CAChBC,MAAM,2DAAD,OAEarL,EAFb,6tBAMPsL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,4CAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACXnC,aAAcmE,EAAQ1J,KAAKkqB,mBAC3BxsB,UAAU,iCAAD,OAAmCD,KAE9C,EAAKoO,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,S,qCAIhB/I,GAAO,IAAD,OACpBgK,QAAQC,IAAI,iCACZ3G,KAAKlD,QAAQL,aAAa,iCAC1BuD,KAAKK,SAAS,CAACoF,WAAW,IAE1B,IAAMlK,EAAQmB,EAAKnB,MACbC,EAAakB,EAAKlB,WAEpBoL,EAAc,CAChBC,MAAM,uDAAD,OAEarL,EAFb,u4BAMPsL,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,IAAIC,EAAgB,wCAGhBD,EAAQE,SAEVD,EADQD,EAAQE,OAAO,GAAGC,SAIxBH,EAAQ1J,KAAK8J,QAEfH,EADQD,EAAQ1J,KAAK8J,OAGvB,EAAK/K,QAAQL,aAAaiL,GAC1B,EAAKrH,SAAS,CACZoF,WAAW,EACX1D,SAAU0F,EAAQ1J,KAAKyI,eACvB/K,UAAU,6BAAD,OAA+BD,KAE1C,EAAKoO,gBAAgB,CAACpO,WAAYA,EAAWD,MAAOA,OAErDuM,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKjL,QAAQL,aAAasL,GAC1B,EAAK1H,SAAS,CAACoF,WAAW,S,sCAIhB/I,GAAO,IAAD,OACpBgK,QAAQC,IAAI,yBACZ,IAAMnL,EAAakB,EAAKlB,WAClBD,EAAQmB,EAAKnB,MACbK,EAASJ,EACTyY,EAAUjU,KAAK9B,MAAMzC,UACrByY,EAAe7V,MAASK,OAAO,cACjCkI,EAAc,CAChBC,MAAM,2DAAD,OAEarL,EAFb,qBAEoCI,EAFpC,4DAIiBsY,EAJjB,0CAKoBD,EALpB,qbASPnN,MAAM,iEAAkE,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG9B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEAA,EAAQE,QACV,EAAK7K,QAAQL,aAAagL,EAAQE,OAAO,GAAGC,SAE1CH,EAAQ1J,KAAK8J,OACf,EAAK/K,QAAQL,aAAagL,EAAQ1J,KAAK8J,UAG1CC,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,Q,+BAgiBhB,OACE,kBAAC,IAAMhL,SAAP,MAEwB,IAAvBiD,KAAK9B,MAAM2B,SACV,kBAAC,EAAD,CACExC,OAAQ2C,KAAK9B,MAAM4B,cACnBnC,sBAAuBqC,KAAKiB,YAC5B7D,cAAe4C,KAAK5C,gBAIxB,kBAACI,EAAA,EAAD,CAAWtC,UAAU,sBACnB,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,iCACb,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,yBACpB,wCAAwC,IAA3B8E,KAAK9B,MAAM+C,aACVjB,KAAK9B,MAAMhC,eACW,WAAtB8D,KAAK9B,MAAMob,QACLtZ,KAAK9B,MAAMhC,cAAc0C,QAG/C,kBAACqB,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,yBACnB8E,KAAK9B,MAAMuH,UACV,kBAACnG,EAAA,EAAD,CAAOC,IAAKC,IAAYtE,UAAU,aAAauE,OAAK,IAEpD,kCAKN,kBAAC2U,EAAA,EAAI5W,UAAL,CAAe8Q,GAAG,oBAAoBqL,UAAW3Z,KAAK9B,MAAMob,QAC1D,kBAACnc,EAAA,EAAD,CAAKjC,UAAU,kCAEb,kBAAC+E,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,qCACI,SAAvB8E,KAAK9B,MAAM2Q,SACV,kBAACyF,EAAA,EAAD,CAAKlZ,QAAQ,QAAQF,UAAU,wBAC7B,kBAACoZ,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,OAAOvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,SAA9D,SAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,SAASvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,WAAhE,WAEF,kBAACsU,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,SAASvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,WAAhE,YAEqB,UAAtBA,KAAKlD,QAAQnB,MACZ,kBAAC2Y,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,MAAMvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,QAA7D,QAGmB,WAAtBA,KAAKlD,QAAQnB,MACZ,kBAAC2Y,EAAA,EAAI5W,KAAL,KACE,kBAAC4W,EAAA,EAAIC,KAAL,CAAUC,SAAS,MAAMvX,QAAS+C,KAAKmT,WAAWrV,KAAKkC,KAAM,QAA7D,SAMgB,WAAvBA,KAAK9B,MAAM2Q,SACV,kBAAC5O,EAAA,EAAD,KACE,kBAAC,GAAD,CACE8E,SAAU/E,KAAKkT,cACf1O,UAAWxE,KAAKiI,qBAMvBjI,KAAK9B,MAAMygB,QACV,kBAAC1e,EAAA,EAAD,CAAKqK,GAAI,EAAGpP,UAAU,qCACpB,kBAACkZ,EAAA,EAAIM,QAAL,KACE,kBAACN,EAAA,EAAIO,KAAL,CAAUH,SAAS,QAEnB,kBAACc,EAAA,EAAD,CAAMjB,iBAAiB,IAAI/F,GAAG,4BAC5B,kBAAC8F,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,QACxB,kBAACzB,EAAA,EAAD,CAAKjC,UAAU,sBACb,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,eAAhD,UACA,kBAAC3V,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKyZ,aAAhD,UAEA,kBAAC,GAAD,CACE5X,OAAQ7B,KAAK9B,MAAM2D,OACnB8c,OAAQ3e,KAAK9B,MAAMygB,OACnBpU,OAAQvK,KAAKlD,QAAQtB,WACrB6F,UAAWrB,KAAK9B,MAAMmD,UACtBJ,YAAajB,KAAKiB,YAClBU,SAAU3B,KAAKi9B,eAGnB,kBAAC7oB,EAAA,EAAD,CAAKI,SAAS,IAAI5V,MAAM,WAAW1D,UAAU,eAC3C,wCACA,kBAAC,IAAD,CACEsa,QAAS,CAACC,KACV0nB,aAAa,eACbznB,OAAQ1V,KAAK9B,MAAMyhB,eACnBhK,WAAY3V,KAAKuT,uBAMvB,kBAACa,EAAA,EAAIO,KAAL,CAAUH,SAAS,UACnB,kBAACvU,EAAA,EAAD,CAAK/E,UAAU,iBACb,4CACA,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,iBACb,kBAAC,GAAD,CACEsJ,UAAWxE,KAAKo8B,gBAGpB,kBAACj/B,EAAA,EAAD,KACG6C,KAAK9B,MAAMk+B,cACV,kBAAC7+B,EAAA,EAAD,CAAQnC,QAAQ,kBAAkB6B,QAAS+C,KAAKkT,cAAehY,UAAU,gBAAzE,WAGJ,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,yBACZ8E,KAAK9B,MAAMk+B,cACV,kBAAC,GAAD,CACEv6B,OAAQ7B,KAAK9B,MAAM2D,OACnB8c,OAAQ3e,KAAK9B,MAAMk+B,aACnB7xB,OAAQvK,KAAKlD,QAAQtB,WACrByF,YAAajB,KAAKiB,iBAM1B,kBAACmT,EAAA,EAAIO,KAAL,CAAUH,SAAS,WACS,IAA3BxU,KAAK9B,MAAM+C,aACVjB,KAAK9B,MAAMhC,eACT,kBAAC,GAAD,CACEiD,MAAOa,KAAK9B,MAAMhC,cAClB80B,YAAahxB,KAAKgxB,eAIxB,kBAAC5c,EAAA,EAAIO,KAAL,CAAUH,SAAS,QACW,IAA7BxU,KAAK9B,MAAMm+B,eACV,kBAAC9+B,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,gBAAgB+B,QAAS+C,KAAKy8B,uBAA5E,eAE4B,IAA7Bz8B,KAAK9B,MAAMm+B,eACVr8B,KAAK9B,MAAMoF,eACVtD,KAAK9B,MAAMjC,qBACZ,kBAACgE,EAAA,EAAD,CAAK/E,UAAU,qBACf,kBAACiC,EAAA,EAAD,CAAKjC,UAAU,qBACf,qDAGA,kBAACqC,EAAA,EAAD,CAAQnC,QAAQ,oBAAoBF,UAAU,0BAA0B+B,QAAS+C,KAAKooB,oBAAtF,WAEA,kBAACjrB,EAAA,EAAD,CAAKjC,UAAU,sBACe,IAA7B8E,KAAK9B,MAAMwpB,eACV,kBAAC,GAAD,CACE3iB,SAAU/E,KAAKqoB,oBACf7jB,UAAWxE,KAAKsoB,2BAIpB,kBAACnrB,EAAA,EAAD,CAAKjC,UAAU,qBACf,kBAAC,EAAD,CACE2G,OAAQ7B,KAAK9B,MAAM2D,OACnByB,aAActD,KAAK9B,MAAMoF,aACzBiH,OAAQvK,KAAKlD,QAAQtB,WACrB4F,SAAUpB,KAAKkoB,kBACfrlB,WAAW,OAMe,IAA7B7C,KAAK9B,MAAMm+B,eACVr8B,KAAK9B,MAAMjC,qBACX,kBAACkB,EAAA,EAAD,KACE,kBAAC,GAAD,CACEqH,UAAWxE,KAAK28B,yBAChB53B,SAAU/E,KAAK08B,qBACfv+B,YAAa6B,KAAK9B,MAAMjC,uBAI7B+D,KAAK9B,MAAMo+B,UACV,kBAACn/B,EAAA,EAAD,KACE,gDAAsB6C,KAAK9B,MAAMo+B,SAASl+B,iB,GAlgCtC8B,cAAlBi8B,GA0CG3xB,YAAcC,EA0+BR0xB,UCliCTiB,G,kDAmBJ,WAAYpiC,GAAQ,IAAD,8BACjB,cAAMA,IAnBRkD,MAAQ,CACN3C,MAAO,KACPC,WAAY,KACZG,KAAM,KACNmB,QAAS,EAAKA,QACdugC,mBAAoBp2B,KAAKmD,MAAMF,eAAeC,QAAQ,YACtDmzB,sBAAsB,EACtBC,mBAAoB,aACpBC,qBAAsB,MACtBrhC,UAAW,KACXJ,aAAc,KACdC,gBAAiB,KACjBC,oBAAqB,KACrBC,cAAe,MAKE,EAQnBI,MAAQ,SAACf,EAAOC,EAAYG,EAAMY,GAChCmK,QAAQC,IAAI,uBACZ,EAAKtG,SAAS,CACZ9E,MAAOA,EACPC,WAAYA,EACZG,KAAMA,EACN0hC,mBAAoB,CAClB9hC,MAAOA,EACPC,WAAYA,EACZG,KAAMA,EACNY,gBAAiBA,KAGrB,EAAK8gC,mBAAqB,CACxB9hC,MAAOA,EACPC,WAAYA,EACZG,KAAMA,EACNY,gBAAiBA,GAEnB,EAAKO,QAAQvB,MAAQA,EACrB,EAAKuB,QAAQtB,WAAaA,EAC1B,EAAKsB,QAAQnB,KAAOA,EACpB,EAAKgB,cA9BY,EAiCnBH,OAAS,WACL,EAAKihC,WAlCU,EAgHnBzpB,uBAAyB,SAACtX,GAExB,EAAKgX,OAAOgqB,KAAK,YAAa,CAACC,IAAKjhC,KAlHnB,EAoHnB6c,uBAAyB,SAAC7c,GACxB,IAAIkhC,EAAiBlhC,EAAKd,OAE1B,EAAK8X,OAAOgqB,KAAK,oBAAqB,CACpCG,KAAK,OAAOD,EACZ7/B,KAAMrB,EAAKqB,QAzHI,EAoMnBpB,WAAa,WACX+J,QAAQC,IAAI,qCACZ,EAAK+M,OAAOgqB,KAAK,yBAA0B,CACzC7hC,KAAM,EAAKiB,QAAQtB,WACnBqiC,KAAK,OAAO,EAAK/gC,QAAQtB,aAGD,UAAtB,EAAKsB,QAAQnB,MACf,EAAK+X,OAAOgqB,KAAK,oBA5MF,EAgNnBI,cAAgB,SAAC51B,GACfA,EAAMC,iBACNzB,QAAQC,IAAI,mCACV,IAAMo3B,EAAS71B,EAAMvI,OAAOq+B,eAAe97B,MAAM+O,MAAM,KACjD2H,EAAmBmlB,EAAO,GAC1BniC,EAASmiC,EAAO,GAChBpnB,EAAWzO,EAAMvI,OAAOs+B,iBAAiB/7B,MAGzC0E,EAAc,CAClBC,MAAM,iEAAD,OAESjL,EAFT,yCAGegd,EAHf,gEAKajC,EALb,oFAUP7P,MAAM,iEAAkE,CACtEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,sBAGjBE,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GACJf,QAAQC,IAAI,gBAAgBc,GACxBA,EAAQE,OACV,EAAKtH,SAAS,CAACk9B,mBAAoB,QAASC,qBAAsB/1B,EAAQE,OAAO,GAAGC,QAAQ,+CAE5F,EAAKvH,SAAS,CAACk9B,mBAAoB,gBAItCz1B,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,GACZ,EAAK1H,SAAS,CAACk9B,mBAAoB,QAASC,qBAAsBz1B,QA5PvD,EA+PnBm2B,oBAAsB,WACpB,EAAK79B,SAAS,CAACk9B,mBAAoB,eAhQlB,EAmQnB9gC,aAAe,SAACC,GAED,qBAATA,IACF,EAAK2D,SAAS,CAAClE,UAAW,yCAE1B,EAAKshC,WAEP,EAAKp9B,SAAS,CAAClE,UAAWO,KA1QT,EA6QnBwI,WAAa,SAACxI,GACZgK,QAAQC,IAAI,0CACZ,EAAKtG,SAAS,CACZtE,aAAcW,KAhRC,EAmRnBiM,cAAgB,SAACjM,GACfgK,QAAQC,IAAI,6CACZ,EAAKtG,SAAS,CACZrE,gBAAiBU,KAtRF,EAyRnBwrB,kBAAoB,SAACxrB,GACnBgK,QAAQC,IAAI,iDACZ,EAAKtG,SAAS,CACZpE,oBAAqBS,KA5RN,EA+RnBsgC,YAAc,SAACtgC,GACbgK,QAAQC,IAAI,2CACZ,EAAKtG,SAAS,CACZnE,cAAeQ,KAhSjB,EAAK2gC,mBAAqBp2B,KAAKmD,MAAMF,eAAeC,QAAQ,YAC5D,EAAKuJ,OAASC,IAAG,yBAHA,E,gEAqCE,IAAD,OAIlB,GAHAjN,QAAQC,IAAI,KAAK3G,KAAK0T,QAEtBhN,QAAQC,IAAI,+BACRuD,eAAeC,QAAQ,YAAmC,OAArBnK,KAAK9B,MAAM3C,MAAgB,CAClEmL,QAAQC,IAAI,6BACZ,IAAMjB,EAAYuB,KAAKmD,MAAMF,eAAeC,QAAQ,YACpDnK,KAAK1D,MACHoJ,EAAUnK,MACVmK,EAAUlK,WACVkK,EAAU/J,KACV+J,EAAUnJ,iBAGTyD,KAAKq9B,oBACR32B,QAAQC,IAAI,+BAEd3G,KAAK0T,OAAOgqB,KAAK,6BACjBh3B,QAAQC,IAAI,wBAEZ3G,KAAK0T,OAAOyqB,GAAG,aAAa,SAASpgC,GACnC2I,QAAQC,IAAI,mCAAmC5I,GAC/CqgC,EAAargC,MAEfiC,KAAK0T,OAAOyqB,GAAG,wBAAwB,SAASpgC,GAC9C2I,QAAQC,IAAI,sCAAsC5I,GAClDsgC,EAAiBtgC,MAOnB,IAAMsgC,EAAmB,SAAAtgC,GAEvB,EAAKsC,SAAS,CACZlE,UAAW4B,EAAK4/B,OAEdS,EAAe,SAAArgC,GAEnB,EAAKsC,SAAS,CACZlE,UAAW4B,EAAK4/B,IAAIA,S,wCAMPW,GAAY,IAAD,OACtB12B,EAAU02B,EAChB53B,QAAQC,IAAI,2BAA2B,UAAUiB,EAAQ,cAAc5H,KAAK0T,QAC5E1T,KAAKK,SAAS,CAAClE,UAAW,kCAAqCyL,EAAQ,cAAc5H,KAAK0T,SAC1F,IAAI6qB,EAAiB,KACrB,GAA8B,OAA1Bv+B,KAAKlD,QAAQ0hC,eAA+CC,IAA1Bz+B,KAAKlD,QAAQ0hC,SAGjD,OAFA93B,QAAQC,IAAI,qCACZ3G,KAAKK,SAAS,CAAClE,UAAW,iCAI1BoiC,EAAiBv+B,KAAKlD,QAAQ0hC,SAASpgC,IAGzC4B,KAAK0T,OAAOgqB,KAAK,eAAgB,CAC/BG,KAAM,MAAMU,EACZ32B,QAASA,IAEX5H,KAAK0T,OAAOyqB,GAAG,gBAAgB,SAASpgC,GAEtC2gC,EAAW3gC,MAGb,IAAM2gC,EAAa,SAAA3gC,GACjB,EAAKsC,SAAS,CAAElE,UAAW4B,EAAK4/B,S,6CAmBlCj3B,QAAQC,IAAI,qC,gCAGF,IAAD,OACTD,QAAQC,IAAI,yBACZ,IAAMpL,EAAQyE,KAAKlD,QAAQvB,MACrBC,EAAawE,KAAKlD,QAAQtB,WAC1BoL,EAAc,CAClBC,MAAM,kDAAD,OAEarL,EAFb,wCAMPsL,MAAM,iEAAkE,CACtEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAY7L,KAG5B8L,MAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIjK,QAAiC,MAAfiK,EAAIjK,OAC5B,MAAM,IAAIkK,MAAM,WAElB,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAEJ,EAAKpH,SAAS,CACX9E,MAAO,KACPC,WAAY,KACZG,KAAM,KACN2hC,qBAAsB,KACtBD,mBAAoB,OAEvB,EAAKA,mBAAqB,KAC1BnzB,eAAey0B,QACf,EAAK7hC,QAAU,CACbvB,MAAO,KACPC,WAAY,KACZC,UAAW,KACXC,aAAc,KACdC,KAAM,KACNC,OAAQ,KACRC,KAAM,GACNC,MAAM,GACNC,aAAc,KACdC,gBAAiB,KACjBC,oBAAqB,KACrBC,cAAe,KACf0iC,OAAQ,KACRJ,SAAU,KACVriC,UAAW,MACXC,KAAM,KACNC,UAAW,KACXC,MAAO,EAAKA,MACZE,OAAQ,EAAKA,OACbC,aAAc,EAAKA,aACnBE,WAAY,EAAKA,YAEnB,EAAK0D,SAAS,CAAClE,UAAW,4BAE3B2L,OAAM,SAAAC,GACL,EAAK1H,SAAS,CAAClE,UAAW4L,S,+BAsGtB,IAAD,OACP,OACE,kBAAC,IAAD,KACE,kBAAC,IAAMhL,SAAP,KACE,kBAAC,EAAY8hC,SAAb,CACE38B,MAAO,CACL3G,MAAOyE,KAAK9B,MAAM3C,MAClBC,WAAYwE,KAAK9B,MAAM1C,WACvBC,UAAW,KACXC,aAAc,KACdC,KAAMqE,KAAK9B,MAAMvC,KACjBC,OAAQ,KACRC,KAAM,GACNC,MAAM,GACNC,aAAc,KACdC,gBAAiB,KACjBC,oBAAqB,KACrBC,cAAe,KACf0iC,OAAQ,KACRJ,SAAU,KACVriC,UAAW,MACXC,KAAM,KACNC,UAAW,KACXC,MAAO0D,KAAK1D,MACZE,OAAQwD,KAAKxD,OACbC,aAAcuD,KAAKvD,aACnBE,WAAYqD,KAAKrD,aAGnB,kBAAC,EAAD,CACEhB,KAAMqE,KAAK9B,MAAMvC,OAEnB,kBAAC,EAAD,CACE4O,OAAQvK,KAAKlD,QAAQtB,WACrBP,MAAO+E,KAAK9B,MAAM/B,YAEpB,0BAAMjB,UAAU,gBACd,kBAAC,IAAD,KAEC8E,KAAK9B,MAAMm/B,oBACV,kBAAC,IAAD,CAAUyB,KAAK,SAAS9hC,GAAG,QAAQ+hC,OAAK,IAGzC/+B,KAAK9B,MAAMm/B,oBACV,kBAAC,IAAD,CAAO/wB,KAAK,QAAQ0yB,OAAQ,SAAChkC,GAAD,OAAW,kBAACikC,EAAD,iBAAcjkC,EAAd,CACrC4D,MAAM,aAGToB,KAAK9B,MAAMm/B,oBACV,kBAAC,IAAD,CAAO/wB,KAAK,WAAW0yB,OAAQ,SAAChkC,GAAD,OAAW,kBAAC,GAAD,iBAAmBA,EAAnB,CACxC4D,MAAM,UACNoV,uBAAwB,EAAKA,uBAC7BuF,uBAAwB,EAAKA,6BAGhCvZ,KAAK9B,MAAMm/B,oBACV,kBAAC,IAAD,CAAO/wB,KAAK,SAAS0yB,OAAQ,SAAChkC,GAAD,OAAW,kBAACkkC,GAAD,iBAAelkC,EAAf,CACtC4D,MAAM,QACN7C,aAAc,EAAKmC,MAAMnC,aACzBmJ,WAAY,EAAKA,WACjB8O,uBAAwB,EAAKA,uBAC7BuF,uBAAwB,EAAKA,6BAGhCvZ,KAAK9B,MAAMm/B,oBACV,kBAAC,IAAD,CAAO/wB,KAAK,YAAY0yB,OAAQ,SAAChkC,GAAD,OAAW,kBAAC,GAAD,iBAAiBA,EAAjB,CACzC4D,MAAM,WACN5C,gBAAiB,EAAKkC,MAAMlC,gBAC5B2M,cAAe,EAAKA,oBAGvB3I,KAAK9B,MAAMm/B,oBACV,kBAAC,IAAD,CAAO/wB,KAAK,gBAAgB0yB,OAAQ,SAAChkC,GAAD,OAAW,kBAACmkC,GAAD,iBAAqBnkC,EAArB,CAC7C4D,MAAM,eACN3C,oBAAqB,EAAKiC,MAAMjC,oBAChCisB,kBAAmB,EAAKA,wBAG3BloB,KAAK9B,MAAMm/B,oBACV,kBAAC,IAAD,CAAO/wB,KAAK,UAAU0yB,OAAQ,SAAChkC,GAAD,OAAW,kBAACokC,GAAD,iBAAepkC,EAAf,CACvC4D,MAAM,SACN1C,cAAe,EAAKgC,MAAMhC,cAC1B8gC,YAAa,EAAKA,kBAIrBh9B,KAAK9B,MAAMm/B,oBACV,kBAAC,IAAD,CAAUyB,KAAK,IAAI9hC,GAAG,QAAQ+hC,OAAK,IAEpC/+B,KAAK9B,MAAMm/B,oBACV,kBAAC,IAAD,CAAUyB,KAAK,IAAI9hC,GAAG,QAAQ+hC,OAAK,KAKnC/+B,KAAK9B,MAAMm/B,oBACX,kBAAC,IAAD,CAAO/wB,KAAK,WAAW0yB,OAAQ,SAAChkC,GAAD,OAAW,kBAACqkC,EAAD,iBAAiBrkC,EAAjB,CACxC4D,MAAM,iBAGRoB,KAAK9B,MAAMm/B,oBACX,kBAAC,IAAD,CAAO/wB,KAAK,SAAS0yB,OAAQ,SAAChkC,GAAD,OAAW,kBAACskC,GAAD,iBAAetkC,EAAf,CACtC4D,MAAM,eAGRoB,KAAK9B,MAAMm/B,oBACX,kBAAC,IAAD,CAAO/wB,KAAK,UAAU0yB,OAAQ,SAAChkC,GAAD,OAAW,kBAACukC,GAAD,iBAAgBvkC,EAAhB,CACvC4D,MAAM,SACNnC,aAAc,EAAKA,mBAIvB,kBAAC,IAAD,CAAO6P,KAAK,yBAAyB0yB,OAAQ,SAAChkC,GAAD,OAAW,kBAACwkC,GAAD,iBAAuBxkC,EAAvB,CACtD8iC,cAAe,EAAKA,cACpBI,oBAAqB,EAAKA,oBAC1BuB,WAAY,EAAKvhC,MAAMq/B,mBACvB31B,QAAS,EAAK1J,MAAMs/B,4BAIpBx9B,KAAK9B,MAAMm/B,oBACX,kBAAC,IAAD,CAAUyB,KAAK,QAAQ9hC,GAAG,WAAW+hC,OAAK,KAE1C/+B,KAAK9B,MAAMm/B,oBACX,kBAAC,IAAD,CAAUyB,KAAK,IAAI9hC,GAAG,WAAW+hC,OAAK,KAEtC/+B,KAAK9B,MAAMm/B,oBACX,kBAAC,IAAD,CAAUyB,KAAK,IAAI9hC,GAAG,WAAW+hC,OAAK,a,GAxbpC7+B,aAAZk9B,GAiBG5yB,YAAcC,EAobR2yB,UCjdKsC,QACW,cAA7BC,OAAO7gC,SAAS8gC,UAEe,UAA7BD,OAAO7gC,SAAS8gC,UAEhBD,OAAO7gC,SAAS8gC,SAASC,MACvB,2DCXNC,IAASd,OACP,kBAAC,IAAMe,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/4B,MAAK,SAAA/E,GACJA,EAAa+9B,gBAEdv4B,OAAM,SAAAD,GACLnB,QAAQmB,MAAMA,EAAMD,a","file":"static/js/main.445f79dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/letterhead.f5e81252.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.8631702d.gif\";","\nimport React from 'react';\nimport Alert from 'react-bootstrap/Alert'\n\nimport './alertBox.css'\n\nconst AlertBox = (props) => {\n  let alert = \"Alerts shown here\";\n\n  if (props.alert !== null) {\n    alert = '\"'+props.alert+'\"';\n  }\n\nreturn (\n  <div className=\"alertBox\">\n  <Alert variant=\"warning\">\n  <p className=\"alertBoxText\">{alert}</p>\n  </Alert>\n  </div>\n)\n\n}\n\nexport default AlertBox;\n","import React from 'react';\n\nexport default React.createContext({\n    token: null,\n    activityId: null,\n    activityA: null,\n    activityUser: null,\n    role: null,\n    userId: null,\n    user: {},\n    users:[],\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    selectedVisit: null,\n    userAlert: \"...\",\n    file: null,\n    fancyDate: null,\n    login: (token, activityId, role, tokenExpiration) => {},\n    logout: () => {},\n    setUserAlert: (args) => {},\n    userOnline: () => {},\n});\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n// import Button from 'react-bootstrap/Button';\n\nimport AuthContext from '../../context/auth-context';\nimport './MainNavigation.css';\n\n\nconst mainNavigation = props => (\n  <AuthContext.Consumer>\n    {context => {\n      return (\n        <header className=\"main-navigation\">\n          <div className=\"main-navigation__logo\">\n            <h1>MBJ ENT EMR V2.0.1</h1>\n          </div>\n          <nav className=\"main-navigation__items\">\n            <ul>\n              {!context.token && (\n                <React.Fragment>\n                <li>\n                  <NavLink to=\"/landing\">Landing</NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/login\">Login</NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/signup\">Signup</NavLink>\n                </li>\n                </React.Fragment>\n              )}\n              {context.token && (\n                <React.Fragment>\n                  <li>\n                    <NavLink to=\"/home\">Home</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/profile\">Profile</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/staff\">Staff</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/patients\">Patients</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/appointments\">Appointments</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/visits\">Visits</NavLink>\n                  </li>\n                  <li>\n                    <button onClick={context.logout}>Logout</button>\n                  </li>\n                </React.Fragment>\n              )}\n              {\n                // !context.token && (\n                //   <React.Fragment>\n                //     <li>\n                //       <NavLink to=\"/landing\">.</NavLink>\n                //     </li>\n                //   </React.Fragment>\n                // )\n              }\n            </ul>\n          </nav>\n        </header>\n      );\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default mainNavigation;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport loadingGif from '../../assets/loading.gif';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport \"./loadingOverlay.css\"\n\nconst LoadingOverlay = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"loadingOverlay\">\n    <Row className=\"overlayCloseRow\">\n    {props.toggleOverlay &&\n      props.status.type !== 's3' && (\n      <Button className=\"sidebarButton\" variant=\"warning\" onClick={props.toggleOverlay}>X</Button>\n    )}\n    </Row>\n\n    {props.status && (\n      <h5 className=\"attachmentViewerTitle\">... {props.status.type} ...</h5>\n    )}\n\n\n      <Container className=\"overlayContainer\">\n        {props.status.type === 'calendarAppointment' && (\n          <React.Fragment>\n            <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              {props.selectCalendarDetails && (\n                <Row className=\"overlayRow\">\n                  <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon centered_btn\"  onClick={props.selectCalendarDetails.bind(this, props.status.data)}/>\n                </Row>\n              )}\n              {props.status.goLink && (\n                <Row className=\"overlayRow\">\n                <Link className=\"centered_btn\"\n                  to={{\n                    pathname: \"/appointments\",\n                    state: {appointment: props.status.data._id}\n                  }}\n                >\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon centered_btn\"/>\n                </Link>\n                </Row>\n              )}\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p className=\"overlayListGroupItemText\">Date: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              <p className=\"overlayListGroupItemText\">Time: <span className=\"bold\">{props.status.data.time}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p className=\"overlayListGroupItemText\">Title: <span className=\"bold\">{props.status.data.title}</span></p>\n              <p className=\"overlayListGroupItemText\">type: <span className=\"bold\">{props.status.data.type}</span></p>\n              <p className=\"overlayListGroupItemText\">subType: <span className=\"bold\">{props.status.data.subType}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p className=\"overlayListGroupItemText\">Location: <span className=\"bold\">{props.status.data.location}</span></p>\n              <p className=\"overlayListGroupItemText\">important: <span className=\"bold\">{props.status.data.important === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p className=\"overlayListGroupItemText\">description: <span className=\"bold\">{props.status.data.description}</span></p>\n              </ListGroup.Item>\n            </ListGroup>\n\n            </Row>\n\n          </React.Fragment>\n        )}\n\n        {props.status.type === 'calendarVisit' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n          <ListGroup className=\"overlayListGroup\">\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            {props.selectCalendarDetails && (\n              <Row className=\"overlayRow\">\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon centered_btn\" onClick={props.selectCalendarDetails.bind(this, props.status.data)}/>\n              </Row>\n            )}\n            {props.status.goLink && (\n              <Row className=\"overlayRow\">\n              <Link className=\"centered_btn\"\n                to={{\n                  pathname: \"/visits\",\n                  state: {visit: props.status.data._id}\n                }}\n              >\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n              </Link>\n              </Row>\n            )}\n            </ListGroup.Item>\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            <p className=\"overlayListGroupItemText\">Date: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n            <p className=\"overlayListGroupItemText\">Time: <span className=\"bold\">{props.status.data.time}</span></p>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            <p className=\"overlayListGroupItemText\">Title: <span className=\"bold\">{props.status.data.title}</span></p>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            <p className=\"overlayListGroupItemText\">type: <span className=\"bold\">{props.status.data.type}</span></p>\n            <p className=\"overlayListGroupItemText\">subType: <span className=\"bold\">{props.status.data.subType}</span></p>\n            </ListGroup.Item>\n          </ListGroup>\n          </Row>\n\n          </React.Fragment>\n        )}\n\n        {props.status.type === 'calendarAttendance' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Date: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Status: <span className=\"bold\">{props.status.data.status}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Description: <span className=\"bold\">{props.status.data.description}</span></p>\n              </ListGroup.Item>\n            </ListGroup>\n          </Row>\n          </React.Fragment>\n        )}\n        {props.status.type === 'calendarLeave' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Type: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>startDate: <span className=\"bold\">{moment.unix(props.status.data.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>endDate: <span className=\"bold\">{moment.unix(props.status.data.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Description: <span className=\"bold\">{props.status.data.description}</span></p>\n              </ListGroup.Item>\n            </ListGroup>\n          </Row>\n          </React.Fragment>\n        )}\n        {props.status.type === 's3' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n                <Image src={loadingGif} className=\"loadingGif\" fluid />\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n                <p>{props.status.data.action} -ing {props.status.data.target}...</p>\n              </ListGroup.Item>\n            </ListGroup>\n          </Row>\n          <Row className=\"overlayRow\">\n\n          </Row>\n          </React.Fragment>\n        )}\n\n\n      </Container>\n\n    </div>\n  </div>\n)\n\n}\n\nexport default LoadingOverlay;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { NavLink } from 'react-router-dom';\nimport io from 'socket.io-client';\n\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport './landing.css';\n\nclass LandingPage extends Component {\n  state = {\n    role: null,\n    userAlert: \"landing page\",\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n  };\n\n  // constructor(props) {\n  //   super(props);\n  //   this.socket = io('http://localhost:9099');\n  // }\n\ncomponentDidMount () {\n  // this.socket.on('toast', function(data) {\n  //   console.log(\"admin msg...\",data);\n  // });\n}\n\n  render() {\n\n    return (\n      <React.Fragment>\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n      <Container className=\"landingPageContainer\">\n\n      <Row className=\"landingPageRow\">\n      <Col className=\"landingPageCol\">\n        <h1> Welcome to MBJ ENT EMR</h1>\n      </Col>\n      </Row>\n\n\n          {\n            // this.state.isGuest === true && (\n            //   <NavLink to=\"/login\">Login</NavLink>\n            // )\n          }\n          {\n            // this.state.isGuest === true && (\n            //   <NavLink to=\"/signup\">Signup</NavLink>\n            // )\n          }\n\n      </Container>\n\n      </React.Fragment>\n    );\n\n  }\n\n\n}\n\nexport default LandingPage;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './PatientItem.css';\n\nconst PatientItem = (props) => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.count} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Username: <span className=\"bold\">{props.patient.username}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            role: <span className=\"bold\">{props.patient.role}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n\n          {props.appointmentPage !== true &&\n            props.showDetails && (\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.patient)}/>\n          )}\n\n          {props.homePage && (\n            <Link\n              to={{\n                pathname: \"/patients\",\n                state: {patient: props.patient._id}\n              }}\n            >\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </Link>\n          )}\n\n          {props.appointmentPage === true && (\n            <FontAwesomeIcon icon={faUserPlus} className=\"listIcon\" onClick={props.onSelect.bind(this, props.patient)}/>\n          )}\n\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.patient._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                name: <span className=\"bold\">{props.patient.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                username: <span className=\"bold\">{props.patient.username}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                title: <span className=\"bold\">{props.patient.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                role: <span className=\"bold\">{props.patient.role}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                dob: <span className=\"bold\">{moment.unix(props.patient.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                age: <span className=\"bold\">{props.patient.age}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                gender: <span className=\"bold\">{props.patient.gender}</span>\n              </Card.Text>\n              </li>\n\n\n            </ul>\n            </Row>\n          )}\n          {deleteState === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.patient)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default PatientItem;\n","import React from 'react';\n\nimport PatientItem from '../../items/patient/PatientItem';\nimport './UserList.css';\n\nconst PatientList = props => {\n\n  const {...filter} = props.filter;\n  let patients2 = props.patients;\n  let propsPatients = [];\n\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'registration.date' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.registration.date > b.registration.date) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'registration.date' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.registration.date < b.registration.date) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'loggedIn') {\n    propsPatients = patients2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field === 'patient' && filter.key === 'active') {\n    propsPatients = patients2.filter(x => x.active === filter.value);\n  }\n\n  if (filter.field !== 'patient') {\n    propsPatients = patients2;\n  }\n\n  let count = 0;\n\n  const patients = propsPatients.map(patient => {\n\n    count = propsPatients.indexOf(patient)+1;\n\n    return (\n      <PatientItem\n        key={count}\n        count={count}\n        patient={patient}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        appointmentPage={props.appointmentPage}\n        homePage={props.homePage}\n        onSelect={props.onSelect}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{patients}</ul>;\n};\n\nexport default PatientList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus,\n  faCalendarPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './AppointmentItem.css';\n\nconst AppointmentItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.appointment.title}</span>\n          </Card.Text>\n          {!props.homePage && (\n            <Card.Text className=\"cardText\">\n              Type: <span className=\"bold\">{props.appointment.type}</span>\n            </Card.Text>\n          )}\n          {!props.homePage && (\n            <Card.Text className=\"cardText\">\n              Date: <span className=\"bold\">{moment.unix(props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n            </Card.Text>\n          )}\n          {props.homePage && (\n            <Card.Text className=\"cardText\">\n              Patient: <span className=\"bold\">{props.appointment.patient._id}</span>\n            </Card.Text>\n          )}\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n\n          {props.visitPage !== true &&\n            props.showDetails && (\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.appointment)}/>\n          )}\n\n          {props.homePage && (\n            <Link\n              to={{\n                pathname: \"/appointments\",\n                state: {appointment: props.appointment._id}\n              }}\n            >\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </Link>\n          )}\n\n          {props.visitPage === true && (\n            <FontAwesomeIcon icon={faCalendarPlus} className=\"listIcon\" onClick={props.onSelect.bind(this, props.appointment)}/>\n          )}\n\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.appointment._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.appointment.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.appointment.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Date: <span className=\"bold\">{moment.unix(props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                time: <span className=\"bold\">{props.appointment.time}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Patient: <span className=\"bold\">{props.appointment.patient.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                checkinTime: <span className=\"bold\">{props.appointment.checkinTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                seenTime: <span className=\"bold\">{props.appointment.seenTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                location: <span className=\"bold\">{props.appointment.location}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                description: <span className=\"bold\">{props.appointment.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                inProgress: <span className=\"bold\">{props.appointment.inProgress.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                attended: <span className=\"bold\">{props.appointment.attended.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                important: <span className=\"bold\">{props.appointment.important.toString()}</span>\n              </Card.Text>\n              </li>\n\n\n            </ul>\n            </Row>\n          )}\n          {deleteState === true && (\n            <Row>\n              {props.canDelete && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.appointment)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AppointmentItem;\n","import React from 'react';\nimport AppointmentItem from '../../items/appointment/AppointmentItem';\nimport './AppointmentList.css'\n\nconst AppointmentList = props => {\n\n  const {...filter} = props.filter;\n  let appointments2 = props.appointments;\n  let propsAppointments = [];\n\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType > b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType < b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time > b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time < b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location > b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location < b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'important') {\n    propsAppointments = appointments2.filter(x => x.important === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'inProgress') {\n    propsAppointments = appointments2.filter(x => x.inProgress === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'attended') {\n    propsAppointments = appointments2.filter(x => x.attended === filter.value);\n  }\n\n  if (filter.field !== 'appointment') {\n    propsAppointments = appointments2;\n  }\n\n  let count = 0;\n\n  const appointments = propsAppointments.map(appointment=> {\n\n    count = propsAppointments.indexOf(appointment+1);\n\n    return (\n      <AppointmentItem\n        key={count}\n        appointment={appointment}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        visitPage={props.visitPage}\n        homePage={props.homePage}\n        onSelect={props.onSelect}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{appointments}</ul>;\n};\n\nexport default AppointmentList;\n","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus\n} from '@fortawesome/free-solid-svg-icons';\n\nimport './queueItem.css';\n\nconst QueueSlotItem = props => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Number: {props.queueSlot.number}\n          </Card.Text>\n\n          <Card.Text className=\"cardText\">\n            Patient: {props.queueSlot.patient.name}\n          </Card.Text>\n          <Link\n            to={{\n              pathname: \"/patients\",\n              state: {patient: props.queueSlot.patient._id}\n            }}\n          >\n          <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n          </Link>\n\n          <Card.Text className=\"cardText\">\n            Seen: {props.queueSlot.seen === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              {props.queueSlot.seen !== true && (\n                <Button variant=\"outline-success\" onClick={props.slotSeen.bind(this, props.queueSlot)}>Seen</Button>\n              )}\n              {props.queueSlot.seen === true && (\n                <Button variant=\"outline-success\" onClick={props.slotUnseen.bind(this, props.queueSlot)}>Un-See</Button>\n              )}\n              <li>\n\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Time: {props.queueSlot.time}\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Consultant: {props.queueSlot.consultant.username}\n              </Card.Text>\n              <Link\n                to={{\n                  pathname: \"/staff\",\n                  state: {user: props.queueSlot.consultant._id}\n                }}\n              >\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n              </Link>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Seen: {props.queueSlot.seen === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n              SeenTime:\n              </Card.Text>\n\n              {props.queueSlot.seenTime && (\n                <Card.Text className=\"cardText\">\n                {props.queueSlot.seenTime}\n                </Card.Text>\n              )}\n\n              </li>\n              <li>\n              <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n              </li>\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.queueSlot)}>Delete</Button>\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default QueueSlotItem;\n","import React from 'react';\n\nimport QueueSlotItem from '../../items/queue/QueueSlotItem';\nimport './queueSlotList.css';\n\nconst QueueSlotList = props => {\n\n  let count = 0;\n\n  const queueSlots = props.queueSlots.map(queueSlot => {\n    count = props.queueSlots.indexOf(queueSlot)+1;\n\n    return (\n      <QueueSlotItem\n        key={count}\n        queueSlot={queueSlot}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        slotSeen={props.slotSeen}\n        slotUnseen={props.slotUnseen}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{queueSlots}</ul>;\n};\n\nexport default QueueSlotList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport moment from 'moment';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport QueueSlotList from '../../lists/queue/QueueSlotList';\n\nimport './queueItem.css';\n\nconst QueueItem = props => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n\n  return (\n    <div className=\"itemDiv\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Date: {moment.unix(props.queue.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Creator: {props.queue.creator.username}\n          </Card.Text>\n\n          <QueueSlotList\n            queueSlots={props.queue.slots}\n            slotSeen={props.slotSeen}\n            slotUnseen={props.slotUnseen}\n            onDelete={props.onDelete}\n          />\n\n        </Card.Body>\n      </Card>\n    </div>\n  )\n};\n\nexport default QueueItem;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst PatientSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>active</option>\n        <option>name</option>\n        <option>username</option>\n        <option>title</option>\n        <option>role</option>\n        <option>dob</option>\n        <option>age</option>\n        <option>gender</option>\n        <option>registration.date</option>\n        <option>registration.number</option>\n        <option>contact.email</option>\n        <option>contact.phone</option>\n        <option>contact.phone2</option>\n        <option>addresses.number</option>\n        <option>addresses.street</option>\n        <option>addresses.town</option>\n        <option>addresses.city</option>\n        <option>addresses.parish</option>\n        <option>addresses.country</option>\n        <option>addresses.postalCode</option>\n        <option>addresses.primary</option>\n        <option>verification.verified</option>\n        <option>expiryDate</option>\n        <option>referral.date</option>\n        <option>referral.reason</option>\n        <option>referral.physician.name</option>\n        <option>referral.physician.email</option>\n        <option>referral.physician.phone</option>\n        <option>attendingPhysician</option>\n        <option>occupation.role</option>\n        <option>occupation.employer.name</option>\n        <option>occupation.employer.phone</option>\n        <option>occupation.employer.email</option>\n        <option>insurance.company</option>\n        <option>insurance.policyNumber</option>\n        <option>insurance.description</option>\n        <option>insurance.expiryDate</option>\n        <option>insurance.subscriber.company</option>\n        <option>insurance.subscriber.description</option>\n        <option>nextOfKin.name</option>\n        <option>nextOfKin.relation</option>\n        <option>nextOfKin.contact.email</option>\n        <option>nextOfKin.contact.phone</option>\n        <option>nextOfKin.contact.phone2</option>\n        <option>allergies.type</option>\n        <option>allergies.title</option>\n        <option>allergies.description</option>\n        <option>allergies.attachments</option>\n        <option>medication.title</option>\n        <option>medication.type</option>\n        <option>medication.description</option>\n        <option>medication.attachments</option>\n        <option>images.name</option>\n        <option>images.type</option>\n        <option>images.path</option>\n        <option>files.name</option>\n        <option>files.type</option>\n        <option>files.path</option>\n        <option>notes</option>\n        <option>tags</option>\n        <option>loggedIn</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default PatientSearchForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst UserSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>title</option>\n          <option>name</option>\n          <option>username</option>\n          <option>registrationNumber</option>\n          <option>dob</option>\n          <option>age</option>\n          <option>gender</option>\n          <option>contact.email</option>\n          <option>contact.phone</option>\n          <option>contact.phone2</option>\n          <option>addresses.number</option>\n          <option>addresses.street</option>\n          <option>addresses.town</option>\n          <option>addresses.city</option>\n          <option>addresses.parish</option>\n          <option>addresses.country</option>\n          <option>addresses.postalCode</option>\n          <option>addresses.primary</option>\n          <option>loggedIn</option>\n          <option>clientConnected</option>\n          <option>verification.verified</option>\n          <option>attendance.date</option>\n          <option>attendance.status</option>\n          <option>attendance.description</option>\n          <option>leave.type</option>\n          <option>leave.startDate</option>\n          <option>leave.endDate</option>\n          <option>leave.description</option>\n          <option>images.name</option>\n          <option>images.type</option>\n          <option>images.path</option>\n          <option>files.name</option>\n          <option>files.type</option>\n          <option>files.path</option>\n          <option>notes</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default UserSearchForm;\n","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus,\n  faCalendarPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst UserItem = (props) => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n  const [deleteState, setDeleteState] = useState(false);\n  const handleDeleteStateChange = () => {\n    if (deleteState === true) {\n      setDeleteState(false);\n    }\n    if (deleteState === false) {\n      setDeleteState(true);\n    }\n   }\n\n  return (\n    <li key={props.key} className=\"userItemLi\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Username: <span className=\"bold\">{props.user.username}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            role: <span className=\"bold\">{props.user.role}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n\n          {!props.appointmentPage &&\n            !props.visitPage &&\n            props.showDetails && (\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.user)}/>\n          )}\n\n          {props.appointmentPage && (\n            <Link\n              to={{\n                pathname: \"/staff\",\n                state: {user: props.user._id}\n              }}\n            >\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </Link>\n          )}\n\n          {props.visitPage && (\n            <Link\n              to={{\n                pathname: \"/staff\",\n                state: {user: props.user._id}\n              }}\n            >\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </Link>\n          )}\n\n          {props.selectUser && (\n            <FontAwesomeIcon icon={faUserPlus} className=\"listIcon\" onClick={props.selectUser.bind(this, props.user)}/>\n          )}\n\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.user._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                name: <span className=\"bold\">{props.user.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                username: <span className=\"bold\">{props.user.username}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                title: <span className=\"bold\">{props.user.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                role: <span className=\"bold\">{props.user.role}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                dob: <span className=\"bold\">{moment.unix(props.user.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                age: <span className=\"bold\">{props.user.age}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                gender: <span className=\"bold\">{props.user.gender}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                loggedIn: <span className=\"bold\">{props.user.loggedIn === true && (<FontAwesomeIcon icon={faBatteryThreeQuarters} className=\"listIcon\"/>)} {props.user.loggedIn === false && (<FontAwesomeIcon icon={faBatteryEmpty} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n\n            </ul>\n            </Row>\n          )}\n\n          {deleteState === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.user)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from '../../items/user/UserItem';\nimport './UserList.css';\n\nconst UserList = props => {\n\n  const {...filter} = props.filter;\n  let users2 = props.users;\n  let propsUsers = [];\n\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'loggedIn') {\n    propsUsers = users2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field !== 'staff') {\n    propsUsers = users2;\n  }\n\n  let count = 0;\n\n  const users = propsUsers.map(user => {\n\n    count = propsUsers.indexOf(user)+1;\n\n    return (\n      <UserItem\n        key={count}\n        user={user}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        appointmentPage={props.appointmentPage}\n        homePage={props.homePage}\n        visitPage={props.visitPage}\n        selectUser={props.selectUser}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{users}</ul>;\n};\n\nexport default UserList;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { NavLink } from 'react-router-dom';\nimport Image from 'react-bootstrap/Image';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport PatientList from '../../components/lists/patient/PatientList';\nimport AppointmentList from '../../components/lists/appointment/AppointmentList';\nimport QueueItem from '../../components/items/queue/QueueItem';\nimport PatientSearchForm from '../../components/forms/search/PatientSearchForm';\nimport UserSearchForm from '../../components/forms/search/UserSearchForm';\nimport UserList from '../../components/lists/user/UserList';\nimport loadingGif from '../../assets/loading.gif';\nimport './landing.css';\n\nclass HomePage extends Component {\n  state = {\n    role: null,\n    userAlert: \"landing\",\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    isLoading: false,\n    seshStore: null,\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    todayAppointments: null,\n    queue: null,\n    weekImportantAppointments: null,\n    recentPatients: null,\n    queueToday: null,\n    addingQueueSlot: false,\n    queueSlotAddStage: null,\n    users: null,\n    patients: null,\n    selectedUser: null,\n    selectedPatient: null,\n    sublistPatientSearch: false,\n    sublistUserSearch: false,\n  };\n  static contextType = AuthContext;\n\n\ncomponentDidMount () {\n  console.log('...home component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n\n    this.getAppointmentsToday(seshStore);\n    this.getAppointmentsImportantWeek(seshStore);\n    this.getRecentPatients(seshStore);\n    this.getQueueToday(seshStore);\n    this.getAllPatients(seshStore);\n    this.getAllUsers(seshStore);\n\n  }\n}\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      console.log('...all users retrieval success!...');\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nloadHome = () => {\n  const args = {\n    token: this.context.token,\n    activityId: this.context.activityId\n  }\n\n  this.getAppointmentsToday(args);\n  this.getAppointmentsImportantWeek(args);\n  this.getRecentPatients(args);\n  this.getQueueToday(args);\n  this.getAllPatients(args);\n  this.getAllUsers(args);\n\n}\n\ngetAppointmentsToday = (args) => {\n  console.log('...retrieving todays appointments...');\n  this.context.setUserAlert('...retrieving todays appointments...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAppointmentsToday(\n        activityId:\"${activityId}\")\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAppointmentsToday);\n      console.log('...get todays appointments success!...');\n      let responseAlert = '...get todays appointments success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        todayAppointments: resData.data.getAppointmentsToday,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\ngetAppointmentsImportantWeek = (args) => {\n  console.log('...retrieving important appointments for week...');\n  this.context.setUserAlert('...retrieving important appointments for week...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAppointmentsImportantNextWeek(\n        activityId:\"${activityId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAppointmentsImportantNextWeek);\n      console.log('...get week important appointments success!...');\n      let responseAlert = '...get week important appointments success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        weekImportantAppointments: resData.data.getAppointmentsImportantNextWeek,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\ngetRecentPatients = (args) => {\n  console.log('...retrieving recent patients...');\n  this.context.setUserAlert('...retrieving recent patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getRecentPatients(\n        activityId:\"${activityId}\",\n        amount:7\n      )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getRecentPatients);\n      console.log('...retrieve recent patients success!...');\n      let responseAlert = '...retrieve recent patients success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        recentPatients: resData.data.getRecentPatients,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\ngetQueueToday = (args) => {\n  console.log('...retrieving todays queue...');\n  this.context.setUserAlert('...retrieving todays queue...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getQueueToday(\n        activityId:\"${activityId}\"\n      )\n      {_id,date,currentSlot,slots{number,time,patient{_id,username,name},consultant{_id,username,role},seen,seenTime},creator{_id,username,role}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getQueueToday);\n      console.log('...retrieve recent patients success!...');\n      let responseAlert = '...retrieve recent patients success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        queueToday: resData.data.getQueueToday,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nstartAddQueueSlot = () => {\n  this.setState({\n    addingQueueSlot: true,\n    queueSlotAddStage: 1\n  })\n}\ncancelAddQueueSlot = () => {\n  this.setState({\n    addingQueueSlot: false,\n    queueSlotAddStage: null\n  })\n}\ncreateQueue = () => {\n  console.log('...creating new queue...');\n  this.context.setUserAlert('...creating new queue...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n\n  let requestBody = {\n    query: `\n      mutation {createQueue(\n        activityId:\"${activityId}\"\n      )\n        {_id,date,currentSlot,slots{number,time,patient{_id,username},consultant{_id,username,role},seen,seenTime},creator{_id,username,role}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getRecentPatients);\n      console.log('...create queue success!...');\n      let responseAlert = '...create queue success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        queueToday: resData.data.createQueue,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nsubmitQueueSlotAddPatient = (args) => {\n  const queuePatients = this.state.queueToday.slots.map(x=> x.patient._id)\n  const existingPatient = queuePatients.includes(args._id);\n  console.log('1:',args);\n  console.log('2:',queuePatients);\n  console.log('3:',existingPatient);\n  if (existingPatient === true ) {\n    console.log('...this patient is already in the queue!...');\n    this.context.setUserAlert('...this patient is already in the queue!...')\n  } else {\n    this.setState({\n      selectPatient: args,\n      queueSlotAddStage: 2\n    })\n  }\n\n}\nsubmitQueueSlotAddConsultant = (args) => {\n  console.log('...creating new queue...');\n  this.context.setUserAlert('...creating new queue...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const queueId = this.state.queueToday._id;\n  const patientId = this.state.selectPatient._id;\n  const consultantId = args._id;\n\n  if (args.role !== 'Nurse' && args.role !== 'Doctor') {\n    console.log('...please choose a nurse or doctor...');\n    this.context.setUserAlert('...please choose a nurse or doctor...')\n    this.setState({isLoading: false})\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addQueueSlot(\n        activityId:\"${activityId}\",\n        queueId:\"${queueId}\",\n        patientId:\"${patientId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,date,slots{number,time,patient{_id,username,name,lastName},consultant{_id,username,role},seen,seenTime},creator{_id,username,role}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      console.log('...add queue slot success!...');\n      let responseAlert = '...add queue slot success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        queueToday: resData.data.addQueueSlot,\n        addingQueueSlot: false,\n        queueSlotAddStage: null,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\nqueueSlotSeen = (args) => {\n  console.log('...updating queue slot...');\n  this.context.setUserAlert('...updating queue slot...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const queueId = this.state.queueToday._id;\n  const slotNumber = args.number;\n\n  let requestBody = {\n    query: `\n      mutation {queueSlotSeen(\n        activityId:\"${activityId}\",\n        queueId:\"${queueId}\",\n        queueInput:{\n          slotNumber:${slotNumber}\n        })\n        {_id,date,slots{number,time,patient{_id,username,name,lastName},consultant{_id,username,role},seen,seenTime},creator{_id,username,role}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.queueSlotSeen);\n      console.log('...update queue slot seen success!...');\n      let responseAlert = '...update queue slot seen success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        queueToday: resData.data.queueSlotSeen,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\nqueueSlotUnseen = (args) => {\n  console.log('...updating queue slot...');\n  this.context.setUserAlert('...updating queue slot...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const queueId = this.state.queueToday._id;\n  const slotNumber = args.number;\n\n  let requestBody = {\n    query: `\n      mutation {queueSlotUnseen(\n        activityId:\"${activityId}\",\n        queueId:\"${queueId}\",\n        queueInput:{\n          slotNumber:${slotNumber}\n        })\n        {_id,date,slots{number,time,patient{_id,username,name,lastName},consultant{_id,username,role},seen,seenTime},creator{_id,username,role}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.queueSlotUnseen);\n      console.log('...update queue slot unseen success!...');\n      let responseAlert = '...update queue slot unseen success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        queueToday: resData.data.queueSlotUnseen,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ndeleteQueSlot = (args) => {\n  console.log('...deleting queue slot...');\n  this.context.setUserAlert('...deleting queue slot...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const queueId = this.state.queueToday._id;\n  const slotNumber = args.number;\n\n  let requestBody = {\n    query: `\n      mutation {deleteQueueSlot(\n        activityId:\"${activityId}\",\n        queueId:\"${queueId}\",\n        queueInput:{\n          slotNumber:${slotNumber}\n        })\n        {_id,date,slots{number,time,patient{_id,username,name,lastName},consultant{_id,username,role},seen,seenTime},creator{_id,username,role}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteQueueSlot);\n      console.log('...delete queue slot success!...');\n      let responseAlert = '...delete queue slot success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        queueToday: resData.data.deleteQueueSlot,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nstartPatientSearch = () => {\n  this.setState({sublistPatientSearch: true})\n}\ncancelSublistPatientSearch = () => {\n  this.setState({\n    sublistPatientSearch: false\n  })\n  this.getAllPatients({\n    activityId: this.context.activityId,\n    token: this.context.token\n   })\n}\nsubmitSublistPatientSearchForm = (event) => {\n  event.preventDefault();\n  console.log('...searching patients...');\n  this.context.setUserAlert('...searching patients...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'active' ||\n      field === 'age' ||\n      field === 'dob' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'registration.date' ||\n      field === 'expiryDate' ||\n      field === 'referral.date' ||\n      field === 'insurance.expiryDate' ||\n      field === 'insurance.expiryDate'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getPatientsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getPatientsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getPatientsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getPatientsByField);\n      }\n\n      let responseAlert = '...patient search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          patients: resData.data.getPatientsByFieldRegex,\n          activityA: `getPatientsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          patients: resData.data.getPatientsByField,\n          activityA: `getPatientsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nstartUserSearch = () => {\n  this.setState({sublistUserSearch: true})\n}\ncancelSublistUserSearch = () => {\n  this.setState({\n    sublistUserSearch: false\n  })\n  this.getAllUsers({\n    activityId: this.context.activityId,\n    token: this.context.token\n   })\n}\nsubmitSublistUserSearchForm = (event) => {\n  event.preventDefault();\n  console.log('...searching users...');\n  this.context.setUserAlert('...searching users...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'age' ||\n      field === 'dob' ||\n      field === 'employmentDate' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'attendance.date' ||\n      field === 'leave.startDate' ||\n      field === 'leave.endDate'\n    ) {\n      regex = false;\n  }\n  console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getUsersByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getUsersByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getUsersByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getUsersByField);\n      }\n\n      let responseAlert = '...staff search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          users: resData.data.getUsersByFieldRegex,\n          activityA: `getUsersByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n        this.context.activityUser = resData.data.getUsersByFieldRegex;\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          users: resData.data.getUsersByField,\n          activityA: `getUsersByField?activityId:${activityId},userId:${userId}`\n        });\n        this.context.activityUser = resData.data.getUsersByField;\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nselectPatient = (args) => {\n  console.log('...selecting...');\n  this.setState({\n    selectedPatient: args\n  })\n}\nselectUser = (args) => {\n  console.log('...selecting...');\n  this.setState({\n    selectedUser: args\n  })\n}\n\n\n\n  render() {\n\n    return (\n      <React.Fragment>\n\n      {\n        this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n          toggleOverlay={this.toggleOverlay}\n        />\n      )\n    }\n      <Container className=\"landingPageContainer\">\n\n      <Row className=\"landingPageTopRow\">\n\n        <Button variant=\"outline-secondary\" size=\"md\" onClick={this.loadHome}>Load</Button>\n        {this.state.isLoading ? (\n          <Image src={loadingGif} className=\"loadingGif\" fluid />\n        ):(\n          <p>.</p>\n        )}\n\n      </Row>\n\n      <Row className=\"landingPageRow\">\n      <Col md={6} className=\"landingPageCol\">\n        <h3>Todays appts</h3>\n        {this.state.todayAppointments && (\n          <AppointmentList\n            filter={this.state.filter}\n            appointments={this.state.todayAppointments}\n            authId={this.context.activityId}\n            homePage={true}\n          />\n        )}\n      </Col>\n      <Col md={6} className=\"landingPageCol\">\n        <h3>Queue</h3>\n        {!this.state.queueToday && (\n          <React.Fragment>\n            <Button variant=\"outline-primary\" onClick={this.createQueue}>New</Button>\n          </React.Fragment>\n        )}\n        {this.state.queueToday && (\n          <React.Fragment>\n          {this.state.addingQueueSlot !== true && (\n            <FontAwesomeIcon icon={faUserPlus} className=\"listIcon\" onClick={this.startAddQueueSlot}/>\n          )}\n          {this.state.addingQueueSlot === true && (\n            <Button variant=\"outline-danger\" onClick={this.cancelAddQueueSlot}>Cancel</Button>\n          )}\n\n          {\n            this.state.addingQueueSlot === true &&\n            this.state.queueSlotAddStage === 1 && (\n              <React.Fragment>\n              <p>Adding Queue Slot: Patient</p>\n              <Button variant=\"outline-primary\" onClick={this.startPatientSearch}>Search</Button>\n              <Row className=\"patientSubListRow\">\n              {this.state.sublistPatientSearch === true && (\n                <PatientSearchForm\n                  onCancel={this.cancelSublistPatientSearch}\n                  onConfirm={this.submitSublistPatientSearchForm}\n                />\n              )}\n              </Row>\n              <Row className=\"patientSubListRow\">\n              <PatientList\n                filter={this.state.filter}\n                patients={this.state.patients}\n                authId={this.context.activityId}\n                onSelect={this.submitQueueSlotAddPatient}\n                appointmentPage={true}\n              />\n              </Row>\n              </React.Fragment>\n          )\n        }\n        {\n          this.state.addingQueueSlot === true &&\n          this.state.queueSlotAddStage === 2 && (\n            <React.Fragment>\n            <p>Adding Queue Slot: Consultant</p>\n            <Button variant=\"outline-primary\" onClick={this.startUserSearch}>Search</Button>\n            <Row className=\"patientSubListRow\">\n            {this.state.sublistUserSearch === true && (\n              <UserSearchForm\n                onCancel={this.cancelSublistUserSearch}\n                onConfirm={this.submitSublistUserSearchForm}\n              />\n            )}\n            </Row>\n            <Row className=\"patientSubListRow\">\n            <UserList\n              filter={this.state.filter}\n              users={this.state.users}\n              authId={this.context.activityId}\n              selectUser={this.submitQueueSlotAddConsultant}\n              homePage={true}\n            />\n            </Row>\n            </React.Fragment>\n        )\n      }\n\n          <QueueItem\n            queue={this.state.queueToday}\n            slotSeen={this.queueSlotSeen}\n            slotUnseen={this.queueSlotUnseen}\n            onDelete={this.deleteQueSlot}\n          />\n          </React.Fragment>\n        )}\n      </Col>\n      </Row>\n\n      <Row className=\"landingPageRow\">\n      <Col md={5}className=\"landingPageCol\">\n        <h3>Weeks important</h3>\n        {this.state.weekImportantAppointments && (\n          <AppointmentList\n            filter={this.state.filter}\n            appointments={this.state.weekImportantAppointments}\n            authId={this.context.activityId}\n            homePage={true}\n          />\n        )}\n      </Col>\n      <Col md={4}className=\"landingPageCol\">\n        <h3>Recent patients</h3>\n        {this.state.recentPatients && (\n          <PatientList\n            filter={this.state.filter}\n            patients={this.state.recentPatients}\n            authId={this.context.activityId}\n            homePage={true}\n          />\n        )}\n      </Col>\n      <Col md={3}className=\"landingPageCol\">\n        <h3>more stats</h3>\n      </Col>\n      </Row>\n\n      </Container>\n\n      </React.Fragment>\n    );\n\n  }\n\n\n}\n\nexport default HomePage;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './UserItem.css';\n\nconst AddressItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Town: <span className=\"bold\">{props.address.town}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Country: <span className=\"bold\">{props.address.country}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                No: <span className=\"bold\">{props.address.number}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Street: <span className=\"bold\">{props.address.street}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Town: <span className=\"bold\">{props.address.town}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                City: <span className=\"bold\">{props.address.city}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Parish: <span className=\"bold\">{props.address.parish}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Country: <span className=\"bold\">{props.address.country}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Primary: <span className=\"bold\"> {props.address.primary === true && (<FontAwesomeIcon icon={faBatteryThreeQuarters} className=\"listIcon\"/>)} {props.address.primary === false && (<FontAwesomeIcon icon={faBatteryEmpty} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n              {props.makePrimary && (\n                <li>\n                <Button variant=\"outline-primary\" onClick={props.makePrimary.bind(this, props.address)}>Set Primary</Button>\n                </li>\n              )}\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.address)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AddressItem;\n","import React from 'react';\n\nimport AddressItem from '../../items/user/AddressItem';\nimport './UserList.css';\n\nconst UserAddressList = props => {\n\n  const {...filter} = props.filter;\n  let addresses2 = props.addresses;\n  let propsAddresses = [];\n\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number > b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number < b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street > b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street < b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town > b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town < b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city > b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city < b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish > b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish < b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country > b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country < b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode > b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode < b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'primary') {\n    propsAddresses = addresses2.filter(x => x.primary === filter.value);\n  }\n  if (filter.field !== 'address') {\n    propsAddresses = addresses2;\n  }\n\n  let count = 0;\n\n  const addresses = propsAddresses.map(address => {\n\n    count = propsAddresses.indexOf(address)+1;\n\n    return (\n      <AddressItem\n        key={count}\n        address={address}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        makePrimary={props.makePrimary}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{addresses}</ul>;\n};\n\nexport default UserAddressList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst AttendanceItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Date: <span className=\"bold\">{moment.unix(props.attendance.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Date: <span className=\"bold\">{moment.unix(props.attendance.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Status: <span className=\"bold\">{props.attendance.status}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.attendance.description}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.attendance)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default AttendanceItem;\n","import React from 'react';\n\nimport AttendanceItem from '../../items/user/AttendanceItem';\nimport './UserList.css';\n\nconst UserAttendanceList = props => {\n\n  const {...filter} = props.filter;\n  let attendance2 = props.attendance;\n  let propsAttendance = [];\n\n  if (filter.field === 'attendance' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsAttendance = attendance2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'attendance' && filter.key === 'status' && filter.value === 'Descending') {\n    propsAttendance = attendance2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'attendance' && filter.key === 'status' && filter.value === 'Ascending') {\n    propsAttendance = attendance2.sort((a, b) => (a.status > b.status) ? 1 : -1);\n  }\n  if (filter.field === 'attendance' && filter.key === 'status' && filter.value === 'Descending') {\n    propsAttendance = attendance2.sort((a, b) => (a.status < b.status) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'attendance') {\n    propsAttendance = attendance2;\n  }\n\n  let count = 0;\n\n  const attendance = propsAttendance.map(attendanceItem => {\n\n    count = propsAttendance.indexOf(attendanceItem)+1;\n\n    return (\n      <AttendanceItem\n        key={count}\n        attendance={attendanceItem}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"attendanceList\">{attendance}</ul>;\n};\n\nexport default UserAttendanceList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst LeaveItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Start: <span className=\"bold\">{moment.unix(props.leave.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.leave.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Start: <span className=\"bold\">{moment.unix(props.leave.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                End: <span className=\"bold\">{moment.unix(props.leave.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.leave.description}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.leave)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default LeaveItem;\n","import React from 'react';\n\nimport LeaveItem from '../../items/user/LeaveItem';\nimport './UserList.css';\n\nconst UserLeaveList = props => {\n\n  const {...filter} = props.filter;\n  let leave2 = props.leave;\n  let propsLeave = [];\n\n  if (filter.field === 'leave' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsLeave = leave2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'type' && filter.value === 'Descending') {\n    propsLeave = leave2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'startDate' && filter.value === 'Ascending') {\n    propsLeave = leave2.sort((a, b) => (a.startDate > b.startDate) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'startDate' && filter.value === 'Descending') {\n    propsLeave = leave2.sort((a, b) => (a.startDate < b.startDate) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'endDate' && filter.value === 'Ascending') {\n    propsLeave = leave2.sort((a, b) => (a.endDate > b.endDate) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'endDate' && filter.value === 'Descending') {\n    propsLeave = leave2.sort((a, b) => (a.endDate < b.endDate) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'leave') {\n    propsLeave = leave2;\n  }\n\n  let count = 0;\n\n  const leave = propsLeave.map(leaveItem => {\n\n    count = propsLeave.indexOf(leaveItem)+1;\n\n    return (\n      <LeaveItem\n        key={count}\n        leave={leaveItem}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"leaveList\">{leave}</ul>;\n};\n\nexport default UserLeaveList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './UserItem.css';\n\nconst ImageItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Link: <span className=\"bold\">{props.image.path}</span>\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.image.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.image.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.image.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.image)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n\n};\n\nexport default ImageItem;\n","import React from 'react';\n\nimport ImageItem from '../../items/user/ImageItem';\nimport './UserList.css';\n\nconst UserImageList = props => {\n\n  const {...filter} = props.filter;\n  let images2 = props.images;\n  let propsImages = [];\n\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'image') {\n    propsImages = images2;\n  }\n\n  let count = 0;\n\n  const images = propsImages.map(image => {\n\n    count = propsImages.indexOf(image)+1;\n\n    return (\n      <ImageItem\n        key={count}\n        image={image}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"imageList\">{images}</ul>;\n};\n\nexport default UserImageList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst FileItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Link: <span className=\"bold\">{props.file.path}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.file.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.file.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.file.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.file)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default FileItem;\n","import React from 'react';\n\nimport FileItem from '../../items/patient/FileItem';\nimport './UserList.css';\n\nconst PatientFileList = props => {\n\n  const {...filter} = props.filter;\n  let files2 = props.files;\n  let propsFiles = [];\n\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'file') {\n    propsFiles = files2;\n  }\n\n  let count = 0;\n\n  const files = propsFiles.map(file => {\n\n    count = propsFiles.indexOf(file)+1;\n\n    return (\n      <FileItem\n        key={count}\n        file={file}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{files}</ul>;\n};\n\nexport default PatientFileList;\n","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst AppointmentItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.appointment.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.appointment.type}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Date: <span className=\"bold\">{moment.unix(props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n\n          <Link\n            to={{\n              pathname: \"/appointments\",\n              state: {appointment: props.appointment._id}\n            }}\n          >\n          <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n          </Link>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.appointment._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                time: <span className=\"bold\">{props.appointment.time}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                checkinTime: <span className=\"bold\">{props.appointment.checkinTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                seenTime: <span className=\"bold\">{props.appointment.seenTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                location: <span className=\"bold\">{props.appointment.location}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                description: <span className=\"bold\">{props.appointment.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                inProgress: <span className=\"bold\">{props.appointment.inProgress.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                attended: <span className=\"bold\">{props.appointment.attended.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                important: <span className=\"bold\">{props.appointment.important.toString()}</span>\n              </Card.Text>\n              </li>\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AppointmentItem;\n","import React from 'react';\n\nimport AppointmentItem from '../../items/user/AppointmentItem';\nimport './UserList.css';\n\nconst UserAppointmentList = props => {\n\n  const {...filter} = props.filter;\n  let appointments2 = props.appointments;\n  let propsAppointments = [];\n\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType > b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType < b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time > b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time < b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location > b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location < b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'important') {\n    propsAppointments = appointments2.filter(x => x.important === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'inProgress') {\n    propsAppointments = appointments2.filter(x => x.inProgress === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'attended') {\n    propsAppointments = appointments2.filter(x => x.attended === filter.value);\n  }\n  if (filter.field !== 'appointment') {\n    propsAppointments = appointments2;\n  }\n\n  let count = 0;\n\n  const appointments = propsAppointments.map(appointment => {\n\n    count = propsAppointments.indexOf(appointment)+1;\n\n    return (\n      <AppointmentItem\n        key={count}\n        appointment={appointment}\n      />\n    );\n  });\n\n  return <ul className=\"appointmentList\">{appointments}</ul>;\n};\n\nexport default UserAppointmentList;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './UserItem.css';\n\nconst NoteItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Note: <span className=\"bold\">{props.note}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.note)}>Delete</Button>\n              )}\n            </Row>\n            )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\n\nimport NoteItem from '../../items/user/NoteItem';\nimport './UserList.css';\n\nconst UserNoteList = props => {\n\n  const {...filter} = props.filter;\n  let notes2 = props.notes;\n  let propsNotes = [];\n\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Ascending') {\n    propsNotes = notes2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Descending') {\n    propsNotes = notes2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'note') {\n    propsNotes = notes2;\n  }\n\n  let count = 0;\n\n  const notes = propsNotes.map(note => {\n\n    count = propsNotes.indexOf(note)+1;\n\n    return (\n      <NoteItem\n        key={count}\n        note={note}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{notes}</ul>;\n};\n\nexport default UserNoteList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAddressForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"address\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>number</option>\n          <option>street</option>\n          <option>town</option>\n          <option>city</option>\n          <option>parish</option>\n          <option>country</option>\n          <option>postalCode</option>\n          <option>primary</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAddressForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAddressForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"attendance\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>status</option>\n          <option>date</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAddressForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterLeaveForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"leave\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>type</option>\n          <option>startDate</option>\n          <option>endDate</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterLeaveForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterImageForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"image\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>type</option>\n          <option>link</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterImageForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterFileForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"file\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>type</option>\n          <option>link</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterFileForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAppointmentForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"appointment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>title</option>\n          <option>type</option>\n          <option>subType</option>\n          <option>date</option>\n          <option>time</option>\n          <option>location</option>\n          <option>important</option>\n          <option>inProgress</option>\n          <option>attended</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAppointmentForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterNoteForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"note\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>note</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterNoteForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst UpdateUserSingleFieldForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Update Single Field</h4>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>field</Form.Label>\n        <Form.Control type=\"text\" value={props.field}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"query... date = YYY-MM-DD!!\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default UpdateUserSingleFieldForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './addForms.css';\n\nconst AddAddressForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Address</h4>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"number\">\n        <Form.Label>addressNumber</Form.Label>\n        <Form.Control type=\"number\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"street\">\n        <Form.Label>addressStreet</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row>\n\n      <Form.Group as={Col} controlId=\"town\">\n        <Form.Label>addressTown</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"city\">\n        <Form.Label>addressCity</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"parish\">\n        <Form.Label>addressParish</Form.Label>\n        <Form.Control as=\"select\">\n          <option>none</option>\n          <option>Hanover</option>\n          <option>St. Elizabeth</option>\n          <option>St. James</option>\n          <option>Trelawny</option>\n          <option>Westmoreland</option>\n          <option>Clarendon</option>\n          <option>Manchester</option>\n          <option>St. Ann</option>\n          <option>St. Catherine</option>\n          <option>St. Mary</option>\n          <option>Kingston</option>\n          <option>St. Andrew</option>\n          <option>Portland</option>\n          <option>St. Thomas</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"country\">\n        <Form.Label>addressCountry</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"postalCode\">\n        <Form.Label>addressPostalCode</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAddressForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddAttendanceForm = (props) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const handleChangeStartDate = startDate => {\n    setStartDate(startDate);\n    console.log(`startDate ${startDate}`);\n   }\n   const [endDate, setEndDate] = useState(new Date());\n   const handleChangeEndDate = endDate => {\n     setEndDate(endDate);\n     console.log(`endDate ${endDate}`);\n    }\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Attendance</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"date\">\n        <Form.Label>date</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"date\"/>\n      </Form.Group>\n      {\n        // <Form.Group as={Col} controlId=\"\">\n        //   <Form.Label>startDate</Form.Label>\n        //   <DatePicker className=\"\" id=\"startDate\"\n        //     selected={startDate}\n        //     onChange={handleChangeStartDate}\n        //   />\n        // </Form.Group>\n        // <Form.Group as={Col} controlId=\"\">\n        //   <Form.Label>startDate</Form.Label>\n        //   <DatePicker className=\"\" id=\"endDate\"\n        //     selected={endDate}\n        //     onChange={handleChangeEndDate}\n        //   />\n        // </Form.Group>\n      }\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"status\">\n        <Form.Label>status</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"status\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAttendanceForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddLeaveForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Leave</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"startDate\">\n        <Form.Label>startDate</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"startDate\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"endDate\">\n        <Form.Label>endDate</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"endDate\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddLeaveForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddNoteForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Notes</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"notes\">\n        <Form.Label>notes</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"note,note,note,note\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddNoteForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddImageForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Image</h4>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n  <Form.Row className=\"formBtnRow\">\n    <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n    <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddImageForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddFileForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add File</h4>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddFileForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\nimport S3 from 'react-aws-s3';\nimport io from 'socket.io-client';\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport UserAddressList from '../../components/lists/user/UserAddressList'\nimport UserAttendanceList from '../../components/lists/user/UserAttendanceList'\nimport UserLeaveList from '../../components/lists/user/UserLeaveList'\nimport UserImageList from '../../components/lists/user/UserImageList'\nimport UserFileList from '../../components/lists/user/UserFileList'\nimport UserAppointmentList from '../../components/lists/user/UserAppointmentList'\nimport UserNoteList from '../../components/lists/user/UserNoteList'\n\nimport FilterAddressForm from '../../components/forms/filter/FilterAddressForm';\nimport FilterAttendanceForm from '../../components/forms/filter/FilterAttendanceForm';\nimport FilterLeaveForm from '../../components/forms/filter/FilterLeaveForm';\nimport FilterImageForm from '../../components/forms/filter/FilterImageForm';\nimport FilterFileForm from '../../components/forms/filter/FilterFileForm';\nimport FilterAppointmentForm from '../../components/forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../../components/forms/filter/FilterNoteForm';\n\nimport UpdateUserSingleFieldForm from '../../components/forms/add/UpdateUserSingleFieldForm';\nimport AddAddressForm from '../../components/forms/add/AddAddressForm';\nimport AddAttendanceForm from '../../components/forms/add/AddAttendanceForm';\nimport AddLeaveForm from '../../components/forms/add/AddLeaveForm';\nimport AddNoteForm from '../../components/forms/add/AddNoteForm';\nimport AddImageForm from '../../components/forms/add/AddImageForm';\nimport AddFileForm from '../../components/forms/add/AddFileForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './profile.css';\n\nclass MyProfilePage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    calendarAttendance: null,\n    calendarLeave: null,\n    calendarAppointments: null,\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.socket = io('http://localhost:9099');\n  }\n\ncomponentDidMount () {\n  console.log('...MyProfile component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getThisUser(seshStore);\n    this.getPocketVars(seshStore);\n\n  }\n}\ncomponentWillUnmount() {\n\n}\n\n\n\ngetPocketVars (args) {\n    console.log('...retriving pocketVars..');\n    this.context.setUserAlert('...retriving pocketVars..')\n    const token = args.token;\n    const activityId = args.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")}\n          `};\n          // fetch('http://localhost:8088/graphql', {\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        if (resData.errors) {\n          this.context.setUserAlert(resData.errors[0].message);\n        } else {\n          let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n          console.log('...retriving pocketVars success...');\n          this.context.setUserAlert('...retriving pocketVars success...')\n          this.setState({\n            pocketVars: pocketVarsParsed\n          });\n\n        }\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.context.setUserAlert(err);\n      });\n    }\ngetThisUser (args) {\n  console.log('...retrieving your profile info...');\n  this.context.setUserAlert('...retrieving your profile info...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getUserById(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\"\n      )\n      {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getUserById);\n      let responseAlert = '...profile retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.getUserById,\n        activityA: `getUserById?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.getUserById;\n\n      if (resData.data.getUserById.role === 'Admin') {\n        this.setState({\n          canDelete: true\n        })\n      }\n      this.parseForCalendar({\n        attendance: resData.data.getUserById.attendance,\n        leave: resData.data.getUserById.leave,\n        appointments: resData.data.getUserById.appointments,\n      })\n      this.logUserActivity(args);\n      this.props.sendSocketAdminMessage(`${activityId} just logged in...`);\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message)\n      }\n\n      if (resData.data.addUserActivity.error) {\n        this.context.setUserAlert(resData.data.addUserActivity.error)\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsubmitAddAddressForm = (event) => {\n  event.preventDefault();\n  console.log('...adding address...');\n  this.context.setUserAlert('...adding address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const number = event.target.number.value;\n  const street = event.target.street.value;\n  const town = event.target.town.value;\n  const city = event.target.city.value;\n  const parish = event.target.parish.value;\n  const country = event.target.country.value;\n  const postalCode = event.target.postalCode.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${number},\n          addressStreet:\"${street}\",\n          addressTown:\"${town}\",\n          addressCity:\"${city}\",\n          addressParish:\"${parish}\",\n          addressCountry:\"${country}\",\n          addressPostalCode:\"${postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAddress);\n      let responseAlert = '...address add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserAddress,\n        activityA: `addUserAddress?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAddress = (args) => {\n  console.log('...deleting address...');\n  this.context.setUserAlert('...deleting address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      mutation {deleteUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\",\n          addressPrimary: ${args.primary}\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAddress);\n      let responseAlert = '...address delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserAddress,\n        activityA: `deleteUserAddress?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.deleteUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsetAddressPrimary = (args) => {\n  console.log('...setting primary address...');\n  this.context.setUserAlert('...setting primary address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      mutation {setUserAddressPrimary(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.setUserAddressPrimary);\n      let responseAlert = '...address set primary success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.setUserAddressPrimary,\n        activityA: `setUserAddressPrimary?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.setUserAddressPrimary;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddAttendanceForm = (event) => {\n  event.preventDefault();\n  console.log('...adding attendance...');\n  this.context.setUserAlert('...attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const attendanceDate = event.target.date.value;\n  const attendanceStatus = event.target.status.value;\n  const attendanceDescription = event.target.description.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAttendance(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          attendanceDate:\"${attendanceDate}\",\n          attendanceStatus:\"${attendanceStatus}\",\n          attendanceDescription:\"${attendanceDescription}\"\n        })\n      {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAttendance);\n      let responseAlert = '...attendance add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserAttendance,\n        activityA: `addUserAttendance?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: resData.data.addUserAttendance.attendance,\n        leave: resData.data.addUserAttendance.leave,\n        appointments: resData.data.addUserAttendance.appointments,\n      })\n      this.context.activityUser = resData.data.addUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAttendance = (args) => {\n  console.log('...deleting attendance...');\n  this.context.setUserAlert('...deleting attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserAttendance(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            attendanceDate:\"${args.date}\",\n            attendanceStatus:\"${args.status}\",\n            attendanceDescription:\"${args.description}\"\n          }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAttendance);\n      let responseAlert = '...attendance delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserAttendance,\n        activityA: `deleteUserAttendance?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: resData.data.deleteUserAttendance.attendance,\n        leave: resData.data.deleteUserAttendance.leave,\n        appointments: resData.data.deleteUserAttendance.appointments,\n      })\n      this.context.activityUser = resData.data.deleteUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddLeaveForm = (event) => {\n  event.preventDefault();\n  console.log('...adding leave...');\n  this.context.setUserAlert('...leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const startDate = event.target.startDate.value;\n  const endDate = event.target.endDate.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserLeave(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          leaveType:\"${type}\",\n          leaveStartDate:\"${startDate}\",\n          leaveEndDate:\"${endDate}\",\n          leaveDescription:\"${description}\"\n        }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserLeave);\n      let responseAlert = '...leave add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserLeave,\n        activityA: `addUserLeave?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: resData.data.addUserLeave.attendance,\n        leave: resData.data.addUserLeave.leave,\n        appointments: resData.data.addUserLeave.appointments,\n      })\n      this.context.activityUser = resData.data.addUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteLeave = (args) => {\n  console.log('...deleting leave...');\n  this.context.setUserAlert('...deleting leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserLeave(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            leaveType:\"${args.type}\",\n            leaveStartDate:\"${args.startDate}\",\n            leaveEndDate:\"${args.endDate}\",\n            leaveDescription:\"${args.description}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserLeave);\n      let responseAlert = '...leave delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserLeave,\n        activityA: `deleteUserLeave?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: resData.data.addUserLeave.attendance,\n        leave: resData.data.addUserLeave.leave,\n        appointments: resData.data.addUseLeavce.appointments,\n      })\n      this.context.activityUser = resData.data.deleteUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding image...');\n  this.context.setUserAlert('...image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  const username = this.state.activityUser.username;\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+activityId+'/images';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addUserImage(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          imageName:\"${imageName}\",\n          imageType:\"${imageType}\",\n          imagePath:\"${imagePath}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserImage);\n      let responseAlert = '...image add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserImage,\n        activityA: `addUserImage?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n  console.log('...deleting image...');\n  this.context.setUserAlert('...deleting image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const username = this.state.activityUser.username;\n\n  const filePath = 'staff/'+username+'/images';\n  const filename = args.name;\n  // console.log('foo',filename);\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            imageName:\"${args.name}\",\n            imageType:\"${args.type}\",\n            imagePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserImage);\n      let responseAlert = '...image delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserImage,\n        activityA: `deleteUserImage?activityId:${activityId},userId:${userId}`,\n      });\n      this.context.activityUser = resData.data.deleteUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'staff/'+activityId+'/images';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding file...');\n  this.context.setUserAlert('...file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  const username = this.state.activityUser.username;\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+activityId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addUserFile(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          fileName:\"${file2Name}\",\n          fileType:\"${file2Type}\",\n          filePath:\"${file2Path}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserFile);\n      let responseAlert = '...file add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserFile,\n        activityA: `addUserFile?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n  console.log('...deleting file...');\n  this.context.setUserAlert('...deleting file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const username = this.state.activityUser.username;\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserFile(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            fileName:\"${args.name}\",\n            fileType:\"${args.type}\",\n            filePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserFile);\n      let responseAlert = '...file delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserFile,\n        activityA: `deleteUserFile?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.deleteUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'staff/'+activityId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding note...');\n  this.context.setUserAlert('...note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const note = event.target.note.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserNotes(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          notes:\"${note}\"\n        }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserNotes,\n        activityA: `addUserNotes?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n  console.log('...deleting note...');\n  this.context.setUserAlert('...deleting note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  let requestBody = {\n    query: `\n        mutation {deleteUserNote(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            note: \"${args}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserNote,\n        activityA: `deleteUserNote?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.deleteUserNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateUserSingleField(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateUserSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.updateUserSingleField,\n        activityA: `updateUserSingleField?activityId:${activityId},userId:${userId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.updateUserSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing profile dates for calendar...');\n  let calendarAttendance = args.attendance.map(x => ({\n      title: x.status,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        status: x.status,\n        description: x.description,\n        field: 'attendance'\n      }\n    }))\n  let calendarLeave = args.leave.map(x => ({\n      title: x.type,\n      date: moment.unix(x.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      end: moment.unix(x.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        type: x.type,\n        startDate: x.startDate,\n        endDate: x.endDate,\n        description: x.description,\n        field: 'leave'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave\n    })\n  let calendarAppointments = args.appointments.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n        field: 'appointments'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave,\n      calendarAppointments: calendarAppointments,\n    })\n}\n\nviewCalendarEvent = (args) => {\n\n  let input = args.event.extendedProps.props;\n  let data;\n  if (input.field === 'attendance') {\n    data = {\n      date: input.date,\n      status: input.status,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAttendance', data: data}\n    })\n  }\n  if (input.field === 'leave') {\n    data = {\n      type: input.type,\n      startDate: input.startDate,\n      endDate: input.endDate,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarLeave', data: data}\n    })\n  }\n  if (input.field === 'appointments') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      location: input.location,\n      description: input.description,\n      important: input.important,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAppointment', data: data, goLink: true}\n    })\n  }\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"profilePageContainer\">\n      <Row className=\"profilePageContainerRow headRow\">\n        <Col md={9} className=\"profilePageContainerCol\">\n          <h1 className=\"profileHeading\">Profile</h1>\n        </Col>\n        <Col md={3} className=\"profilePageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Row className=\"profilePageContainerRow mainRow\">\n        <Col md={2} className=\"profilePageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"profilePageContainerCol\">\n          {!this.state.activityUser && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"profilePageContainerRow mainRow2\">\n          <Col md={3} className=\"profilePageContainerCol specialCol1\">\n\n          {this.state.sideCol === 'menu' && (\n            <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n              <Nav.Item>\n                <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'address')}>Addresses</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'attendance')}>Attendance</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'leave')}>Leave</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'image')}>Images</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'file')}>Files</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'appointment')}>Appointments</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n              </Nav.Item>\n            </Nav>\n          )}\n          {this.state.sideCol === 'filter' && (\n            <Col>\n              {this.state.menuSelect === 'address' && (\n                <FilterAddressForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'attendance' && (\n                <FilterAttendanceForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'leave' && (\n                <FilterLeaveForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'image' && (\n                <FilterImageForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'file' && (\n                <FilterFileForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'appointment' && (\n                <FilterAppointmentForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'note' && (\n                <FilterNoteForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n            </Col>\n\n          )}\n          </Col>\n\n          {this.state.activityUser && (\n            <Col md={9} className=\"profilePageContainerCol specialCol2\">\n\n              {this.state.updateSingleField.state === true && (\n                <UpdateUserSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n\n              <Tab.Content className=\"tabContent\" >\n                <Tab.Pane eventKey=\"1\">\n                  <p className=\"displayPaneTitle\">Basic:</p>\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Title:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.title}</p>\n                      <p className=\"listGroupText\">Name:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.name}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Username:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.username}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                      <p className=\"listGroupText\">Role:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.role}</p>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">DOB:</p>\n                      <p className=\"listGroupText bold\">{moment.unix(this.state.activityUser.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                      <p className=\"listGroupText\">Age:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.age}</p>\n                      <p className=\"listGroupText\">Gender:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.gender}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                    <p className=\"listGroupText\">Email:</p>\n                    <p className=\"listGroupText bold\">{this.state.activityUser.contact.email}</p>\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                    <p className=\"listGroupText\">Phone:</p>\n                    <p className=\"listGroupText bold\">{this.state.activityUser.contact.phone}</p>\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                    <p className=\"listGroupText\">Phone 2:</p>\n                    <p className=\"listGroupText bold\">{this.state.activityUser.contact.phone2}</p>\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"2\">\n                  <p className=\"displayPaneTitle\">Admin:</p>\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Reg No:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.registrationNumber}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Employment Date:</p>\n                      {this.state.activityUser.employmentDate && (\n                        <p className=\"listGroupText bold\">{moment.unix(this.state.activityUser.employmentDate.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      )}\n\n                      {this.context.role === 'Admin' && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'employmentDate')}>Edit</Button>\n                      )}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser._id}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">LoggedIn:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.loggedIn.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">ClientConnected:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.clientConnected.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Verified:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.verification.verified.toString()}</p>\n                      <p className=\"listGroupText\">Type:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.verification.type}</p>\n                      <p className=\"listGroupText\">Code:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.verification.code}</p>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"3\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Addresses:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'address' && (\n                      <AddAddressForm\n                        onConfirm={this.submitAddAddressForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserAddressList\n                    filter={this.state.filter}\n                    addresses={this.state.activityUser.addresses}\n                    authId={this.state.activityUser._id}\n                    onDelete={this.deleteAddress}\n                    canDelete={this.state.canDelete}\n                    makePrimary={this.setAddressPrimary}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"4\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Attendance:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'attendance')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'attendance' && (\n                      <AddAttendanceForm\n                        onConfirm={this.submitAddAttendanceForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAttendanceList\n                      filter={this.state.filter}\n                      attendance={this.state.activityUser.attendance}\n                      authId={this.state.activityUser._id}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteAttendance}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAttendance}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"5\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Leave:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'leave')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'leave' && (\n                      <AddLeaveForm\n                        onConfirm={this.submitAddLeaveForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserLeaveList\n                      filter={this.state.filter}\n                      leave={this.state.activityUser.leave}\n                      authId={this.state.activityUser._id}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteLeave}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarLeave}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"6\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Images:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'image' && (\n                      <AddImageForm\n                        onConfirm={this.submitAddImageForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserImageList\n                    filter={this.state.filter}\n                    images={this.state.activityUser.images}\n                    authId={this.state.activityUser._id}showListDetails={this.showListDetails}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteImage}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"7\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Files:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'file' && (\n                      <AddFileForm\n                        onConfirm={this.submitAddFileForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserFileList\n                    filter={this.state.filter}\n                    files={this.state.activityUser.files}\n                    authId={this.state.activityUser._id}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteFile}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"8\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Appointments:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                  </Row>\n                  <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAppointmentList\n                      filter={this.state.filter}\n                      appointments={this.state.activityUser.appointments}\n                      authId={this.state.activityUser._id}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAppointments}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"9\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Notes:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'note' && (\n                      <AddNoteForm\n                        onConfirm={this.submitAddNoteForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserNoteList\n                    filter={this.state.filter}\n                    notes={this.state.activityUser.notes}\n                    authId={this.state.activityUser._id}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteNote}\n                  />\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default MyProfilePage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './authForms.css';\n\nconst LoginForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Login</h1>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"username\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control type=\"username\" placeholder=\"Enter username\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"password\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\" />\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Login</Button>\n      <Button variant=\"outline-primary\" onClick={props.onStartVerification}>Verify</Button>\n      <Button variant=\"outline-secondary\" className=\"loginFormBtn\" onClick={props.onStartForgotPassword}>ForgotPassword</Button>\n      <Button variant=\"outline-warning\" className=\"loginFormBtn\">\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default LoginForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst verifyUserForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n  <h1>Verify</h1>\n  <Form.Row>\n    <Form.Group className=\"searchInput\" controlId=\"type\">\n      <Form.Label>type</Form.Label>\n      <Form.Control as=\"select\">\n        <option>email</option>\n      </Form.Control>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"username\">\n      <Form.Label>username</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"username\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"email\">\n      <Form.Label>email</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"email\"/>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"code\">\n      <Form.Label>code</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"verification code\"/>\n    </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n    Verify\n    </Button>\n  )}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default verifyUserForm;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './ForgotPasswordForm.css';\n\nconst ForgotPasswordForm = (props) => {\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n  <h1>Forgot Password</h1>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"username\">\n      <Form.Label>Username</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"username\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"email\">\n      <Form.Label>email</Form.Label>\n      <Form.Control type=\"email\" placeholder=\"email\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">Request New Password</Button>\n  </Form.Row>\n</Form>\n</div>\n\n)};\n\nexport default ForgotPasswordForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from 'moment';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport LoginForm from '../../components/forms/auth/LoginForm';\nimport VerifyUserForm from '../../components/forms/auth/VerifyUserForm';\nimport ForgotPasswordForm from '../../components/forms/auth/ForgotPasswordForm';\n\nclass LoginPage extends Component {\n  state = {\n    verifying: false,\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    userSeshStore: false,\n    user: {},\n    activityA: null,\n    requestingPasswordReset: false,\n    showForm: 'login',\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...login component mounted...');;\n  }\n\n  submitLoginForm = (event) => {\n    event.preventDefault();\n    this.context.setUserAlert(\"...submitLoginForm...\")\n    console.log(\"...submitLoginForm...\");\n\n    const username = event.target.username.value;\n    const password = event.target.password.value;\n\n    if (username.trim().length === 0 || password.trim().length === 0) {\n      this.context.setUserAlert(\"...blank fields!!!...\")\n      return;\n    }\n    let requestBody = {\n        query: `\n          {login(username:\"${username}\",password:\"${password}\")\n          {activityId,role,token,tokenExpiration,error}}`\n        };\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.login);\n      let responseAlert = '...login success!...';\n      console.log('...login success...');\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (resData.data.login.error) {\n        error = resData.data.login.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      if (resData.data.login.token !== \"\") {\n        // this.context.login(\n        //   resData.data.login.token,\n        //   resData.data.login.activityId,\n        //   resData.data.login.role,\n        //   resData.data.login.tokenExpiration\n        // );\n        const sessionObject = {\n          token: resData.data.login.token,\n          activityId: resData.data.login.activityId,\n          role: resData.data.login.role,\n          tokenExpiration: resData.data.login.tokenExpiration\n        }\n        this.context.setUserAlert(responseAlert)\n       sessionStorage.setItem('logInfo', JSON.stringify(sessionObject));\n       console.log('...session storage set...');\n       this.setState({ activityA: `login?${sessionObject.activityId}`})\n       this.logUserActivity();\n\n       this.context.login(\n         resData.data.login.token,\n         resData.data.login.activityId,\n         resData.data.login.role,\n         resData.data.login.tokenExpiration\n       );\n      }\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n  };\n\n  logUserActivity() {\n    console.log('...logUserActivity...');\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    const activityId = seshStore.activityId;\n    const token = seshStore.token;\n    const userId = activityId;\n    const request = this.state.activityA;\n    const activityDate = moment().format('YYYY-MM-DD');\n    let requestBody = {\n      query: `\n        mutation {addUserActivity(\n          activityId:\"${activityId}\",userId:\"${userId}\",\n          userInput:{\n            activityDate:\"${activityDate}\",\n            activityRequest:\"${request}\"\n          })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n      `};\n    fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log('...resData...',resData.data.addUserActivity);\n        if (resData.errors) {\n          this.context.setUserAlert(resData.errors[0].message);\n        }\n        if (resData.data.addUserActivity.error) {\n          this.context.setUserAlert(resData.data.addUserActivity.error);\n          console.log('...resDataError...',resData.data.addUserActivity.error);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  verifyUser = (event) => {\n    event.preventDefault();\n    console.log('...verify user...');\n    const email = event.target.email.value;\n    const type = event.target.type.value;\n    const code = event.target.code.value;\n    const username = event.target.username.value;\n\n    const requestBody = {\n      query: `\n        mutation {verifyUser(\n          userInput:{\n            username:\"${username}\",\n            contactEmail:\"${email}\",\n            verificationType:\"${type}\",\n            verificationCode:\"${code}\"\n          }\n        )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log('...resData...',resData.data.verifyUser);\n        let responseAlert;\n        let error = null;\n\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n\n        this.context.setUserAlert(responseAlert)\n\n        this.context.setUserAlert('Verified...Please try loggin in again..')\n      })\n      .catch(err => {\n        this.context.setUserAlert(err)\n      });\n  }\n\n  toggleVerification = () => {\n    if (this.state.showForm === 'verify') {\n      this.setState({\n        showForm: 'login'\n      })\n    } else {\n      this.setState({\n        showForm: 'verify'\n      })\n    }\n\n  };\n  toggleForgotPassword = () => {\n    if (this.state.showForm === 'forgotPassword') {\n      this.setState({\n        showForm: 'login'\n      })\n    } else {\n      this.setState({\n        showForm: 'forgotPassword'\n      })\n    }\n\n  }\n\n  requestPasswordReset = (event) => {\n    event.preventDefault();\n    console.log('...requesting password reset...');\n    this.setState({isLoading: true})\n\n    const username = event.target.username.value;\n    const email = event.target.email.value;\n    const requestBody = {\n      query: `\n         mutation {requestPasswordReset(\n           userInput:{\n             username:\"${username}\",\n             contactEmail:\"${email}\"\n           })\n           {_id,username,contact{email}verification{verified,type,code}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log('...resData...',resData.data.requestPasswordReset)\n        if (resData.errors) {\n          this.context.setUserAlert(resData.errors[0].message);\n        } else {\n          this.context.setUserAlert('...password reset request sent...');\n          this.setState({isLoading: false, requestingPasswordReset: false});\n          this.toggleForgotPassword();\n        }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  render() {\n    return (\n      <Container className=\"authPageContainer\">\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n      {this.state.showForm === 'login' && (\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n            <LoginForm\n              onConfirm={this.submitLoginForm}\n              onStartForgotPassword={this.toggleForgotPassword}\n              onStartVerification={this.toggleVerification}\n            />\n          </Col>\n        </Row>\n      )}\n\n      {this.state.showForm === 'verify' && (\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n            <VerifyUserForm\n              canCancel\n              canConfirm\n              onCancel={this.toggleVerification}\n              onConfirm={this.verifyUser}\n            />\n          </Col>\n        </Row>\n      )}\n\n\n      {this.state.showForm === 'forgotPassword' && (\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n            <ForgotPasswordForm\n              onCancel={this.toggleForgotPassword}\n              onConfirm={this.requestPasswordReset}\n            />\n          </Col>\n        </Row>\n      )}\n\n      </Container>\n\n    );\n  }\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './authForms.css';\n\nconst SignupForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Signup</h1>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"email\">\n        <Form.Label>email Address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"password\">\n        <Form.Label>password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"password\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"role\">\n        <Form.Label>role</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Admin</option>\n          <option>Staff</option>\n          <option>Nurse</option>\n          <option>Doctor</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Mr</option>\n          <option>Mrs</option>\n          <option>Ms</option>\n          <option>Dr</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"name\">\n        <Form.Label>name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"username\">\n        <Form.Label>username</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"username\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"dob\">\n        <Form.Label>dob</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"gender\">\n        <Form.Label>gender</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Female</option>\n          <option>Male</option>\n          <option>Prefer Not to Say</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"phone\">\n        <Form.Label>phone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760001234\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"phone2\">\n        <Form.Label>phone2</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760005678\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressNumber\">\n        <Form.Label>addressNumber</Form.Label>\n        <Form.Control type=\"number\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressStreet\">\n        <Form.Label>addressStreet</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressTown\">\n        <Form.Label>addressTown</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressCity\">\n        <Form.Label>addressCity</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressParish\">\n        <Form.Label>addressParish</Form.Label>\n        <Form.Control as=\"select\">\n          <option>none</option>\n          <option>Hanover</option>\n          <option>St. Elizabeth</option>\n          <option>St. James</option>\n          <option>Trelawny</option>\n          <option>Westmoreland</option>\n          <option>Clarendon</option>\n          <option>Manchester</option>\n          <option>St. Ann</option>\n          <option>St. Catherine</option>\n          <option>St. Mary</option>\n          <option>Kingston</option>\n          <option>St. Andrew</option>\n          <option>Portland</option>\n          <option>St. Thomas</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressCountry\">\n        <Form.Label>addressCountry</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressPostalCode\">\n        <Form.Label>addressPostalCode</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Signup</Button>\n    </Form.Row>\n    <Form.Row>\n      <Button variant=\"outline-warning\" className=\"loginFormBtn\">\n        <NavLink to=\"/login\">Login</NavLink>\n      </Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default SignupForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from 'moment';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport SignupForm from '../../components/forms/auth/SignupForm';\n\nclass SignUpPage extends Component {\n  state = {\n    verifying: false,\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    userSeshStore: false,\n    user: {},\n    activityA: null,\n    requestingPasswordReset: false,\n    signupStatus: null,\n    invited: false,\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...signup component mounted...');\n    // this.context.setUserAlert('...signup component mounted...')\n  }\n\n\n  submitSignupForm = (event) => {\n    event.preventDefault();\n    this.context.setUserAlert(\"...submitSignupForm...\")\n    console.log(\"...submitSignupForm...\");\n\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n    const role = event.target.role.value;\n    const name = event.target.name.value;\n    const title = event.target.title.value;\n    const username = event.target.username.value;\n    const dob = event.target.dob.value;\n    const gender = event.target.gender.value;\n    const phone = event.target.phone.value;\n    const phone2 = event.target.phone2.value;\n    const addressNumber = event.target.addressNumber.value;\n    const addressStreet = event.target.addressStreet.value;\n    const addressTown = event.target.addressTown.value;\n    const addressCity = event.target.addressCity.value;\n    const addressParish = event.target.addressParish.value;\n    const addressCountry = event.target.addressCountry.value;\n    const addressPostalCode = event.target.addressPostalCode.value;\n\n    if (email.trim().length === 0 ||\n        password.trim().length === 0 ||\n        role.trim().length === 0 ||\n        name.trim().length === 0 ||\n        username.trim().length === 0 ||\n        dob.trim().length === 0 ||\n        gender.trim().length === 0 ||\n        phone.trim().length === 0 ||\n        phone2.trim().length === 0 ||\n        addressNumber.trim().length === 0 ||\n        addressStreet.trim().length === 0 ||\n        addressTown.trim().length === 0 ||\n        addressCity.trim().length === 0 ||\n        addressParish.trim().length === 0 ||\n        addressCountry.trim().length === 0 ||\n        addressPostalCode.trim().length === 0\n        ) {\n      this.context.setUserAlert(\"...blank fields!!!...\");\n      return;\n    }\n    let requestBody = {\n        query: `\n            mutation {createUser(\n              userInput:{\n                password:\"${password}\",\n                title:\"${title}\",\n                name:\"${name}\",\n                role:\"${role}\",\n                username:\"${username}\",\n                dob:\"${dob}\",\n                gender:\"${gender}\",\n                contactPhone:\"${phone}\",\n                contactPhone2:\"${phone2}\",\n                contactEmail:\"${email}\",\n                addressNumber:${addressNumber},\n                addressStreet:\"${addressStreet}\",\n                addressTown:\"${addressTown}\",\n                addressCity:\"${addressCity}\",\n                addressParish:\"${addressParish}\",\n                addressCountry:\"${addressCountry}\",\n                addressPostalCode:\"${addressPostalCode}\"\n              }\n            )\n            {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n          `};\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createUser);\n      let responseAlert = '...Signup success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      responseAlert = '...verificationCode: '+resData.data.createUser.verification.code+'';\n      this.context.setUserAlert(responseAlert);\n      this.setState({signupStatus: 'success'})\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n  };\n\n  submitInviteForm = (event) => {\n    event.preventDefault()\n    console.log('...checking inviteCode...');\n    this.context.setUserAlert('...checking inviteCode...')\n\n    const challenge = event.target.inviteCode.value;\n\n    let requestBody = {\n        query: `\n            query {verifyInvitation(challenge:\"${challenge}\")}\n          `};\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data);\n      let responseAlert = '...Signup success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert);\n\n      const result = resData.data.verifyInvitation;\n      if (result === 'matched') {\n        this.setState({invited: true})\n        this.context.setUserAlert('...invite code accepted...');\n      } else {\n        this.context.setUserAlert('...invite code rejected. Check & try again...');\n      }\n\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n\n\n  }\n\n\n  render() {\n    return (\n      <Container className=\"authPageContainer\">\n        {this.state.overlay === true && (\n          <LoadingOverlay\n            status={this.state.overlayStatus}\n          />\n        )}\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n          {this.state.invited !== true && (\n            <React.Fragment>\n            <Form onSubmit={this.submitInviteForm}>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"inviteCode\">\n                  <Form.Label>inviteCode</Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"inviteCode\"/>\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row className=\"formBtnRow\">\n                <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Submit</Button>\n              </Form.Row>\n            </Form>\n            </React.Fragment>\n          )}\n\n          {this.state.signupStatus !== 'success' &&\n          this.state.invited === true && (\n            <SignupForm\n              onConfirm={this.submitSignupForm}\n            />\n          )}\n          {this.state.signupStatus === 'success' && (\n            <React.Fragment>\n              <h1>SignUp Success...Proceed to Login</h1>\n              <Button variant=\"outline-warning\" className=\"loginFormBtn\">\n                <NavLink to=\"/login\">Login</NavLink>\n              </Button>\n            </React.Fragment>\n          )}\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default SignUpPage;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { NavLink } from 'react-router-dom';\nimport './CreateUserForm.css';\n\nconst ResetPasswordForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n\n<Form onSubmit={props.onConfirm}>\n  <h1>Reset Password</h1>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"verificationCode\">\n      <Form.Label>verificationCode</Form.Label>\n      <Form.Control type=\"text\" value={props.verf}/>\n    </Form.Group>\n  </Form.Row>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"password\">\n    <Form.Label>password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"password\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n    Reset\n    </Button>\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>\n      <NavLink to=\"/landing\">Cancel</NavLink>\n    </Button>\n  </Form.Row>\n</Form>\n\n</div>\n\n)};\n\nexport default ResetPasswordForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { useParams, NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from 'moment';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport ResetPasswordForm from '../../components/forms/auth/ResetPasswordForm';\n\nclass PasswordResetPage extends Component {\n  state = {\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    passwordResetStatus: null,\n    user: {},\n    activityA: null,\n    activityId: null,\n    verfCode: null,\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...password component mounted...');\n    console.log();\n    this.setState({\n      activityId: this.props.location.pathname.split('@')[0].split('/')[2],\n      verfCode: this.props.location.pathname.split('@')[1]\n    })\n  }\n\n\n  submitResetPasswordForm = (event) => {\n    event.preventDefault();\n    this.context.setUserAlert(\"...submitSignupForm...\")\n    console.log(\"...submitSignupForm...\");\n\n    const password = event.target.password.value;\n    const verificationCode = this.state.verfCode;\n    const userId = this.state.activityId;\n    if (password.trim().length === 0 ||\n        verificationCode.trim().length === 0\n        ) {\n      this.context.setUserAlert(\"...blank fields!!!...\");\n      return;\n    }\n    let requestBody = {\n        query: `\n            mutation {resetUserPassword(\n              userId:\"${userId}\",\n              userInput:{\n                verificationCode:\"${verificationCode}\",\n                password:\"${password}\"\n              })\n            {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n          `};\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      console.log('...resData...',resData.data.resetUserPassword);\n      let responseAlert = '...Password Reset Success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert);\n      this.setState({passwordResetStatus: 'success'})\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n  };\n\n\n  render() {\n    return (\n      <Container className=\"authPageContainer\">\n        {this.state.overlay === true && (\n          <LoadingOverlay\n            status={this.state.overlayStatus}\n          />\n        )}\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n          {this.state.passwordResetStatus !== 'success' && (\n            <ResetPasswordForm\n              onConfirm={this.submitResetPasswordForm}\n              verf={this.state.verfCode}\n            />\n          )}\n          {this.state.passwordResetStatus === 'success' && (\n            <React.Fragment>\n              <h1>Reset Success...Proceed to Login</h1>\n              <Button variant=\"outline-warning\" className=\"loginFormBtn\">\n                <NavLink to=\"/login\">Login</NavLink>\n              </Button>\n            </React.Fragment>\n          )}\n\n\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default PasswordResetPage;\n","import React from 'react';\n\nimport UserItem from '../../items/user/UserItem';\nimport './UserList.css';\n\nconst SearchUserList = props => {\n\n  const {...filter} = props.filter;\n  let users2 = props.users;\n  let propsUsers = [];\n\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'loggedIn') {\n    propsUsers = users2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field !== 'staff') {\n    propsUsers = users2;\n  }\n\n  let count = 0;\n\n  const users = propsUsers.map(user => {\n\n    count = propsUsers.indexOf(user)+1;\n\n    return (\n      <UserItem\n        key={count}\n        user={user}\n        canDelete={props.canDelete}\n        showDetails={props.showDetails}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{users}</ul>;\n};\n\nexport default SearchUserList;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\nimport S3 from 'react-aws-s3';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport UserAddressList from '../lists/user/UserAddressList'\nimport UserAttendanceList from '../lists/user/UserAttendanceList'\nimport UserLeaveList from '../lists/user/UserLeaveList'\nimport UserImageList from '../lists/user/UserImageList'\nimport UserFileList from '../lists/user/UserFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport UserNoteList from '../lists/user/UserNoteList'\n\nimport FilterAddressForm from '../forms/filter/FilterAddressForm';\nimport FilterAttendanceForm from '../forms/filter/FilterAttendanceForm';\nimport FilterLeaveForm from '../forms/filter/FilterLeaveForm';\nimport FilterImageForm from '../forms/filter/FilterImageForm';\nimport FilterFileForm from '../forms/filter/FilterFileForm';\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../forms/filter/FilterNoteForm';\n\nimport UpdateUserSingleFieldForm from '../forms/add/UpdateUserSingleFieldForm';\nimport AddAddressForm from '../forms/add/AddAddressForm';\nimport AddAttendanceForm from '../forms/add/AddAttendanceForm';\nimport AddLeaveForm from '../forms/add/AddLeaveForm';\nimport AddNoteForm from '../forms/add/AddNoteForm';\nimport AddImageForm from '../forms/add/AddImageForm';\nimport AddFileForm from '../forms/add/AddFileForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass UserDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    calendarAttendance: null,\n    calendarLeave: null,\n    calendarAppointments: null,\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    // this.props2 = this.props;\n  }\n\ncomponentDidMount () {\n  console.log('...staff details component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getPocketVars(seshStore);\n  }\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.setState({\n    selectedUser: this.context.selectedUser\n  })\n\n  this.parseForCalendar({\n    attendance: this.props.user.attendance,\n    leave: this.props.user.leave,\n    appointments: this.props.user.appointments,\n  })\n}\n// componentDidUpdate () {\n//   console.log('foo',this.props.user.appointments);\n// }\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n    console.log('...retriving pocketVars..');\n    this.context.setUserAlert('...retriving pocketVars..')\n    const token = args.token;\n    const activityId = args.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")}\n          `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          this.setState({userAlert: resData.errors[0].message})\n        } else {\n          let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n          console.log('...retriving pocketVars success...');\n          this.context.setUserAlert('...retriving pocketVars success...')\n          this.setState({\n            pocketVars: pocketVarsParsed\n          });\n        }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n    }\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message)\n      }\n      if (resData.data.addUserActivity.error) {\n        this.context.setUserAlert(resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\n\nsubmitAddAddressForm = (event) => {\n  event.preventDefault();\n  console.log('...adding address...');\n  this.context.setUserAlert('...adding address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const number = event.target.number.value;\n  const street = event.target.street.value;\n  const town = event.target.town.value;\n  const city = event.target.city.value;\n  const parish = event.target.parish.value;\n  const country = event.target.country.value;\n  const postalCode = event.target.postalCode.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${number},\n          addressStreet:\"${street}\",\n          addressTown:\"${town}\",\n          addressCity:\"${city}\",\n          addressParish:\"${parish}\",\n          addressCountry:\"${country}\",\n          addressPostalCode:\"${postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAddress);\n      let responseAlert = '...address add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserAddress)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserAddress,\n        activityA: `addUserAddress?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAddress = (args) => {\n  console.log('...deleting address...');\n  this.context.setUserAlert('...deleting address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\",\n          addressPrimary: ${args.primary}\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAddress);\n      let responseAlert = '...address delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserAddress)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserAddress,\n        activityA: `deleteUserAddress?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsetAddressPrimary = (args) => {\n  console.log('...setting primary address...');\n  this.context.setUserAlert('...setting primary address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n      mutation {setUserAddressPrimary(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.setUserAddressPrimary);\n      let responseAlert = '...address set primary success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.setUserAddressPrimary)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.setUserAddressPrimary,\n        activityA: `setUserAddressPrimary?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.setUserAddressPrimary;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddAttendanceForm = (event) => {\n  event.preventDefault();\n  console.log('...adding attendance...');\n  this.context.setUserAlert('...attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const attendanceDate = event.target.date.value;\n  const attendanceStatus = event.target.status.value;\n  const attendanceDescription = event.target.description.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAttendance(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          attendanceDate:\"${attendanceDate}\",\n          attendanceStatus:\"${attendanceStatus}\",\n          attendanceDescription:\"${attendanceDescription}\"\n        })\n      {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAttendance);\n      let responseAlert = '...attendance add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserAttendance)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserAttendance,\n        activityA: `addUserAttendance?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.addUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAttendance = (args) => {\n  console.log('...deleting attendance...');\n  this.context.setUserAlert('...deleting attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserAttendance(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            attendanceDate:\"${args.date}\",\n            attendanceStatus:\"${args.status}\",\n            attendanceDescription:\"${args.description}\"\n          }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAttendance);\n      let responseAlert = '...attendance delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserAttendance)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserAttendance,\n        activityA: `deleteUserAttendance?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.deleteUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddLeaveForm = (event) => {\n  event.preventDefault();\n  console.log('...adding leave...');\n  this.context.setUserAlert('...leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const startDate = event.target.startDate.value;\n  const endDate = event.target.endDate.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserLeave(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          leaveType:\"${type}\",\n          leaveStartDate:\"${startDate}\",\n          leaveEndDate:\"${endDate}\",\n          leaveDescription:\"${description}\"\n        }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserLeave);\n      let responseAlert = '...leave add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserLeave)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserLeave,\n        activityA: `addUserLeave?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.addUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteLeave = (args) => {\n  console.log('...deleting leave...');\n  this.context.setUserAlert('...deleting leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserLeave(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            leaveType:\"${args.type}\",\n            leaveStartDate:\"${args.startDate}\",\n            leaveEndDate:\"${args.endDate}\",\n            leaveDescription:\"${args.description}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserLeave);\n      let responseAlert = '...leave delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserLeave)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserLeave,\n        activityA: `deleteUserLeave?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.deleteUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding image...');\n  this.context.setUserAlert('...image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const username = this.props.user.username;\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+userId+'/images';\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addUserImage(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          imageName:\"${imageName}\",\n          imageType:\"${imageType}\",\n          imagePath:\"${imagePath}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserImage);\n      let responseAlert = '...image add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserImage)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserImage,\n        activityA: `addUserImage?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n  console.log('...deleting image...');\n  this.context.setUserAlert('...deleting image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const username = this.props.user.username;\n\n  const filePath = 'staff/'+username+'/images';\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            imageName:\"${args.name}\",\n            imageType:\"${args.type}\",\n            imagePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserImage);\n      let responseAlert = '...image delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserImage)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserImage,\n        activityA: `deleteUserImage?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'staff/'+userId+'/images';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding file...');\n  this.context.setUserAlert('...file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  const username = this.props.user.username;\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+userId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n      mutation {addUserFile(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          fileName:\"${file2Name}\",\n          fileType:\"${file2Type}\",\n          filePath:\"${file2Path}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserFile);\n      let responseAlert = '...file add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserFile)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserFile,\n        activityA: `addUserFile?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n  console.log('...deleting file...');\n  this.context.setUserAlert('...deleting file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const username = this.props.user.username;\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserFile(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            fileName:\"${args.name}\",\n            fileType:\"${args.type}\",\n            filePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserFile);\n      let responseAlert = '...file delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserFile)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserFile,\n        activityA: `deleteUserFile?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'staff/'+userId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding note...');\n  this.context.setUserAlert('...note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const note = event.target.note.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserNotes(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          notes:\"${note}\"\n        }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserNotes)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserNotes,\n        activityA: `addUserNotes?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n  console.log('...deleting note...');\n  this.context.setUserAlert('...deleting note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  let requestBody = {\n    query: `\n        mutation {deleteUserNote(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            note: \"${args}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserNote)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserNote,\n        activityA: `deleteUserNote?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateUserSingleField(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateUserSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.updateUserSingleField)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.updateUserSingleField,\n        activityA: `updateUserSingleField?activityId:${activityId},userId:${userId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.updateUserSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing staff dates for calendar...');\n  let calendarAttendance = args.attendance.map(x => ({\n      title: x.status,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        status: x.status,\n        description: x.description,\n        field: 'attendance'\n      }\n    }))\n  let calendarLeave = args.leave.map(x => ({\n      title: x.type,\n      date: moment.unix(x.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      end: moment.unix(x.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        type: x.type,\n        startDate: x.startDate,\n        endDate: x.endDate,\n        description: x.description,\n        field: 'leave'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave\n    })\n  let calendarAppointments = args.appointments.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n        field: 'appointments'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave,\n      calendarAppointments: calendarAppointments,\n    })\n}\n\nviewCalendarEvent = (args) => {\n\n  let input = args.event.extendedProps.props;\n  let data;\n  if (input.field === 'attendance') {\n    data = {\n      date: input.date,\n      status: input.status,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAttendance', data: data}\n    })\n  }\n  if (input.field === 'leave') {\n    data = {\n      type: input.type,\n      startDate: input.startDate,\n      endDate: input.endDate,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarLeave', data: data}\n    })\n  }\n  if (input.field === 'appointments') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      location: input.location,\n      description: input.description,\n      important: input.important,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAppointment', data: data, goLink: true}\n    })\n  }\n\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {\n            !this.props.user && (\n              <h3>...</h3>\n            )\n          }\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={2} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'address')}>Addresses</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'attendance')}>Attendance</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'leave')}>Leave</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'image')}>Images</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'file')}>Files</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'appointment')}>Appointments</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'address' && (\n                  <FilterAddressForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'attendance' && (\n                  <FilterAttendanceForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'leave' && (\n                  <FilterLeaveForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'image' && (\n                  <FilterImageForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'file' && (\n                  <FilterFileForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'appointment' && (\n                  <FilterAppointmentForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'note' && (\n                  <FilterNoteForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n\n            )}\n          </Col>\n\n          {this.props.user && (\n            <Col md={10} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdateUserSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n              <Tab.Content className=\"tabContent\">\n                <Tab.Pane eventKey=\"1\">\n                  User Basic:\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Title:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.title}</p>\n                      {this.state.canDelete === true && (\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                      )}\n                      <p className=\"listGroupText\">Name:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.name}</p>\n                      {this.state.canDelete === true && (\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'name')}>Edit</Button>\n                      )}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Username:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.username}</p>\n                      {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                      )}\n                      <p className=\"listGroupText\">Role:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.role}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">DOB:</p>\n                      <p className=\"listGroupText bold\">{moment.unix(this.props.user.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                      )}\n                      <p className=\"listGroupText\">Age:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.age}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Gender:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.gender}</p>\n                      {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                      )}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Email:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.contact.email}</p>\n                      {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                      )}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Phone:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.contact.phone}</p>\n                      {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                      )}\n                      <p className=\"listGroupText\">Phone 2:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.contact.phone2}</p>\n                      {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                      )}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p></p>\n                      <p></p>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"2\">\n                  User Admin\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Reg No:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.registrationNumber}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Employment Date:</p>\n                      {this.props.user.employmentDate && (\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.user.employmentDate.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      )}\n                      {this.context.role === 'Admin' && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'employmentDate')}>Edit</Button>\n                      )}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.props.user._id}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">LoggedIn:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.loggedIn.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">ClientConnected:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.clientConnected.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Verified:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.verification.verified.toString()}</p>\n                      <p className=\"listGroupText\">Type:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.verification.type}</p>\n                      <p className=\"listGroupText\">Code:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.verification.code}</p>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"3\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Address List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'address' && (\n                      <AddAddressForm\n                        onConfirm={this.submitAddAddressForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserAddressList\n                    filter={this.state.filter}\n                    addresses={this.props.user.addresses}\n                    authId={this.context.activityId}\n                    onDelete={this.deleteAddress}\n                    canDelete={this.state.canDelete}\n                    makePrimary={this.setAddressPrimary}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"4\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Attendance List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'attendance')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'attendance' && (\n                      <AddAttendanceForm\n                        onConfirm={this.submitAddAttendanceForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAttendanceList\n                      filter={this.state.filter}\n                      attendance={this.props.user.attendance}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteAttendance}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAttendance}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"5\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Leave List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'leave')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'leave' && (\n                      <AddLeaveForm\n                        onConfirm={this.submitAddLeaveForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserLeaveList\n                      filter={this.state.filter}\n                      leave={this.props.user.leave}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteLeave}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarLeave}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"6\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Image List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'image' && (\n                      <AddImageForm\n                        onConfirm={this.submitAddImageForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserImageList\n                    filter={this.state.filter}\n                    images={this.props.user.images}\n                    authId={this.context.activityId}\n                    showListDetails={this.showListDetails}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteImage}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"7\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User File List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'file' && (\n                      <AddFileForm\n                        onConfirm={this.submitAddFileForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserFileList\n                    filter={this.state.filter}\n                    files={this.props.user.files}\n                    authId={this.context.activityId}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteFile}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"8\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Appointment List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                  </Row>\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAppointmentList\n                      filter={this.state.filter}\n                      appointments={this.props.user.appointments}\n                      authId={this.context.activityId}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAppointments}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"9\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Notes:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'note' && (\n                      <AddNoteForm\n                        onConfirm={this.submitAddNoteForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserNoteList\n                    filter={this.state.filter}\n                    notes={this.props.user.notes}\n                    authId={this.context.activityId}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteNote}\n                  />\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default UserDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterUserForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"staff\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>username</option>\n          <option>title</option>\n          <option>role</option>\n          <option>dob</option>\n          <option>age</option>\n          <option>gender</option>\n          <option>loggedIn</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterUserForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport UserList from '../../components/lists/user/UserList';\nimport SearchUserList from '../../components/lists/user/SearchUserList';\nimport UserDetail from '../../components/details/UserDetail';\n\nimport FilterUserForm from '../../components/forms/filter/FilterUserForm';\nimport UserSearchForm from '../../components/forms/search/UserSearchForm';\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './staff.css';\n\nclass StaffPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    searchUsers: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    canDelete: false,\n    fromGoLink: null,\n    goLinkId: null,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all users component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    if (this.props.location.state) {\n      if (this.props.location.state.user) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.user\n        })\n      }\n    }\n    this.getAllUsers(seshStore);\n    if (this.props.selectedUser) {\n      console.log('...found existing user selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedUser: this.props.selectedUser\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      console.log('...all users retrieval success!...');\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkUser = resData.data.getAllUsers.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedUser: goLinkUser,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n        activityA: `getAllUsers?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message);\n      }\n      if (resData.data.error) {\n        this.context.setUserAlert(resData.data.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchUsers = (event) => {\n  event.preventDefault();\n  console.log('...searching users...');\n  this.context.setUserAlert('...searching users...')\n  // this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'age' ||\n      field === 'dob' ||\n      field === 'employmentDate' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'attendance.date' ||\n      field === 'leave.startDate' ||\n      field === 'leave.endDate'\n    ) {\n      regex = false;\n  }\n  console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getUsersByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getUsersByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getUsersByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getUsersByField);\n      }\n\n      let responseAlert = '...staff search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchUsers: resData.data.getUsersByFieldRegex,\n          activityA: `getUsersByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n        this.context.activityUser = resData.data.getUsersByFieldRegex;\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchUsers: resData.data.getUsersByField,\n          activityA: `getUsersByField?activityId:${activityId},userId:${userId}`\n        });\n        this.context.activityUser = resData.data.getUsersByField;\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nshowDetails = (args) => {\n  this.setState({\n    showDetails: true,\n    selectedUser: args,\n    tabKey: 'detail'\n  })\n  this.props.selectUser(args);\n  this.props.sendSocketNotification({userId:args._id,data:`${this.context.activityId} is watching you...`});\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nupdateUser = (args) => {\n  console.log('...updating user...');\n  this.setState({\n    selectedUser: args\n  })\n  this.props.selectUser(args);\n}\n\ndeleteUser = (args) => {\n  console.log('...deleteing user...',args);\n  this.context.setUserAlert('...deleteing user...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteUserById(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\"\n      )\n      {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserById);\n      let responseAlert = '...delete user success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteUserById?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllUsers({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n        <h1>Staff: {this.state.showDetails === true &&\n                      this.state.selectedUser &&\n                      this.state.tabKey === 'detail' && (\n                            this.state.selectedUser.name\n                          )}</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col md={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterUserForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.users && (\n            <Col md={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content>\n                <Tab.Pane eventKey=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                  <UserList\n                    filter={this.state.filter}\n                    users={this.state.users}\n                    authId={this.context.activityId}\n                    canDelete={this.state.canDelete}\n                    showDetails={this.showDetails}\n                    onDelete={this.deleteUser}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Staff</h3>\n                  <Row className=\"userSearchRow\">\n                    <UserSearchForm\n                      onConfirm={this.searchUsers}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchUsers && (\n                      <Button variant=\"outline-primary\" className=\"centered_btn\" onClick={this.toggleSideCol}>Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchUsers && (\n                      <SearchUserList\n                        filter={this.state.filter}\n                        users={this.state.searchUsers}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedUser && (\n                  <UserDetail\n                    user={this.state.selectedUser}\n                    updateUser={this.updateUser}\n                  />\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default StaffPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './createForms.css';\nimport moment from 'moment';\n\nconst CreatePatientForm = (props) => {\n  const today = moment().format('YYYY-MM-DD')\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Create Patient Form</h1>\n    <p> \"*\" denotes required fields...</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"active\">\n        <Form.Label>Active</Form.Label>\n        <Form.Control as=\"select\">\n          <option>false</option>\n          <option>true</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>Title *</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Mr</option>\n          <option>Mrs</option>\n          <option>Ms</option>\n          <option>Dr</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"name\">\n        <Form.Label>First Name *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"lastName\">\n        <Form.Label>Last Name *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"last name\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"username\">\n        <Form.Label>username *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"username\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"dob\">\n        <Form.Label>dob *</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"gender\">\n        <Form.Label>gender *</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Female</option>\n          <option>Male</option>\n          <option>Prefer Not to Say</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"role\">\n        <Form.Label>role </Form.Label>\n        <Form.Control type=\"text\" value=\"standard patient\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"contactEmail\">\n        <Form.Label>email *</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"contactPhone\">\n        <Form.Label>phone *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760001234\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"contactPhone2\">\n        <Form.Label>phone2</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760005678\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressNumber\">\n        <Form.Label>addressNumber</Form.Label>\n        <Form.Control type=\"number\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressStreet\">\n        <Form.Label>addressStreet</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressTown\">\n        <Form.Label>addressTown</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressCity\">\n        <Form.Label>addressCity</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressParish\">\n        <Form.Label>addressParish</Form.Label>\n        <Form.Control as=\"select\">\n          <option>none</option>\n          <option>Hanover</option>\n          <option>St. Elizabeth</option>\n          <option>St. James</option>\n          <option>Trelawny</option>\n          <option>Westmoreland</option>\n          <option>Clarendon</option>\n          <option>Manchester</option>\n          <option>St. Ann</option>\n          <option>St. Catherine</option>\n          <option>St. Mary</option>\n          <option>Kingston</option>\n          <option>St. Andrew</option>\n          <option>Portland</option>\n          <option>St. Thomas</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressCountry\">\n        <Form.Label>addressCountry</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressPostalCode\">\n        <Form.Label>addressPostalCode</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"referralDate\">\n        <Form.Label>referralDate: YYYY-MM-DD</Form.Label>\n        <Form.Control type=\"date\" placeholder={today}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"referralReason\">\n        <Form.Label>referralReason</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"referralReason\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"referralPhysicianName\">\n        <Form.Label>referralPhysicianName</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"referralPhysicianName\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"referralPhysicianPhone\">\n        <Form.Label>referralPhysicianPhone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"referralPhysicianPhone\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"referralPhysicianEmail\">\n        <Form.Label>referralPhysicianEmail</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"referralPhysicianAddress\">\n        <Form.Label>referralPhysicianAddress</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"referralPhysicianAddress\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"attendingPhysician\">\n        <Form.Label>attendingPhysician</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"attendingPhysician\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"occupationRole\">\n        <Form.Label>occupationRole</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"occupationRole\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"occupationEmployerName\">\n        <Form.Label>occupationEmployerName</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"occupationEmployerName\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"occupationEmployerEmail\">\n        <Form.Label>occupationEmployerEmail</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"occupationEmployerPhone\">\n        <Form.Label>occupationEmployerPhone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"occupationEmployerPhone\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"occupationEmployerAddress\">\n        <Form.Label>occupationEmployerAddress</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"occupationEmployerAddress\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"occupationEmployerAddress\">\n        <Form.Label>occupationEmployerAddress</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"occupationEmployerAddress\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"insuranceCompany\">\n        <Form.Label>insuranceCompany</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"insuranceCompany\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"insurancePolicyNumber\">\n        <Form.Label>insurancePolicyNumber</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"insurancePolicyNumber\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"insuranceExpiryDate\">\n        <Form.Label>insuranceExpiryDate</Form.Label>\n        <Form.Control type=\"date\" placeholder={today}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"insuranceDescription\">\n        <Form.Label>insuranceDescription</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"insuranceDescription\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"insuranceSubscriberCompany\">\n        <Form.Label>insuranceSubscriberCompany</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"insuranceSubscriberCompany\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"insuranceSubscriberDescription\">\n        <Form.Label>insuranceSubscriberDescription</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"insuranceSubscriberDescription\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Create</Button>\n      <Button variant=\"outline-danger\" className=\"loginFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default CreatePatientForm;\n","import React from 'react';\n\nimport PatientItem from '../../items/patient/PatientItem';\nimport './UserList.css';\n\nconst SearchPatientList = props => {\n\n  const {...filter} = props.filter;\n  let patients2 = props.patients;\n  let propsPatients = [];\n\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'loggedIn') {\n    propsPatients = patients2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field === 'patient' && filter.key === 'active') {\n    propsPatients = patients2.filter(x => x.active === filter.value);\n  }\n\n  if (filter.field !== 'patient') {\n    propsPatients = patients2;\n  }\n\n  let count = 0;\n\n  const patients = propsPatients.map(patient => {\n\n    count = propsPatients.indexOf(patient)+1;\n\n    return (\n      <PatientItem\n        key={count}\n        patient={patient}\n        canDelete={props.canDelete}\n        showDetails={props.showDetails}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{patients}</ul>;\n};\n\nexport default SearchPatientList;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { PDFViewer, Page, Text, View, Document, StyleSheet, Image } from '@react-pdf/renderer';\nimport moment from 'moment';\nimport loadingGif from '../../assets/loading.gif';\nimport letterHead from '../../assets/letterhead.jpg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport \"./pdfview.css\"\n\n\nconst styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35,\n  },\n  title: {\n    fontSize: 24,\n    textAlign: 'center',\n    fontFamily: 'Times-Roman'\n  },\n  author: {\n    fontSize: 12,\n    textAlign: 'center',\n    marginBottom: 40,\n  },\n  subtitle: {\n    fontSize: 18,\n    margin: 12,\n    fontFamily: 'Times-Roman'\n  },\n  text: {\n    margin: 12,\n    fontSize: 14,\n    textAlign: 'justify',\n    fontFamily: 'Times-Roman'\n  },\n  image: {\n    // marginVertical: 15,\n    // marginHorizontal: 100,\n  },\n  header: {\n    fontSize: 12,\n    marginBottom: 20,\n    textAlign: 'center',\n    color: 'grey',\n  },\n  pageNumber: {\n    position: 'absolute',\n    fontSize: 12,\n    bottom: 30,\n    left: 0,\n    right: 0,\n    textAlign: 'center',\n    color: 'grey',\n  },\n\n  page: {\n    flexDirection: 'row',\n    backgroundColor: '#E4E4E4'\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1\n  }\n\n});\n\n\n\nconst PdfView = (props) =>{\n\nreturn (\n  <div className=\"pdfViewBg\">\n    <div className=\"pdfView\">\n\n    <Col className=\"pdfViewClose\">\n    <Button variant=\"outline-danger\" size=\"sm\" class=\"centered_btn\" onClick={props.close}>X</Button>\n    </Col>\n    <Col className=\"pdfViewCol\">\n    <h3>Document Generator</h3>\n    </Col>\n\n    <PDFViewer className=\"viewer\">\n\n    {props.pdfViewData.type === 'test' && (\n      <Document>\n        <Page style={styles.body}>\n          <Image\n            style={styles.image}\n            src={letterHead}\n          />\n\n          <Text style={styles.title}>{props.pdfViewData.type}</Text>\n          <Text style={styles.author}>Miguel de Cervantes</Text>\n\n\n          <Text style={styles.subtitle}>\n            Patient name: {props.patient.name}\n          </Text>\n          <Text style={styles.text}>\n            En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha\n            mucho tiempo que vivía un hidalgo de los de lanza en astillero, adarga\n            antigua, rocín flaco y galgo corredor. Una olla de algo más vaca que\n            carnero, salpicón las más noches, duelos y quebrantos los sábados,\n            lentejas los viernes, algún palomino de añadidura los domingos,\n            consumían las tres partes de su hacienda. El resto della concluían sayo\n            de velarte, calzas de velludo para las fiestas con sus pantuflos de lo\n            mismo, los días de entre semana se honraba con su vellori de lo más\n            fino. Tenía en su casa una ama que pasaba de los cuarenta, y una sobrina\n            que no llegaba a los veinte, y un mozo de campo y plaza, que así\n            ensillaba el rocín como tomaba la podadera. Frisaba la edad de nuestro\n            hidalgo con los cincuenta años, era de complexión recia, seco de carnes,\n            enjuto de rostro; gran madrugador y amigo de la caza. Quieren decir que\n            tenía el sobrenombre de Quijada o Quesada (que en esto hay alguna\n            diferencia en los autores que deste caso escriben), aunque por\n            conjeturas verosímiles se deja entender que se llama Quijana; pero esto\n            importa poco a nuestro cuento; basta que en la narración dél no se salga\n            un punto de la verdad\n          </Text>\n          <Text style={styles.text}>\n            _________________________________________________________\n          </Text>\n          <Text style={styles.text}>\n            Con estas y semejantes razones perdía el pobre caballero el juicio, y\n            desvelábase por entenderlas, y desentrañarles el sentido, que no se lo\n            sacara, ni las entendiera el mismo Aristóteles, si resucitara para sólo\n            ello. No estaba muy bien con las heridas que don Belianis daba y\n            recibía, porque se imaginaba que por grandes maestros que le hubiesen\n            curado, no dejaría de tener el rostro y todo el cuerpo lleno de\n            cicatrices y señales; pero con todo alababa en su autor aquel acabar su\n            libro con la promesa de aquella inacabable aventura, y muchas veces le\n            vino deseo de tomar la pluma, y darle fin al pie de la letra como allí\n            se promete; y sin duda alguna lo hiciera, y aun saliera con ello, si\n            otros mayores y continuos pensamientos no se lo estorbaran. Tuvo muchas\n            veces competencia con el cura de su lugar (que era hombre docto graduado\n            en Sigüenza), sobre cuál había sido mejor caballero, Palmerín de\n            Inglaterra o Amadís de Gaula; mas maese Nicolás, barbero del mismo\n            pueblo, decía que ninguno llegaba al caballero del Febo, y que si alguno\n            se le podía comparar, era don Galaor, hermano de Amadís de Gaula, porque\n            tenía muy acomodada condición para todo; que no era caballero\n            melindroso, ni tan llorón como su hermano, y que en lo de la valentía no\n            le iba en zaga.\n          </Text>\n          <Text style={styles.text}>\n            En resolución, él se enfrascó tanto en su lectura, que se le pasaban las\n            noches leyendo de claro en claro, y los días de turbio en turbio, y así,\n            del poco dormir y del mucho leer, se le secó el cerebro, de manera que\n            vino a perder el juicio. Llenósele la fantasía de todo aquello que leía\n            en los libros, así de encantamientos, como de pendencias, batallas,\n            desafíos, heridas, requiebros, amores, tormentas y disparates\n            imposibles, y asentósele de tal modo en la imaginación que era verdad\n            toda aquella máquina de aquellas soñadas invenciones que leía, que para\n            él no había otra historia más cierta en el mundo.\n          </Text>\n          <Text style={styles.subtitle} break>\n            Capítulo II: Que trata de la primera salida que de su tierra hizo el\n            ingenioso Don Quijote\n          </Text>\n\n          <Text style={styles.text}>\n            Hechas, pues, estas prevenciones, no quiso aguardar más tiempo a poner\n            en efeto su pensamiento, apretándole a ello la falta que él pensaba que\n            hacía en el mundo su tardanza, según eran los agravios que pensaba\n            deshacer, tuertos que enderezar, sinrazones que emendar y abusos que\n            mejorar y deudas que satisfacer. Y así, sin dar parte a persona alguna\n            de su intención y sin que nadie le viese, una mañana, antes del día, que\n            era uno de los calurosos del mes de Julio, se armó de todas sus armas,\n            subió sobre Rocinante, puesta su mal compuesta celada, embrazó su\n            adarga, tomó su lanza y por la puerta falsa de un corral salió al campo\n            con grandísimo contento y alborozo de ver con cuánta facilidad había\n            dado principio a su buen deseo. Mas apenas se vio en el campo cuando le\n            asaltó un pensamiento terrible, y tal, que por poco le hiciera dejar la\n            comenzada empresa; y fue que le vino a la memoria que no era armado\n            caballero, y que, conforme a ley de caballería, ni podía ni debía tomar\n            armas con ningún caballero; y puesto que lo fuera, había de llevar armas\n            blancas, como novel caballero, sin empresa en el escudo, hasta que por\n            su esfuerzo la ganase. Estos pensamientos le hicieron titubear en su\n            propósito; mas pudiendo más su locura que otra razón alguna, propuso de\n            hacerse armar caballero del primero que topase, a imitación de otros\n            muchos que así lo hicieron, según él había leído en los libros que tal\n            le tenían. En lo de las armas blancas, pensaba limpiarlas de manera, en\n            teniendo lugar, que lo fuesen más que un arminio; y con esto se quietó18\n            y prosiguió su camino, sin llevar otro que aquel que su caballo quería,\n            creyendo que en aquello consistía la fuerza de las aventuras\n          </Text>\n          <Text style={styles.text}>\n            Yendo, pues, caminando nuestro flamante aventurero, iba hablando consigo\n            mesmo, y diciendo: —¿Quién duda, sino que en los venideros tiempos,\n            cuando salga a luz la verdadera historia de mis famosos hechos, que el\n            sabio que los escribiere no ponga, cuando llegue a contar esta mi\n            primera salida tan de mañana, desta manera?: Apenas había el rubicundo\n            Apolo tendido por la faz de la ancha y espaciosa tierra las doradas\n            hebras de sus hermosos cabellos, y apenas los pequeños y pintados\n            pajarillos con sus arpadas lenguas habían saludado con dulce y meliflua\n            armonía la venida de la rosada Aurora, que, dejando la blanda cama del\n            celoso marido, por las puertas y balcones del manchego horizonte a los\n            mortales se mostraba, cuando el famoso caballero don Quijote de la\n            Mancha, dejando las ociosas plumas, subió sobre su famoso caballo\n            Rocinante y comenzó a caminar por el antiguo y conocido Campo de\n            Montiel.\n          </Text>\n          <Text style={styles.text}>\n            Y era la verdad que por él caminaba; y añadió diciendo: —Dichosa edad y\n            siglo dichoso aquel adonde saldrán a luz las famosas hazañas mías,\n            dignas de entallarse en bronces, esculpirse en mármoles y pintarse en\n            tablas, para memoria en lo futuro. ¡Oh tú, sabio encantador, quienquiera\n            que seas, a quien ha de tocar el ser coronista desta peregrina historia!\n            Ruégote que no te olvides de mi buen Rocinante, compañero eterno mío en\n            todos mis caminos y carreras.\n          </Text>\n          <Text style={styles.text}>\n            Luego volvía diciendo, como si verdaderamente fuera enamorado: —¡Oh\n            princesa Dulcinea, señora deste cautivo corazón! Mucho agravio me\n            habedes fecho en despedirme y reprocharme con el riguroso afincamiento\n            de mandarme no parecer ante la vuestra fermosura. Plégaos, señora, de\n            membraros deste vuestro sujeto corazón, que tantas cuitas por vuestro\n            amor padece. Con estos iba ensartando otros disparates, todos al modo de\n            los que sus libros le habían enseñado, imitando en cuanto podía su\n            lenguaje. Con esto caminaba tan despacio, y el sol entraba tan apriesa y\n            con tanto ardor, que fuera bastante a derretirle los sesos, si algunos\n            tuviera\n          </Text>\n          <Text style={styles.text}>\n            Casi todo aquel día caminó sin acontecerle cosa que de contar fuese, de\n            lo cual se desesperaba, porque quisiera topar luego luego con quien\n            hacer experiencia del valor de su fuerte brazo. Autores hay que dicen\n            que la primera aventura que le avino fue la del Puerto Lápice, otros\n            dicen que la de los molinos de viento; pero lo que yo he podido\n            averiguar en este caso, y lo que he hallado escrito en los anales de la\n            Mancha, es que él anduvo todo aquel día, y, al anochecer, su rocín y él\n            se hallaron cansados y muertos de hambre, y que, mirando a todas partes\n            por ver si descubriría algún castillo o alguna majada de pastores donde\n            recogerse y adonde pudiese remediar su mucha hambre y necesidad, vio, no\n            lejos del camino por donde iba, una venta,que fue como si viera una\n            estrella que, no a los portales, sino a los alcázares de su redención le\n            encaminaba. Diose priesa a caminar, y llegó a ella a tiempo que\n            anochecía.\n          </Text>\n        </Page>\n      </Document>\n    )}\n\n    {props.pdfViewData.type === 'referral' && (\n      <Document>\n        <Page style={styles.body}>\n          <Image\n            style={styles.image}\n            src={letterHead}\n          />\n\n          <Text style={styles.title}>{props.pdfViewData.type}</Text>\n          <Text style={styles.author}>Miguel de Cervantes</Text>\n\n\n          <Text style={styles.subtitle}>\n            Capítulo I: Que trata de la condición y ejercicio del famoso hidalgo D.\n            Quijote de la Mancha\n          </Text>\n          <Text style={styles.text}>\n            En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha\n            mucho tiempo que vivía un hidalgo de los de lanza en astillero, adarga\n            antigua, rocín flaco y galgo corredor.\n          </Text>\n          <Text style={styles.text}>\n            _________________________________________________________\n          </Text>\n          <Text style={styles.text}>\n            Con estas y semejantes razones perdía el pobre caballero el juicio, y\n            desvelábase por entenderlas, y desentrañarles el sentido, que no se lo\n            sacara, ni las entendiera el mismo\n          </Text>\n          <Text style={styles.text}>\n            En resolución, él se enfrascó tanto en su lectura, que se le pasaban las\n            noches leyendo de claro en claro, y los días de turbio en turbio, y así,\n            del poco dormir y del mucho leer, se\n          </Text>\n\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'admissionReminder' && (\n      <Document>\n        <Page style={styles.body}>\n          <Image\n            style={styles.image}\n            src={letterHead}\n          />\n\n          <Text style={styles.title}>{props.pdfViewData.type}</Text>\n          <Text style={styles.author}>Miguel de Cervantes</Text>\n\n\n          <Text style={styles.subtitle}>\n            Capítulo I: Que trata de la condición y ejercicio del famoso hidalgo D.\n            Quijote de la Mancha\n          </Text>\n          <Text style={styles.text}>\n            En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha\n            mucho tiempo que vivía un hidalgo de los de lanza en astillero, adarga\n            antigua, rocín flaco y galgo corredor.\n          </Text>\n          <Text style={styles.text}>\n            _________________________________________________________\n          </Text>\n          <Text style={styles.text}>\n            Es, pues, de saber, que este sobredicho hidalgo, los ratos que estaba\n            ocioso (que eran los más del año) se daba a leer libros de caballerías\n            con tanta afición y gusto, que olvidó\n          </Text>\n\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'sickNote' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'insurance' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'diagnosisTesting' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'prescription' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'treatmentConsent' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'treatmentInstructions' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'unfitToFly' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n\n    </PDFViewer>\n\n    </div>\n  </div>\n)\n\n}\n\nexport default PdfView;\n","import React from 'react';\n\nimport AddressItem from '../../items/user/AddressItem';\nimport './UserList.css';\n\nconst PatientAddressList = props => {\n\n  const {...filter} = props.filter;\n  let addresses2 = props.addresses;\n  let propsAddresses = [];\n\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number > b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number < b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street > b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street < b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town > b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town < b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city > b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city < b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish > b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish < b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country > b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country < b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode > b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode < b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'primary') {\n    propsAddresses = addresses2.filter(x => x.primary === filter.value);\n  }\n  if (filter.field !== 'address') {\n    propsAddresses = addresses2;\n  }\n\n  let count = 0;\n\n  const addresses = propsAddresses.map(address => {\n\n    count = propsAddresses.indexOf(address)+1;\n\n    return (\n      <AddressItem\n        key={count}\n        address={address}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        makePrimary={props.makePrimary}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{addresses}</ul>;\n};\n\nexport default PatientAddressList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst NextOfKinItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Name: <span className=\"bold\">{props.nextOfKin.name}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Relation: <span className=\"bold\">{props.nextOfKin.relation}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.nextOfKin.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Relation: <span className=\"bold\">{props.nextOfKin.relation}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Email: <span className=\"bold\">{props.nextOfKin.contact.email}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Phone: <span className=\"bold\">{props.nextOfKin.contact.phone}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Phone2: <span className=\"bold\">{props.nextOfKin.contact.phone2}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.nextOfKin)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default NextOfKinItem;\n","import React from 'react';\n\nimport NextOfKinItem from '../../items/patient/NextOfKinItem';\nimport './UserList.css';\n\nconst PatientNextOfKinList = props => {\n\n  const {...filter} = props.filter;\n  let nextOfKin2 = props.nextOfKin;\n  let propsNextOfKin = [];\n\n  if (filter.field === 'nextOfKin' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'nextOfKin' && filter.key === 'name' && filter.value === 'Descending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'nextOfKin' && filter.key === 'relation' && filter.value === 'Ascending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.relation > b.relation) ? 1 : -1);\n  }\n  if (filter.field === 'nextOfKin' && filter.key === 'relation' && filter.value === 'Descending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.relation < b.relation) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'nextOfKin') {\n    propsNextOfKin = nextOfKin2;\n  }\n\n  let count = 0;\n\n  const nextOfKin = propsNextOfKin.map(nextOfKinItem => {\n    // console.log('nok',nextOfKinItem);\n    count = propsNextOfKin.indexOf(nextOfKinItem)+1;\n\n    return (\n      <NextOfKinItem\n        key={count}\n        nextOfKin={nextOfKinItem}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        makePrimary={props.makePrimary}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{nextOfKin}</ul>;\n};\n\nexport default PatientNextOfKinList;\n","import React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst AttachmentItem = props => {\n\n  const [deleteState, setDeleteState] = useState(false);\n  const handleDeleteStateChange = () => {\n    if (deleteState === true) {\n      setDeleteState(false);\n    }\n    if (deleteState === false) {\n      setDeleteState(true);\n    }\n   }\n\n  return (\n    <li key={props.key} className=\"\">\n\n        <Row>\n          <p>\n            <span className=\"bold\">{props.attachment}</span>\n          </p>\n          {props.canDelete === true && (\n            <FontAwesomeIcon icon={faEraser} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {props.canDelete === true &&\n             deleteState === true && (\n            <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, {\n              type: props.type,\n              attachment: props.attachment,\n              item: props.item\n            })}>Delete</Button>\n          )}\n        </Row>\n\n    </li>\n  )\n}\n\nexport default AttachmentItem;\n","import React from 'react';\n\nimport AttachmentItem from '../../items/patient/AttachmentItem';\nimport './UserList.css';\n\nconst PatientAttachmentList = props => {\n\n  let count = 0;\n\n  const attachments = props.attachments.map(attachment => {\n    count = props.attachments.indexOf(attachment)+1;\n\n    return (\n      <AttachmentItem\n        key={count}\n        item={props.item}\n        attachment={attachment}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        type={props.type}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{attachments}</ul>;\n};\n\nexport default PatientAttachmentList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './PatientItem.css';\n\nconst AllergyItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.allergy.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.allergy.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.allergy.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.allergy.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'allergy',data:props.allergy})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.allergy}\n                attachments={props.allergy.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"allergy\"\n              />\n              </li>\n              <li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              </li>\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.allergy)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AllergyItem;\n","import React from 'react';\n\nimport AllergyItem from '../../items/patient/AllergyItem';\nimport './UserList.css';\n\nconst PatientAllergyList = props => {\n\n  const {...filter} = props.filter;\n  let allergies2 = props.allergies;\n  let propsAllergies = [];\n\n  if (filter.field === 'allergy' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsAllergies = allergies2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'allergy' && filter.key === 'title' && filter.value === 'Descending') {\n    propsAllergies = allergies2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'allergy' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsAllergies = allergies2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'allergy' && filter.key === 'type' && filter.value === 'Descending') {\n    propsAllergies = allergies2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'allergy') {\n    propsAllergies = allergies2;\n  }\n\n  let count = 0;\n\n  const allergies = propsAllergies.map(allergy => {\n    count = propsAllergies.indexOf(allergy)+1;\n\n    return (\n      <AllergyItem\n        key={count}\n        allergy={allergy}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{allergies}</ul>;\n};\n\nexport default PatientAllergyList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './PatientItem.css';\n\nconst MedicationItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.medication.title}</span>\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.medication.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.medication.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.medication.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'medication',data:props.medication})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.medication}\n                attachments={props.medication.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"medication\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.medication)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default MedicationItem;\n","import React from 'react';\n\nimport MedicationItem from '../../items/patient/MedicationItem';\nimport './UserList.css';\n\nconst PatientMedicationList = props => {\n\n  const {...filter} = props.filter;\n  let medication2 = props.medication;\n  let propsMedication = [];\n\n  if (filter.field === 'medication' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsMedication = medication2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'medication' && filter.key === 'title' && filter.value === 'Descending') {\n    propsMedication = medication2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'medication' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsMedication = medication2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'medication' && filter.key === 'type' && filter.value === 'Descending') {\n    propsMedication = medication2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'medication') {\n    propsMedication = medication2;\n  }\n\n  let count = 0;\n\n  const medication = propsMedication.map(medicationItem => {\n    count = propsMedication.indexOf(medicationItem)+1;\n\n    return (\n      <MedicationItem\n        key={count}\n        medication={medicationItem}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{medication}</ul>;\n};\n\nexport default PatientMedicationList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst ImageItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Link: <span className=\"bold\">{props.image.path}</span>\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.image.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.image.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.image.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.image)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n\n};\n\nexport default ImageItem;\n","import React from 'react';\n\nimport ImageItem from '../../items/patient/ImageItem';\nimport './UserList.css';\n\nconst PatientImageList = props => {\n\n  const {...filter} = props.filter;\n  let images2 = props.images;\n  let propsImages = [];\n\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'image') {\n    propsImages = images2;\n  }\n\n  let count = 0;\n\n  const images = propsImages.map(image => {\n\n    count = propsImages.indexOf(image)+1;\n\n    return (\n      <ImageItem\n        key={count}\n        image={image}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"imageList\">{images}</ul>;\n};\n\nexport default PatientImageList;\n","import React from 'react';\n\nimport FileItem from '../../items/patient/FileItem';\nimport './UserList.css';\n\nconst UserFileList = props => {\n\n  const {...filter} = props.filter;\n  let files2 = props.files;\n  let propsFiles = [];\n\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'file') {\n    propsFiles = files2;\n  }\n\n  let count = 0;\n\n  const files = propsFiles.map(file => {\n\n    count = propsFiles.indexOf(file)+1;\n\n    return (\n      <FileItem\n        key={count}\n        file={file}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{files}</ul>;\n};\n\nexport default UserFileList;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst NoteItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Note: <span className=\"bold\">{props.note}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.note)}>Delete</Button>\n              )}\n            </Row>\n            )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\n\nimport NoteItem from '../../items/patient/NoteItem';\nimport './UserList.css';\n\nconst PatientNoteList = props => {\n\n  const {...filter} = props.filter;\n  let notes2 = props.notes;\n  let propsNotes = [];\n\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Ascending') {\n    propsNotes = notes2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Descending') {\n    propsNotes = notes2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'note') {\n    propsNotes = notes2;\n  }\n\n  let count = 0;\n\n  const notes = propsNotes.map(note => {\n\n    count = propsNotes.indexOf(note)+1;\n\n    return (\n      <NoteItem\n        key={count}\n        note={note}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{notes}</ul>;\n};\n\nexport default PatientNoteList;\n","import React, { useState } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst TagItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Tag: <span className=\"bold\">{props.tag}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.tag)}>Delete</Button>\n              )}\n            </Row>\n            )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default TagItem;\n","import React from 'react';\n\nimport TagItem from '../../items/patient/TagItem';\nimport './UserList.css';\n\nconst PatientTagList = props => {\n\n  const {...filter} = props.filter;\n  let tags2 = props.tags;\n  let propsTags = [];\n\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Ascending') {\n    propsTags = tags2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Descending') {\n    propsTags = tags2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'tag') {\n    propsTags = tags2;\n  }\n\n  let count = 0;\n\n  const tags = propsTags.map(tag => {\n\n    count = propsTags.indexOf(tag)+1;\n\n    return (\n      <TagItem\n        key={count}\n        tag={tag}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{tags}</ul>;\n};\n\nexport default PatientTagList;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './visitItem.css';\n\nconst VisitItem = props => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n  }\n\n  const [deleteState, setDeleteState] = useState(false);\n  const handleDeleteStateChange = () => {\n    if (deleteState === true) {\n      setDeleteState(false);\n    }\n    if (deleteState === false) {\n      setDeleteState(true);\n    }\n   }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Date: <span className=\"bold\">{moment.unix(props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Time: <span className=\"bold\">{props.visit.time}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.visit.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {!props.patientPage && (\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.visit)}/>\n          )}\n\n          {props.patientPage && (\n            <Link\n              to={{\n                pathname: \"/visits\",\n                state: {visit: props.visit._id}\n              }}\n            >\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </Link>\n          )}\n\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Id: <span className=\"bold\">{props.visit._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                type: <span className=\"bold\">{props.visit.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                subType: <span className=\"bold\">{props.visit.subType}</span>\n              </Card.Text>\n              </li>\n              {!props.patientPage && (\n                <li>\n                <Card.Text className=\"cardText\">\n                  Patient:\n                </Card.Text>\n                </li>\n              )}\n              {!props.patientPage && (\n                <li>\n                <Card.Text className=\"cardText\">\n                  Id: <span className=\"bold\">{props.visit.patient._id}</span>\n                </Card.Text>\n                </li>\n              )}\n              {!props.patientPage && (\n                <li>\n                <Card.Text className=\"cardText\">\n                  Name: <span className=\"bold\">{props.visit.patient.name}</span>\n                </Card.Text>\n                </li>\n              )}\n\n\n            </ul>\n            </Row>\n          )}\n          {deleteState === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.visit)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default VisitItem;\n","import React from 'react';\n\nimport VisitItem from '../../items/visit/VisitItem';\nimport './visitList.css';\n\nconst VisitList = props => {\n\n  const {...filter} = props.filter;\n  let visits2 = props.visits;\n  let propsVisits = [];\n\n  if (filter.field === 'visit' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'title' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'date' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'time' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.time > b.time) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'time' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.time < b.time) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'type' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'subType' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.subType > b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'subType' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.subType < b.subType) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'visit') {\n    propsVisits = visits2;\n  }\n\n  let count = 0;\n\n  const visits = propsVisits.map(visit => {\n\n    count = propsVisits.indexOf(visit)+1;\n\n    return (\n      <VisitItem\n        key={count}\n        visit={visit}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        patientPage={props.patientPage}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{visits}</ul>;\n};\n\nexport default VisitList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAllergyForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"allergy\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>type</option>\n          <option>title</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAllergyForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterMedicationForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"medication\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterMedicationForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterNextOfKinForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"nextOfKin\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>relation</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterNextOfKinForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterVisitForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"visit\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>title</option>\n          <option>type</option>\n          <option>subType</option>\n          <option>date</option>\n          <option>time</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterVisitForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterTagForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"tag\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>tag</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterTagForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst UpdatePatientSingleFieldForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Update Single Field</h4>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>field</Form.Label>\n        <Form.Control type=\"text\" value={props.field}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"query... date = YYY-MM-DD!!\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default UpdatePatientSingleFieldForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddTagForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Tags</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"tags\">\n        <Form.Label>tags</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"tag,tag,tag,tag\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddTagForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddNextOfKinForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Next of Kin</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"name\">\n        <Form.Label>name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"relation\">\n        <Form.Label>relation</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Mother</option>\n          <option>Father</option>\n          <option>Brother</option>\n          <option>Sister</option>\n          <option>Grandfather</option>\n          <option>Grandmother</option>\n          <option>Uncle</option>\n          <option>Aunt</option>\n          <option>Niece</option>\n          <option>Uncle</option>\n          <option>Cousin</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n\n    <Form.Row>\n    <Form.Group as={Col} controlId=\"email\">\n      <Form.Label>email</Form.Label>\n      <Form.Control type=\"email\" placeholder=\"relation@nextOfKin.com\"/>\n    </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"phone\">\n        <Form.Label>phone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+187600000\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"phone2\">\n        <Form.Label>phone2</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+187600000\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddNextOfKinForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddAllergyForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Allergy</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Food</option>\n          <option>Drug</option>\n        </Form.Control>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row>\n    <Form.Group as={Col} controlId=\"description\">\n      <Form.Label>description</Form.Label>\n      <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n    </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAllergyForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddMedicationForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Medication</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddMedicationForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddAttachmentForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Attachment</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"attachment\">\n        <Form.Label>attachment</Form.Label>\n        <Form.Control type=\"textarea\" placeholder=\"file link address\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAttachmentForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\nimport S3 from 'react-aws-s3';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\nimport PdfView from '../pdfView/PdfView';\n\nimport PatientAddressList from '../lists/patient/PatientAddressList';\nimport PatientNextOfKinList from '../lists/patient/PatientNextOfKinList'\nimport PatientAllergyList from '../lists/patient/PatientAllergyList'\nimport PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientImageList from '../lists/patient/PatientImageList'\nimport PatientFileList from '../lists/patient/PatientFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport PatientNoteList from '../lists/patient/PatientNoteList'\nimport PatientTagList from '../lists/patient/PatientTagList'\nimport VisitList from '../lists/visit/VisitList'\n\nimport FilterAddressForm from '../forms/filter/FilterAddressForm';\nimport FilterAllergyForm from '../forms/filter/FilterAllergyForm';\nimport FilterMedicationForm from '../forms/filter/FilterMedicationForm';\nimport FilterNextOfKinForm from '../forms/filter/FilterNextOfKinForm';\nimport FilterVisitForm from '../forms/filter/FilterVisitForm';\nimport FilterImageForm from '../forms/filter/FilterImageForm';\nimport FilterFileForm from '../forms/filter/FilterFileForm';\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../forms/filter/FilterNoteForm';\nimport FilterTagForm from '../forms/filter/FilterTagForm';\n\nimport UpdatePatientSingleFieldForm from '../forms/add/UpdatePatientSingleFieldForm';\nimport AddAddressForm from '../forms/add/AddAddressForm';\nimport AddAttendanceForm from '../forms/add/AddAttendanceForm';\nimport AddLeaveForm from '../forms/add/AddLeaveForm';\nimport AddNoteForm from '../forms/add/AddNoteForm';\nimport AddTagForm from '../forms/add/AddTagForm';\nimport AddImageForm from '../forms/add/AddImageForm';\nimport AddFileForm from '../forms/add/AddFileForm';\nimport AddNextOfKinForm from '../forms/add/AddNextOfKinForm';\nimport AddAllergyForm from '../forms/add/AddAllergyForm';\nimport AddMedicationForm from '../forms/add/AddMedicationForm';\nimport AddAttachmentForm from '../forms/add/AddAttachmentForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass PatientDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    selectedPatient: this.props.patient,\n    addAttachmentForm: false,\n    addAttachmentArgs: null,\n    calendarAppointments: null,\n    calendarVisits: null,\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n    showPdfView: false,\n    showPdfData: {\n      type: null,\n      data: null\n    }\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.propsPatient = this.props.patient;\n  }\n\ncomponentDidMount () {\n  console.log('...patient details component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getPocketVars(seshStore);\n  }\n  this.setState({\n    selectedPatient: this.context.selectedPatient\n  })\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.parseForCalendar({\n    appointments: this.props.patient.appointments,\n    visits: this.props.patient.visits,\n  })\n\n}\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n    console.log('...retriving pocketVars..');\n    this.context.setUserAlert('...retriving pocketVars..')\n    const token = args.token;\n    const activityId = args.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")}\n          `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          this.setState({userAlert: resData.errors[0].message})\n        } else {\n          let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n          console.log('...retriving pocketVars success...');\n          this.context.setUserAlert('...retriving pocketVars success...')\n          this.setState({\n            pocketVars: pocketVarsParsed\n          });\n        }\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.context.setUserAlert(err);\n      });\n    }\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsubmitAddAddressForm = (event) => {\n  event.preventDefault();\n  console.log('...adding address...');\n  this.context.setUserAlert('...adding address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const number = event.target.number.value;\n  const street = event.target.street.value;\n  const town = event.target.town.value;\n  const city = event.target.city.value;\n  const parish = event.target.parish.value;\n  const country = event.target.country.value;\n  const postalCode = event.target.postalCode.value;\n\n  let requestBody = {\n    query: `\n      mutation {addPatientAddress(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          addressNumber:${number},\n          addressStreet:\"${street}\",\n          addressTown:\"${town}\",\n          addressCity:\"${city}\",\n          addressParish:\"${parish}\",\n          addressCountry:\"${country}\",\n          addressPostalCode:\"${postalCode}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientAddress);\n      let responseAlert = '...address add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientAddress)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientAddress,\n        activityA: `addPatientAddress?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAddress = (args) => {\n  console.log('...deleting address...');\n  this.context.setUserAlert('...deleting address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientAddress(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\",\n          addressPrimary:${args.primary}\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientAddress);\n      let responseAlert = '...address delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientAddress)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientAddress,\n        activityA: `deletePatientAddress?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsetAddressPrimary = (args) => {\n  console.log('...setting primary address...');\n  this.context.setUserAlert('...setting primary address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {setPatientAddressPrimary(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\"\n        })\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.setPatientAddressPrimary);\n      let responseAlert = '...address set primary success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.setPatientAddressPrimary)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.setPatientAddressPrimary,\n        activityA: `setPatientAddressPrimary?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.setPatientAddressPrimary;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddNextOfKinForm = (event) => {\n  event.preventDefault();\n  console.log('...add next of kin...');\n  this.context.setUserAlert('...adding next of kin...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const name = event.target.name.value;\n  const relation = event.target.relation.value;\n  const email = event.target.email.value;\n  const phone = event.target.phone.value;\n  const phone2 = event.target.phone2.value;\n\n  let requestBody = {\n    query: `\n      mutation {addPatientNextOfKin(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          nextOfKinName:\"${name}\",\n          nextOfKinRelation:\"${relation}\",\n          nextOfKinContactEmail:\"${email}\",\n          nextOfKinContactPhone1:\"${phone}\",\n          nextOfKinContactPhone2:\"${phone2}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientNextOfKin);\n      let responseAlert = '...next of kin add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientNextOfKin)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientNextOfKin,\n        activityA: `addPatientNextOfKin?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientNextOfKin;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNextOfKin = (args) => {\n  console.log('...deleting next of kin...');\n  this.context.setUserAlert('...deleting next of kin....')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientNextOfKin(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          nextOfKinName:\"${args.name}\",\n          nextOfKinRelation:\"${args.relation}\",\n          nextOfKinContactEmail:\"${args.contact.email}\",\n          nextOfKinContactPhone1:\"${args.contact.phone1}\",\n          nextOfKinContactPhone2:\"${args.contact.phone2}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      console.log('...resData...',resData.data.deletePatientNextOfKin);\n      let responseAlert = '...next of kin delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientNextOfKin)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientNextOfKin,\n        activityA: `deletePatientNextOfKin?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientNextOfKin;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddAllergyForm = (event) => {\n  event.preventDefault();\n  console.log('...add allergy...');\n  this.context.setUserAlert('...adding allergy...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/allergy/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'allergy attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'allergy attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientAllergy(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          allergyType:\"${type}\",\n          allergyTitle:\"${title}\",\n          allergyDescription:\"${description}\",\n          allergyAttachment:\"${file2Path}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientAllergy);\n      let responseAlert = '...allergy add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientAllergy)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientAllergy,\n        activityA: `addPatientAllergy?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientAllergy;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAllergy = (args) => {\n  console.log('...deleting allergy...');\n  this.context.setUserAlert('...deleting allergy...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientAllergy(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          allergyType:\"${args.type}\",\n          allergyTitle:\"${args.title}\",\n          allergyDescription:\"${args.description}\",\n          allergyAttachments:\"${args.attachments}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientAllergy);\n      let responseAlert = '...allergy delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientAllergy)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientAllergy,\n        activityA: `deletePatientAllergy?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientAllergy;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'patient/'+patientId+'/allergy/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/patient/'+patientId+'/allergy/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `allergy attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddMedicationForm = (event) => {\n  event.preventDefault();\n  console.log('...add medication...');\n  this.context.setUserAlert('...adding medication...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      type.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/medication/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'medication attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'medication attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'medication attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'medication attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientMedication(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          medicationType:\"${type}\",\n          medicationTitle:\"${title}\",\n          medicationDescription:\"${description}\",\n          medicationAttachment:\"${file2Path}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientMedication);\n      let responseAlert = '...medication add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientMedication)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientMedication,\n        activityA: `addPatientMedication?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientMedication;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteMedication = (args) => {\n  console.log('...deleting medication...');\n  this.context.setUserAlert('...deleting medication...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientMedication(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          medicationType:\"${args.type}\",\n          medicationTitle:\"${args.title}\",\n          medicationDescription:\"${args.description}\",\n          medicationAttachments:\"${args.attachments}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientMedication);\n      let responseAlert = '...medication delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientMedication)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientMedication,\n        activityA: `deletePatientMedication?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientMedication;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'patient/'+patientId+'/medication/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/patient/'+patientId+'/medication/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `medication attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartAddAttachment = (args) => {\n  console.log('...start add attachment...');\n  this.setState({\n    addAttachmentForm: true,\n    addAttachmentArgs: args\n  })\n}\ncancelAddAttachment = () => {\n  this.setState({\n    addAttachmentForm: false\n  })\n}\naddAttachment = (event) => {\n  event.preventDefault();\n  console.log('...adding attachment...');\n  this.context.setUserAlert('...adding attachment...');\n  this.setState({\n    isLoading: true,\n    addAttachmentForm: false\n  })\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n  let args = this.state.addAttachmentArgs;\n  let field = args.field;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/'+field+'/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading allergy attachment ...\")\n    console.log('...s3 uploading allergy attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: `${field} attachment`,\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: `${field} attachment`,\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: `${field} attachment`,\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: `${field} attachment`,\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let allergyTitle;\n  let allergyType;\n  let allergyDescription;\n  let allergyAttachment;\n  let medicationTitle;\n  let medicationType;\n  let medicationDescription;\n  let medicationAttachment;\n\n  if (field === 'allergy') {\n    allergyTitle = args.data.title;\n    allergyType = args.data.type;\n    allergyDescription = args.data.description;\n    allergyAttachment = file2Path;\n  }\n  if (field === 'medication') {\n    medicationTitle = args.data.title;\n    medicationType = args.data.type;\n    medicationDescription = args.data.description;\n    medicationAttachment = file2Path;\n  }\n\n  let requestBody;\n  if (field === 'allergy') {\n    requestBody = {\n      query: `\n        mutation {addPatientAllergyAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            allergyType:\"${allergyType}\",\n            allergyTitle:\"${allergyTitle}\",\n            allergyDescription:\"${allergyDescription}\",\n            allergyAttachment:\"${file2Path}\"\n          })\n          {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (field === 'medication') {\n    requestBody = {\n      query: `\n        mutation {addPatientMedicationAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            medicationType:\"${medicationType}\",\n            medicationTitle:\"${medicationTitle}\",\n            medicationDescription:\"${medicationDescription}\",\n            medicationAttachment:\"${file2Path}\"\n          })\n          {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n\n\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'allergy') {\n        // console.log('...resData...',resData.data.addPatientAllergyAttachment);\n      }\n      if (field === 'medication') {\n        // console.log('...resData...',resData.data.addPatientMedicationAttachment);\n      }\n\n      let responseAlert = '...add attachment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'allergy') {\n        this.props.updatePatient(resData.data.addPatientAllergyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.addPatientAllergyAttachment,\n          activityA: `addPatientAllergyAttachmentRegex?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n      if (field === 'medication') {\n        this.props.updatePatient(resData.data.addPatientMedicationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.addPatientMedicationAttachment,\n          activityA: `addPatientMedicationAttachment?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ndeleteAttachment = (args) => {\n  console.log('...deleting attachment...');\n  this.context.setUserAlert('...adding attachment...');\n  this.setState({isLoading: true})\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n\n  const field = args.type;\n  const attachment = args.attachment;\n  const item = args.item;\n\n  let requestBody;\n\n  if (field === 'allergy') {\n    let allergyType = item.type;\n    let allergyTitle = item.title;\n    let allergyDescription = item.description;\n    let allergyAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deletePatientAllergyAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            allergyType:\"${allergyType}\",\n            allergyTitle:\"${allergyTitle}\",\n            allergyDescription:\"${allergyDescription}\",\n            allergyAttachment:\"${allergyAttachment}\"\n          })\n          {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (field === 'medication') {\n    let medicationType = item.type;\n    let medicationTitle = item.title;\n    let medicationDescription = item.description;\n    let medicationAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deletePatientMedicationAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            medicationType:\"${medicationType}\",\n            medicationTitle:\"${medicationTitle}\",\n            medicationDescription:\"${medicationDescription}\",\n            medicationAttachment:\"${medicationAttachment}\"\n          })\n          {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'allergy') {\n        // console.log('...resData...',resData.data.deletePatientAllergyAttachment);\n      }\n      if (field === 'medication') {\n        // console.log('...resData...',resData.data.deletePatientMedicationAttachment);\n      }\n\n      let responseAlert = '...delete attachment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'allergy') {\n        this.props.updatePatient(resData.data.deletePatientAllergyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.deletePatientAllergyAttachment,\n          activityA: `deletePatientAllergyAttachment?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n      if (field === 'medication') {\n        this.props.updatePatient(resData.data.deletePatientMedicationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.deletePatientMedicationAttachment,\n          activityA: `deletePatientMedicationAttachment?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'patient/'+patientId+'/'+field+'/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/patient/'+patientId+'/'+field+'/attachments/';\n      const filename = attachment;\n      const filename2 = filename.replace(filePath2,'');\n      console.log('1:',filePath);\n      console.log('2:',filename);\n      console.log('3:',filename2);\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachment..')\n      console.log('...s3 deleting attachment..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `${field} attachment`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: `${field} attachment`,\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename2, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding image...');\n  this.context.setUserAlert('...adding image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  const patientName = this.props.patient.name;\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/images';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientImage(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          imageName:\"${imageName}\",\n          imageType:\"${imageType}\",\n          imagePath:\"${imagePath}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientImage);\n      let responseAlert = '...image add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientImage)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientImage,\n        activityA: `addPatientImage?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n  console.log('...deleting image...');\n  this.context.setUserAlert('...deleting image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n\n  const filePath = 'patient/'+patientId+'/images';\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n    mutation {deletePatientImage(\n      activityId:\"${activityId}\",\n      patientId:\"${patientId}\",\n      patientInput:{\n        imageName:\"${args.name}\",\n        imageType:\"${args.type}\",\n        imagePath:\"${args.path}\"\n      })\n    {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientImage);\n      let responseAlert = '...image delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientImage)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientImage,\n        activityA: `deletePatientImage?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding file...');\n  this.context.setUserAlert('...adding file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  const patientName = this.props.patient.name;\n\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientFile(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          fileName:\"${file2Name}\",\n          fileType:\"${file2Type}\",\n          filePath:\"${file2Path}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientFile);\n      let responseAlert = '...file add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientFile)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientFile,\n        activityA: `addPatientFile?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n  console.log('...deleting file...');\n  this.context.setUserAlert('...deleting file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n\n  let requestBody = {\n    query: `\n    mutation {deletePatientFile(\n      activityId:\"${activityId}\",\n      patientId:\"${patientId}\",\n      patientInput:{\n        fileName:\"${args.name}\",\n        fileType:\"${args.type}\",\n        filePath:\"${args.path}\"\n      })\n    {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientFile);\n      let responseAlert = '...file delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientFile)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientFile,\n        activityA: `deletePatientFile?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'patient/'+patientId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding notes...');\n  this.context.setUserAlert('...adding notes...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const notes = event.target.notes.value;\n\n  let requestBody = {\n    query: `\n      mutation {addPatientNotes(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          notes:\"${notes}\",\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientNotes)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientNotes,\n        activityA: `addPatientNotes?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n  console.log('...deleting note...');\n  this.context.setUserAlert('...deleting note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientNote(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          note:\"${args}\"\n        })\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientNote)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientNote,\n        activityA: `deletePatientNote?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddTagForm = (event) => {\n  event.preventDefault();\n  console.log('...adding tags...');\n  this.context.setUserAlert('...adding tags...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const tags = event.target.tags.value;\n\n  let requestBody = {\n    query: `\n      mutation {addPatientTags(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          tags:\"${tags}\",\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientTags);\n      let responseAlert = '...tags add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientTags)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientTags,\n        activityA: `addPatientTags?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientTags;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteTag = (args) => {\n  console.log('...deleting tag...');\n  this.context.setUserAlert('...deleting tag...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientTag(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          tag:\"${args}\"\n        })\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientTag);\n      let responseAlert = '...tag delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientTag)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientTag,\n        activityA: `deletePatienTag?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientTag;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n    mutation {updatePatientSingleField(\n      activityId:\"${activityId}\",\n      patientId:\"${patientId}\",\n      field:\"${field}\",\n      query:\"${query}\"\n    )\n    {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updatePatientSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.updatePatientSingleField)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.updatePatientSingleField,\n        activityA: `updatePatientSingleField?activityId:${activityId},patientId:${patientId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.updatePatientSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing patient dates for calendar...');\n\n  let calendarAppointments = args.appointments.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n        field: 'appointments'\n      }\n    }))\n  let calendarVisits = args.visits.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        field: 'visits'\n      }\n    }))\n    this.setState({\n      calendarAppointments: calendarAppointments,\n      calendarVisits: calendarVisits,\n    })\n}\n\nviewCalendarEvent = (args) => {\n\n  let input = args.event.extendedProps.props;\n  let data;\n\n  if (input.field === 'appointments') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      location: input.location,\n      description: input.description,\n      important: input.important,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAppointment', data: data, goLink: true}\n    })\n  }\n  if (input.field === 'visits') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarVisit', data: data, goLink: true}\n    })\n  }\n\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\nshowPdfView = (args) => {\n  this.setState({\n    showPdfView: true,\n    showPdfData: {\n      type: args.type,\n      data: args.data\n    }\n  })\n}\n\n\nclosePdfView = () => {\n  this.setState({\n    showPdfView: false,\n    showPdfData: {\n      type: null,\n      data: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {!this.props.patient && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={3} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'address')}>Addresses</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'nextOfKin')}>Next Of Kin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'allergy')}>Allergies</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'medication')}>Medication</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'image')}>Images</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'file')}>Files</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'appointment')}>Appointments</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"10\" onClick={this.menuSelect.bind(this, 'visit')}>Visits</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"11\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"12\" onClick={this.menuSelect.bind(this, 'tag')}>Tag</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"13\" onClick={this.menuSelect.bind(this, 'doc')}>Document</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'address' && (\n                  <FilterAddressForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'nextOfKin' && (\n                  <FilterNextOfKinForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'allergy' && (\n                  <FilterAllergyForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'medication' && (\n                  <FilterMedicationForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'image' && (\n                  <FilterImageForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'file' && (\n                  <FilterFileForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'appointment' && (\n                  <FilterAppointmentForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'visit' && (\n                  <FilterVisitForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'note' && (\n                  <FilterNoteForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'tag' && (\n                  <FilterTagForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n\n            )}\n          </Col>\n\n          {this.props.patient && (\n            <Col md={9} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdatePatientSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n                <Tab.Content className=\"tabContent\">\n                  <Tab.Pane eventKey=\"1\">\n                    Patient Basic:\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.title}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                        <p className=\"listGroupText\">Fisrt Name:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.name}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'name')}>Edit</Button>\n                        <p className=\"listGroupText\">Last Name:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.lastName}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'lastName')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText\">Username:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.username}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">DOB:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.dob.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                        <p className=\"listGroupText\">Age:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.age}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">DOB:</p>\n                        <p className=\"listGroupText\">Gender:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.gender}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Email:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.contact.email}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Phone:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.contact.phone}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                        <p className=\"listGroupText\">Phone 2:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.contact.phone2}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Role:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.role}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'role')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Registration:</p>\n                        <p className=\"listGroupText\">Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.registration.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <p className=\"listGroupText\">Number:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.registration.number}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Expiry Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.expiryDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'expiryDate')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Referral:</p>\n                        <p className=\"listGroupText\">Date:</p>\n                        {this.props.patient.referral.date && (\n                          <p className=\"listGroupText bold\">{moment.unix(this.props.patient.referral.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        )}\n\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.date')}>Edit</Button>\n                        <p className=\"listGroupText\">Reason:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.reason}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.reason')}>Edit</Button>\n                        <p className=\"listGroupText\">Referral Physician:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.physician.name}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.name')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Referral Physician:</p>\n                        <p className=\"listGroupText\">Email:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.physician.email}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.email')}>Edit</Button>\n                        <p className=\"listGroupText\">Phone:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.physician.phone}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.phone')}>Edit</Button>\n                      </ListGroup.Item>\n\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Attending Physician:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.attendingPhysician}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'attendingPhysician')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Occupation:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.occupation.role}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.role')}>Edit</Button>\n                      <p className=\"listGroupText\">Employer:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.name}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.name')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Contact:</p>\n                        <p className=\"listGroupText\">Phone:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.phone}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.phone')}>Edit</Button>\n                        <p className=\"listGroupText\">Email:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.email}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.email')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Address:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.address}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.address')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Insurance:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.insurance.company}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.company')}>Edit</Button>\n                        <p className=\"listGroupText bold\">{this.props.patient.insurance.policyNumber}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.policyNumber')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText bold\">{this.props.patient.insurance.description}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.description')}>Edit</Button>\n                      {this.props.patient.insurance.expiryDate && (\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.insurance.expiryDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      )}\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.expiryDate')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Subscriber:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.insurance.subscriber.company}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.subscriber.company')}>Edit</Button>\n                      <p className=\"listGroupText bold\">{this.props.patient.insurance.subscriber.description}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.subscriber.description')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"2\">\n                    Patient Admin\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Id:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient._id}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">LoggedIn:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.loggedIn.toString()}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">ClientConnected:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.clientConnected.toString()}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Verified:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.verification.verified.toString()}</p>\n                        <p className=\"listGroupText\">Type:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.verification.type}</p>\n                        <p className=\"listGroupText\">Code:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.verification.code}</p>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"3\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">User Address List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'address' && (\n                        <AddAddressForm\n                          onConfirm={this.submitAddAddressForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientAddressList\n                      filter={this.state.filter}\n                      addresses={this.props.patient.addresses}\n                      authId={this.context.activityId}\n                      onDelete={this.deleteAddress}\n                      canDelete={this.state.canDelete}\n                      makePrimary={this.setAddressPrimary}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"4\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Next of Kin List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'nextOfKin')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'nextOfKin' && (\n                        <AddNextOfKinForm\n                          onConfirm={this.submitAddNextOfKinForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientNextOfKinList\n                      filter={this.state.filter}\n                      nextOfKin={this.props.patient.nextOfKin}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteNextOfKin}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"5\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Allergies List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'allergy')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'allergy' && (\n                        <AddAllergyForm\n                          onConfirm={this.submitAddAllergyForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <PatientAllergyList\n                      filter={this.state.filter}\n                      allergies={this.props.patient.allergies}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteAllergy}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"6\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Medication List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'medication')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'medication' && (\n                        <AddMedicationForm\n                          onConfirm={this.submitAddMedicationForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <PatientMedicationList\n                      filter={this.state.filter}\n                      medication={this.props.patient.medication}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteMedication}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"7\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Image List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'image' && (\n                        <AddImageForm\n                          onConfirm={this.submitAddImageForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientImageList\n                      filter={this.state.filter}\n                      images={this.props.patient.images}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteImage}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"8\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient File List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'file' && (\n                        <AddFileForm\n                          onConfirm={this.submitAddFileForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientFileList\n                      filter={this.state.filter}\n                      files={this.props.patient.files}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteFile}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"9\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Appointment List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    </Row>\n                    <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                      <Tab eventKey=\"1\" title=\"list\">\n                      <UserAppointmentList\n                        filter={this.state.filter}\n                        appointments={this.props.patient.appointments}\n                        authId={this.context.activityId}\n                      />\n                      </Tab>\n                      <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                        <h3>Calendar</h3>\n                        <FullCalendar\n                          defaultView=\"dayGridMonth\"\n                          plugins={[dayGridPlugin]}\n                          events={this.state.calendarAppointments}\n                          eventClick={this.viewCalendarEvent}\n                        />\n                      </Tab>\n                    </Tabs>\n\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"10\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Visit List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    </Row>\n                    <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                      <Tab eventKey=\"1\" title=\"list\">\n                      <VisitList\n                        filter={this.state.filter}\n                        visits={this.props.patient.visits}\n                        authId={this.context.activityId}\n                        patientPage={true}\n                      />\n                      </Tab>\n                      <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                        <h3>Calendar</h3>\n                        <FullCalendar\n                          defaultView=\"dayGridMonth\"\n                          plugins={[dayGridPlugin]}\n                          events={this.state.calendarVisits}\n                          eventClick={this.viewCalendarEvent}\n                        />\n                      </Tab>\n                    </Tabs>\n\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"11\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Notes:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role === 'Admin' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'note' && (\n                        <AddNoteForm\n                          onConfirm={this.submitAddNoteForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientNoteList\n                      filter={this.state.filter}\n                      notes={this.props.patient.notes}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteNote}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"12\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Tags:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'tag')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'tag' && (\n                        <AddTagForm\n                          onConfirm={this.submitAddTagForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientTagList\n                      filter={this.state.filter}\n                      tags={this.props.patient.tags}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteTag}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"13\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Docu-Gen:</p>\n\n                    </Row>\n                    <Row className=\"displayPaneHeadRow\">\n                      <ListGroup className=\"profileBasicListGroup\">\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">Test</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'test', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">Referral</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'referral', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">admissionReminder</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'admissionReminder', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">sickNote</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'sickNote', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">insurance</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'insurance', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">diagnosisTesting</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'diagnosisTesting', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">prescription</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'prescription', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">treatmentConsent</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'treatmentConsent', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">treatmentInstructions</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'treatmentInstructions', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">unfitToFly</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'unfitToFly', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                      </ListGroup>\n                    </Row>\n                    {this.state.showPdfView === true && (\n                      <PdfView\n                        pdfViewData={this.state.showPdfData}\n                        close={this.closePdfView}\n                        patient={this.props.patient}\n                      />\n                    )}\n                  </Tab.Pane>\n                </Tab.Content>\n\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n}\n\n}\n\nexport default PatientDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterPatientForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"patient\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>active</option>\n          <option>name</option>\n          <option>username</option>\n          <option>title</option>\n          <option>role</option>\n          <option>dob</option>\n          <option>age</option>\n          <option>gender</option>\n          <option>registration.date</option>\n          <option>registration.number</option>\n          <option>contact.email</option>\n          <option>contact.phone</option>\n          <option>contact.phone2</option>\n          <option>addresses.number</option>\n          <option>addresses.street</option>\n          <option>addresses.town</option>\n          <option>addresses.city</option>\n          <option>addresses.parish</option>\n          <option>addresses.country</option>\n          <option>addresses.postalCode</option>\n          <option>addresses.primary</option>\n          <option>verification.verified</option>\n          <option>expiryDate</option>\n          <option>loggedIn</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterPatientForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport CreatePatientForm from '../../components/forms/create/CreatePatientForm';\nimport PatientList from '../../components/lists/patient/PatientList';\nimport SearchPatientList from '../../components/lists/patient/SearchPatientList';\nimport PatientDetail from '../../components/details/PatientDetail';\n\nimport FilterPatientForm from '../../components/forms/filter/FilterPatientForm';\nimport PatientSearchForm from '../../components/forms/search/PatientSearchForm';\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './patient.css';\n\nclass PatientPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    patients: null,\n    searchPatients: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    canDelete: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    selectedPatient: null,\n    creatingPatient: false,\n    newPatient: null,\n    fromGoLink: null,\n    goLinkId: null,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all patients component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    if (this.props.location.state) {\n      if (this.props.location.state.patient) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.patient\n        })\n      }\n    }\n    this.getAllPatients(seshStore);\n    if (this.props.selectedPatient) {\n      console.log('...found existing Patient selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedPatient: this.props.selectedPatient\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkPatient = resData.data.getAllPatients.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedPatient: goLinkPatient,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n        activityA: `getAllPatients?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message);\n      }\n      if (resData.data.error) {\n        this.context.setUserAlert(resData.data.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchPatients = (event) => {\n  event.preventDefault();\n  console.log('...searching patients...');\n  this.context.setUserAlert('...searching patients...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.context.activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'active' ||\n      field === 'age' ||\n      field === 'dob' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'registration.date' ||\n      field === 'expiryDate' ||\n      field === 'referral.date' ||\n      field === 'insurance.expiryDate' ||\n      field === 'insurance.expiryDate'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getPatientsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getPatientsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getPatientsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getPatientsByField);\n      }\n\n      let responseAlert = '...patient search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchPatients: resData.data.getPatientsByFieldRegex,\n          activityA: `getPatientsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchPatients: resData.data.getPatientsByField,\n          activityA: `getPatientsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nonStartCreateNewPatient = () => {\n  this.setState({\n    creatingPatient: true\n  })\n}\ncancelCreateNewPatient = () => {\n  this.setState({\n    creatingPatient: false\n  })\n}\nsubmitCreateNewPatientForm = (event) => {\n  event.preventDefault();\n  console.log('...creating new patient...');\n  this.context.setUserAlert('...creating new patient...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n\n  const active = event.target.active.value;\n  const title = event.target.title.value;\n  const name = event.target.name.value;\n  const lastName = event.target.lastName.value;\n  const username = event.target.username.value;\n  const dob = event.target.dob.value;\n  const role = event.target.role.value;\n  const gender = event.target.gender.value;\n  const contactEmail = event.target.contactEmail.value;\n  const contactPhone = event.target.contactPhone.value;\n  const contactPhone2 = event.target.contactPhone2.value;\n  let addressNumber = event.target.addressNumber.value;\n  if (addressNumber === '') {\n    addressNumber = 0;\n  }\n  const addressStreet = event.target.addressStreet.value;\n  const addressTown = event.target.addressTown.value;\n  const addressCity = event.target.addressCity.value;\n  const addressParish = event.target.addressParish.value;\n  const addressCountry = event.target.addressCountry.value;\n  const addressPostalCode = event.target.addressPostalCode.value;\n  const referralDate = event.target.referralDate.value;\n  const referralReason = event.target.referralReason.value;\n  const referralPhysicianName = event.target.referralPhysicianName.value;\n  const referralPhysicianPhone = event.target.referralPhysicianPhone.value;\n  const referralPhysicianEmail = event.target.referralPhysicianEmail.value;\n  const referralPhysicianAddress = event.target.referralPhysicianAddress.value;\n  const attendingPhysician = event.target.attendingPhysician.value;\n  const occupationRole = event.target.occupationRole.value;\n  const occupationEmployerName = event.target.occupationEmployerName.value;\n  const occupationEmployerEmail = event.target.occupationEmployerEmail.value;\n  const occupationEmployerPhone = event.target.occupationEmployerPhone.value;\n  const occupationEmployerAddress = event.target.occupationEmployerAddress.value;\n  const insuranceCompany = event.target.insuranceCompany.value;\n  const insurancePolicyNumber = event.target.insurancePolicyNumber.value;\n  const insuranceDescription = event.target.insuranceDescription.value;\n  const insuranceExpiryDate = event.target.insuranceExpiryDate.value;\n  const insuranceSubscriberCompany = event.target.insuranceSubscriberCompany.value;\n  const insuranceSubscriberDescription = event.target.insuranceSubscriberDescription.value;\n\n  if (\n      active.trim().length === 0 ||\n      title.trim().length === 0 ||\n      name.trim().length === 0 ||\n      username.trim().length === 0 ||\n      dob.trim().length === 0 ||\n      role.trim().length === 0 ||\n      gender.trim().length === 0 ||\n      contactEmail.trim().length === 0 ||\n      contactPhone.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n\n  let requestBody = {\n    query: `\n      mutation {createPatient(\n        activityId:\"${activityId}\",\n        patientInput:{\n          active:${active},\n          username:\"${username}\",\n          dob:\"${dob}\",\n          title:\"${title}\",\n          name:\"${name}\",\n          lastName:\"${lastName}\",\n          role:\"${role}\",\n          gender:\"${gender}\",\n          contactEmail:\"${contactEmail}\",\n          contactPhone:\"${contactPhone}\",\n          contactPhone2:\"${contactPhone2}\",\n          addressNumber:${addressNumber},\n          addressStreet:\"${addressStreet}\",\n          addressTown:\"${addressTown}\",\n          addressCity:\"${addressCity}\",\n          addressParish:\"${addressParish}\",\n          addressCountry:\"${addressCountry}\",\n          addressPostalCode:\"${addressPostalCode}\",\n          referralDate:\"${referralDate}\",\n          referralReason:\"${referralReason}\",\n          referralPhysicianName:\"${referralPhysicianName}\",\n          referralPhysicianEmail:\"${referralPhysicianEmail}\",\n          referralPhysicianPhone:\"${referralPhysicianPhone}\",\n          attendingPhysician:\"${attendingPhysician}\",\n          occupationRole:\"${occupationRole}\",\n          occupationEmployerName:\"${occupationEmployerName}\",\n          occupationEmployerPhone:\"${occupationEmployerPhone}\",\n          occupationEmployerEmail:\"${occupationEmployerEmail}\",\n          occupationEmployerAddress:\"${occupationEmployerAddress}\",\n          insuranceCompany:\"${insuranceCompany}\",\n          insurancePolicyNumber:\"${insurancePolicyNumber}\",\n          insuranceDescription:\"${insuranceDescription}\",\n          insuranceExpiryDate:\"${insuranceExpiryDate}\",\n          insuranceSubscriberCompany:\"${insuranceSubscriberCompany}\",\n          insuranceSubscriberDescription:\"${insuranceSubscriberDescription}\"\n        })\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createPatient);\n      let responseAlert = '...create patient success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        showDetails: true,\n        creatingPatient: false,\n        tabKey: 'detail',\n        selectedPatient: resData.data.createPatient,\n        newPatient: resData.data.createPatient,\n        activityA: `createPatient?activityId:${activityId},patientId:${resData.data.createPatient._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'))\n      this.getAllPatients(seshStore);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\n\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nshowDetails = (args) => {\n\n  this.setState({\n    showDetails: true,\n    selectedPatient: args,\n    tabKey: 'detail'\n  })\n  this.props.selectPatient(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nupdatePatient = (args) => {\n  console.log('...updating selected patient...');\n  this.setState({\n    selectedPatient: args\n  })\n  this.props.selectPatient(args)\n}\n\ndeletePatient = (args) => {\n  console.log('...deleteing patient...',args);\n  this.context.setUserAlert('...deleteing patient...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientById(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientById);\n      let responseAlert = '...delete patient success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deletePatientById?activityId:${activityId},patientId:${patientId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllPatients({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n        <h1>Patients: {this.state.showDetails === true &&\n                      this.state.selectedPatient &&\n                      this.state.tabKey === 'detail' && (\n                            this.state.selectedPatient.name\n                          )}</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col lg={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterPatientForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.patients && (\n            <Col lg={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content>\n                <Tab.Pane eventKey=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                    <PatientList\n                      filter={this.state.filter}\n                      patients={this.state.patients}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      showDetails={this.showDetails}\n                      onDelete={this.deletePatient}\n                    />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Patient</h3>\n                  <Row className=\"userSearchRow\">\n                    <PatientSearchForm\n                      onConfirm={this.searchPatients}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchPatients && (\n                      <Button variant=\"outline-primary\" className=\"centered_btn\" onClick={this.toggleSideCol}>Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchPatients && (\n                      <SearchPatientList\n                        filter={this.state.filter}\n                        patients={this.state.searchPatients}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedPatient && (\n                  <PatientDetail\n                    patient={this.state.selectedPatient}\n                    updatePatient={this.updatePatient}\n                  />\n                )}\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"new\">\n                {this.state.creatingPatient === false && (\n                  <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={this.onStartCreateNewPatient}>Create New</Button>\n                )}\n                {this.state.creatingPatient === true && (\n                  <CreatePatientForm\n                    onConfirm={this.submitCreateNewPatientForm}\n                    onCancel={this.cancelCreateNewPatient}\n                  />\n                )}\n                {this.state.newPatient && (\n                  <Row>\n                    <h3>Review New Patient</h3>\n                    {this.state.newPatient.username}\n                  </Row>\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default PatientPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './createForms.css';\n\nconst CreateAppointmentForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Create Appointment Form</h1>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"patientId\">\n        <Form.Label>Patient: {props.patient.username}</Form.Label>\n        <Form.Control type=\"text\" value={props.patient._id}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"subType\">\n        <Form.Label>subType</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"subType\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"date\">\n        <Form.Label>date</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"time\">\n        <Form.Label>time</Form.Label>\n        <Form.Control type=\"time\" placeholder=\"time\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"location\">\n        <Form.Label>location</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"location\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"important\">\n        <Form.Label>important</Form.Label>\n        <Form.Control as=\"select\">\n          <option>false</option>\n          <option>true</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Create</Button>\n      <Button variant=\"outline-danger\" className=\"loginFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default CreateAppointmentForm;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './AppointmentItem.css';\n\nconst NoteItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Note: <span className=\"bold\">{props.note}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.note)}>Delete</Button>\n              )}\n            </Row>\n            )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\n\nimport NoteItem from '../../items/appointment/NoteItem';\nimport './AppointmentList.css';\n\nconst AppointmentNoteList = props => {\n\n  const {...filter} = props.filter;\n  let notes2 = props.notes;\n  let propsNotes = [];\n\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Ascending') {\n    propsNotes = notes2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Descending') {\n    propsNotes = notes2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'note') {\n    propsNotes = notes2;\n  }\n\n  let count = 0;\n\n  const notes = propsNotes.map(note => {\n\n    count = propsNotes.indexOf(note)+1;\n\n    return (\n      <NoteItem\n        key={count}\n        note={note}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{notes}</ul>;\n};\n\nexport default AppointmentNoteList;\n","import React, { useState } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './AppointmentItem.css';\n\nconst TagItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Tag: <span className=\"bold\">{props.tag}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.tag)}>Delete</Button>\n              )}\n            </Row>\n            )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default TagItem;\n","import React from 'react';\n\nimport TagItem from '../../items/appointment/TagItem';\nimport './AppointmentList.css';\n\nconst AppointmentTagList = props => {\n\n  const {...filter} = props.filter;\n  let tags2 = props.tags;\n  let propsTags = [];\n\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Ascending') {\n    propsTags = tags2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Descending') {\n    propsTags = tags2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'tag') {\n    propsTags = tags2;\n  }\n\n  let count = 0;\n\n  const tags = propsTags.map(tag => {\n\n    count = propsTags.indexOf(tag)+1;\n\n    return (\n      <TagItem\n        key={count}\n        tag={tag}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{tags}</ul>;\n};\n\nexport default AppointmentTagList;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport UserList from '../../lists/user/UserList';\nimport './addForms.css';\n\nconst AddUserForm = (props) => {\n\n  const [user, setUser] = useState(\"\");\n  const handleSetUser = (args) => {\n    setUser(args);\n   }\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Staff</h4>\n\n    <Form.Row>\n      <UserList\n        users={props.users}\n        selectUser={handleSetUser}\n        filter={props.filter}\n      />\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"user\">\n        <Form.Label>user</Form.Label>\n        <Form.Control type=\"text\" value={user._id}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddUserForm;\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport AddToCalendar from 'react-add-to-calendar';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport PatientAddressList from '../lists/patient/PatientAddressList';\nimport PatientNextOfKinList from '../lists/patient/PatientNextOfKinList'\nimport PatientAllergyList from '../lists/patient/PatientAllergyList'\nimport PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientImageList from '../lists/patient/PatientImageList'\nimport PatientFileList from '../lists/patient/PatientFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport AppointmentNoteList from '../lists/appointment/AppointmentNoteList'\nimport AppointmentTagList from '../lists/appointment/AppointmentTagList'\nimport UserList from '../lists/user/UserList'\n\n\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../forms/filter/FilterNoteForm';\nimport FilterTagForm from '../forms/filter/FilterTagForm';\nimport FilterUserForm from '../forms/filter/FilterUserForm';\n\nimport UpdatePatientSingleFieldForm from '../forms/add/UpdatePatientSingleFieldForm';\n\nimport AddUserForm from '../forms/add/AddUserForm';\nimport AddNoteForm from '../forms/add/AddNoteForm';\nimport AddTagForm from '../forms/add/AddTagForm';\nimport loadingGif from '../../assets/loading.gif';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faBath\n} from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass AppointmentDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: this.props.appointment,\n    addAttachmentForm: false,\n    addAttachmentArgs: null,\n    showAddConsultantForm: false,\n    users: null,\n    calEvent: {\n      title: this.props.appointment.title,\n      description: this.props.appointment.description,\n      location: this.props.appointment.location,\n      startTime: moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.appointment.time+':00-05:00',\n      endTime: moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.appointment.time+':00-05:00',\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.propsPatient = this.props.appointment;\n  }\n\ncomponentDidMount () {\n  console.log('...appointment details component mounted...');\n  // console.log(moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.appointment.time+':00-05:00');\n  let seshStore;\n  if (sessionStorage.getItem('logInfo')) {\n    seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n  }\n  this.setState({\n    selectedPatient: this.context.selectedPatient\n  })\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.getAllUsers(seshStore);\n}\ncomponentWillUnmount() {\n\n}\n\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n        activityA: `getAllUsers?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding notes...');\n  this.context.setUserAlert('...adding notes...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const notes = event.target.notes.value;\n\n  let requestBody = {\n    query: `\n      mutation {addAppointmentNotes(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          notes:\"${notes}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addAppointmentNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.addAppointmentNotes)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.addAppointmentNotes,\n        activityA: `addAppointmentNotes?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.addAppointmentNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n\n  console.log('...deleting notes...');\n  this.context.setUserAlert('...deleting notes...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const note = args;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentNote(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          note:\"${note}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.deleteAppointmentNote)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.deleteAppointmentNote,\n        activityA: `deleteAppointmentNote?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.deleteAppointmentNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddTagForm = (event) => {\n  event.preventDefault();\n  console.log('...adding tags...');\n  this.context.setUserAlert('...adding tags...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const tags = event.target.tags.value;\n\n  let requestBody = {\n    query: `\n      mutation {addAppointmentTags(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          tags:\"${tags}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addAppointmentTags);\n      let responseAlert = '...tags add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.addAppointmentTags)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.addAppointmentTags,\n        activityA: `addAppointmentTags?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.addAppointmentTags;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteTag = (args) => {\n\n  console.log('...deleting tags...');\n  this.context.setUserAlert('...deleting tags...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const tag = args;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentTag(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          tag:\"${tag}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentTag);\n      let responseAlert = '...tag delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.deleteAppointmentTag)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.deleteAppointmentTag,\n        activityA: `deleteAppointmentTag?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.deleteAppointmentTag;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddUserForm = (event) => {\n  event.preventDefault();\n  console.log('...adding consultant...');\n  this.context.setUserAlert('...adding consultant...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = event.target.user.value;\n  const appointmentId = this.props.appointment._id;\n\n  const userRole = this.state.users.filter(x => x._id === consultantId)[0].role;\n  if (userRole !== 'Doctor' && userRole !== 'Nurse') {\n    console.log('...please choose a Doctor or Nurse to add please...');\n    this.context.setUserAlert('...please choose a Doctor or Nurse to add please...')\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addAppointmentConsultant(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addAppointmentConsultant);\n      let responseAlert = '...add consultant success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.addAppointmentConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `addAppointmentConsultant?activityId:${activityId},appointmentId:${appointmentId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteConsultant = (args) => {\n  console.log('...deleting consultant...');\n  this.context.setUserAlert('...deleting consultant...')\n  this.setState({isLoading: true});\n  //\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = args._id;\n  const appointmentId = this.props.appointment._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentConsultant(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentConsultant);\n      let responseAlert = '...delete consultant success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.deleteAppointmentConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteAppointmentConsultant?activityId:${activityId},appointmentId:${appointmentId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdatePatient = () => {\n  console.log('show update patient select list');\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateAppointmentSingleField(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateAppointmentSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.updateAppointmentSingleField)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.updateAppointmentSingleField,\n        activityA: `updateAppointmentSingleField?activityId:${activityId},appointmentId:${appointmentId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.updateAppointmentSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {!this.props.appointment && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={3} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'consultant')}>Consultants</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'tag')}>Tags</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'consultant' && (\n                  <FilterUserForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'note' && (\n                  <FilterNoteForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'tag' && (\n                  <FilterTagForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n\n            )}\n          </Col>\n\n          {this.props.appointment && (\n            <Col md={9} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdatePatientSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n                <Tab.Content className=\"tabContent\">\n                  <Tab.Pane eventKey=\"1\">\n                    Appointment Basic:\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.title}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Type:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.type}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'type')}>Edit</Button>\n                        <p className=\"listGroupText\">subType:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.subType}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'subType')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <p className=\"listGroupText\">Time:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.time}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'time')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Location:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.location}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'location')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Description:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.description}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'description')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Important:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.important.toString()}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'important')}>Edit</Button>\n                        <p className=\"listGroupText\">In Progress:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.inProgress.toString()}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'inProgress')}>Edit</Button>\n                        <p className=\"listGroupText\">Attended:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.attended.toString()}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'attended')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Patient:</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Name:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.patient.title}</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.patient.name}</p>\n                        <Link\n                          to={{\n                            pathname: \"/patients\",\n                            state: {patient: this.props.appointment.patient._id}\n                          }}\n                        >\n                        <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                        </Link>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.props.appointment.patient._id}</p>\n                      </ListGroup.Item>\n                      {this.props.appointment.visit && (\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">Visit:</p>\n                          <p className=\"listGroupText bold\">{this.props.appointment.visit._id}</p>\n                        </ListGroup.Item>\n                      )}\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Export:</p>\n                        <AddToCalendar event={this.state.calEvent} />\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"2\">\n                    Appointment Admin\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Id:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment._id}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Creator:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.creator._id}</p>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"3\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Appointment Consultant List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'consultant')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'consultant' &&\n                      this.state.users && (\n                        <AddUserForm\n                          onConfirm={this.submitAddUserForm}\n                          onCancel={this.cancelAdd}\n                          filter={this.state.filter}\n                          users={this.state.users}\n                        />\n                    )}\n                    <UserList\n                      filter={this.state.filter}\n                      authId={this.context.activityId}\n                      users={this.props.appointment.consultants}\n                      appointmentPage={true}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteConsultant}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"4\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Appointment Note List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'note' && (\n                        <AddNoteForm\n                          onConfirm={this.submitAddNoteForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <AppointmentNoteList\n                      filter={this.state.filter}\n                      notes={this.props.appointment.notes}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteNote}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"5\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Appointment Tag List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'tag')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'tag' && (\n                        <AddTagForm\n                          onConfirm={this.submitAddTagForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <AppointmentTagList\n                      filter={this.state.filter}\n                      tags={this.props.appointment.tags}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteTag}\n                    />\n                  </Tab.Pane>\n\n                </Tab.Content>\n\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n}\n\n}\n\nexport default AppointmentDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst AppointmentSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>type</option>\n        <option>subType</option>\n        <option>date</option>\n        <option>time</option>\n        <option>checkinTime</option>\n        <option>seenTime</option>\n        <option>location</option>\n        <option>description</option>\n        <option>inProgress</option>\n        <option>attended</option>\n        <option>important</option>\n        <option>notes</option>\n        <option>tags</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AppointmentSearchForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport CreateAppointmentForm from '../../components/forms/create/CreateAppointmentForm';\nimport AppointmentList from '../../components/lists/appointment/AppointmentList';\nimport PatientList from '../../components/lists/patient/PatientList';\n// import SearchAppointmentList from '../../components/lists/appointment/SearchAppointmentList';\nimport AppointmentDetail from '../../components/details/AppointmentDetail';\n\nimport FilterAppointmentForm from '../../components/forms/filter/FilterAppointmentForm';\nimport AppointmentSearchForm from '../../components/forms/search/AppointmentSearchForm';\nimport PatientSearchForm from '../../components/forms/search/PatientSearchForm';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './appointment.css';\n\nclass AppointmentPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    patients: null,\n    canDelete: false,\n    appointments: null,\n    searchAppointments: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    creatingAppointment: false,\n    newAppointment: null,\n    calendarAppointments: null,\n    fromGoLink: null,\n    goLinkId: null,\n    sublistSearch: false,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all appointments component mounted...');\n\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    this.getAllPatients(seshStore);\n    if (this.props.location.state) {\n      if (this.props.location.state.appointment) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.appointment\n        })\n      }\n    }\n    this.getAllAppointments(seshStore);\n    if (this.props.selectedAppointment) {\n      console.log('...found existing Appointment selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedAppointment: this.props.selectedAppointment\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllAppointments (args) {\n  console.log('...retrieving all appointments...');\n  this.context.setUserAlert('...retrieving all appointments...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllAppointments(\n        activityId:\"${activityId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllAppointments);\n      let responseAlert = '...all appointments retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkAppointment = resData.data.getAllAppointments.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedAppointment: goLinkAppointment,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        appointments: resData.data.getAllAppointments,\n        activityA: `getAllAppointments?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.parseForCalendar(resData.data.getAllAppointments)\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n        activityA: `getAllPatients?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message)\n      }\n      if (resData.data.addUserActivity.error) {\n        this.context.setUserAlert(resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchAppointments = (event) => {\n  event.preventDefault();\n  console.log('...searching appointments...');\n  this.context.setUserAlert('...searching appointments...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'date' ||\n      field === 'inProgress' ||\n      field === 'attended' ||\n      field === 'important' ||\n      field === 'important'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getAppointmentsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n      query {getAppointmentsByField(\n        activityId:\"${activityId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getAppointmentsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getAppointmentsByField);\n      }\n\n      let responseAlert = '...appointment search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchAppointments: resData.data.getAppointmentsByFieldRegex,\n          activityA: `getAppointmentsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchAppointments: resData.data.getAppointmentsByField,\n          activityA: `getAppointmentsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nonStartCreateNewAppointment = () => {\n  this.setState({\n    creatingAppointment: true\n  })\n}\ncancelCreateNewAppointment = () => {\n  this.setState({\n    creatingAppointment: false,\n    selectedPatient: null\n  })\n}\nsubmitCreateNewAppointmentForm = (event) => {\n  event.preventDefault();\n  console.log('...creating new appointment...');\n  this.context.setUserAlert('...creating new appointment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.state.selectedPatient._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const subType = event.target.subType.value;\n  const date = event.target.date.value;\n  const time = event.target.time.value;\n  const location = event.target.location.value;\n  const description = event.target.description.value;\n  const important = event.target.important.value;\n\n  if (\n      title.trim().length === 0 ||\n      date.trim().length === 0 ||\n      time.trim().length === 0 ||\n      location.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    return;\n  }\n  console.log('foo',date);\n\n  if (date < moment().format('YYYY-MM-DD')) {\n    console.log('...ummm no! Please pick a date today or in the future...');\n    this.context.setUserAlert('...ummm no! Please pick a date today or in the future...')\n    this.setState({isLoading:false})\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {createAppointment(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        appointmentInput:{\n          title:\"${title}\",\n          type:\"${type}\",\n          subType:\"${subType}\",\n          date:\"${date}\",\n          time:\"${time}\",\n          location:\"${location}\",\n          description:\"${description}\",\n          important:${important}\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createAppointment);\n      let responseAlert = '...create appointment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        showDetails: true,\n        creatingAppointment: false,\n        selectedAppointment: resData.data.createAppointment,\n        newAppointment: resData.data.createAppointment,\n        tabKey: 'detail',\n        activityA: `createAppointment?activityId:${activityId},appointmentId:${resData.data.createAppointment._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'))\n      this.getAllAppointments(seshStore);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nshowDetails = (args) => {\n  this.setState({\n    showDetails: true,\n    selectedAppointment: args,\n    overlay: false,\n    tabKey: 'detail'\n  })\n  this.props.selectAppointment(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\nselectPatient = (args) => {\n  this.setState({\n    selectedPatient: args\n  })\n\n}\nupdateAppointment = (args) => {\n  console.log('...updating selected appointment...');\n  this.setState({\n    selectedAppointment: args\n  })\n  this.props.selectAppointment(args);\n}\n\ndeleteAppointment = (args) => {\n  console.log('...deleteing appointment...',args);\n  this.context.setUserAlert('...deleteing appointment...')\n\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentById(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentById);\n      let responseAlert = '...delete appointment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteAppointmentById?activityId:${activityId},appointmentId:${appointmentId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllAppointments({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing appointments for calendar...');\n  let calendarAppointments = args.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n      }\n    }))\n    this.setState({\n      calendarAppointments: calendarAppointments\n    })\n\n}\n\nviewCalendarEvent = (args) => {\n  console.log('...viewing calendar appointment...',args.event.extendedProps.props);\n  const appointment = this.state.appointments.filter(x => x._id === args.event.extendedProps.props._id)[0];\n  this.setState({\n    overlay: true,\n    overlayStatus: {type: 'calendarAppointment', data: appointment}\n  })\n}\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\nstartSublistSearch = () => {\n  this.setState({\n    sublistSearch: true\n  })\n}\ncancelSublistSearch = () => {\n  this.setState({\n    sublistSearch: false,\n  })\n  this.getAllPatients({activityId: this.context.activityId,token: this.context.token});\n}\nsubmitSublistSearchForm = (event) => {\n  event.preventDefault()\n  console.log('...searching patient sublist...');\n  this.context.setUserAlert('...searching patient sublist...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'active' ||\n      field === 'age' ||\n      field === 'dob' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'registration.date' ||\n      field === 'expiryDate' ||\n      field === 'referral.date' ||\n      field === 'insurance.expiryDate' ||\n      field === 'insurance.expiryDate'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getPatientsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getPatientsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getPatientsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getPatientsByField);\n      }\n\n      let responseAlert = '...patient search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          patients: resData.data.getPatientsByFieldRegex,\n          activityA: `getPatientsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          patients: resData.data.getPatientsByField,\n          activityA: `getPatientsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        selectCalendarDetails={this.showDetails}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n        <h1>Appointments: {this.state.showDetails === true &&\n                      this.state.selectedAppointment &&\n                      this.state.tabKey === 'detail' && (\n                            this.state.selectedAppointment.title\n                          )}</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col md={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterAppointmentForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.appointments && (\n            <Col md={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content >\n                <Tab.Pane eventKey=\"list\" className=\"mainList\">\n\n                <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                  <Tab eventKey=\"1\" title=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                    <AppointmentList\n                      filter={this.state.filter}\n                      appointments={this.state.appointments}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      showDetails={this.showDetails}\n                      onDelete={this.deleteAppointment}\n                    />\n                  </Tab>\n                  <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                    <h3>Calendar</h3>\n                    <FullCalendar\n                      defaultView=\"dayGridMonth\"\n                      plugins={[dayGridPlugin]}\n                      events={this.state.calendarAppointments}\n                      eventClick={this.viewCalendarEvent}\n                    />\n                  </Tab>\n                </Tabs>\n\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Appointment</h3>\n                  <Row className=\"userSearchRow searchForm\">\n                    <AppointmentSearchForm\n                      onConfirm={this.searchAppointments}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchAppointments && (\n                      <Button variant=\"outline-primary\" className=\"centered_btn\" onClick={this.toggleSideCol}>Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchAppointments && (\n                      <AppointmentList\n                        filter={this.state.filter}\n                        appointments={this.state.searchAppointments}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedAppointment && (\n                  <AppointmentDetail\n                    appointment={this.state.selectedAppointment}\n                    updateAppointment={this.updateAppointment}\n                  />\n                )}\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"new\">\n                {this.state.creatingAppointment === false && (\n                  <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={this.onStartCreateNewAppointment}>Create New</Button>\n                )}\n                {this.state.creatingAppointment === true &&\n                  this.state.patients &&\n                  !this.state.selectedPatient && (\n                  <Col className=\"patientSubListCol\">\n                  <Row className=\"patientSubListRow\">\n                  <Button variant=\"outline-success\" className=\"patientSublistSearchBtn\" onClick={this.startSublistSearch}>Search</Button>\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  {this.state.sublistSearch === true && (\n                    <PatientSearchForm\n                      onCancel={this.cancelSublistSearch}\n                      onConfirm={this.submitSublistSearchForm}\n                    />\n                  )}\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  <PatientList\n                    filter={this.state.filter}\n                    patients={this.state.patients}\n                    authId={this.context.activityId}\n                    onSelect={this.selectPatient}\n                    appointmentPage={true}\n                  />\n                  </Row>\n\n                  </Col>\n                )}\n                {this.state.creatingAppointment === true &&\n                  this.state.selectedPatient && (\n                  <Row>\n                    <CreateAppointmentForm\n                      onConfirm={this.submitCreateNewAppointmentForm}\n                      onCancel={this.cancelCreateNewAppointment}\n                      patient={this.state.selectedPatient}\n                    />\n                  </Row>\n                )}\n                {this.state.newAppointment && (\n                  <Row>\n                    <h3>Review New Appointment {this.state.newAppointment._id}</h3>\n                  </Row>\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default AppointmentPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './createForms.css';\n\nconst CreateVisitForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Create Visit Form</h1>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"appointmentId\">\n        <Form.Label>Appointment: {props.appointment.title}</Form.Label>\n        <Form.Control type=\"text\" value={props.appointment._id}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"subType\">\n        <Form.Label>subType</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"subType\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Create</Button>\n      <Button variant=\"outline-danger\" className=\"loginFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default CreateVisitForm;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst ComplaintItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.complaint.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.complaint.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.complaint.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Anamnesis: <span className=\"bold\">{props.complaint.anamnesis}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'complaint',data:props.complaint})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.complaint}\n                attachments={props.complaint.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"complaint\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.complaint)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default ComplaintItem;\n","import React from 'react';\n\nimport ComplaintItem from '../../items/visit/ComplaintItem';\nimport './visitList.css';\n\nconst VisitComplaintList = props => {\n\n  const {...filter} = props.filter;\n  let complaints2 = props.complaints;\n  let propsComplaints = [];\n\n  if (filter.field === 'complaint' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsComplaints = complaints2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'title' && filter.value === 'Descending') {\n    propsComplaints = complaints2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsComplaints = complaints2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'description' && filter.value === 'Descending') {\n    propsComplaints = complaints2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'anamnesis' && filter.value === 'Ascending') {\n    propsComplaints = complaints2.sort((a, b) => (a.anamnesis > b.anamnesis) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'anamnesis' && filter.value === 'Descending') {\n    propsComplaints = complaints2.sort((a, b) => (a.anamnesis < b.anamnesis) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'complaint') {\n    propsComplaints = complaints2;\n  }\n\n  let count = 0;\n\n  const complaints = propsComplaints.map(complaint => {\n\n    count = propsComplaints.indexOf(complaint)+1;\n\n    return (\n      <ComplaintItem\n        key={count}\n        complaint={complaint}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{complaints}</ul>;\n};\n\nexport default VisitComplaintList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst SurveyItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.survey.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.survey.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.survey.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'survey',data:props.survey})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.survey}\n                attachments={props.survey.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"survey\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.survey)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default SurveyItem;\n","import React from 'react';\n\nimport SurveyItem from '../../items/visit/SurveyItem';\nimport './visitList.css';\n\nconst VisitSurveyList = props => {\n\n  const {...filter} = props.filter;\n  let surveys2 = props.surveys;\n  let propsSurveys = [];\n\n  if (filter.field === 'survey' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsSurveys = surveys2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'survey' && filter.key === 'title' && filter.value === 'Descending') {\n    propsSurveys = surveys2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'survey' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsSurveys = surveys2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'survey' && filter.key === 'description' && filter.value === 'Descending') {\n    propsSurveys = surveys2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'survey') {\n    propsSurveys = surveys2;\n  }\n\n  let count = 0;\n\n  const surveys = propsSurveys.map(survey => {\n\n    count = propsSurveys.indexOf(survey)+1;\n\n    return (\n      <SurveyItem\n        key={count}\n        survey={survey}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{surveys}</ul>;\n};\n\nexport default VisitSurveyList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst SystematicInquiryItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.systematicInquiry.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.systematicInquiry.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.systematicInquiry.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'systematicInquiry',data:props.systematicInquiry})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.systematicInquiry}\n                attachments={props.systematicInquiry.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"systematicInquiry\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.systematicInquiry)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default SystematicInquiryItem;\n","import React from 'react';\n\nimport SystematicInquiryItem from '../../items/visit/SystematicInquiryItem';\nimport './visitList.css';\n\nconst VisitSystematicInquiryList = props => {\n\n  const {...filter} = props.filter;\n  let systematicInquirys2 = props.systematicInquiry;\n  let propsSystematicInquirys = [];\n\n  if (filter.field === 'systematicInquiry' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'systematicInquiry' && filter.key === 'title' && filter.value === 'Descending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'systematicInquiry' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'systematicInquiry' && filter.key === 'description' && filter.value === 'Descending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'systematicInquiry') {\n    propsSystematicInquirys = systematicInquirys2;\n  }\n\n  let count = 0;\n\n  const systematicInquirys = propsSystematicInquirys.map(systematicInquiry => {\n\n    count = propsSystematicInquirys.indexOf(systematicInquiry)+1;\n\n    return (\n      <SystematicInquiryItem\n        key={count}\n        systematicInquiry={systematicInquiry}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{systematicInquirys}</ul>;\n};\n\nexport default VisitSystematicInquiryList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst VitalsItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Pulse Rate: <span className=\"bold\">{props.vitals.pr}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Respiratory Rate: <span className=\"bold\">{props.vitals.rr}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              <Card.Text className=\"cardText\">\n                Pulse Rate: <span className=\"bold\">{props.vitals.pr}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Respiratory Rate: <span className=\"bold\">{props.vitals.rr}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Blood Pressure : <span className=\"bold\">{props.vitals.bp1}</span> / <span className=\"bold\">{props.vitals.bp2}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Temperature: <span className=\"bold\">{props.vitals.temp}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                PS02: <span className=\"bold\">{props.vitals.ps02}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Height : <span className=\"bold\">{props.vitals.heightValue}</span>  <span className=\"bold\">{props.vitals.heightUnit}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Weight : <span className=\"bold\">{props.vitals.weightValue}</span>  <span className=\"bold\">{props.vitals.weightUnit}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                BMI : <span className=\"bold\">{props.vitals.bmi}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Urine\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.vitals.urine.type}</span> Value: <span className=\"bold\">{props.vitals.urine.value}</span>\n              </Card.Text>\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.vitals)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default VitalsItem;\n","import React from 'react';\n\nimport VitalsItem from '../../items/visit/VitalsItem';\nimport './visitList.css';\n\nconst VisitVitalsList = props => {\n\n  const {...filter} = props.filter;\n  let vitals2 = props.vitals;\n  let propsVitals = [];\n\n  if (filter.field === 'vitals' && filter.key === 'pr' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.pr > b.pr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'pr' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.pr < b.pr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp1' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp1 > b.bp1) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp1' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp1 < b.bp1) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp2' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp2 > b.bp2) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp2' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp2 < b.bp2) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'rr' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.rr > b.rr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'rr' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.rr < b.rr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'temp' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.temp > b.temp) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'temp' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.temp < b.temp) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'ps02' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.ps02 > b.ps02) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'ps02' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.ps02 < b.ps02) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'heightValue' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.heightValue > b.heightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'heightValue' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.heightValue < b.heightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'weightValue' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.weightValue > b.weightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'weightValue' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.weightValue < b.weightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bmi' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.bmi > b.bmi) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bmi' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.bmi < b.bmi) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.type' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.type > b.urine.type) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.type' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.type < b.urine.type) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.value' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.value > b.urine.value) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.value' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.value < b.urine.value) ? 1 : -1);\n  }\n  // if (filter.field === 'vitals' && filter.key === 'role') {\n  //   propsVitals = vitals2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'vitals') {\n    propsVitals = vitals2;\n  }\n\n  let count = 0;\n\n  const vitals = propsVitals.map(vitalsItem => {\n\n    count = propsVitals.indexOf(vitalsItem)+1;\n\n    return (\n      <VitalsItem\n        key={count}\n        vitals={vitalsItem}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{vitals}</ul>;\n};\n\nexport default VisitVitalsList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst ExaminationItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            General: <span className=\"bold\">{props.examination.general}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Area: <span className=\"bold\">{props.examination.area}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                General: <span className=\"bold\">{props.examination.general}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Area: <span className=\"bold\">{props.examination.area}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                type: <span className=\"bold\">{props.examination.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                measure: <span className=\"bold\">{props.examination.measure}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                value: <span className=\"bold\">{props.examination.value}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                description: <span className=\"bold\">{props.examination.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                 followUp: <span className=\"bold\">{props.examination.followUp === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'examination',data:props.examination})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.examination}\n                attachments={props.examination.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"examination\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.examination)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default ExaminationItem;\n","import React from 'react';\n\nimport ExaminationItem from '../../items/visit/ExaminationItem';\nimport './visitList.css';\n\nconst VisitExaminationList = props => {\n\n  const {...filter} = props.filter;\n  let examinations2 = props.examination;\n  let propsExaminations = [];\n\n  if (filter.field === 'examination' && filter.key === 'general' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.general > b.general) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'general' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.general < b.general) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'area' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.area > b.area) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'area' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.area < b.area) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'type' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'measure' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.measure > b.measure) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'measure' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.measure < b.measure) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'value' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.value > b.value) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'value' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.value < b.value) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'description' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'followUp') {\n    propsExaminations = examinations2.filter(x => x.followUp === filter.value);\n  }\n  if (filter.field !== 'examination') {\n    propsExaminations = examinations2;\n  }\n\n  let count = 0;\n\n  const examinations = propsExaminations.map(examination => {\n\n    count = propsExaminations.indexOf(examination)+1;\n\n    return (\n      <ExaminationItem\n        key={count}\n        examination={examination}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{examinations}</ul>;\n};\n\nexport default VisitExaminationList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst InvestigationItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.investigation.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.investigation.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.investigation.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.investigation.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.investigation.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'investigation',data:props.investigation})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.investigation}\n                attachments={props.investigation.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"investigation\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.investigation)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default InvestigationItem;\n","import React from 'react';\n\nimport InvestigationItem from '../../items/visit/InvestigationItem';\nimport './visitList.css';\n\nconst VisitInvestigationList = props => {\n\n  const {...filter} = props.filter;\n  let investigations2 = props.investigation;\n  let propsInvestigations = [];\n\n  if (filter.field === 'investigation' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'investigation' && filter.key === 'title' && filter.value === 'Descending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'investigation' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'investigation' && filter.key === 'description' && filter.value === 'Descending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'investigation') {\n    propsInvestigations = investigations2;\n  }\n\n  let count = 0;\n\n  const investigations = propsInvestigations.map(investigation => {\n\n    count = propsInvestigations.indexOf(investigation)+1;\n\n    return (\n      <InvestigationItem\n        key={count}\n        investigation={investigation}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{investigations}</ul>;\n};\n\nexport default VisitInvestigationList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst DiagnosisItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.diagnosis.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.diagnosis.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.diagnosis.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.diagnosis.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.diagnosis.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'diagnosis',data:props.diagnosis})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.diagnosis}\n                attachments={props.diagnosis.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"diagnosis\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.diagnosis)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default DiagnosisItem;\n","import React from 'react';\n\nimport DiagnosisItem from '../../items/visit/DiagnosisItem';\nimport './visitList.css';\n\nconst VisitDiagnosisList = props => {\n\n  const {...filter} = props.filter;\n  let diagnosis2 = props.diagnosis;\n  let propsDiagnosis = [];\n\n  if (filter.field === 'diagnosis' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'title' && filter.value === 'Descending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'type' && filter.value === 'Descending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'description' && filter.value === 'Descending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'diagnosis') {\n    propsDiagnosis = diagnosis2;\n  }\n\n  let count = 0;\n\n  const diagnoses = propsDiagnosis.map(diagnosis => {\n\n    count = propsDiagnosis.indexOf(diagnosis)+1;\n\n    return (\n      <DiagnosisItem\n        key={count}\n        diagnosis={diagnosis}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{diagnoses}</ul>;\n};\n\nexport default VisitDiagnosisList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst TreatmentItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.treatment.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.treatment.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.treatment.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.treatment.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.treatment.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Dose: <span className=\"bold\">{props.treatment.dose}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Frequency: <span className=\"bold\">{props.treatment.frequency}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'treatment',data:props.treatment})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.treatment}\n                attachments={props.treatment.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"treatment\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.treatment)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default TreatmentItem;\n","import React from 'react';\n\nimport TreatmentItem from '../../items/visit/TreatmentItem';\nimport './visitList.css';\n\nconst VisitTreatmentList = props => {\n\n  const {...filter} = props.filter;\n  let treatment2 = props.treatment;\n  let propsTreatment = [];\n\n  if (filter.field === 'treatment' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'title' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'type' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'dose' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.dose > b.dose) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'dose' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.dose < b.dose) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'frequency' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.frequency > b.frequency) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'frequency' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.frequency < b.frequency) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'description' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'treatment') {\n    propsTreatment = treatment2;\n  }\n\n  let count = 0;\n\n  const treatments = propsTreatment.map(treatment => {\n\n    count = propsTreatment.indexOf(treatment)+1;\n\n    return (\n      <TreatmentItem\n        key={count}\n        treatment={treatment}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{treatments}</ul>;\n};\n\nexport default VisitTreatmentList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst BillingItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.billing.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.billing.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.billing.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.billing.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.billing.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Notes: <span className=\"bold\">{props.billing.notes}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Amount: <span className=\"bold\">{props.billing.amount}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Paid: <span className=\"bold\">{props.billing.paid === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'billing',data:props.billing})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.billing}\n                attachments={props.billing.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"billing\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.billing)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default BillingItem;\n","import React from 'react';\n\nimport BillingItem from '../../items/visit/BillingItem';\nimport './visitList.css';\n\nconst VisitBillingList = props => {\n\n  const {...filter} = props.filter;\n  let billing2 = props.billing;\n  let propsBilling = [];\n\n  if (filter.field === 'billing' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'title' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'type' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'amount' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.amount > b.amount) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'amount' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.amount < b.amount) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'description' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'notes' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.notes > b.notes) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'notes' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.notes < b.notes) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'paid') {\n    propsBilling = billing2.filter(x => x.paid === filter.value);\n  }\n  if (filter.field !== 'billing') {\n    propsBilling = billing2;\n  }\n\n  let count = 0;\n\n  const billings = propsBilling.map(billing => {\n\n    count = propsBilling.indexOf(billing)+1;\n\n    return (\n      <BillingItem\n        key={count}\n        billing={billing}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{billings}</ul>;\n};\n\nexport default VisitBillingList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst VigilanceItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            number: <span className=\"bold\">{props.key}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              <h3>chronicIllness:</h3>\n              <p>Diabetes</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.diabetes.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.diabetes.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.diabetes.comment}</span>\n              </Card.Text>\n\n              <p>High BloodPressure</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.hbp.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.hbp.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.hbp.comment}</span>\n              </Card.Text>\n\n              <p>Dyslipidemia</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.dyslipidemia.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.dyslipidemia.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.dyslipidemia.comment}</span>\n              </Card.Text>\n\n              <p>Cad</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.cad.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.cad.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.cad.comment}</span>\n              </Card.Text>\n\n              <h3>lifestyle</h3>\n              <p>Weight</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.weight.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.weight.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.weight.comment}</span>\n              </Card.Text>\n\n              <p>Diet</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.diet.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.diet.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.diet.comment}</span>\n              </Card.Text>\n\n              <p>Smoking</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.smoking.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.smoking.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.smoking.comment}</span>\n              </Card.Text>\n\n              <p>SubstanceAbuse</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.substanceAbuse.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.substanceAbuse.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.substanceAbuse.comment}</span>\n              </Card.Text>\n\n              <p>exercise</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.exercise.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.exercise.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.exercise.comment}</span>\n              </Card.Text>\n\n              <p>allergies</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.allergies.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.allergies.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.allergies.comment}</span>\n              </Card.Text>\n\n              <p>asthma</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.asthma.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.asthma.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.asthma.comment}</span>\n              </Card.Text>\n\n              <h3>Screening</h3>\n              <p>breast</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.breast.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.breast.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.breast.comment}</span>\n              </Card.Text>\n\n              <p>prostate</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.prostate.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.prostate.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.prostate.comment}</span>\n              </Card.Text>\n\n              <p>cervix</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.cervix.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.cervix.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.cervix.comment}</span>\n              </Card.Text>\n\n              <p>colon</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.colon.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.colon.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.colon.comment}</span>\n              </Card.Text>\n\n              <p>dental</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.dental.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.dental.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.dental.comment}</span>\n              </Card.Text>\n\n              <h3>Vaccines</h3>\n              <p>Influenza</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.influenza.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.influenza.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.influenza.comment}</span>\n              </Card.Text>\n\n              <p>varicella</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.varicella.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.varicella.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.varicella.comment}</span>\n              </Card.Text>\n\n              <p>hpv</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.hpv.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.hpv.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.hpv.comment}</span>\n              </Card.Text>\n\n              <p>mmr</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.mmr.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.mmr.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.mmr.comment}</span>\n              </Card.Text>\n\n              <p>tetanus</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.tetanus.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.tetanus.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.tetanus.comment}</span>\n              </Card.Text>\n\n              <p>pneumovax</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.pneumovax.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.pneumovax.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.pneumovax.comment}</span>\n              </Card.Text>\n\n              <p>other</p>\n              <Card.Text className=\"cardText\">\n                Other: <span className=\"bold\">{props.vigilance.vaccines.other.name}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.other.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.other.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.other.comment}</span>\n              </Card.Text>\n\n\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.vigilance)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default VigilanceItem;\n","import React from 'react';\n\nimport VigilanceItem from '../../items/visit/VigilanceItem';\nimport './visitList.css';\n\nconst VisitVigilanceList = props => {\n\n  const {...filter} = props.filter;\n  let vigilance2 = props.vigilance;\n  let propsVigilance = [];\n\n  if (filter.field === 'vigilance' && filter.key === 'chronicIllness.diabetes.medication') {\n    propsVigilance = vigilance2.filter(x => x.chronicIllness.diabetes.medication === filter.value)\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'vigilance') {\n    propsVigilance = vigilance2;\n  }\n\n  let count = 0;\n\n  const vigilances = propsVigilance.map(vigilance => {\n\n    count = propsVigilance.indexOf(vigilance)+1;\n\n    return (\n      <VigilanceItem\n        key={count}\n        vigilance={vigilance}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{vigilances}</ul>;\n};\n\nexport default VisitVigilanceList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst ImageItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Link: <span className=\"bold\">{props.image.path}</span>\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.image.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.image.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.image.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.image)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n\n};\n\nexport default ImageItem;\n","import React from 'react';\n\nimport ImageItem from '../../items/visit/ImageItem';\nimport './visitList.css';\n\nconst VisitImageList = props => {\n\n  const {...filter} = props.filter;\n  let images2 = props.images;\n  let propsImages = [];\n\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'image') {\n    propsImages = images2;\n  }\n\n  let count = 0;\n\n  const images = propsImages.map(image => {\n\n    count = propsImages.indexOf(image)+1;\n\n    return (\n      <ImageItem\n        key={count}\n        image={image}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"imageList\">{images}</ul>;\n};\n\nexport default VisitImageList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst FileItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Link: <span className=\"bold\">{props.file.path}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.file.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.file.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.file.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.file)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default FileItem;\n","import React from 'react';\n\nimport FileItem from '../../items/visit/FileItem';\nimport './visitList.css';\n\nconst VisitFileList = props => {\n\n  const {...filter} = props.filter;\n  let files2 = props.files;\n  let propsFiles = [];\n\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'file') {\n    propsFiles = files2;\n  }\n\n  let count = 0;\n\n  const files = propsFiles.map(file => {\n\n    count = propsFiles.indexOf(file)+1;\n\n    return (\n      <FileItem\n        key={count}\n        file={file}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{files}</ul>;\n};\n\nexport default VisitFileList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterComplaintForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"complaint\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>description</option>\n        <option>anamnesis</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterComplaintForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterSurveyForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"survey\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterSurveyForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterSystematicInquiryForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"systematicInquiry\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterSystematicInquiryForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterDiagnosisForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"diagnosis\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterDiagnosisForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterVitalsForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"vitals\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>pr</option>\n        <option>bp1</option>\n        <option>bp2</option>\n        <option>rr</option>\n        <option>temp</option>\n        <option>ps02</option>\n        <option>heightUnit</option>\n        <option>heightValue</option>\n        <option>weightUnit</option>\n        <option>weightValue</option>\n        <option>bmi</option>\n        <option>urine.type</option>\n        <option>urine.value</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterVitalsForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterExaminationForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"examination\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>general</option>\n        <option>area</option>\n        <option>type</option>\n        <option>measure</option>\n        <option>value</option>\n        <option>description</option>\n        <option>followUp</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterExaminationForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterInvestigationForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"investigation\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterInvestigationForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterTreatmentForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"treatment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        <option>dose</option>\n        <option>frequency</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterTreatmentForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterBillingForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"billing\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        <option>amount</option>\n        <option>paid</option>\n        <option>notes</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterBillingForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddComplaintForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Complaint</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"anamnesis\">\n        <Form.Label>anamnesis</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"anamnesis\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddComplaintForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddSurveyForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Survey</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddSurveyForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddSystematicInquiryForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add SystematicInquiry</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddSystematicInquiryForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus\n} from '@fortawesome/free-solid-svg-icons';\n\nconst AddVitalsForm = (props) => {\n\n  const [weightUnit, setState] = useState('Lbs');\n  const handleStateChange = (args) => {\n    // setState(args)\n    if (args === 'M') {\n      setState('Kg');\n    }\n    if (args === 'In') {\n      setState('Lbs');\n    }\n   }\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Vitals</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"pr\">\n        <Form.Label>Pulse Rate</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"pr\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"bp1\">\n        <Form.Label>Blood Pressure (top)</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"bp1\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"bp2\">\n        <Form.Label>Blood Pressure (bottom)</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"bp2\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"rr\">\n        <Form.Label>Respiratory Rate</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"rr\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"temp\">\n        <Form.Label>Temperature</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"temp\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"ps02\">\n        <Form.Label>PS-02</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"ps02\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"heightUnit\">\n        <Form.Label>Height: Unit</Form.Label>\n        <Form.Control as=\"select\" onChange={e => handleStateChange(e.target.value)}>\n          <option>In</option>\n          <option>M</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"heightValue\">\n        <Form.Label>Height: Value</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"heightValue\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"weightUnit\">\n        <Form.Label>Weight: Unit</Form.Label>\n        <Form.Control type=\"text\" value={weightUnit}/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"weightValue\">\n        <Form.Label>Weight: Value</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"weightValue\"/>\n      </Form.Group>\n    </Form.Row>\n    {\n      // <Form.Row>\n      //   <Form.Group as={Col} controlId=\"bmi\">\n      //     <Form.Label>BMI</Form.Label>\n      //     <Form.Control type=\"number\" step='0.001' placeholder=\"bmi\"/>\n      //   </Form.Group>\n      // </Form.Row>\n    }\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"urineType\">\n        <Form.Label>Urine: type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"urineType\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"urineValue\">\n        <Form.Label>Urine: value</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"urineValue\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddVitalsForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddExaminationForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Examination</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"general\">\n        <Form.Label>General</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"general\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"area\">\n        <Form.Label>Area</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"area\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>Type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"measure\">\n        <Form.Label>Measure</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"measure\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Value</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"value\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"followUp\">\n        <Form.Label>FollowUp ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddExaminationForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddInvestigationForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Investigation</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddInvestigationForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddDiagnosisForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Diagnosis</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddDiagnosisForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddTreatmentForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Treatment</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"dose\">\n        <Form.Label>dose</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"dose\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"frequency\">\n        <Form.Label>frequency</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"frequency\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddTreatmentForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddBillingForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Billing</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"amount\">\n        <Form.Label>amount</Form.Label>\n        <Form.Control type=\"number\" step=\"0.001\" placeholder=\"amount\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"paid\">\n        <Form.Label>Paid ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"notes\">\n        <Form.Label>notes</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"notes\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddBillingForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddVigilanceForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Vigilance</h4>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>Diabetes</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDiabetesMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDiabetesTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDiabetesComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>HBP</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessHbpMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessHbpTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessHbpComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>Dyslipidemia</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDyslipidemiaMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDyslipidemiaTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDyslipidemiaComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>Cad</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessCadMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessCadTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessCadComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Lifestyle:</h4>\n    <p>Weight</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleWeightMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleWeightTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleWeightComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Diet</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleDietMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleDietTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleDietComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Smoking</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSmokingMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSmokingTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSmokingComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>SubstanceAbuse</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSubstanceAbuseMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSubstanceAbuseTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSubstanceAbuseComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Exercise</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleExerciseMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleExerciseTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleExerciseComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Allergies</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAllergiesMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAllergiesTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAllergiesComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Asthma</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAsthmaMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAsthmaTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAsthmaComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Screening:</h4>\n    <p>Breast</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningBreastMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningBreastTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningBreastComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Prostate</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningProstateMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningProstateTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningProstateComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Cervix</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningCervixMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningCervixTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningCervixComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Colon</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningColonMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningColonTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningColonComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Dental</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningDentalMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningDentalTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningDentalComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Vaccines</h4>\n    <p>Influenza</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesInfluenzaMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesInfluenzaTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesInfluenzaComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Varicella</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesVaricellaMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesVaricellaTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesVaricellaComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Hpv</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesHpvMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesHpvTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesHpvComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Mmr</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesMmrMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesMmrTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesMmrComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Tetanus</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesTetanusMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesTetanusTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesTetanusComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Pneumovax</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesPneumovaxMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesPneumovaxTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesPneumovaxComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Other</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherName\">\n        <Form.Label>name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddVigilanceForm;\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport AddToCalendar from 'react-add-to-calendar';\nimport S3 from 'react-aws-s3';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport PatientAddressList from '../lists/patient/PatientAddressList';\nimport PatientNextOfKinList from '../lists/patient/PatientNextOfKinList'\nimport PatientAllergyList from '../lists/patient/PatientAllergyList'\nimport PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientImageList from '../lists/patient/PatientImageList'\nimport PatientFileList from '../lists/patient/PatientFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport AppointmentNoteList from '../lists/appointment/AppointmentNoteList'\nimport VisitComplaintList from '../lists/visit/VisitComplaintList'\nimport VisitSurveyList from '../lists/visit/VisitSurveyList'\nimport VisitSystematicInquiryList from '../lists/visit/VisitSystematicInquiryList'\nimport VisitVitalsList from '../lists/visit/VisitVitalsList'\nimport VisitExaminationList from '../lists/visit/VisitExaminationList'\nimport VisitInvestigationList from '../lists/visit/VisitInvestigationList'\nimport VisitDiagnosisList from '../lists/visit/VisitDiagnosisList'\nimport VisitTreatmentList from '../lists/visit/VisitTreatmentList'\nimport VisitBillingList from '../lists/visit/VisitBillingList'\nimport VisitVigilanceList from '../lists/visit/VisitVigilanceList'\nimport VisitImageList from '../lists/visit/VisitImageList'\nimport VisitFileList from '../lists/visit/VisitFileList'\nimport UserList from '../lists/user/UserList'\n\n\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterComplaintForm from '../forms/filter/FilterComplaintForm';\nimport FilterSurveyForm from '../forms/filter/FilterSurveyForm';\nimport FilterSystematicInquiryForm from '../forms/filter/FilterSystematicInquiryForm';\nimport FilterDiagnosisForm from '../forms/filter/FilterDiagnosisForm';\nimport FilterVitalsForm from '../forms/filter/FilterVitalsForm';\nimport FilterExaminationForm from '../forms/filter/FilterExaminationForm';\nimport FilterInvestigationForm from '../forms/filter/FilterInvestigationForm';\nimport FilterTreatmentForm from '../forms/filter/FilterTreatmentForm';\nimport FilterBillingForm from '../forms/filter/FilterBillingForm';\nimport FilterImageForm from '../forms/filter/FilterImageForm';\nimport FilterFileForm from '../forms/filter/FilterFileForm';\nimport FilterUserForm from '../forms/filter/FilterUserForm';\n\nimport UpdatePatientSingleFieldForm from '../forms/add/UpdatePatientSingleFieldForm';\n\nimport AddUserForm from '../forms/add/AddUserForm';\nimport AddAttachmentForm from '../forms/add/AddAttachmentForm';\nimport AddImageForm from '../forms/add/AddImageForm';\nimport AddFileForm from '../forms/add/AddFileForm';\nimport AddComplaintForm from '../forms/add/AddComplaintForm';\nimport AddSurveyForm from '../forms/add/AddSurveyForm';\nimport AddSystematicInquiryForm from '../forms/add/AddSystematicInquiryForm';\nimport AddVitalsForm from '../forms/add/AddVitalsForm';\nimport AddExaminationForm from '../forms/add/AddExaminationForm';\nimport AddInvestigationForm from '../forms/add/AddInvestigationForm';\nimport AddDiagnosisForm from '../forms/add/AddDiagnosisForm';\nimport AddTreatmentForm from '../forms/add/AddTreatmentForm';\nimport AddBillingForm from '../forms/add/AddBillingForm';\nimport AddVigilanceForm from '../forms/add/AddVigilanceForm';\nimport loadingGif from '../../assets/loading.gif';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faBath\n} from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass VisitDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    selectedPatient: null,\n    selectedVisit: null,\n    selectedAppointment: null,\n    addAttachmentForm: false,\n    addAttachmentArgs: null,\n    showAddConsultantForm: false,\n    users: null,\n    calEvent: {\n      title: this.props.visit.title,\n      description: this.props.visit.appointment.description,\n      location: this.props.visit.appointment.location,\n      startTime: moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.visit.time+':00-05:00',\n      endTime: moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.visit.time+':00-05:00',\n    },\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.propsVisit = this.props.visit;\n  }\n\ncomponentDidMount () {\n  console.log('...visit details component mounted...');\n  let seshStore;\n  if (sessionStorage.getItem('logInfo')) {\n    seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getPocketVars(seshStore);\n  }\n  if (this.context.role === 'Admin' ||\n      this.context.role === 'Doctor' ||\n      this.context.role === 'Nurse'\n    ) {\n    this.setState({\n      canDelete: true\n    })\n  }\n\n  this.getAllUsers(seshStore);\n}\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n  console.log('...retriving pocketVars..');\n  this.context.setUserAlert('...retriving pocketVars..')\n  const token = args.token;\n  const activityId = args.activityId;\n  const requestBody = {\n        query:`\n          query {getPocketVars(\n            activityId:\"${activityId}\")}\n        `};\n\n  fetch('http://localhost:8088/graphql', {\n    method: 'POST',\n    body: JSON.stringify(requestBody),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + token\n    }\n  })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (resData.errors) {\n        this.setState({userAlert: resData.errors[0].message})\n      } else {\n        let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n        console.log('...retriving pocketVars success...');\n        this.context.setUserAlert('...retriving pocketVars success...')\n        this.setState({\n          pocketVars: pocketVarsParsed\n        });\n      }\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n    });\n  }\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message)\n      }\n      if (resData.data.addUserActivity.error) {\n        this.context.setUserAlert(resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n        activityA: `getAllUsers?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nsubmitAddComplaintForm = (event) => {\n  event.preventDefault();\n  console.log('...adding complaint...');\n  this.context.setUserAlert('...adding complaint...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = event.target.title.value;\n  const description = event.target.description.value;\n  const anamnesis = event.target.anamnesis.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0 ||\n      anamnesis.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/complaint/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'complaint attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'complaint attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'complaint attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'complaint attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitComplaint(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${title}\",\n            complaintDescription:\"${description}\",\n            complaintAnamnesis:\"${anamnesis}\",\n            complaintAttachment:\"${file2Path}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitComplaint);\n      let responseAlert = '...complaint add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitComplaint)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitComplaint,\n        activityA: `addVisitComplaint?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitComplaint;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteComplaint = (args) => {\n\n  console.log('...deleting complaint...');\n  this.context.setUserAlert('...deleting complaint...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = args.title;\n  const description = args.description;\n  const anamnesis = args.anamnesis;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitComplaint(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${title}\",\n            complaintDescription:\"${description}\",\n            complaintAnamnesis:\"${anamnesis}\",\n            complaintAttachments:\"${attachments}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitComplaint);\n      let responseAlert = '...complaint delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitComplaint)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitComplaint,\n        activityA: `deleteVisitComplaint?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitComplaint;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/complaint/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/complaint/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `complaint attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddSurveyForm = (event) => {\n  event.preventDefault();\n  console.log('...adding survey...');\n  this.context.setUserAlert('...adding survey...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/survey/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'survey attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'survey attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'survey attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'survey attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitSurvey(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          surveyTitle:\"${title}\",\n          surveyDescription:\"${description}\",\n          surveyAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitSurvey);\n      let responseAlert = '...survey add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitSurvey)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitSurvey,\n        activityA: `addVisitSurvey?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitSurvey;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteSurvey = (args) => {\n\n  console.log('...deleting survey...');\n  this.context.setUserAlert('...deleting survey...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = args.title;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitSurvey(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          surveyTitle:\"${title}\",\n          surveyDescription:\"${description}\",\n          surveyAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitSurvey);\n      let responseAlert = '...survey delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitSurvey)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitSurvey,\n        activityA: `deleteVisitSurvey?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitSurvey;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/survey/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/survey/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `survey attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddSystematicInquiryForm = (event) => {\n  event.preventDefault();\n  console.log('...adding systematicInquiry...');\n  this.context.setUserAlert('...adding systematicInquiry...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/systematicInquiry/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'systematicInquiry attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'systematicInquiry attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'systematicInquiry attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'systematicInquiry attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitSysInquiry(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          systematicInquiryTitle:\"${title}\",\n          systematicInquiryDescription:\"${description}\",\n          systematicInquiryAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitSysInquiry);\n      let responseAlert = '...systematicInquiry add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitSysInquiry)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitSysInquiry,\n        activityA: `addVisitSysInquiry?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitSysInquiry;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteSystematicInquiry = (args) => {\n\n  console.log('...deleting systematicInquiry...');\n  this.context.setUserAlert('...deleting systematicInquiry...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = args.title;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitSysInquiry(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          systematicInquiryTitle:\"${title}\",\n          systematicInquiryDescription:\"${description}\",\n          systematicInquiryAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitSysInquiry);\n      let responseAlert = '...sys inquiry delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitSysInquiry)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitSysInquiry,\n        activityA: `deleteVisitSysInquiry?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitSysInquiry;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/systematicInquiry/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/systematicInquiry/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `systematicInquiry attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddVitalsForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Vitals...');\n  this.context.setUserAlert('...adding Vitals...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const pr = event.target.pr.value;\n  const bp1 = event.target.bp1.value;\n  const bp2 = event.target.bp2.value;\n  const rr = event.target.rr.value;\n  const temp = event.target.temp.value;\n  const ps02 = event.target.ps02.value;\n  const heightUnit = event.target.heightUnit.value;\n  const heightValue = event.target.heightValue.value;\n  const weightUnit = event.target.weightUnit.value;\n  const weightValue = event.target.weightValue.value;\n  let bmi = 0;\n  const urineType = event.target.urineType.value;\n  const urineValue = event.target.urineValue.value;\n  if (heightUnit === 'M' ) {\n    bmi = weightValue/(heightValue**2)\n  }\n  if (heightUnit === 'In' ) {\n    bmi = 703 * (weightValue/(heightValue**2))\n  }\n  bmi = bmi.toFixed(2)\n  console.log('bmi',bmi);\n\n  if (\n      pr.trim().length === 0 ||\n      bp1.trim().length === 0 ||\n      bp2.trim().length === 0 ||\n      rr.trim().length === 0 ||\n      temp.trim().length === 0 ||\n      ps02.trim().length === 0 ||\n      heightUnit.trim().length === 0 ||\n      heightValue.trim().length === 0 ||\n      weightUnit.trim().length === 0 ||\n      weightValue.trim().length === 0 ||\n      urineType.trim().length === 0 ||\n      urineValue.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitVitals(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          vitalsPr:${pr},\n          vitalsBp1:${bp1},\n          vitalsBp2:${bp2},\n          vitalsRr:${rr},\n          vitalsTemp:${temp},\n          vitalsPs02:${ps02},\n          vitalsHeightUnit:\"${heightUnit}\",\n          vitalsHeightValue:${heightValue},\n          vitalsWeightUnit:\"${weightUnit}\",\n          vitalsWeightValue:${weightValue},\n          vitalsBmi:${bmi},\n          vitalsUrineType:\"${urineType}\",\n          vitalsUrineValue:\"${urineValue}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitVitals);\n      let responseAlert = '...Vitals add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitVitals)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitVitals,\n        activityA: `addVisitVitals?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitVitals;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteVitals = (args) => {\n\n  console.log('...deleting Vitals...');\n  this.context.setUserAlert('...deleting Vitals...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const pr = args.pr;\n  const bp1 = args.bp1;\n  const bp2 = args.bp2;\n  const rr = args.rr;\n  const temp = args.temp;\n  const ps02 = args.ps02;\n  const heightUnit = args.heightUnit;\n  const heightValue = args.heightValue;\n  const weightUnit = args.weightUnit;\n  const weightValue = args.weightValue;\n  const bmi = args.bmi;\n  const urineType = args.urine.type;\n  const urineValue = args.urine.value;\n\n  let requestBody = {\n    query: `\n    mutation {deleteVisitVitals(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        vitalsPr:${pr},\n        vitalsBp1:${bp1},\n        vitalsBp2:${bp2},\n        vitalsRr:${rr},\n        vitalsTemp:${temp},\n        vitalsPs02:${ps02},\n        vitalsHeightUnit:\"${heightUnit}\",\n        vitalsHeightValue:${heightValue},\n        vitalsWeightUnit:\"${weightUnit}\",\n        vitalsWeightValue:${weightValue},\n        vitalsBmi:${bmi},\n        vitalsUrineType:\"${urineType}\",\n        vitalsUrineValue:\"${urineValue}\"\n      })\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitVitals);\n      let responseAlert = '...vitals delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitVitals)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitVitals,\n        activityA: `deleteVisitVitals?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitVitals;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddExaminationForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Examination...');\n  this.context.setUserAlert('...adding Examination...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const general = event.target.general.value;\n  const area = event.target.area.value;\n  const type = event.target.type.value;\n  const measure = event.target.measure.value;\n  const value = event.target.value.value;\n  const description = event.target.description.value;\n  const followUp = event.target.followUp.checked;\n  const attachment = event.target.attachment.value;\n\n  if (\n      general.trim().length === 0 ||\n      area.trim().length === 0 ||\n      type.trim().length === 0 ||\n      measure.trim().length === 0 ||\n      value.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/examination/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'examination attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'examination attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'examination attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'examination attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitExamination(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          examinationGeneral:\"${general}\",\n          examinationArea:\"${area}\",\n          examinationType:\"${type}\",\n          examinationMeasure:\"${measure}\",\n          examinationValue:\"${value}\",\n          examinationDescription:\"${description}\",\n          examinationFollowUp:${followUp},\n          examinationAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitExamination);\n      let responseAlert = '...Examination add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitExamination)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitExamination,\n        activityA: `addVisitExamination?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitExamination;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteExamination = (args) => {\n\n  console.log('...deleting Examination...');\n  this.context.setUserAlert('...deleting Examination...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const general = args.general;\n  const area = args.area;\n  const type = args.type;\n  const measure = args.measure;\n  const value = args.value;\n  const description = args.description;\n  const followUp = args.followUp;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitExamination(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          examinationGeneral:\"${general}\",\n          examinationArea:\"${area}\",\n          examinationType:\"${type}\",\n          examinationMeasure:\"${measure}\",\n          examinationValue:\"${value}\",\n          examinationDescription:\"${description}\",\n          examinationFollowUp:${followUp},\n          examinationAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitExamination);\n      let responseAlert = '...Examination delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitExamination)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitExamination,\n        activityA: `deleteVisitExamination?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitExamination;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/examination/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/examination/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `examination attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddInvestigationForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Investigation...');\n  this.context.setUserAlert('...adding Investigation...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/investigation/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'investigation attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'investigation attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'investigation attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'investigation attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitInvestigation(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          investigationTitle:\"${title}\",\n          investigationType:\"${type}\",\n          investigationDescription:\"${description}\",\n          investigationAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitInvestigation);\n      let responseAlert = '...Investigation add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitInvestigation)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitInvestigation,\n        activityA: `addVisitInvestigation?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitInvestigation;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteInvestigation = (args) => {\n\n  console.log('...deleting Investigation...');\n  this.context.setUserAlert('...deleting Investigation...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitInvestigation(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          investigationTitle:\"${title}\",\n          investigationType:\"${type}\",\n          investigationDescription:\"${description}\",\n          investigationAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitInvestigation);\n      let responseAlert = '...Investigation delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitInvestigation)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitInvestigation,\n        activityA: `deleteVisitInvestigation?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitInvestigation;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/investigation/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/investigation/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `investigation attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddDiagnosisForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Diagnosis...');\n  this.context.setUserAlert('...adding Diagnosis...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/diagnosis/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'diagnosis attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'diagnosis attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'diagnosis attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'diagnosis attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitDiagnosis(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          diagnosisTitle:\"${title}\",\n          diagnosisType:\"${type}\",\n          diagnosisDescription:\"${description}\",\n          diagnosisAttachment:\"${file2Path}\"\n        })\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitDiagnosis);\n      let responseAlert = '...Diagnosis add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitDiagnosis)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitDiagnosis,\n        activityA: `addVisitDiagnosis?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitDiagnosis;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteDiagnosis = (args) => {\n\n  console.log('...deleting Diagnosis...');\n  this.context.setUserAlert('...deleting Diagnosis...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitDiagnosis(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          diagnosisTitle:\"${title}\",\n          diagnosisType:\"${type}\",\n          diagnosisDescription:\"${description}\",\n          diagnosisAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitDiagnosis);\n      let responseAlert = '...Diagnosis delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitDiagnosis)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitDiagnosis,\n        activityA: `deleteVisitDiagnosis?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitDiagnosis;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/diagnosis/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/diagnosis/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `diagnosis attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddTreatmentForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Treatment...');\n  this.context.setUserAlert('...adding Treatment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const dose = event.target.dose.value;\n  const frequency = event.target.frequency.value;\n  const attachment = event.target.attachment.value;\n\n\n  if (\n      title.trim().length === 0 ||\n      type.trim().length === 0 ||\n      description.trim().length === 0 ||\n      dose.trim().length === 0 ||\n      frequency.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/treatment/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'treatment attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'treatment attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'treatment attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'treatment attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n        mutation {addVisitTreatment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${type}\",\n            treatmentTitle:\"${title}\",\n            treatmentDescription:\"${description}\",\n            treatmentDose:\"${dose}\",\n            treatmentFrequency:\"${frequency}\",\n            treatmentAttachment:\"${file2Path}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitTreatment);\n      let responseAlert = '...Treatment add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitTreatment)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitTreatment,\n        activityA: `addVisitTreatment?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitTreatment;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteTreatment = (args) => {\n\n  console.log('...deleting Treatment...');\n  this.context.setUserAlert('...deleting Treatment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const dose = args.dose;\n  const frequency = args.frequency;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n        mutation {deleteVisitTreatment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${type}\",\n            treatmentTitle:\"${title}\",\n            treatmentDescription:\"${description}\",\n            treatmentDose:\"${dose}\",\n            treatmentFrequency:\"${frequency}\",\n            treatmentAttachments:\"${attachments}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitTreatment);\n      let responseAlert = '...Treatment delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitTreatment)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitTreatment,\n        activityA: `deleteVisitTreatment?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitTreatment;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/treatment/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/treatment/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `treatment attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddBillingForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Billing...');\n  this.context.setUserAlert('...adding Billing...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const amount = event.target.amount.value;\n  const paid = event.target.paid.checked;\n  const notes = event.target.notes.value;\n  const attachment = event.target.attachment.value;\n\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0 ||\n      amount <= 0 ||\n      notes.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/billing/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'billing attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'billing attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'billing attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'billing attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n        mutation {addVisitBilling(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${title}\",\n            billingType:\"${type}\",\n            billingDescription:\"${description}\",\n            billingAmount:${amount},\n            billingPaid:${paid},\n            billingAttachment:\"${file2Path}\",\n            billingNotes:\"${notes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitBilling);\n      let responseAlert = '...Billing add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitBilling)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitBilling,\n        activityA: `addVisitBilling?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitBilling;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteBilling = (args) => {\n\n  console.log('...deleting Billing...',args);\n  this.context.setUserAlert('...deleting Billing...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const amount = args.amount;\n  const paid = args.paid;\n  const notes = args.notes;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n        mutation {deleteVisitBilling(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${title}\",\n            billingType:\"${type}\",\n            billingDescription:\"${description}\",\n            billingAmount:${amount},\n            billingPaid:${paid},\n            billingAttachments:\"${attachments}\",\n            billingNotes:\"${notes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitBilling);\n      let responseAlert = '...Billing delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitBilling)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitBilling,\n        activityA: `deleteVisitBilling?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitBilling;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/billing/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/billing/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `billing attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Image...');\n  this.context.setUserAlert('...adding Image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/images';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n        mutation {addVisitImage(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            imageName:\"${imageName}\",\n            imageType:\"${imageType}\",\n            imagePath:\"${imagePath}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitImage);\n      let responseAlert = '...Image add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitImage)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitImage,\n        activityA: `addVisitImage?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n\n  console.log('...deleting Image...',args);\n  this.context.setUserAlert('...deleting Image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const name = args.name;\n  const type = args.type;\n  const path = args.path;\n\n  let requestBody = {\n    query: `\n    mutation {deleteVisitImage(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        imageName:\"${name}\",\n        imageType:\"${type}\",\n        imagePath:\"${path}\"\n      })\n    {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitImage);\n      let responseAlert = '...Image delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitImage)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitImage,\n        activityA: `deleteVisitImage?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'visit/'+visitId+'/images';\n      const filename = args.name;\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding File...');\n  this.context.setUserAlert('...adding File...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n        mutation {addVisitFile(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            fileName:\"${file2Name}\",\n            fileType:\"${file2Type}\",\n            filePath:\"${file2Path}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitFile);\n      let responseAlert = '...File add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitFile)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitFile,\n        activityA: `addVisitFile?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n\n  console.log('...deleting File...',args);\n  this.context.setUserAlert('...deleting File...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const name = args.name;\n  const type = args.type;\n  const path = args.path;\n\n  let requestBody = {\n    query: `\n    mutation {deleteVisitFile(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        fileName:\"${name}\",\n        fileType:\"${type}\",\n        filePath:\"${path}\"\n      })\n    {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitFile);\n      let responseAlert = '...File delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitFile)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitFile,\n        activityA: `deleteVisitFile?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'visit/'+visitId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddVigilanceForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Vigilance...');\n  this.context.setUserAlert('...adding Vigilance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n    mutation {addVisitVigilance(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        vigilanceChronicIllnessDiabetesMedication:${event.target.vigilanceChronicIllnessDiabetesMedication.checked},\n        vigilanceChronicIllnessDiabetesTesting:${event.target.vigilanceChronicIllnessDiabetesTesting.checked},\n        vigilanceChronicIllnessDiabetesComment:\"${event.target.vigilanceChronicIllnessDiabetesComment.value}\",\n        vigilanceChronicIllnessHbpMedication:${event.target.vigilanceChronicIllnessHbpMedication.checked},\n        vigilanceChronicIllnessHbpTesting:${event.target.vigilanceChronicIllnessHbpTesting.checked},\n        vigilanceChronicIllnessHbpComment:\"${event.target.vigilanceChronicIllnessHbpComment.value}\",\n        vigilanceChronicIllnessDyslipidemiaMedication:${event.target.vigilanceChronicIllnessDyslipidemiaMedication.checked},\n        vigilanceChronicIllnessDyslipidemiaTesting:${event.target.vigilanceChronicIllnessDyslipidemiaTesting.checked},\n        vigilanceChronicIllnessDyslipidemiaComment:\"${event.target.vigilanceChronicIllnessDyslipidemiaComment.value}\",\n        vigilanceChronicIllnessCadMedication:${event.target.vigilanceChronicIllnessCadMedication.checked},\n        vigilanceChronicIllnessCadTesting:${event.target.vigilanceChronicIllnessCadTesting.checked},\n        vigilanceChronicIllnessCadComment:\"${event.target.vigilanceChronicIllnessCadComment.value}\",\n        vigilanceLifestyleWeightMedication:${event.target.vigilanceLifestyleWeightMedication.checked},\n        vigilanceLifestyleWeightTesting:${event.target.vigilanceLifestyleWeightTesting.checked},\n        vigilanceLifestyleWeightComment:\"${event.target.vigilanceLifestyleWeightComment.value}\",\n        vigilanceLifestyleDietMedication:${event.target.vigilanceLifestyleDietMedication.checked},\n        vigilanceLifestyleDietTesting:${event.target.vigilanceLifestyleDietTesting.checked},\n        vigilanceLifestyleDietComment:\"${event.target.vigilanceLifestyleDietComment.value}\",\n        vigilanceLifestyleSmokingMedication:${event.target.vigilanceLifestyleSmokingMedication.checked},\n        vigilanceLifestyleSmokingTesting:${event.target.vigilanceLifestyleSmokingTesting.checked},\n        vigilanceLifestyleSmokingComment:\"${event.target.vigilanceLifestyleSmokingComment.value}\",\n        vigilanceLifestyleSubstanceAbuseMedication:${event.target.vigilanceLifestyleSubstanceAbuseMedication.checked},\n        vigilanceLifestyleSubstanceAbuseTesting:${event.target.vigilanceLifestyleSubstanceAbuseTesting.checked},\n        vigilanceLifestyleSubstanceAbuseComment:\"${event.target.vigilanceLifestyleSubstanceAbuseComment.value}\",\n        vigilanceLifestyleExerciseMedication:${event.target.vigilanceLifestyleExerciseMedication.checked},\n        vigilanceLifestyleExerciseTesting:${event.target.vigilanceLifestyleExerciseTesting.checked},\n        vigilanceLifestyleExerciseComment:\"${event.target.vigilanceLifestyleExerciseComment.value}\",\n        vigilanceLifestyleAllergiesMedication:${event.target.vigilanceLifestyleAllergiesMedication.checked},\n        vigilanceLifestyleAllergiesTesting:${event.target.vigilanceLifestyleAllergiesTesting.checked},\n        vigilanceLifestyleAllergiesComment:\"${event.target.vigilanceLifestyleAllergiesComment.value}\",\n        vigilanceLifestyleAsthmaMedication:${event.target.vigilanceLifestyleAsthmaMedication.checked},\n        vigilanceLifestyleAsthmaTesting:${event.target.vigilanceLifestyleAsthmaTesting.checked},\n        vigilanceLifestyleAsthmaComment:\"${event.target.vigilanceLifestyleAsthmaComment.value}\",\n        vigilanceScreeningBreastMedication:${event.target.vigilanceScreeningBreastMedication.checked},\n        vigilanceScreeningBreastTesting:${event.target.vigilanceScreeningBreastTesting.checked},\n        vigilanceScreeningBreastComment:\"${event.target.vigilanceScreeningBreastComment.value}\",\n        vigilanceScreeningProstateMedication:${event.target.vigilanceScreeningProstateMedication.checked},\n        vigilanceScreeningProstateTesting:${event.target.vigilanceScreeningProstateTesting.checked},\n        vigilanceScreeningProstateComment:\"${event.target.vigilanceScreeningProstateComment.value}\",\n        vigilanceScreeningCervixMedication:${event.target.vigilanceScreeningCervixMedication.checked},\n        vigilanceScreeningCervixTesting:${event.target.vigilanceScreeningCervixTesting.checked},\n        vigilanceScreeningCervixComment:\"${event.target.vigilanceScreeningCervixComment.value}\",\n        vigilanceScreeningColonMedication:${event.target.vigilanceScreeningColonMedication.checked},\n        vigilanceScreeningColonTesting:${event.target.vigilanceScreeningColonTesting.checked},\n        vigilanceScreeningColonComment:\"${event.target.vigilanceScreeningColonComment.value}\",\n        vigilanceScreeningDentalMedication:${event.target.vigilanceScreeningDentalMedication.checked},\n        vigilanceScreeningDentalTesting:${event.target.vigilanceScreeningDentalTesting.checked},\n        vigilanceScreeningDentalComment:\"${event.target.vigilanceScreeningDentalComment.value}\",\n        vigilanceVaccinesInfluenzaMedication:${event.target.vigilanceVaccinesInfluenzaMedication.checked},\n        vigilanceVaccinesInfluenzaTesting:${event.target.vigilanceVaccinesInfluenzaTesting.checked},\n        vigilanceVaccinesInfluenzaComment:\"${event.target.vigilanceVaccinesInfluenzaComment.value}\",\n        vigilanceVaccinesVaricellaMedication:${event.target.vigilanceVaccinesVaricellaMedication.checked},\n        vigilanceVaccinesVaricellaTesting:${event.target.vigilanceVaccinesVaricellaTesting.checked},\n        vigilanceVaccinesVaricellaComment:\"${event.target.vigilanceVaccinesVaricellaComment.value}\",\n        vigilanceVaccinesHpvMedication:${event.target.vigilanceVaccinesHpvMedication.checked},\n        vigilanceVaccinesHpvTesting:${event.target.vigilanceVaccinesHpvTesting.checked},\n        vigilanceVaccinesHpvComment:\"${event.target.vigilanceVaccinesHpvComment.value}\",\n        vigilanceVaccinesMmrMedication:${event.target.vigilanceVaccinesMmrMedication.checked},\n        vigilanceVaccinesMmrTesting:${event.target.vigilanceVaccinesMmrTesting.checked},\n        vigilanceVaccinesMmrComment:\"${event.target.vigilanceVaccinesMmrComment.value}\",\n        vigilanceVaccinesTetanusMedication:${event.target.vigilanceVaccinesTetanusMedication.checked},\n        vigilanceVaccinesTetanusTesting:${event.target.vigilanceVaccinesTetanusTesting.checked},\n        vigilanceVaccinesTetanusComment:\"${event.target.vigilanceVaccinesTetanusComment.value}\",\n        vigilanceVaccinesPneumovaxMedication:${event.target.vigilanceVaccinesPneumovaxMedication.checked},\n        vigilanceVaccinesPneumovaxTesting:${event.target.vigilanceVaccinesPneumovaxTesting.checked},\n        vigilanceVaccinesPneumovaxComment:\"${event.target.vigilanceVaccinesPneumovaxComment.value}\",\n        vigilanceVaccinesOtherName:\"${event.target.vigilanceVaccinesOtherName.value}\",\n        vigilanceVaccinesOtherMedication:${event.target.vigilanceVaccinesOtherMedication.checked},\n        vigilanceVaccinesOtherTesting:${event.target.vigilanceVaccinesOtherTesting.checked},\n        vigilanceVaccinesOtherComment:\"${event.target.vigilanceVaccinesOtherComment.value}\"\n      })\n    {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitVigilance);\n      let responseAlert = '...Vigilance add success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitVigilance)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitVigilance,\n        activityA: `addVisitVigilance?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitVigilance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteVigilance = (args) => {\n\n  console.log('...deleting Vigilance...');\n  this.context.setUserAlert('...deleting Vigilance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n        mutation {deleteVisitVigilance(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            vigilanceChronicIllnessDiabetesMedication:${args.chronicIllness.diabetes.medication},\n            vigilanceChronicIllnessDiabetesTesting:${args.chronicIllness.diabetes.testing},\n            vigilanceChronicIllnessDiabetesComment:\"${args.chronicIllness.diabetes.comment}\",\n            vigilanceChronicIllnessHbpMedication:${args.chronicIllness.hbp.medication},\n            vigilanceChronicIllnessHbpTesting:${args.chronicIllness.hbp.testing},\n            vigilanceChronicIllnessHbpComment:\"${args.chronicIllness.hbp.comment}\",\n            vigilanceChronicIllnessDyslipidemiaMedication:${args.chronicIllness.dyslipidemia.medication},\n            vigilanceChronicIllnessDyslipidemiaTesting:${args.chronicIllness.dyslipidemia.testing},\n            vigilanceChronicIllnessDyslipidemiaComment:\"${args.chronicIllness.dyslipidemia.comment}\",\n            vigilanceChronicIllnessCadMedication:${args.chronicIllness.cad.medication},\n            vigilanceChronicIllnessCadTesting:${args.chronicIllness.cad.testing},\n            vigilanceChronicIllnessCadComment:\"${args.chronicIllness.cad.comment}\",\n            vigilanceLifestyleWeightMedication:${args.lifestyle.weight.medication},\n            vigilanceLifestyleWeightTesting:${args.lifestyle.weight.testing},\n            vigilanceLifestyleWeightComment:\"${args.lifestyle.weight.comment}\",\n            vigilanceLifestyleDietMedication:${args.lifestyle.diet.medication},\n            vigilanceLifestyleDietTesting:${args.lifestyle.diet.testing},\n            vigilanceLifestyleDietComment:\"${args.lifestyle.diet.comment}\",\n            vigilanceLifestyleSmokingMedication:${args.lifestyle.smoking.medication},\n            vigilanceLifestyleSmokingTesting:${args.lifestyle.smoking.testing},\n            vigilanceLifestyleSmokingComment:\"${args.lifestyle.smoking.comment}\",\n            vigilanceLifestyleSubstanceAbuseMedication:${args.lifestyle.substanceAbuse.medication},\n            vigilanceLifestyleSubstanceAbuseTesting:${args.lifestyle.substanceAbuse.testing},\n            vigilanceLifestyleSubstanceAbuseComment:\"${args.lifestyle.substanceAbuse.comment}\",\n            vigilanceLifestyleExerciseMedication:${args.lifestyle.exercise.medication},\n            vigilanceLifestyleExerciseTesting:${args.lifestyle.exercise.testing},\n            vigilanceLifestyleExerciseComment:\"${args.lifestyle.exercise.comment}\",\n            vigilanceLifestyleAllergiesMedication:${args.lifestyle.allergies.medication},\n            vigilanceLifestyleAllergiesTesting:${args.lifestyle.allergies.testing},\n            vigilanceLifestyleAllergiesComment:\"${args.lifestyle.allergies.comment}\",\n            vigilanceLifestyleAsthmaMedication:${args.lifestyle.asthma.medication},\n            vigilanceLifestyleAsthmaTesting:${args.lifestyle.asthma.testing},\n            vigilanceLifestyleAsthmaComment:\"${args.lifestyle.asthma.comment}\",\n            vigilanceScreeningBreastMedication:${args.screening.breast.medication},\n            vigilanceScreeningBreastTesting:${args.screening.breast.testing},\n            vigilanceScreeningBreastComment:\"${args.screening.breast.comment}\",\n            vigilanceScreeningProstateMedication:${args.screening.prostate.medication},\n            vigilanceScreeningProstateTesting:${args.screening.prostate.testing},\n            vigilanceScreeningProstateComment:\"${args.screening.prostate.comment}\",\n            vigilanceScreeningCervixMedication:${args.screening.cervix.medication},\n            vigilanceScreeningCervixTesting:${args.screening.cervix.testing},\n            vigilanceScreeningCervixComment:\"${args.screening.cervix.comment}\",\n            vigilanceScreeningColonMedication:${args.screening.colon.medication},\n            vigilanceScreeningColonTesting:${args.screening.colon.testing},\n            vigilanceScreeningColonComment:\"${args.screening.colon.comment}\",\n            vigilanceScreeningDentalMedication:${args.screening.dental.medication},\n            vigilanceScreeningDentalTesting:${args.screening.dental.testing},\n            vigilanceScreeningDentalComment:\"${args.screening.dental.comment}\",\n            vigilanceVaccinesInfluenzaMedication:${args.vaccines.influenza.medication},\n            vigilanceVaccinesInfluenzaTesting:${args.vaccines.influenza.testing},\n            vigilanceVaccinesInfluenzaComment:\"${args.vaccines.influenza.comment}\",\n            vigilanceVaccinesVaricellaMedication:${args.vaccines.varicella.medication},\n            vigilanceVaccinesVaricellaTesting:${args.vaccines.varicella.testing},\n            vigilanceVaccinesVaricellaComment:\"${args.vaccines.varicella.comment}\",\n            vigilanceVaccinesHpvMedication:${args.vaccines.hpv.medication},\n            vigilanceVaccinesHpvTesting:${args.vaccines.hpv.testing},\n            vigilanceVaccinesHpvComment:\"${args.vaccines.hpv.comment}\",\n            vigilanceVaccinesMmrMedication:${args.vaccines.mmr.medication},\n            vigilanceVaccinesMmrTesting:${args.vaccines.mmr.testing},\n            vigilanceVaccinesMmrComment:\"${args.vaccines.mmr.comment}\",\n            vigilanceVaccinesTetanusMedication:${args.vaccines.tetanus.medication},\n            vigilanceVaccinesTetanusTesting:${args.vaccines.tetanus.testing},\n            vigilanceVaccinesTetanusComment:\"${args.vaccines.tetanus.comment}\",\n            vigilanceVaccinesPneumovaxMedication:${args.vaccines.pneumovax.medication},\n            vigilanceVaccinesPneumovaxTesting:${args.vaccines.pneumovax.testing},\n            vigilanceVaccinesPneumovaxComment:\"${args.vaccines.pneumovax.comment}\",\n            vigilanceVaccinesOtherName:\"${args.vaccines.other.name}\",\n            vigilanceVaccinesOtherMedication:${args.vaccines.other.medication},\n            vigilanceVaccinesOtherTesting:${args.vaccines.other.testing},\n            vigilanceVaccinesOtherComment:\"${args.vaccines.other.comment}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitVigilance);\n      let responseAlert = '...Vigilance delete success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitVigilance)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitVigilance,\n        activityA: `deleteVisitFile?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitVigilance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddUserForm = (event) => {\n  event.preventDefault();\n  console.log('...adding consultant...');\n  this.context.setUserAlert('...adding consultant...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = event.target.user.value;\n  const visitId = this.props.visit._id;\n\n  const userRole = this.state.users.filter(x => x._id === consultantId)[0].role;\n  if (userRole !== 'Doctor' && userRole !== 'Nurse') {\n    console.log('...please choose a Doctor or Nurse to add please...');\n    this.context.setUserAlert('...please choose a Doctor or Nurse to add please...')\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitConsultant(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitConsultant);\n      let responseAlert = '...add consultant success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `addVisitConsultant?activityId:${activityId},visitId:${visitId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteConsultant = (args) => {\n  console.log('...deleting consultant...');\n  this.context.setUserAlert('...deleting consultant...')\n  this.setState({isLoading: true});\n  //\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = args._id;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitConsultant(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitConsultant);\n      let responseAlert = '...delete consultant success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteVisitConsultant?activityId:${activityId},visitId:${visitId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartAddAttachment = (args) => {\n  console.log('...start add attachment...');\n  this.setState({\n    addAttachmentForm: true,\n    addAttachmentArgs: args\n  })\n}\ncancelAddAttachment = () => {\n  this.setState({\n    addAttachmentForm: false\n  })\n}\naddAttachment = (event) => {\n  event.preventDefault();\n  console.log('...adding attachment...');\n  this.context.setUserAlert('...adding attachment...');\n  this.setState({\n    isLoading: true,\n    addAttachmentForm: false\n  })\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  let args = this.state.addAttachmentArgs;\n  let field = args.field;\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/'+field+'/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading allergy attachment ...\")\n    console.log('...s3 uploading allergy attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: `${field} attachment`,\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: `${field} attachment`,\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody;\n\n  if (field === 'complaint') {\n    let complaintTitle = args.data.title;\n    let complaintDescription = args.data.description;\n    let complaintAnamnesis = args.data.anamnesis;\n    let complaintAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitComplaintAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${complaintTitle}\",\n            complaintDescription:\"${complaintDescription}\",\n            complaintAnamnesis:\"${complaintAnamnesis}\",\n            complaintAttachment:\"${complaintAttachment}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'survey') {\n    let surveyTitle = args.data.title;\n    let surveyDescription = args.data.description;\n    let surveyAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitSurveyAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            surveyTitle:\"${surveyTitle}\",\n            surveyDescription:\"${surveyDescription}\",\n            surveyAttachment:\"${surveyAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'systematicInquiry') {\n    let systematicInquiryTitle = args.data.title;\n    let systematicInquiryDescription = args.data.description;\n    let systematicInquiryAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitSysInquiryAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            systematicInquiryTitle:\"${systematicInquiryTitle}\",\n            systematicInquiryDescription:\"${systematicInquiryDescription}\",\n            systematicInquiryAttachment:\"${systematicInquiryAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'examination') {\n    let examinationGeneral = args.data.general;\n    let examinationArea = args.data.area;\n    let examinationType = args.data.type;\n    let examinationMeasure = args.data.measure;\n    let examinationValue = args.data.value;\n    let examinationDescription = args.data.description;\n    let examinationFollowUp = args.data.followUp;\n    let examinationAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitExaminationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            examinationGeneral:\"${examinationGeneral}\",\n            examinationArea:\"${examinationArea}\",\n            examinationType:\"${examinationType}\",\n            examinationMeasure:\"${examinationMeasure}\",\n            examinationValue:\"${examinationValue}\",\n            examinationDescription:\"${examinationDescription}\",\n            examinationFollowUp:${examinationFollowUp},\n            examinationAttachment:\"${examinationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'investigation') {\n    let investigationTitle = args.data.title;\n    let investigationType = args.data.type;\n    let investigationDescription = args.data.description;\n    let investigationAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitInvestigationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            investigationTitle:\"${investigationTitle}\",\n            investigationType:\"${investigationType}\",\n            investigationDescription:\"${investigationDescription}\",\n            investigationAttachment:\"${investigationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'diagnosis') {\n    let diagnosisTitle = args.data.title;\n    let diagnosisType = args.data.type;\n    let diagnosisDescription = args.data.description;\n    let diagnosisAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitDiagnosisAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            diagnosisTitle:\"${diagnosisTitle}\",\n            diagnosisType:\"${diagnosisType}\",\n            diagnosisDescription:\"${diagnosisDescription}\",\n            diagnosisAttachment:\"${diagnosisAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'treatment') {\n    let treatmentType = args.data.type;\n    let treatmentTitle = args.data.title;\n    let treatmentDescription = args.data.description;\n    let treatmentDose = args.data.dose;\n    let treatmentFrequency = args.data.frequency;\n    let treatmentAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitTreatmentAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${treatmentType}\",\n            treatmentTitle:\"${treatmentTitle}\",\n            treatmentDescription:\"${treatmentDescription}\",\n            treatmentDose:\"${treatmentDose}\",\n            treatmentFrequency:\"${treatmentFrequency}\",\n            treatmentAttachment:\"${treatmentAttachment}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'billing') {\n    let billingAmount = args.data.amount;\n    let billingPaid = args.data.paid;\n    let billingTitle = args.data.title;\n    let billingType = args.data.type;\n    let billingDescription = args.data.description;\n    let billingNotes = args.data.notes;\n    let billingAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitBillingAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${billingTitle}\",\n            billingType:\"${billingType}\",\n            billingDescription:\"${billingDescription}\",\n            billingAmount:${billingAmount},\n            billingPaid:${billingPaid},\n            billingAttachment:\"${billingAttachment}\",\n            billingNotes:\"${billingNotes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'complaint') {\n        // console.log('...resData...',resData.data.addVisitComplaintAttachment);\n      }\n      if (field === 'survey') {\n        // console.log('...resData...',resData.data.addVisitSurveyAttachment);\n      }\n      if (field === 'systematicInquiry') {\n        // console.log('...resData...',resData.data.addVisitSysInquiryAttachment);\n      }\n      if (field === 'examination') {\n        // console.log('...resData...',resData.data.addVisitExaminationAttachment);\n      }\n      if (field === 'investigation') {\n        // console.log('...resData...',resData.data.addVisitInvestigationAttachment);\n      }\n      if (field === 'diagnosis') {\n        // console.log('...resData...',resData.data.addVisitDiagnosisAttachment);\n      }\n      if (field === 'treatment') {\n        // console.log('...resData...',resData.data.addVisitTreatmentAttachment);\n      }\n      if (field === 'billing') {\n        // console.log('...resData...',resData.data.addVisitBillingAttachment);\n      }\n\n      let responseAlert = '...add attachment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'complaint') {\n        this.props.updateVisit(resData.data.addVisitComplaintAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitComplaintAttachment,\n          activityA: `addVisitComplaintAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'survey') {\n        this.props.updateVisit(resData.data.addVisitSurveyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitSurveyAttachment,\n          activityA: `addVisitSurveyAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'systematicInquiry') {\n        this.props.updateVisit(resData.data.addVisitSysInquiryAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitSysInquiryAttachment,\n          activityA: `addVisitSysInquiryAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'examination') {\n        this.props.updateVisit(resData.data.addVisitExaminationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitExaminationAttachment,\n          activityA: `addVisitExaminationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'investigation') {\n        this.props.updateVisit(resData.data.addVisitInvestigationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitInvestigationAttachment,\n          activityA: `addVisitInvestigationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'diagnosis') {\n        this.props.updateVisit(resData.data.addVisitDiagnosisAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitDiagnosisAttachment,\n          activityA: `addVisitDiagnosisAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'treatment') {\n        this.props.updateVisit(resData.data.addVisitTreatmentAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitTreatmentAttachment,\n          activityA: `addVisitTreatmentAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'billing') {\n        this.props.updateVisit(resData.data.addVisitBillingAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitBillingAttachment,\n          activityA: `addVisitBillingAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ndeleteAttachment = (args) => {\n  console.log('...deleting attachment...', args.type);\n  this.context.setUserAlert('...adding attachment...');\n  // this.setState({isLoading: true})\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const field = args.type;\n  const attachment = args.attachment;\n  const item = args.item;\n\n  let requestBody;\n\n  if (field === 'complaint') {\n    let complaintTitle = item.title;\n    let complaintDescription = item.description;\n    let complaintAnamnesis = item.anamnesis;\n    let complaintAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitComplaintAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${complaintTitle}\",\n            complaintDescription:\"${complaintDescription}\",\n            complaintAnamnesis:\"${complaintAnamnesis}\",\n            complaintAttachment:\"${complaintAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'survey') {\n    let surveyTitle = item.title;\n    let surveyDescription = item.description;\n    let surveyAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitSurveyAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            surveyTitle:\"${surveyTitle}\",\n            surveyDescription:\"${surveyDescription}\",\n            surveyAttachment:\"${surveyAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'systematicInquiry') {\n    let systematicInquiryTitle = item.title;\n    let systematicInquiryDescription = item.description;\n    let systematicInquiryAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitSysInquiryAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            systematicInquiryTitle:\"${systematicInquiryTitle}\",\n            systematicInquiryDescription:\"${systematicInquiryDescription}\",\n            systematicInquiryAttachment:\"${systematicInquiryAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'examination') {\n    let examinationGeneral = item.general;\n    let examinationArea = item.area;\n    let examinationType = item.type;\n    let examinationMeasure = item.measure;\n    let examinationValue = item.value;\n    let examinationDescription = item.description;\n    let examinationFollowUp = item.followUp;\n    let examinationAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitExaminationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            examinationGeneral:\"${examinationGeneral}\",\n            examinationArea:\"${examinationArea}\",\n            examinationType:\"${examinationType}\",\n            examinationMeasure:\"${examinationMeasure}\",\n            examinationValue:\"${examinationValue}\",\n            examinationDescription:\"${examinationDescription}\",\n            examinationFollowUp:${examinationFollowUp},\n            examinationAttachment:\"${examinationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'investigation') {\n    let investigationTitle = item.title;\n    let investigationType = item.type;\n    let investigationDescription = item.description;\n    let investigationAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitInvestigationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            investigationTitle:\"${investigationTitle}\",\n            investigationType:\"${investigationType}\",\n            investigationDescription:\"${investigationDescription}\",\n            investigationAttachment:\"${investigationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'diagnosis') {\n    let diagnosisTitle = item.title;\n    let diagnosisType = item.type;\n    let diagnosisDescription = item.description;\n    let diagnosisAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitDiagnosisAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            diagnosisTitle:\"${diagnosisTitle}\",\n            diagnosisType:\"${diagnosisType}\",\n            diagnosisDescription:\"${diagnosisDescription}\",\n            diagnosisAttachment:\"${diagnosisAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'treatment') {\n\n    let treatmentType = item.type;\n    let treatmentTitle = item.title;\n    let treatmentDescription = item.description;\n    let treatmentDose = item.dose;\n    let treatmentFrequency = item.frequency;\n    let treatmentAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitTreatmentAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${treatmentType}\",\n            treatmentTitle:\"${treatmentTitle}\",\n            treatmentDescription:\"${treatmentDescription}\",\n            treatmentDose:\"${treatmentDose}\",\n            treatmentFrequency:\"${treatmentFrequency}\",\n            treatmentAttachment:\"${treatmentAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'billing') {\n\n    let billingTitle = item.title;\n    let billingType = item.type;\n    let billingDescription = item.description;\n    let billingAmount = item.amount;\n    let billingPaid = item.paid;\n    let billingAttachment = attachment;\n    let billingNotes = item.notes;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitBillingAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${billingTitle}\",\n            billingType:\"${billingType}\",\n            billingDescription:\"${billingDescription}\",\n            billingAmount:${billingAmount},\n            billingPaid:${billingPaid},\n            billingAttachment:\"${billingAttachment}\",\n            billingNotes:\"${billingNotes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'complaint') {\n        // console.log('...resData...',resData.data.deleteVisitComplaintAttachment);\n      }\n      if (field === 'survey') {\n        // console.log('...resData...',resData.data.deleteVisitSurveyAttachment);\n      }\n      if (field === 'systematicInquiry') {\n        // console.log('...resData...',resData.data.deleteVisitSysInquiryAttachment);\n      }\n      if (field === 'examination') {\n        // console.log('...resData...',resData.data.deleteVisitExaminationAttachment);\n      }\n      if (field === 'investigation') {\n        // console.log('...resData...',resData.data.deleteVisitInvestigationAttachment);\n      }\n      if (field === 'diagnosis') {\n        // console.log('...resData...',resData.data.deleteVisitDiagnosisAttachment);\n      }\n      if (field === 'treatment') {\n        // console.log('...resData...',resData.data.deleteVisitTreatmentAttachment);\n      }\n      if (field === 'billing') {\n        // console.log('...resData...',resData.data.deleteVisitBillingAttachment);\n      }\n\n      let responseAlert = '...delete attachment success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'complaint') {\n        this.props.updateVisit(resData.data.deleteVisitComplaintAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitComplaintAttachment,\n          activityA: `deleteVisitComplaintAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'survey') {\n        this.props.updateVisit(resData.data.deleteVisitSurveyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitSurveyAttachment,\n          activityA: `deleteVisitSurveyAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'systematicInquiry') {\n        this.props.updateVisit(resData.data.deleteVisitSysInquiryAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitSysInquiryAttachment,\n          activityA: `deleteVisitSysInquiryAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'examination') {\n        this.props.updateVisit(resData.data.deleteVisitExaminationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitExaminationAttachment,\n          activityA: `deleteVisitExaminationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'investigation') {\n        this.props.updateVisit(resData.data.deleteVisitInvestigationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitInvestigationAttachment,\n          activityA: `deleteVisitInvestigationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'diagnosis') {\n        this.props.updateVisit(resData.data.deleteVisitDiagnosisAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitDiagnosisAttachment,\n          activityA: `deleteVisitDiagnosisAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'treatment') {\n        this.props.updateVisit(resData.data.deleteVisitTreatmentAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitTreatmentAttachment,\n          activityA: `deleteVisitTreatmentAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'billing') {\n        this.props.updateVisit(resData.data.deleteVisitBillingAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitBillingAttachment,\n          activityA: `deleteVisitBillingAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'visit/'+visitId+'/'+field+'/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/'+field+'/attachments/';\n      const filename = attachment;\n      const filename2 = filename.replace(filePath2,'');\n      console.log('1:',filePath);\n      console.log('2:',filename);\n      console.log('3:',filename2);\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachment..')\n      console.log('...s3 deleting attachment..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `${field} attachment`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: `${field} attachment`,\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename2, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateVisitSingleField(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateVisitSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.updateVisitSingleField)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.updateVisitSingleField,\n        activityA: `updateVisitSingleField?activityId:${activityId},visitId:${visitId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.updateVisitSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ncompleteVisit = () => {\n  console.log('...completing visit...');\n  this.context.setUserAlert('...completing visit...')\n  this.setState({isLoading: true})\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n      mutation {completeVisitById(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\"\n      )\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.completeVisitById);\n      let responseAlert = '...visit completed!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.completeVisitById)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.completeVisitById,\n        activityA: `completeVisitById?activityId:${activityId},visitId:${visitId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.completeVisitById;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {!this.props.visit && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={3} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'consultant')}>Consultants</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'complaint')}>Complaints</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'survey')}>Survey</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'systematicInquiry')}>Systematic Inquiry</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'vitals')}>Vitals</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'examination')}>Examination</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'investigation')}>investigation</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"10\" onClick={this.menuSelect.bind(this, 'diagnosis')}>diagnosis</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"11\" onClick={this.menuSelect.bind(this, 'treatment')}>treatment</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"12\" onClick={this.menuSelect.bind(this, 'billing')}>billing</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"13\" onClick={this.menuSelect.bind(this, 'vigilance')}>vigilance</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"14\" onClick={this.menuSelect.bind(this, 'image')}>images</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"15\" onClick={this.menuSelect.bind(this, 'file')}>files</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'consultant' && (\n                  <FilterUserForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'complaint' && (\n                  <FilterComplaintForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'survey' && (\n                  <FilterSurveyForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'systematicInquiry' && (\n                  <FilterSystematicInquiryForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'vitals' && (\n                  <FilterVitalsForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'examination' && (\n                  <FilterExaminationForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'investigation' && (\n                  <FilterInvestigationForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'diagnosis' && (\n                  <FilterDiagnosisForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'treatment' && (\n                  <FilterTreatmentForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'billing' && (\n                  <FilterBillingForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'vigilance' && (\n                  <h3>Filter vigilance form</h3>\n                )}\n                {this.state.menuSelect === 'image' && (\n                  <FilterImageForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'file' && (\n                  <FilterFileForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n            )}\n          </Col>\n\n          {this.props.visit && (\n            <Col md={9} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdatePatientSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n                <Tab.Content className=\"tabContent\">\n                  <Tab.Pane eventKey=\"1\">\n                    Visit Basic:\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.title}</p>\n                        {this.context.role !== 'Staff' && (\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                        )}\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Type:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.type}</p>\n                        {this.context.role !== 'Staff' && (\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'type')}>Edit</Button>\n                        )}\n                        <p className=\"listGroupText\">subType:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.subType}</p>\n                        {this.context.role !== 'Staff' && (\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'subType')}>Edit</Button>\n                        )}\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <p className=\"listGroupText\">Time:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.time}</p>\n                        {this.context.role !== 'Staff' && (\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'time')}>Edit</Button>\n                        )}\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Patient:</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Name:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.patient.title}</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.patient.name}</p>\n                        <Link\n                          to={{\n                            pathname: \"/patients\",\n                            state: {patient: this.props.visit.patient._id}\n                          }}\n                        >\n                        <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                        </Link>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Attending Physician:</p>\n                      <p className=\"listGroupText bold\">{this.props.visit.patient.attendingPhysician}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Appointment:</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.appointment.title}</p>\n                        <p className=\"listGroupText\">Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.visit.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <Link\n                          to={{\n                            pathname: \"/appointments\",\n                            state: {appointment: this.props.visit.appointment._id}\n                          }}\n                        >\n                        <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                        </Link>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"2\">\n                    Visit Admin\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Id:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit._id}</p>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"3\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Consultant List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'consultant')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'consultant' &&\n                      this.state.users && (\n                        <AddUserForm\n                          onConfirm={this.submitAddUserForm}\n                          onCancel={this.cancelAdd}\n                          filter={this.state.filter}\n                          users={this.state.users}\n                        />\n                    )}\n                    <UserList\n                      filter={this.state.filter}\n                      authId={this.context.activityId}\n                      users={this.props.visit.consultants}\n                      visitPage={true}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteConsultant}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"4\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Complaint List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'complaint')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'complaint' && (\n                        <AddComplaintForm\n                          onConfirm={this.submitAddComplaintForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitComplaintList\n                      filter={this.state.filter}\n                      complaints={this.props.visit.complaints}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteComplaint}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"5\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Survey List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'survey')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'survey' && (\n                        <AddSurveyForm\n                          onConfirm={this.submitAddSurveyForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitSurveyList\n                      filter={this.state.filter}\n                      surveys={this.props.visit.surveys}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteSurvey}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"6\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit SystematicInquiry List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'systematicInquiry')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'systematicInquiry' && (\n                        <AddSystematicInquiryForm\n                          onConfirm={this.submitAddSystematicInquiryForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitSystematicInquiryList\n                      filter={this.state.filter}\n                      systematicInquiry={this.props.visit.systematicInquiry}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteSystematicInquiry}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"7\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Vitals List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'vitals')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'vitals' && (\n                        <AddVitalsForm\n                          onConfirm={this.submitAddVitalsForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitVitalsList\n                      filter={this.state.filter}\n                      vitals={this.props.visit.vitals}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteVitals}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"8\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Examination List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'examination')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'examination' && (\n                        <AddExaminationForm\n                          onConfirm={this.submitAddExaminationForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitExaminationList\n                      filter={this.state.filter}\n                      examination={this.props.visit.examination}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteExamination}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"9\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Investigation List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'investigation')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'investigation' && (\n                        <AddInvestigationForm\n                          onConfirm={this.submitAddInvestigationForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitInvestigationList\n                      filter={this.state.filter}\n                      investigation={this.props.visit.investigation}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteInvestigation}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"10\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Diagnosis List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'diagnosis')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'diagnosis' && (\n                        <AddDiagnosisForm\n                          onConfirm={this.submitAddDiagnosisForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitDiagnosisList\n                      filter={this.state.filter}\n                      diagnosis={this.props.visit.diagnosis}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteDiagnosis}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"11\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Treatment List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'treatment')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'treatment' && (\n                        <AddTreatmentForm\n                          onConfirm={this.submitAddTreatmentForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitTreatmentList\n                      filter={this.state.filter}\n                      treatment={this.props.visit.treatment}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteTreatment}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"12\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Billing List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'billing')}>Add</Button>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.completeVisit}>Complete Visit</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'billing' && (\n                        <AddBillingForm\n                          onConfirm={this.submitAddBillingForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitBillingList\n                      filter={this.state.filter}\n                      billing={this.props.visit.billing}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteBilling}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"13\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Vigilance List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'vigilance')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'vigilance' && (\n                        <AddVigilanceForm\n                          onConfirm={this.submitAddVigilanceForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitVigilanceList\n                      filter={this.state.filter}\n                      vigilance={this.props.visit.vigilance}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteVigilance}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"14\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Image List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'image' && (\n                        <AddImageForm\n                          onConfirm={this.submitAddImageForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitImageList\n                      filter={this.state.filter}\n                      images={this.props.visit.images}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteImage}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"15\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit File List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'file' && (\n                        <AddFileForm\n                          onConfirm={this.submitAddFileForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitFileList\n                      filter={this.state.filter}\n                      files={this.props.visit.files}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteFile}\n                    />\n                  </Tab.Pane>\n\n                </Tab.Content>\n\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n}\n\n}\n\nexport default VisitDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst VisitSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>date</option>\n        <option>time</option>\n        <option>title</option>\n        <option>type</option>\n        <option>subType</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default VisitSearchForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport CreateVisitForm from '../../components/forms/create/CreateVisitForm';\nimport VisitList from '../../components/lists/visit/VisitList';\nimport PatientList from '../../components/lists/patient/PatientList';\nimport AppointmentList from '../../components/lists/appointment/AppointmentList';\n// import SearchAppointmentList from '../../components/lists/appointment/SearchAppointmentList';\nimport VisitDetail from '../../components/details/VisitDetail';\n\nimport FilterVisitForm from '../../components/forms/filter/FilterVisitForm';\nimport VisitSearchForm from '../../components/forms/search/VisitSearchForm';\nimport AppointmentSearchForm from '../../components/forms/search/AppointmentSearchForm';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './visit.css';\n\nclass VisitPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    patients: null,\n    appointments: null,\n    canDelete: false,\n    visits: null,\n    searchVisits: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    selectedVisit: null,\n    creatingVisit: false,\n    newVisit: null,\n    calendarVisits: null,\n    fromGoLink: null,\n    goLinkId: null,\n    sublistSearch: false,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all visits component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    if (this.props.location.state) {\n      if (this.props.location.state.visit) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.visit\n        })\n      }\n    }\n    this.getAllVisits(seshStore);\n    this.getAllAppointments(seshStore);\n    // this.getAllPatients(seshStore);\n    if (this.props.selectedVisit) {\n      console.log('...found existing visit selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedVisit: this.props.selectedVisit\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\ncomponentDidUpdate () {\n}\n\ngetAllVisits (args) {\n  console.log('...retrieving all visits...');\n  this.context.setUserAlert('...retrieving all visits...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllVisits(\n        activityId:\"${activityId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllVisits);\n      let responseAlert = '...all visits retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkVisit = resData.data.getAllVisits.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedVisit: goLinkVisit,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        visits: resData.data.getAllVisits,\n        activityA: `getAllVisits?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.parseForCalendar(resData.data.getAllVisits)\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\ngetAllAppointments (args) {\n  console.log('...retrieving all appointments...');\n  this.context.setUserAlert('...retrieving all appointments...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllAppointments(\n        activityId:\"${activityId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllAppointments);\n      let responseAlert = '...all appointments retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        appointments: resData.data.getAllAppointments,\n        activityA: `getAllAppointments?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n        activityA: `getAllPatients?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.errors) {\n        this.context.setUserAlert(resData.errors[0].message);\n      }\n      if (resData.data.error) {\n        this.context.setUserAlert(resData.data.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchVisits = (event) => {\n  event.preventDefault();\n  console.log('...searching visits...');\n  this.context.setUserAlert('...searching visits...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'date') {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n      query {getVisitsByFieldRegex(\n        activityId:\"${activityId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getVisitsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getVisitsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getVisitsByField);\n      }\n\n      let responseAlert = '...visit search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchVisits: resData.data.getVisitsByFieldRegex,\n          activityA: `getVisitsByFieldRegex?activityId:${activityId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchVisits: resData.data.getVisitsByField,\n          activityA: `getVisitsByField?activityId:${activityId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nonStartCreateNewVisit = () => {\n  this.setState({\n    creatingVisit: true\n  })\n}\ncancelCreateNewVisit = () => {\n  this.setState({\n    creatingVisit: false,\n    selectedAppointment: null\n  })\n}\nsubmitCreateNewVisitForm = (event) => {\n  event.preventDefault();\n  console.log('...creating new visit...');\n  this.context.setUserAlert('...creating new visit...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.state.selectedAppointment._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const subType = event.target.subType.value;\n\n  if (\n      title.trim().length === 0 ||\n      type.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    return;\n  }\n\n  const tooEarly = moment().format('YYYY-MM-DD') < moment.unix(this.state.selectedAppointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD');\n  const tooLate = moment().format('YYYY-MM-DD') > moment.unix(this.state.selectedAppointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD');\n\n  if (tooEarly === true) {\n    console.log('...appointment for this visit is in the future...please wait or create a new appointment...');\n    this.context.setUserAlert('...appointment for this visit is in the future...please wait or create a new appointment...')\n    this.setState({isLoading: false})\n    return\n  }\n  if (tooLate === true) {\n    console.log('...appointment for this visit has already gone... please create a new appointment...');\n    this.context.setUserAlert('...appointment for this visit has already gone... please create a new appointment...')\n    this.setState({isLoading: false})\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {createVisit(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        visitInput:{\n          title:\"${title}\",\n          type:\"${type}\",\n          subType:\"${subType}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      console.log('...resData...',resData.data.createVisit);\n      let responseAlert = '...create visit success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        showDetails: true,\n        creatingVisit: false,\n        selectedVisit: resData.data.createVisit,\n        newVisit: resData.data.createVisit,\n        tabKey: 'detail',\n        activityA: `createAppointment?activityId:${activityId},visitId:${resData.data.createVisit._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'))\n      this.getAllVisits(seshStore);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nselectAppointment = (args) => {\n  this.setState({\n    selectedAppointment: args\n  })\n}\n\nshowDetails = (args) => {\n  this.setState({\n    showDetails: true,\n    selectedVisit: args,\n    overlay: false,\n    tabKey: 'detail'\n  })\n  this.props.selectVisit(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\nupdateVisit = (args) => {\n  console.log('...updating selected visit...');\n  this.setState({\n    selectedVisit: args\n  })\n  this.props.selectVisit(args);\n}\n\ndeleteVisit = (args) => {\n  console.log('...deleteing visit...');\n  this.context.setUserAlert('...deleteing visit...')\n\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitById(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitById);\n      let responseAlert = '...delete visit success!...';\n      let error = null;\n\n      if (resData.errors) {\n        error = resData.errors[0].message;\n        responseAlert = error;\n      }\n\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteVisitById?activityId:${activityId},visitId:${visitId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllVisits({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing visits for calendar...');\n  let calendarVisits = args.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        title: x.title,\n        type: x.type,\n        date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n        time: x.time,\n        subType: x.subType,\n      }\n    }))\n    this.setState({\n      calendarVisits: calendarVisits\n    })\n}\n\nviewCalendarEvent = (args) => {\n  console.log('...viewing calendar visit...');\n  const visit = this.state.visits.filter(x => x._id === args.event.extendedProps.props._id)[0];\n  this.setState({\n    overlay: true,\n    overlayStatus: {type: 'calendarVisit', data: visit}\n  })\n}\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\nstartSublistSearch = () => {\n  this.setState({\n    sublistSearch: true\n  })\n}\ncancelSublistSearch = () => {\n  this.setState({\n    sublistSearch: false,\n  })\n  this.getAllAppointments({activityId: this.context.activityId,token: this.context.token});\n}\nsubmitSublistSearchForm = (event) => {\n  event.preventDefault();\n  console.log('...searching appointments...');\n  this.context.setUserAlert('...searching appointments...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'date' ||\n      field === 'inProgress' ||\n      field === 'attended' ||\n      field === 'important' ||\n      field === 'important'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getAppointmentsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n      query {getAppointmentsByField(\n        activityId:\"${activityId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getAppointmentsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getAppointmentsByField);\n      }\n\n      let responseAlert = '...appointment search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.errors) {\n          error = resData.errors[0].message;\n          responseAlert = error;\n        }\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          appointments: resData.data.getAppointmentsByFieldRegex,\n          activityA: `getAppointmentsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          appointments: resData.data.getAppointmentsByField,\n          activityA: `getAppointmentsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        selectCalendarDetails={this.showDetails}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n          <h1>Visits: {this.state.showDetails === true &&\n                        this.state.selectedVisit &&\n                        this.state.tabKey === 'detail' && (\n                              this.state.selectedVisit.title\n                            )}</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col md={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n                {this.context.role === 'Nurse' && (\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                  </Nav.Item>\n                )}\n                {this.context.role === 'Doctor' && (\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                  </Nav.Item>\n                )}\n\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterVisitForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.visits && (\n            <Col md={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content>\n                <Tab.Pane eventKey=\"list\">\n\n                <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                  <Tab eventKey=\"1\" title=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                    <VisitList\n                      filter={this.state.filter}\n                      visits={this.state.visits}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      showDetails={this.showDetails}\n                      onDelete={this.deleteVisit}\n                    />\n                  </Tab>\n                  <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                    <h3>Calendar</h3>\n                    <FullCalendar\n                      plugins={[dayGridPlugin]}\n                      intitialView=\"dayGridMonth\"\n                      events={this.state.calendarVisits}\n                      eventClick={this.viewCalendarEvent}\n                    />\n                  </Tab>\n                </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Visit</h3>\n                  <Row className=\"userSearchRow\">\n                    <VisitSearchForm\n                      onConfirm={this.searchVisits}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchVisits && (\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol} className=\"centered_btn\">Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchVisits && (\n                      <VisitList\n                        filter={this.state.filter}\n                        visits={this.state.searchVisits}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedVisit && (\n                    <VisitDetail\n                      visit={this.state.selectedVisit}\n                      updateVisit={this.updateVisit}\n                    />\n                )}\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"new\">\n                {this.state.creatingVisit === false && (\n                  <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={this.onStartCreateNewVisit}>Create New</Button>\n                )}\n                {this.state.creatingVisit === true &&\n                  this.state.appointments &&\n                  !this.state.selectedAppointment && (\n                  <Col className=\"patientSubListCol\">\n                  <Row className=\"patientSubListRow\">\n                  <h3>\n                  Choose an Appointment\n                  </h3>\n                  <Button variant=\"outline-secondary\" className=\"patientSublistSearchBtn\" onClick={this.startSublistSearch}>Search</Button>\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  {this.state.sublistSearch === true && (\n                    <AppointmentSearchForm\n                      onCancel={this.cancelSublistSearch}\n                      onConfirm={this.submitSublistSearchForm}\n                    />\n                  )}\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  <AppointmentList\n                    filter={this.state.filter}\n                    appointments={this.state.appointments}\n                    authId={this.context.activityId}\n                    onSelect={this.selectAppointment}\n                    visitPage={true}\n                  />\n                  </Row>\n\n                  </Col>\n                )}\n                {this.state.creatingVisit === true &&\n                  this.state.selectedAppointment && (\n                  <Row>\n                    <CreateVisitForm\n                      onConfirm={this.submitCreateNewVisitForm}\n                      onCancel={this.cancelCreateNewVisit}\n                      appointment={this.state.selectedAppointment}\n                    />\n                  </Row>\n                )}\n                {this.state.newVisit && (\n                  <Row>\n                    <h3>Review New Visit {this.state.newVisit._id}</h3>\n                  </Row>\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default VisitPage;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport AlertBox from './components/alertBox/AlertBox';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport LandingPage from './pages/landing/Landing';\nimport HomePage from './pages/landing/Home';\nimport MyProfilePage from './pages/profile/Profile';\nimport LoginPage from './pages/auth/Login';\nimport SignupPage from './pages/auth/Signup';\nimport PasswordResetPage from './pages/auth/PasswordReset';\nimport StaffPage from './pages/staff/Staff';\nimport PatientPage from './pages/patient/Patients';\nimport AppointmentPage from './pages/appointment/Appointment';\nimport VisitPage from './pages/visit/Visit';\n\nimport AuthContext from './context/auth-context';\nimport io from 'socket.io-client';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    activityId: null,\n    role: null,\n    context: this.context,\n    sessionStorageAuth: JSON.parse(sessionStorage.getItem('logInfo')),\n    sessionCookiePresent: false,\n    passwordResetState: 'incomplete',\n    passwordResetMessage: '...',\n    userAlert: null,\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    selectedVisit: null,\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.sessionStorageAuth = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.socket = io('http://localhost:9099');\n    // this.socket = io('http://3.129.19.78:9099');\n    // this.socket2 = io('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com:9099');\n  }\n\n  login = (token, activityId, role, tokenExpiration) => {\n    console.log('...context login...');\n    this.setState({\n      token: token,\n      activityId: activityId,\n      role: role,\n      sessionStorageAuth: {\n        token: token,\n        activityId: activityId,\n        role: role,\n        tokenExpiration: tokenExpiration\n      },\n    });\n    this.sessionStorageAuth = {\n      token: token,\n      activityId: activityId,\n      role: role,\n      tokenExpiration: tokenExpiration\n    }\n    this.context.token = token;\n    this.context.activityId = activityId;\n    this.context.role = role;\n    this.userOnline();\n  };\n\n  logout = () => {\n      this.logout2();\n  };\n\n  componentDidMount() {\n    console.log('1:',this.socket);\n    // console.log('2:',this.socket2);\n    console.log('...app component mounted...');\n    if (sessionStorage.getItem('logInfo') && this.state.token === null) {\n      console.log('...sessionStorageFound...');\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n      this.login(\n        seshStore.token,\n        seshStore.activityId,\n        seshStore.role,\n        seshStore.tokenExpiration,\n      )\n    }\n    if (!this.sessionStorageAuth) {\n      console.log('...noSessionStorageFound...');\n    }\n    this.socket.emit('unauthorizedClientConnect');\n    console.log(\"socket listening....\");\n\n    this.socket.on('admin_msg', function(data) {\n      console.log('...receiving admin msg client...',data);\n      adminMessage(data);\n    });\n    this.socket.on('receive_notification', function(data) {\n      console.log('...receiving notification client...',data);\n      sendNotification(data);\n    });\n\n    // this.socket.on('conversation private post', function(data) {\n    //   console.log(\"you got a new message..\",data);\n      // addMessage(data);\n    // });\n    const sendNotification = data => {\n      // console.log('notification user alert',data);\n      this.setState({\n        userAlert: data.msg })\n    };\n    const adminMessage = data => {\n      // console.log('admin message user alert',data);\n      this.setState({\n        userAlert: data.msg.msg })\n    };\n\n  }\n\n\n  sendSocketMessage (msgObject) {\n    const message = msgObject;\n    console.log(\"sending socket message  \",'message',message,'this.socket',this.socket);\n    this.setState({userAlert: \"sending socket message  \"+'message'+message+'this.socket'+this.socket})\n    let conversationId = null;\n    if (this.context.receiver === null || this.context.receiver === undefined) {\n      console.log(\"select someone to msg 1st...\");\n      this.setState({userAlert: \"select someone to msg 1st...\"});\n      return\n    }\n    else {\n      conversationId = this.context.receiver._id;\n    }\n\n    this.socket.emit('send message', {\n      room: 'msg'+conversationId,\n      message: message\n    });\n    this.socket.on(\"MESSAGE_SENT\", function(data) {\n\n      addMessage(data)\n    })\n\n    const addMessage = data => {\n      this.setState({ userAlert: data.msg})\n    };\n  };\n\n  sendSocketAdminMessage = (args) => {\n    // console.log('...sending admin msg client...');\n    this.socket.emit('admin_msg', {msg: args})\n  }\n  sendSocketNotification = (args) => {\n    let notificationId = args.userId;\n    // console.log('...sending socket notification client...');\n    this.socket.emit('send_notification', {\n      room:'msg_'+notificationId,\n      data: args.data\n    })\n  }\n\n\n  componentWillUnmount() {\n    console.log('...app component un-mounting...');\n  }\n\n  logout2 () {\n    console.log('...logging you out...');\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n        query{logout(\n          activityId:\"${activityId}\")\n        {_id,loggedIn}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        this.setState({\n           token: null,\n           activityId: null,\n           role: null,\n           sessionCookiePresent: null,\n           sessionStorageAuth: null,\n        });\n        this.sessionStorageAuth = null;\n        sessionStorage.clear();\n        this.context = {\n          token: null,\n          activityId: null,\n          activityA: null,\n          activityUser: null,\n          role: null,\n          userId: null,\n          user: {},\n          users:[],\n          selectedUser: null,\n          selectedPatient: null,\n          selectedAppointment: null,\n          selectedVisit: null,\n          sender: null,\n          receiver: null,\n          userAlert: \"...\",\n          file: null,\n          fancyDate: null,\n          login: this.login,\n          logout: this.logout,\n          setUserAlert: this.setUserAlert,\n          userOnline: this.userOnline,\n        };\n        this.setState({userAlert: '...logout success...'});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  userOnline = () => {\n    console.log('...domesticating socket client...');\n    this.socket.emit('notification_subscribe', {\n      user: this.context.activityId,\n      room:'msg_'+this.context.activityId\n    });\n\n    if (this.context.role === 'Admin') {\n      this.socket.emit('admin_subscribe')\n    }\n  }\n\n  passwordReset = (event) => {\n    event.preventDefault();\n    console.log('...reset password submission...');\n      const params = event.target.formGridParams.value.split('@');\n      const verificationCode = params[1];\n      const userId = params[0];\n      const password = event.target.formGridPassword.value;\n      // console.log('params',params);\n\n      const requestBody = {\n        query:`\n          mutation {resetUserPassword(\n            userId:\"${userId}\",\n            verification:\"${verificationCode}\",\n            userInput:{\n              password:\"${password}\"\n            })\n            {_id,password,verification{verified}}}\n        `};\n\n      fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log('passwordReset',resData);\n          if (resData.errors) {\n            this.setState({passwordResetState: 'error', passwordResetMessage: resData.errors[0].message+'..if not, try making a new reset request..' })\n          } else {\n            this.setState({passwordResetState: 'complete' })\n          }\n\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({passwordResetState: 'error', passwordResetMessage: err })\n        });\n  }\n  cancelPasswordReset = () => {\n    this.setState({passwordResetState: 'cancelled'})\n  }\n\n  setUserAlert = (args) => {\n    // console.log('...setUserAlert...',args);\n    if (args === 'Unauthenticated!') {\n      this.setState({userAlert: '...token expired! Logging you out...'})\n\n      this.logout2()\n    }\n    this.setState({userAlert: args})\n  }\n\n  selectUser = (args) => {\n    console.log('...updating top-level selected user...');\n    this.setState({\n      selectedUser: args\n    })\n  }\n  selectPatient = (args) => {\n    console.log('...updating top-level selected patient...');\n    this.setState({\n      selectedPatient: args\n    })\n  }\n  selectAppointment = (args) => {\n    console.log('...updating top-level selected appointment...');\n    this.setState({\n      selectedAppointment: args\n    })\n  }\n  selectVisit = (args) => {\n    console.log('...updating top-level selected visit...');\n    this.setState({\n      selectedVisit: args\n    })\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              activityId: this.state.activityId,\n              activityA: null,\n              activityUser: null,\n              role: this.state.role,\n              userId: null,\n              user: {},\n              users:[],\n              selectedUser: null,\n              selectedPatient: null,\n              selectedAppointment: null,\n              selectedVisit: null,\n              sender: null,\n              receiver: null,\n              userAlert: \"...\",\n              file: null,\n              fancyDate: null,\n              login: this.login,\n              logout: this.logout,\n              setUserAlert: this.setUserAlert,\n              userOnline: this.userOnline,\n            }}\n          >\n            <MainNavigation\n              role={this.state.role}\n            />\n            <AlertBox\n              authId={this.context.activityId}\n              alert={this.state.userAlert}\n            />\n            <main className=\"main-content\">\n              <Switch>\n\n              {this.state.sessionStorageAuth && (\n                <Redirect from=\"/login\" to=\"/home\" exact />\n              )}\n\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/home\" render={(props) => <HomePage {...props}\n                  title=\"home\"\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/profile\" render={(props) => <MyProfilePage {...props}\n                  title=\"profile\"\n                  sendSocketAdminMessage={this.sendSocketAdminMessage}\n                  sendSocketNotification={this.sendSocketNotification}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/staff\" render={(props) => <StaffPage {...props}\n                  title=\"staff\"\n                  selectedUser={this.state.selectedUser}\n                  selectUser={this.selectUser}\n                  sendSocketAdminMessage={this.sendSocketAdminMessage}\n                  sendSocketNotification={this.sendSocketNotification}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/patients\" render={(props) => <PatientPage {...props}\n                  title=\"patients\"\n                  selectedPatient={this.state.selectedPatient}\n                  selectPatient={this.selectPatient}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/appointments\" render={(props) => <AppointmentPage {...props}\n                  title=\"appointments\"\n                  selectedAppointment={this.state.selectedAppointment}\n                  selectAppointment={this.selectAppointment}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/visits\" render={(props) => <VisitPage {...props}\n                  title=\"visits\"\n                  selectedVisit={this.state.selectedVisit}\n                  selectVisit={this.selectVisit}\n                />}/>\n              )}\n\n              {this.state.sessionStorageAuth && (\n                <Redirect from=\"/\" to=\"/home\" exact />\n              )}\n              {this.state.sessionStorageAuth && (\n                <Redirect from=\"*\" to=\"/home\" exact />\n              )}\n\n\n\n              {!this.state.sessionStorageAuth && (\n                <Route path=\"/landing\" render={(props) => <LandingPage {...props}\n                  title=\"landing\"\n                />}/>\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Route path=\"/login\" render={(props) => <LoginPage {...props}\n                  title=\"login\"\n                />}/>\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Route path=\"/signup\" render={(props) => <SignupPage {...props}\n                  title=\"signup\"\n                  setUserAlert={this.setUserAlert}\n                />}/>\n              )}\n\n              <Route path=\"/passwordReset/:params\" render={(props) => <PasswordResetPage {...props}\n                passwordReset={this.passwordReset}\n                cancelPasswordReset={this.cancelPasswordReset}\n                resetState={this.state.passwordResetState}\n                message={this.state.passwordResetMessage}\n                />}\n              />\n\n              {!this.state.sessionStorageAuth && (\n                <Redirect from=\"/home\" to=\"/landing\" exact />\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Redirect from=\"/\" to=\"/landing\" exact />\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Redirect from=\"*\" to=\"/landing\" exact />\n              )}\n\n              </Switch>\n            </main>\n\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}