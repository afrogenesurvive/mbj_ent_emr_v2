{"version":3,"sources":["assets/testLetterhead.png","logo.svg","assets/loading.gif","components/alertBox/AlertBox.js","context/auth-context.js","components/Navigation/MainNavigation.js","components/overlay/LoadingOverlay.js","pages/landing/Landing.js","components/items/patient/PatientItem.js","components/lists/patient/PatientList.js","components/items/appointment/AppointmentItem.js","components/lists/appointment/AppointmentList.js","pages/landing/Home.js","components/items/user/AddressItem.js","components/lists/user/UserAddressList.js","components/items/user/AttendanceItem.js","components/lists/user/UserAttendanceList.js","components/items/user/LeaveItem.js","components/lists/user/UserLeaveList.js","components/items/user/ImageItem.js","components/lists/user/UserImageList.js","components/items/patient/FileItem.js","components/lists/user/UserFileList.js","components/items/user/AppointmentItem.js","components/lists/user/UserAppointmentList.js","components/items/user/NoteItem.js","components/lists/user/UserNoteList.js","components/forms/filter/FilterAddressForm.js","components/forms/filter/FilterAttendanceForm.js","components/forms/filter/FilterLeaveForm.js","components/forms/filter/FilterImageForm.js","components/forms/filter/FilterFileForm.js","components/forms/filter/FilterAppointmentForm.js","components/forms/filter/FilterNoteForm.js","components/forms/add/UpdateUserSingleFieldForm.js","components/forms/add/AddAddressForm.js","components/forms/add/AddAttendanceForm.js","components/forms/add/AddLeaveForm.js","components/forms/add/AddNoteForm.js","components/forms/add/AddImageForm.js","components/forms/add/AddFileForm.js","pages/profile/Profile.js","components/forms/auth/LoginForm.js","components/forms/auth/VerifyUserForm.js","components/forms/auth/ForgotPasswordForm.js","pages/auth/Login.js","components/forms/auth/SignupForm.js","pages/auth/Signup.js","components/forms/auth/ResetPasswordForm.js","pages/auth/PasswordReset.js","components/items/user/UserItem.js","components/lists/user/UserList.js","components/lists/user/SearchUserList.js","components/details/UserDetail.js","components/forms/filter/FilterUserForm.js","components/forms/search/UserSearchForm.js","pages/staff/Staff.js","components/forms/create/CreatePatientForm.js","components/lists/patient/SearchPatientList.js","components/pdfView/PdfView.js","components/lists/patient/PatientAddressList.js","components/items/patient/NextOfKinItem.js","components/lists/patient/PatientNextOfKinList.js","components/items/patient/AttachmentItem.js","components/lists/patient/PatientAttachmentList.js","components/items/patient/AllergyItem.js","components/lists/patient/PatientAllergyList.js","components/items/patient/MedicationItem.js","components/lists/patient/PatientMedicationList.js","components/items/patient/ImageItem.js","components/lists/patient/PatientImageList.js","components/lists/patient/PatientFileList.js","components/items/patient/NoteItem.js","components/lists/patient/PatientNoteList.js","components/items/patient/TagItem.js","components/lists/patient/PatientTagList.js","components/items/visit/VisitItem.js","components/lists/visit/VisitList.js","components/forms/filter/FilterAllergyForm.js","components/forms/filter/FilterMedicationForm.js","components/forms/filter/FilterNextOfKinForm.js","components/forms/filter/FilterVisitForm.js","components/forms/filter/FilterTagForm.js","components/forms/add/UpdatePatientSingleFieldForm.js","components/forms/add/AddTagForm.js","components/forms/add/AddNextOfKinForm.js","components/forms/add/AddAllergyForm.js","components/forms/add/AddMedicationForm.js","components/forms/add/AddAttachmentForm.js","components/details/PatientDetail.js","components/forms/filter/FilterPatientForm.js","components/forms/search/PatientSearchForm.js","pages/patient/Patients.js","components/forms/create/CreateAppointmentForm.js","components/items/appointment/NoteItem.js","components/lists/appointment/AppointmentNoteList.js","components/items/appointment/TagItem.js","components/lists/appointment/AppointmentTagList.js","components/forms/add/AddUserForm.js","components/details/AppointmentDetail.js","components/forms/search/AppointmentSearchForm.js","pages/appointment/Appointment.js","components/forms/create/CreateVisitForm.js","components/items/visit/ComplaintItem.js","components/lists/visit/VisitComplaintList.js","components/items/visit/SurveyItem.js","components/lists/visit/VisitSurveyList.js","components/items/visit/SystematicInquiryItem.js","components/lists/visit/VisitSystematicInquiryList.js","components/items/visit/VitalsItem.js","components/lists/visit/VisitVitalsList.js","components/items/visit/ExaminationItem.js","components/lists/visit/VisitExaminationList.js","components/items/visit/InvestigationItem.js","components/lists/visit/VisitInvestigationList.js","components/items/visit/DiagnosisItem.js","components/lists/visit/VisitDiagnosisList.js","components/items/visit/TreatmentItem.js","components/lists/visit/VisitTreatmentList.js","components/items/visit/BillingItem.js","components/lists/visit/VisitBillingList.js","components/items/visit/VigilanceItem.js","components/lists/visit/VisitVigilanceList.js","components/items/visit/ImageItem.js","components/lists/visit/VisitImageList.js","components/items/visit/FileItem.js","components/lists/visit/VisitFileList.js","components/forms/filter/FilterComplaintForm.js","components/forms/filter/FilterSurveyForm.js","components/forms/filter/FilterSystematicInquiryForm.js","components/forms/filter/FilterDiagnosisForm.js","components/forms/filter/FilterVitalsForm.js","components/forms/filter/FilterExaminationForm.js","components/forms/filter/FilterInvestigationForm.js","components/forms/filter/FilterTreatmentForm.js","components/forms/filter/FilterBillingForm.js","components/forms/add/AddComplaintForm.js","components/forms/add/AddSurveyForm.js","components/forms/add/AddSystematicInquiryForm.js","components/forms/add/AddVitalsForm.js","components/forms/add/AddExaminationForm.js","components/forms/add/AddInvestigationForm.js","components/forms/add/AddDiagnosisForm.js","components/forms/add/AddTreatmentForm.js","components/forms/add/AddBillingForm.js","components/forms/add/AddVigilanceForm.js","components/details/VisitDetail.js","components/forms/search/VisitSearchForm.js","pages/visit/Visit.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AlertBox","props","alert","className","Alert","variant","React","createContext","token","activityId","activityA","activityUser","role","userId","user","users","selectedUser","selectedPatient","selectedAppointment","selectedVisit","userAlert","file","fancyDate","login","tokenExpiration","logout","setUserAlert","args","userOnline","mainNavigation","Consumer","context","Fragment","to","onClick","LoadingOverlay","Row","toggleOverlay","status","type","Button","Container","ListGroup","Item","selectCalendarDetails","icon","faExternalLinkAlt","bind","data","goLink","pathname","state","appointment","_id","moment","unix","date","substr","add","format","time","title","subType","location","important","faCheckSquare","faBan","description","visit","startDate","endDate","Image","src","loadingGif","fluid","action","target","LandingPage","overlay","overlayStatus","isGuest","this","Col","Component","PatientItem","useState","setState","deleteState","setDeleteState","key","Card","Body","Text","patient","username","faEye","appointmentPage","showDetails","homePage","faUserPlus","onSelect","canDelete","faTrashAlt","name","dob","age","gender","onDelete","PatientList","filter","patients2","patients","propsPatients","field","value","sort","a","b","registration","x","loggedIn","active","count","map","indexOf","AppointmentItem","visitPage","faCalendarPlus","checkinTime","seenTime","inProgress","toString","attended","AppointmentList","appointments2","appointments","propsAppointments","HomePage","isLoading","seshStore","todayAppointments","queue","weekImportantAppointments","recentPatients","loadHome","getAppointmentsToday","getAppointmentsImportantWeek","getRecentPatients","console","log","requestBody","query","fetch","method","body","JSON","stringify","headers","Authorization","then","res","Error","json","resData","responseAlert","error","catch","err","getAppointmentsImportantNextWeek","sessionStorage","getItem","parse","size","md","authId","contextType","AuthContext","AddressItem","address","town","country","number","street","city","parish","primary","faBatteryThreeQuarters","faBatteryEmpty","makePrimary","UserAddressList","addresses2","addresses","propsAddresses","postalCode","AttendanceItem","attendance","UserAttendanceList","attendance2","propsAttendance","attendanceItem","LeaveItem","leave","UserLeaveList","leave2","propsLeave","leaveItem","ImageItem","image","path","UserImageList","images2","images","propsImages","FileItem","PatientFileList","files2","files","propsFiles","UserAppointmentList","NoteItem","note","UserNoteList","notes2","notes","propsNotes","FilterAddressForm","Form","onSubmit","onConfirm","Group","as","controlId","Control","hidden","Label","onCancel","FilterLeaveForm","FilterImageForm","FilterFileForm","FilterAppointmentForm","FilterNoteForm","UpdateUserSingleFieldForm","placeholder","AddAddressForm","AddAttendanceForm","Date","rows","AddLeaveForm","AddNoteForm","AddImageForm","id","onChange","e","_currentValue","AddFileForm","MyProfilePage","profileLoaded","sideCol","menuSelected","adding","updateSingleField","calendarAttendance","calendarLeave","calendarAppointments","pocketVars","s3State","submitAddAddressForm","event","preventDefault","addUserAddress","logUserActivity","deleteAddress","deleteUserAddress","setAddressPrimary","setUserAddressPrimary","submitAddAttendanceForm","attendanceDate","attendanceStatus","attendanceDescription","addUserAttendance","parseForCalendar","deleteAttendance","deleteUserAttendance","submitAddLeaveForm","addUserLeave","deleteLeave","deleteUserLeave","addUseLeavce","submitAddImageForm","imageName","imageType","imagePath","fileInput","fileName","filePath","fileType","split","config","bucketName","dirName","region","accessKeyId","s3","secretAccessKey","s3Url","ReactS3Client","S3","uploadFile","statusText","addUserImage","deleteImage","deleteUserImage","filename","deleteFile","response","message","submitAddFileForm","file2Name","file2Type","file2Path","addUserFile","deleteUserFile","submitAddNoteForm","addUserNotes","deleteNote","deleteUserNote","submitUpdateSingleFieldForm","updateUserSingleField","startUpdateSingleField","cancelUpdateSingleField","toggleSideCol","menuSelect","submitFilterForm","startAdd","cancelAdd","end","viewCalendarEvent","input","extendedProps","getThisUser","getPocketVars","errors","pocketVarsParsed","getUserById","request","activityDate","addUserActivity","Tab","defaultActiveKey","Nav","Link","eventKey","FilterAttendanceForm","Content","Pane","contact","email","phone","phone2","registrationNumber","clientConnected","verification","verified","code","Tabs","defaultView","plugins","dayGridPlugin","events","eventClick","showListDetails","LoginForm","onStartVerification","onStartForgotPassword","verifyUserForm","canCancel","canConfirm","ForgotPasswordForm","LoginPage","verifying","activeTab","userSeshStore","requestingPasswordReset","showForm","submitLoginForm","password","trim","length","sessionObject","setItem","verifyUser","toggleVerification","toggleForgotPassword","requestPasswordReset","VerifyUserForm","SignupForm","SignUpPage","signupStatus","invited","submitSignupForm","addressNumber","addressStreet","addressTown","addressCity","addressParish","addressCountry","addressPostalCode","createUser","submitInviteForm","challenge","inviteCode","verifyInvitation","ResetPasswordForm","verf","PasswordResetPage","passwordResetStatus","verfCode","submitResetPasswordForm","verificationCode","resetUserPassword","UserItem","selectUser","UserList","users2","propsUsers","SearchUserList","UserDetail","updateUser","FilterUserForm","UserSearchForm","StaffPage","searchUsers","fromGoLink","goLinkId","tabKey","regex","getUsersByFieldRegex","getUsersByField","deleteUser","getAllUsers","resetFilter","goLinkUser","activeKey","CreatePatientForm","today","SearchPatientList","styles","StyleSheet","create","paddingTop","paddingBottom","paddingHorizontal","fontSize","textAlign","fontFamily","author","marginBottom","subtitle","margin","text","marginVertical","marginHorizontal","header","color","pageNumber","position","bottom","left","right","page","flexDirection","backgroundColor","section","padding","flexGrow","PdfView","class","close","pdfViewData","style","letterHead","break","PatientAddressList","NextOfKinItem","nextOfKin","relation","PatientNextOfKinList","nextOfKin2","propsNextOfKin","nextOfKinItem","AttachmentItem","attachment","faEraser","item","PatientAttachmentList","attachments","AllergyItem","allergy","faPlusSquare","onAddAttachment","deleteAttachment","PatientAllergyList","allergies2","allergies","propsAllergies","MedicationItem","medication","PatientMedicationList","medication2","propsMedication","medicationItem","PatientImageList","UserFileList","PatientNoteList","TagItem","tag","PatientTagList","tags2","tags","propsTags","VisitItem","patientPage","VisitList","visits2","visits","propsVisits","FilterAllergyForm","FilterMedicationForm","FilterNextOfKinForm","FilterVisitForm","FilterTagForm","UpdatePatientSingleFieldForm","AddTagForm","AddNextOfKinForm","AddAllergyForm","AddMedicationForm","AddAttachmentForm","PatientDetail","addAttachmentForm","addAttachmentArgs","calendarVisits","showPdfView","showPdfData","patientId","updatePatient","addPatientAddress","deletePatientAddress","setPatientAddressPrimary","submitAddNextOfKinForm","addPatientNextOfKin","deleteNextOfKin","phone1","deletePatientNextOfKin","submitAddAllergyForm","addPatientAllergy","deleteAllergy","deletePatientAllergy","preAttachments","filePath2","index","preAttachment","filename2","replace","submitAddMedicationForm","addPatientMedication","deleteMedication","deletePatientMedication","startAddAttachment","cancelAddAttachment","addAttachment","allergyTitle","allergyType","allergyDescription","medicationTitle","medicationType","medicationDescription","addPatientAllergyAttachment","addPatientMedicationAttachment","allergyAttachment","medicationAttachment","deletePatientAllergyAttachment","deletePatientMedicationAttachment","addPatientImage","deletePatientImage","addPatientFile","deletePatientFile","addPatientNotes","deletePatientNote","submitAddTagForm","addPatientTags","deleteTag","deletePatientTag","updatePatientSingleField","closePdfView","propsPatient","expiryDate","referral","reason","physician","attendingPhysician","occupation","employer","insurance","company","policyNumber","subscriber","FilterPatientForm","PatientSearchForm","PatientPage","searchPatients","creatingPatient","newPatient","getPatientsByFieldRegex","getPatientsByField","onStartCreateNewPatient","cancelCreateNewPatient","submitCreateNewPatientForm","contactEmail","contactPhone","contactPhone2","referralDate","referralReason","referralPhysicianName","referralPhysicianPhone","referralPhysicianEmail","referralPhysicianAddress","occupationRole","occupationEmployerName","occupationEmployerEmail","occupationEmployerPhone","occupationEmployerAddress","insuranceCompany","insurancePolicyNumber","insuranceDescription","insuranceExpiryDate","insuranceSubscriberCompany","insuranceSubscriberDescription","createPatient","getAllPatients","selectPatient","deletePatient","goLinkPatient","lg","CreateAppointmentForm","AppointmentNoteList","AppointmentTagList","AddUserForm","setUser","AppointmentDetail","showAddConsultantForm","calEvent","startTime","endTime","appointmentId","updateAppointment","addAppointmentNotes","deleteAppointmentNote","addAppointmentTags","deleteAppointmentTag","submitAddUserForm","consultantId","userRole","addAppointmentConsultant","deleteConsultant","deleteAppointmentConsultant","startUpdatePatient","updateAppointmentSingleField","creator","consultants","AppointmentSearchForm","AppointmentPage","searchAppointments","creatingAppointment","newAppointment","sublistSearch","getAppointmentsByFieldRegex","getAppointmentsByField","onStartCreateNewAppointment","cancelCreateNewAppointment","submitCreateNewAppointmentForm","createAppointment","getAllAppointments","selectAppointment","deleteAppointment","startSublistSearch","cancelSublistSearch","submitSublistSearchForm","goLinkAppointment","CreateVisitForm","ComplaintItem","complaint","anamnesis","VisitComplaintList","complaints2","complaints","propsComplaints","SurveyItem","survey","VisitSurveyList","surveys2","surveys","propsSurveys","SystematicInquiryItem","systematicInquiry","VisitSystematicInquiryList","systematicInquirys2","propsSystematicInquirys","systematicInquirys","VitalsItem","vitals","pr","rr","bp1","bp2","temp","ps02","heightValue","heightUnit","weightValue","weightUnit","bmi","urine","VisitVitalsList","vitals2","propsVitals","vitalsItem","ExaminationItem","examination","general","area","measure","followUp","VisitExaminationList","examinations2","propsExaminations","examinations","InvestigationItem","investigation","VisitInvestigationList","investigations2","propsInvestigations","investigations","DiagnosisItem","diagnosis","VisitDiagnosisList","diagnosis2","propsDiagnosis","diagnoses","TreatmentItem","treatment","dose","frequency","VisitTreatmentList","treatment2","propsTreatment","treatments","BillingItem","billing","amount","paid","VisitBillingList","billing2","propsBilling","billings","VigilanceItem","vigilance","chronicIllness","diabetes","testing","comment","hbp","dyslipidemia","cad","lifestyle","weight","diet","smoking","substanceAbuse","exercise","asthma","screening","breast","prostate","cervix","colon","dental","vaccines","influenza","varicella","hpv","mmr","tetanus","pneumovax","other","VisitVigilanceList","vigilance2","propsVigilance","vigilances","VisitImageList","VisitFileList","FilterComplaintForm","FilterSurveyForm","FilterSystematicInquiryForm","FilterDiagnosisForm","FilterVitalsForm","FilterExaminationForm","FilterInvestigationForm","FilterTreatmentForm","FilterBillingForm","AddComplaintForm","AddSurveyForm","AddSystematicInquiryForm","AddVitalsForm","step","AddExaminationForm","checked","AddInvestigationForm","AddDiagnosisForm","AddTreatmentForm","AddBillingForm","AddVigilanceForm","VisitDetail","submitAddComplaintForm","visitId","updateVisit","addVisitComplaint","deleteComplaint","deleteVisitComplaint","submitAddSurveyForm","addVisitSurvey","deleteSurvey","deleteVisitSurvey","submitAddSystematicInquiryForm","addVisitSysInquiry","deleteSystematicInquiry","deleteVisitSysInquiry","submitAddVitalsForm","urineType","urineValue","addVisitVitals","deleteVitals","deleteVisitVitals","submitAddExaminationForm","addVisitExamination","deleteExamination","deleteVisitExamination","submitAddInvestigationForm","addVisitInvestigation","deleteInvestigation","deleteVisitInvestigation","submitAddDiagnosisForm","addVisitDiagnosis","deleteDiagnosis","deleteVisitDiagnosis","submitAddTreatmentForm","addVisitTreatment","deleteTreatment","deleteVisitTreatment","submitAddBillingForm","addVisitBilling","deleteBilling","deleteVisitBilling","addVisitImage","deleteVisitImage","addVisitFile","deleteVisitFile","submitAddVigilanceForm","vigilanceChronicIllnessDiabetesMedication","vigilanceChronicIllnessDiabetesTesting","vigilanceChronicIllnessDiabetesComment","vigilanceChronicIllnessHbpMedication","vigilanceChronicIllnessHbpTesting","vigilanceChronicIllnessHbpComment","vigilanceChronicIllnessDyslipidemiaMedication","vigilanceChronicIllnessDyslipidemiaTesting","vigilanceChronicIllnessDyslipidemiaComment","vigilanceChronicIllnessCadMedication","vigilanceChronicIllnessCadTesting","vigilanceChronicIllnessCadComment","vigilanceLifestyleWeightMedication","vigilanceLifestyleWeightTesting","vigilanceLifestyleWeightComment","vigilanceLifestyleDietMedication","vigilanceLifestyleDietTesting","vigilanceLifestyleDietComment","vigilanceLifestyleSmokingMedication","vigilanceLifestyleSmokingTesting","vigilanceLifestyleSmokingComment","vigilanceLifestyleSubstanceAbuseMedication","vigilanceLifestyleSubstanceAbuseTesting","vigilanceLifestyleSubstanceAbuseComment","vigilanceLifestyleExerciseMedication","vigilanceLifestyleExerciseTesting","vigilanceLifestyleExerciseComment","vigilanceLifestyleAllergiesMedication","vigilanceLifestyleAllergiesTesting","vigilanceLifestyleAllergiesComment","vigilanceLifestyleAsthmaMedication","vigilanceLifestyleAsthmaTesting","vigilanceLifestyleAsthmaComment","vigilanceScreeningBreastMedication","vigilanceScreeningBreastTesting","vigilanceScreeningBreastComment","vigilanceScreeningProstateMedication","vigilanceScreeningProstateTesting","vigilanceScreeningProstateComment","vigilanceScreeningCervixMedication","vigilanceScreeningCervixTesting","vigilanceScreeningCervixComment","vigilanceScreeningColonMedication","vigilanceScreeningColonTesting","vigilanceScreeningColonComment","vigilanceScreeningDentalMedication","vigilanceScreeningDentalTesting","vigilanceScreeningDentalComment","vigilanceVaccinesInfluenzaMedication","vigilanceVaccinesInfluenzaTesting","vigilanceVaccinesInfluenzaComment","vigilanceVaccinesVaricellaMedication","vigilanceVaccinesVaricellaTesting","vigilanceVaccinesVaricellaComment","vigilanceVaccinesHpvMedication","vigilanceVaccinesHpvTesting","vigilanceVaccinesHpvComment","vigilanceVaccinesMmrMedication","vigilanceVaccinesMmrTesting","vigilanceVaccinesMmrComment","vigilanceVaccinesTetanusMedication","vigilanceVaccinesTetanusTesting","vigilanceVaccinesTetanusComment","vigilanceVaccinesPneumovaxMedication","vigilanceVaccinesPneumovaxTesting","vigilanceVaccinesPneumovaxComment","vigilanceVaccinesOtherName","vigilanceVaccinesOtherMedication","vigilanceVaccinesOtherTesting","vigilanceVaccinesOtherComment","addVisitVigilance","deleteVigilance","deleteVisitVigilance","addVisitConsultant","deleteVisitConsultant","complaintTitle","complaintDescription","complaintAnamnesis","complaintAttachment","surveyTitle","surveyDescription","surveyAttachment","systematicInquiryTitle","systematicInquiryDescription","systematicInquiryAttachment","examinationGeneral","examinationArea","examinationType","examinationMeasure","examinationValue","examinationDescription","examinationFollowUp","examinationAttachment","investigationTitle","investigationType","investigationDescription","investigationAttachment","diagnosisTitle","diagnosisType","diagnosisDescription","diagnosisAttachment","treatmentType","treatmentTitle","treatmentDescription","treatmentDose","treatmentFrequency","treatmentAttachment","billingAmount","billingPaid","billingTitle","billingType","billingDescription","billingNotes","billingAttachment","addVisitComplaintAttachment","addVisitSurveyAttachment","addVisitSysInquiryAttachment","addVisitExaminationAttachment","addVisitInvestigationAttachment","addVisitDiagnosisAttachment","addVisitTreatmentAttachment","addVisitBillingAttachment","deleteVisitComplaintAttachment","deleteVisitSurveyAttachment","deleteVisitSysInquiryAttachment","deleteVisitExaminationAttachment","deleteVisitInvestigationAttachment","deleteVisitDiagnosisAttachment","deleteVisitTreatmentAttachment","deleteVisitBillingAttachment","updateVisitSingleField","completeVisit","completeVisitById","propsVisit","VisitSearchForm","VisitPage","searchVisits","creatingVisit","newVisit","getVisitsByFieldRegex","getVisitsByField","onStartCreateNewVisit","cancelCreateNewVisit","submitCreateNewVisitForm","tooEarly","tooLate","createVisit","getAllVisits","selectVisit","deleteVisit","goLinkVisit","intitialView","App","sessionStorageAuth","sessionCookiePresent","passwordResetState","passwordResetMessage","logout2","socket","emit","room","passwordReset","params","formGridParams","formGridPassword","cancelPasswordReset","io","on","clear","sender","receiver","Provider","from","exact","render","Home","Staff","Appointment","Visit","Landing","Login","Signup","PasswordReset","resetState","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.160c7209.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/testLetterhead.fcab3958.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.8631702d.gif\";","\nimport React from 'react';\nimport Alert from 'react-bootstrap/Alert'\n\nimport './alertBox.css'\n\nconst AlertBox = (props) => {\n  let alert = \"Alerts shown here\";\n\n  if (props.alert !== null) {\n    alert = '\"'+props.alert+'\"';\n  }\n\nreturn (\n  <div className=\"alertBox\">\n  <Alert variant=\"warning\">\n  <p className=\"alertBoxText\">{alert}</p>\n  </Alert>\n  </div>\n)\n\n}\n\nexport default AlertBox;\n","import React from 'react';\n\nexport default React.createContext({\n    token: null,\n    activityId: null,\n    activityA: null,\n    activityUser: null,\n    role: null,\n    userId: null,\n    user: {},\n    users:[],\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    selectedVisit: null,\n    userAlert: \"...\",\n    file: null,\n    fancyDate: null,\n    login: (token, activityId, role, tokenExpiration) => {},\n    logout: () => {},\n    setUserAlert: (args) => {},\n    userOnline: () => {},\n});\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n// import Button from 'react-bootstrap/Button';\n\nimport AuthContext from '../../context/auth-context';\nimport './MainNavigation.css';\n\n\nconst mainNavigation = props => (\n  <AuthContext.Consumer>\n    {context => {\n      return (\n        <header className=\"main-navigation\">\n          <div className=\"main-navigation__logo\">\n            <h1>MBJ ENT EMR V2.0.1</h1>\n          </div>\n          <nav className=\"main-navigation__items\">\n            <ul>\n              {!context.token && (\n                <React.Fragment>\n                <li>\n                  <NavLink to=\"/landing\">Landing</NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/login\">Login</NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/signup\">Signup</NavLink>\n                </li>\n                </React.Fragment>\n              )}\n              {context.token && (\n                <React.Fragment>\n                  <li>\n                    <NavLink to=\"/home\">Home</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/profile\">Profile</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/staff\">Staff</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/patients\">Patients</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/appointments\">Appointments</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/visits\">Visits</NavLink>\n                  </li>\n                  <li>\n                    <button onClick={context.logout}>Logout</button>\n                  </li>\n                </React.Fragment>\n              )}\n              {\n                // !context.token && (\n                //   <React.Fragment>\n                //     <li>\n                //       <NavLink to=\"/landing\">.</NavLink>\n                //     </li>\n                //   </React.Fragment>\n                // )\n              }\n            </ul>\n          </nav>\n        </header>\n      );\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default mainNavigation;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport loadingGif from '../../assets/loading.gif';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport \"./loadingOverlay.css\"\n\nconst LoadingOverlay = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"loadingOverlay\">\n    <Row className=\"overlayCloseRow\">\n    {props.toggleOverlay &&\n      props.status.type !== 's3' && (\n      <Button className=\"sidebarButton\" variant=\"warning\" onClick={props.toggleOverlay}>X</Button>\n    )}\n    </Row>\n\n    {props.status && (\n      <h5 className=\"attachmentViewerTitle\">... {props.status.type} ...</h5>\n    )}\n\n\n      <Container className=\"overlayContainer\">\n        {props.status.type === 'calendarAppointment' && (\n          <React.Fragment>\n            <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              {props.selectCalendarDetails && (\n                <Row className=\"overlayRow\">\n                  <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon centered_btn\"  onClick={props.selectCalendarDetails.bind(this, props.status.data)}/>\n                </Row>\n              )}\n              {props.status.goLink && (\n                <Row className=\"overlayRow\">\n                <Link className=\"centered_btn\"\n                  to={{\n                    pathname: \"/appointments\",\n                    state: {appointment: props.status.data._id}\n                  }}\n                >\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon centered_btn\"/>\n                </Link>\n                </Row>\n              )}\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p className=\"overlayListGroupItemText\">Date: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              <p className=\"overlayListGroupItemText\">Time: <span className=\"bold\">{props.status.data.time}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p className=\"overlayListGroupItemText\">Title: <span className=\"bold\">{props.status.data.title}</span></p>\n              <p className=\"overlayListGroupItemText\">type: <span className=\"bold\">{props.status.data.type}</span></p>\n              <p className=\"overlayListGroupItemText\">subType: <span className=\"bold\">{props.status.data.subType}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p className=\"overlayListGroupItemText\">Location: <span className=\"bold\">{props.status.data.location}</span></p>\n              <p className=\"overlayListGroupItemText\">important: <span className=\"bold\">{props.status.data.important === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p className=\"overlayListGroupItemText\">description: <span className=\"bold\">{props.status.data.description}</span></p>\n              </ListGroup.Item>\n            </ListGroup>\n\n            </Row>\n\n          </React.Fragment>\n        )}\n\n        {props.status.type === 'calendarVisit' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n          <ListGroup className=\"overlayListGroup\">\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            {props.selectCalendarDetails && (\n              <Row className=\"overlayRow\">\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon centered_btn\" onClick={props.selectCalendarDetails.bind(this, props.status.data)}/>\n              </Row>\n            )}\n            {props.status.goLink && (\n              <Row className=\"overlayRow\">\n              <Link className=\"centered_btn\"\n                to={{\n                  pathname: \"/visits\",\n                  state: {visit: props.status.data._id}\n                }}\n              >\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n              </Link>\n              </Row>\n            )}\n            </ListGroup.Item>\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            <p className=\"overlayListGroupItemText\">Date: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n            <p className=\"overlayListGroupItemText\">Time: <span className=\"bold\">{props.status.data.time}</span></p>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            <p className=\"overlayListGroupItemText\">Title: <span className=\"bold\">{props.status.data.title}</span></p>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            <p className=\"overlayListGroupItemText\">type: <span className=\"bold\">{props.status.data.type}</span></p>\n            <p className=\"overlayListGroupItemText\">subType: <span className=\"bold\">{props.status.data.subType}</span></p>\n            </ListGroup.Item>\n          </ListGroup>\n          </Row>\n\n          </React.Fragment>\n        )}\n\n        {props.status.type === 'calendarAttendance' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Date: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Status: <span className=\"bold\">{props.status.data.status}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Description: <span className=\"bold\">{props.status.data.description}</span></p>\n              </ListGroup.Item>\n            </ListGroup>\n          </Row>\n          </React.Fragment>\n        )}\n        {props.status.type === 'calendarLeave' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Type: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>startDate: <span className=\"bold\">{moment.unix(props.status.data.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>endDate: <span className=\"bold\">{moment.unix(props.status.data.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Description: <span className=\"bold\">{props.status.data.description}</span></p>\n              </ListGroup.Item>\n            </ListGroup>\n          </Row>\n          </React.Fragment>\n        )}\n        {props.status.type === 's3' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n                <Image src={loadingGif} className=\"loadingGif\" fluid />\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n                <p>{props.status.data.action} -ing {props.status.data.target}...</p>\n              </ListGroup.Item>\n            </ListGroup>\n          </Row>\n          <Row className=\"overlayRow\">\n\n          </Row>\n          </React.Fragment>\n        )}\n\n\n      </Container>\n\n    </div>\n  </div>\n)\n\n}\n\nexport default LoadingOverlay;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { NavLink } from 'react-router-dom';\n\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport './landing.css';\n\nclass LandingPage extends Component {\n  state = {\n    role: null,\n    userAlert: \"landing page\",\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n  };\n\ncomponentDidMount () {\n}\n\n  render() {\n\n    return (\n      <React.Fragment>\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n      <Container className=\"landingPageContainer\">\n\n      <Row className=\"landingPageRow\">\n      <Col className=\"landingPageCol\">\n        <h1> Welcome to MBJ ENT EMR</h1>\n      </Col>\n      </Row>\n\n\n          {\n            // this.state.isGuest === true && (\n            //   <NavLink to=\"/login\">Login</NavLink>\n            // )\n          }\n          {\n            // this.state.isGuest === true && (\n            //   <NavLink to=\"/signup\">Signup</NavLink>\n            // )\n          }\n\n      </Container>\n\n      </React.Fragment>\n    );\n\n  }\n\n\n}\n\nexport default LandingPage;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './PatientItem.css';\n\nconst PatientItem = (props) => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Username: <span className=\"bold\">{props.patient.username}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            role: <span className=\"bold\">{props.patient.role}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n\n          {props.appointmentPage !== true &&\n            props.showDetails && (\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.patient)}/>\n          )}\n\n          {props.homePage && (\n            <Link\n              to={{\n                pathname: \"/patients\",\n                state: {patient: props.patient._id}\n              }}\n            >\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </Link>\n          )}\n\n          {props.appointmentPage === true && (\n            <FontAwesomeIcon icon={faUserPlus} className=\"listIcon\" onClick={props.onSelect.bind(this, props.patient)}/>\n          )}\n\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.patient._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                name: <span className=\"bold\">{props.patient.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                username: <span className=\"bold\">{props.patient.username}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                title: <span className=\"bold\">{props.patient.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                role: <span className=\"bold\">{props.patient.role}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                dob: <span className=\"bold\">{moment.unix(props.patient.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                age: <span className=\"bold\">{props.patient.age}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                gender: <span className=\"bold\">{props.patient.gender}</span>\n              </Card.Text>\n              </li>\n\n\n            </ul>\n            </Row>\n          )}\n          {deleteState === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.patient)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default PatientItem;\n","import React from 'react';\n\nimport PatientItem from '../../items/patient/PatientItem';\nimport './UserList.css';\n\nconst PatientList = props => {\n\n  const {...filter} = props.filter;\n  let patients2 = props.patients;\n  let propsPatients = [];\n\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'registration.date' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.registration.date > b.registration.date) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'registration.date' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.registration.date < b.registration.date) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'loggedIn') {\n    propsPatients = patients2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field === 'patient' && filter.key === 'active') {\n    propsPatients = patients2.filter(x => x.active === filter.value);\n  }\n\n  if (filter.field !== 'patient') {\n    propsPatients = patients2;\n  }\n\n  let count = 0;\n\n  const patients = propsPatients.map(patient => {\n\n    count = propsPatients.indexOf(patient)+1;\n\n    return (\n      <PatientItem\n        key={count}\n        patient={patient}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        appointmentPage={props.appointmentPage}\n        homePage={props.homePage}\n        onSelect={props.onSelect}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{patients}</ul>;\n};\n\nexport default PatientList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus,\n  faCalendarPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './AppointmentItem.css';\n\nconst AppointmentItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.appointment.title}</span>\n          </Card.Text>\n          {!props.homePage && (\n            <Card.Text className=\"cardText\">\n              Type: <span className=\"bold\">{props.appointment.type}</span>\n            </Card.Text>\n          )}\n          {!props.homePage && (\n            <Card.Text className=\"cardText\">\n              Date: <span className=\"bold\">{moment.unix(props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n            </Card.Text>\n          )}\n          {props.homePage && (\n            <Card.Text className=\"cardText\">\n              Patient: <span className=\"bold\">{props.appointment.patient._id}</span>\n            </Card.Text>\n          )}\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n\n          {props.visitPage !== true &&\n            props.showDetails && (\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.appointment)}/>\n          )}\n\n          {props.homePage && (\n            <Link\n              to={{\n                pathname: \"/appointments\",\n                state: {appointment: props.appointment._id}\n              }}\n            >\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </Link>\n          )}\n\n          {props.visitPage === true && (\n            <FontAwesomeIcon icon={faCalendarPlus} className=\"listIcon\" onClick={props.onSelect.bind(this, props.appointment)}/>\n          )}\n\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.appointment._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.appointment.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.appointment.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Date: <span className=\"bold\">{moment.unix(props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                time: <span className=\"bold\">{props.appointment.time}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Patient: <span className=\"bold\">{props.appointment.patient.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                checkinTime: <span className=\"bold\">{props.appointment.checkinTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                seenTime: <span className=\"bold\">{props.appointment.seenTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                location: <span className=\"bold\">{props.appointment.location}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                description: <span className=\"bold\">{props.appointment.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                inProgress: <span className=\"bold\">{props.appointment.inProgress.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                attended: <span className=\"bold\">{props.appointment.attended.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                important: <span className=\"bold\">{props.appointment.important.toString()}</span>\n              </Card.Text>\n              </li>\n\n\n            </ul>\n            </Row>\n          )}\n          {deleteState === true && (\n            <Row>\n              {props.canDelete && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.appointment)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AppointmentItem;\n","import React from 'react';\nimport AppointmentItem from '../../items/appointment/AppointmentItem';\nimport './AppointmentList.css'\n\nconst AppointmentList = props => {\n\n  const {...filter} = props.filter;\n  let appointments2 = props.appointments;\n  let propsAppointments = [];\n\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType > b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType < b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time > b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time < b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location > b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location < b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'important') {\n    propsAppointments = appointments2.filter(x => x.important === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'inProgress') {\n    propsAppointments = appointments2.filter(x => x.inProgress === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'attended') {\n    propsAppointments = appointments2.filter(x => x.attended === filter.value);\n  }\n\n  if (filter.field !== 'appointment') {\n    propsAppointments = appointments2;\n  }\n\n  let count = 0;\n\n  const appointments = propsAppointments.map(appointment=> {\n\n    count = propsAppointments.indexOf(appointment+1);\n\n    return (\n      <AppointmentItem\n        key={count}\n        appointment={appointment}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        visitPage={props.visitPage}\n        homePage={props.homePage}\n        onSelect={props.onSelect}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{appointments}</ul>;\n};\n\nexport default AppointmentList;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { NavLink } from 'react-router-dom';\nimport Image from 'react-bootstrap/Image';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport PatientList from '../../components/lists/patient/PatientList';\nimport AppointmentList from '../../components/lists/appointment/AppointmentList';\nimport loadingGif from '../../assets/loading.gif';\nimport './landing.css';\n\nclass HomePage extends Component {\n  state = {\n    role: null,\n    userAlert: \"landing\",\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    isLoading: false,\n    seshStore: null,\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    todayAppointments: null,\n    queue: null,\n    weekImportantAppointments: null,\n    recentPatients: null,\n  };\n  static contextType = AuthContext;\n\n\ncomponentDidMount () {\n  console.log('...home component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n\n    this.getAppointmentsToday(seshStore);\n    this.getAppointmentsImportantWeek(seshStore);\n    this.getRecentPatients(seshStore);\n\n  }\n}\n\nloadHome = () => {\n  const args = {\n    token: this.context.token,\n    activityId: this.context.activityId\n  }\n\n  this.getAppointmentsToday(args);\n  this.getAppointmentsImportantWeek(args);\n  this.getRecentPatients(args);\n\n}\n\ngetAppointmentsToday = (args) => {\n  console.log('...retrieving todays appointments...');\n  this.context.setUserAlert('...retrieving todays appointments...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAppointmentsToday(\n        activityId:\"${activityId}\")\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAppointmentsToday);\n      console.log('...get todays appointments success!...');\n      let responseAlert = '...get todays appointments success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        todayAppointments: resData.data.getAppointmentsToday,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\ngetAppointmentsImportantWeek = (args) => {\n  console.log('...retrieving important appointments for week...');\n  this.context.setUserAlert('...retrieving important appointments for week...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAppointmentsImportantNextWeek(\n        activityId:\"${activityId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAppointmentsImportantNextWeek);\n      console.log('...get week important appointments success!...');\n      let responseAlert = '...get week important appointments success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        weekImportantAppointments: resData.data.getAppointmentsImportantNextWeek,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\ngetRecentPatients = (args) => {\n  console.log('...retrieving recent patients...');\n  this.context.setUserAlert('...retrieving recent patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getRecentPatients(\n        activityId:\"${activityId}\",\n        amount:7\n      )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getRecentPatients);\n      console.log('...retrieve recent patients success!...');\n      let responseAlert = '...retrieve recent patients success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        recentPatients: resData.data.getRecentPatients,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\n  render() {\n\n    return (\n      <React.Fragment>\n\n      {\n        this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )\n    }\n      <Container className=\"landingPageContainer\">\n\n      <Row className=\"landingPageTopRow\">\n\n        <Button variant=\"outline-secondary\" size=\"md\" onClick={this.loadHome}>Home</Button>\n        {this.state.isLoading ? (\n          <Image src={loadingGif} className=\"loadingGif\" fluid />\n        ):(\n          <p>.</p>\n        )}\n\n      </Row>\n\n      <Row className=\"landingPageRow\">\n      <Col md={6} className=\"landingPageCol\">\n        <h3>Todays appts</h3>\n        {this.state.todayAppointments && (\n          <AppointmentList\n            filter={this.state.filter}\n            appointments={this.state.todayAppointments}\n            authId={this.context.activityId}\n            homePage={true}\n          />\n        )}\n      </Col>\n      <Col md={6} className=\"landingPageCol\">\n        <h3>Queue</h3>\n        {this.state.queue && (\n          <h3>Queue list</h3>\n        )}\n      </Col>\n      </Row>\n\n      <Row className=\"landingPageRow\">\n      <Col md={5}className=\"landingPageCol\">\n        <h3>Weeks important</h3>\n        {this.state.weekImportantAppointments && (\n          <AppointmentList\n            filter={this.state.filter}\n            appointments={this.state.weekImportantAppointments}\n            authId={this.context.activityId}\n            homePage={true}\n          />\n        )}\n      </Col>\n      <Col md={4}className=\"landingPageCol\">\n        <h3>Recent patients</h3>\n        {this.state.recentPatients && (\n          <PatientList\n            filter={this.state.filter}\n            patients={this.state.recentPatients}\n            authId={this.context.activityId}\n            homePage={true}\n          />\n        )}\n      </Col>\n      <Col md={3}className=\"landingPageCol\">\n        <h3>more stats</h3>\n      </Col>\n      </Row>\n\n      </Container>\n\n      </React.Fragment>\n    );\n\n  }\n\n\n}\n\nexport default HomePage;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './UserItem.css';\n\nconst AddressItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Town: <span className=\"bold\">{props.address.town}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Country: <span className=\"bold\">{props.address.country}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                No: <span className=\"bold\">{props.address.number}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Street: <span className=\"bold\">{props.address.street}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Town: <span className=\"bold\">{props.address.town}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                City: <span className=\"bold\">{props.address.city}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Parish: <span className=\"bold\">{props.address.parish}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Country: <span className=\"bold\">{props.address.country}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Primary: <span className=\"bold\"> {props.address.primary === true && (<FontAwesomeIcon icon={faBatteryThreeQuarters} className=\"listIcon\"/>)} {props.address.primary === false && (<FontAwesomeIcon icon={faBatteryEmpty} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n              {props.makePrimary && (\n                <li>\n                <Button variant=\"outline-primary\" onClick={props.makePrimary.bind(this, props.address)}>Set Primary</Button>\n                </li>\n              )}\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.address)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AddressItem;\n","import React from 'react';\n\nimport AddressItem from '../../items/user/AddressItem';\nimport './UserList.css';\n\nconst UserAddressList = props => {\n\n  const {...filter} = props.filter;\n  let addresses2 = props.addresses;\n  let propsAddresses = [];\n\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number > b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number < b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street > b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street < b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town > b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town < b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city > b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city < b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish > b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish < b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country > b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country < b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode > b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode < b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'primary') {\n    propsAddresses = addresses2.filter(x => x.primary === filter.value);\n  }\n  if (filter.field !== 'address') {\n    propsAddresses = addresses2;\n  }\n\n  let count = 0;\n\n  const addresses = propsAddresses.map(address => {\n\n    count = propsAddresses.indexOf(address)+1;\n\n    return (\n      <AddressItem\n        key={count}\n        address={address}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        makePrimary={props.makePrimary}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{addresses}</ul>;\n};\n\nexport default UserAddressList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst AttendanceItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Date: <span className=\"bold\">{moment.unix(props.attendance.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Date: <span className=\"bold\">{moment.unix(props.attendance.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Status: <span className=\"bold\">{props.attendance.status}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.attendance.description}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.attendance)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default AttendanceItem;\n","import React from 'react';\n\nimport AttendanceItem from '../../items/user/AttendanceItem';\nimport './UserList.css';\n\nconst UserAttendanceList = props => {\n\n  const {...filter} = props.filter;\n  let attendance2 = props.attendance;\n  let propsAttendance = [];\n\n  if (filter.field === 'attendance' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsAttendance = attendance2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'attendance' && filter.key === 'status' && filter.value === 'Descending') {\n    propsAttendance = attendance2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'attendance' && filter.key === 'status' && filter.value === 'Ascending') {\n    propsAttendance = attendance2.sort((a, b) => (a.status > b.status) ? 1 : -1);\n  }\n  if (filter.field === 'attendance' && filter.key === 'status' && filter.value === 'Descending') {\n    propsAttendance = attendance2.sort((a, b) => (a.status < b.status) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'attendance') {\n    propsAttendance = attendance2;\n  }\n\n  let count = 0;\n\n  const attendance = propsAttendance.map(attendanceItem => {\n\n    count = propsAttendance.indexOf(attendanceItem)+1;\n\n    return (\n      <AttendanceItem\n        key={count}\n        attendance={attendanceItem}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"attendanceList\">{attendance}</ul>;\n};\n\nexport default UserAttendanceList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst LeaveItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Start: <span className=\"bold\">{moment.unix(props.leave.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.leave.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Start: <span className=\"bold\">{moment.unix(props.leave.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                End: <span className=\"bold\">{moment.unix(props.leave.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.leave.description}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.leave)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default LeaveItem;\n","import React from 'react';\n\nimport LeaveItem from '../../items/user/LeaveItem';\nimport './UserList.css';\n\nconst UserLeaveList = props => {\n\n  const {...filter} = props.filter;\n  let leave2 = props.leave;\n  let propsLeave = [];\n\n  if (filter.field === 'leave' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsLeave = leave2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'type' && filter.value === 'Descending') {\n    propsLeave = leave2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'startDate' && filter.value === 'Ascending') {\n    propsLeave = leave2.sort((a, b) => (a.startDate > b.startDate) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'startDate' && filter.value === 'Descending') {\n    propsLeave = leave2.sort((a, b) => (a.startDate < b.startDate) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'endDate' && filter.value === 'Ascending') {\n    propsLeave = leave2.sort((a, b) => (a.endDate > b.endDate) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'endDate' && filter.value === 'Descending') {\n    propsLeave = leave2.sort((a, b) => (a.endDate < b.endDate) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'leave') {\n    propsLeave = leave2;\n  }\n\n  let count = 0;\n\n  const leave = propsLeave.map(leaveItem => {\n\n    count = propsLeave.indexOf(leaveItem)+1;\n\n    return (\n      <LeaveItem\n        key={count}\n        leave={leaveItem}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"leaveList\">{leave}</ul>;\n};\n\nexport default UserLeaveList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './UserItem.css';\n\nconst ImageItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Link: <span className=\"bold\">{props.image.path}</span>\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.image.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.image.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.image.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.image)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n\n};\n\nexport default ImageItem;\n","import React from 'react';\n\nimport ImageItem from '../../items/user/ImageItem';\nimport './UserList.css';\n\nconst UserImageList = props => {\n\n  const {...filter} = props.filter;\n  let images2 = props.images;\n  let propsImages = [];\n\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'image') {\n    propsImages = images2;\n  }\n\n  let count = 0;\n\n  const images = propsImages.map(image => {\n\n    count = propsImages.indexOf(image)+1;\n\n    return (\n      <ImageItem\n        key={count}\n        image={image}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"imageList\">{images}</ul>;\n};\n\nexport default UserImageList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst FileItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Link: <span className=\"bold\">{props.file.path}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.file.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.file.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.file.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.file)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default FileItem;\n","import React from 'react';\n\nimport FileItem from '../../items/patient/FileItem';\nimport './UserList.css';\n\nconst PatientFileList = props => {\n\n  const {...filter} = props.filter;\n  let files2 = props.files;\n  let propsFiles = [];\n\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'file') {\n    propsFiles = files2;\n  }\n\n  let count = 0;\n\n  const files = propsFiles.map(file => {\n\n    count = propsFiles.indexOf(file)+1;\n\n    return (\n      <FileItem\n        key={count}\n        file={file}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{files}</ul>;\n};\n\nexport default PatientFileList;\n","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst AppointmentItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.appointment.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.appointment.type}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Date: <span className=\"bold\">{moment.unix(props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n\n          <Link\n            to={{\n              pathname: \"/appointments\",\n              state: {appointment: props.appointment._id}\n            }}\n          >\n          <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n          </Link>\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.appointment._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                time: <span className=\"bold\">{props.appointment.time}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                checkinTime: <span className=\"bold\">{props.appointment.checkinTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                seenTime: <span className=\"bold\">{props.appointment.seenTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                location: <span className=\"bold\">{props.appointment.location}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                description: <span className=\"bold\">{props.appointment.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                inProgress: <span className=\"bold\">{props.appointment.inProgress.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                attended: <span className=\"bold\">{props.appointment.attended.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                important: <span className=\"bold\">{props.appointment.important.toString()}</span>\n              </Card.Text>\n              </li>\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AppointmentItem;\n","import React from 'react';\n\nimport AppointmentItem from '../../items/user/AppointmentItem';\nimport './UserList.css';\n\nconst UserAppointmentList = props => {\n\n  const {...filter} = props.filter;\n  let appointments2 = props.appointments;\n  let propsAppointments = [];\n\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType > b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType < b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time > b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time < b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location > b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location < b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'important') {\n    propsAppointments = appointments2.filter(x => x.important === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'inProgress') {\n    propsAppointments = appointments2.filter(x => x.inProgress === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'attended') {\n    propsAppointments = appointments2.filter(x => x.attended === filter.value);\n  }\n  if (filter.field !== 'appointment') {\n    propsAppointments = appointments2;\n  }\n\n  let count = 0;\n\n  const appointments = propsAppointments.map(appointment => {\n\n    count = propsAppointments.indexOf(appointment)+1;\n\n    return (\n      <AppointmentItem\n        key={count}\n        appointment={appointment}\n      />\n    );\n  });\n\n  return <ul className=\"appointmentList\">{appointments}</ul>;\n};\n\nexport default UserAppointmentList;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './UserItem.css';\n\nconst NoteItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Note: <span className=\"bold\">{props.note}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.note)}>Delete</Button>\n              )}\n            </Row>\n            )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\n\nimport NoteItem from '../../items/user/NoteItem';\nimport './UserList.css';\n\nconst UserNoteList = props => {\n\n  const {...filter} = props.filter;\n  let notes2 = props.notes;\n  let propsNotes = [];\n\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Ascending') {\n    propsNotes = notes2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Descending') {\n    propsNotes = notes2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'note') {\n    propsNotes = notes2;\n  }\n\n  let count = 0;\n\n  const notes = propsNotes.map(note => {\n\n    count = propsNotes.indexOf(note)+1;\n\n    return (\n      <NoteItem\n        key={count}\n        note={note}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{notes}</ul>;\n};\n\nexport default UserNoteList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAddressForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"address\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>number</option>\n          <option>street</option>\n          <option>town</option>\n          <option>city</option>\n          <option>parish</option>\n          <option>country</option>\n          <option>postalCode</option>\n          <option>primary</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAddressForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAddressForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"attendance\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>status</option>\n          <option>date</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAddressForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterLeaveForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"leave\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>type</option>\n          <option>startDate</option>\n          <option>endDate</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterLeaveForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterImageForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"image\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>type</option>\n          <option>link</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterImageForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterFileForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"file\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>type</option>\n          <option>link</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterFileForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAppointmentForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"appointment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>title</option>\n          <option>type</option>\n          <option>subType</option>\n          <option>date</option>\n          <option>time</option>\n          <option>location</option>\n          <option>important</option>\n          <option>inProgress</option>\n          <option>attended</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAppointmentForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterNoteForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"note\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>note</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterNoteForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst UpdateUserSingleFieldForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Update Single Field</h4>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>field</Form.Label>\n        <Form.Control type=\"text\" value={props.field}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"query... date = YYY-MM-DD!!\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default UpdateUserSingleFieldForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './addForms.css';\n\nconst AddAddressForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Address</h4>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"number\">\n        <Form.Label>addressNumber</Form.Label>\n        <Form.Control type=\"number\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"street\">\n        <Form.Label>addressStreet</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row>\n\n      <Form.Group as={Col} controlId=\"town\">\n        <Form.Label>addressTown</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"city\">\n        <Form.Label>addressCity</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"parish\">\n        <Form.Label>addressParish</Form.Label>\n        <Form.Control as=\"select\">\n          <option>none</option>\n          <option>Hanover</option>\n          <option>St. Elizabeth</option>\n          <option>St. James</option>\n          <option>Trelawny</option>\n          <option>Westmoreland</option>\n          <option>Clarendon</option>\n          <option>Manchester</option>\n          <option>St. Ann</option>\n          <option>St. Catherine</option>\n          <option>St. Mary</option>\n          <option>Kingston</option>\n          <option>St. Andrew</option>\n          <option>Portland</option>\n          <option>St. Thomas</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"country\">\n        <Form.Label>addressCountry</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"postalCode\">\n        <Form.Label>addressPostalCode</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAddressForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddAttendanceForm = (props) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const handleChangeStartDate = startDate => {\n    setStartDate(startDate);\n    console.log(`startDate ${startDate}`);\n   }\n   const [endDate, setEndDate] = useState(new Date());\n   const handleChangeEndDate = endDate => {\n     setEndDate(endDate);\n     console.log(`endDate ${endDate}`);\n    }\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Attendance</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"date\">\n        <Form.Label>date</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"date\"/>\n      </Form.Group>\n      {\n        // <Form.Group as={Col} controlId=\"\">\n        //   <Form.Label>startDate</Form.Label>\n        //   <DatePicker className=\"\" id=\"startDate\"\n        //     selected={startDate}\n        //     onChange={handleChangeStartDate}\n        //   />\n        // </Form.Group>\n        // <Form.Group as={Col} controlId=\"\">\n        //   <Form.Label>startDate</Form.Label>\n        //   <DatePicker className=\"\" id=\"endDate\"\n        //     selected={endDate}\n        //     onChange={handleChangeEndDate}\n        //   />\n        // </Form.Group>\n      }\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"status\">\n        <Form.Label>status</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"status\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAttendanceForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddLeaveForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Leave</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"startDate\">\n        <Form.Label>startDate</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"startDate\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"endDate\">\n        <Form.Label>endDate</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"endDate\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddLeaveForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddNoteForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Notes</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"notes\">\n        <Form.Label>notes</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"note,note,note,note\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddNoteForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddImageForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Image</h4>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n  <Form.Row className=\"formBtnRow\">\n    <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n    <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddImageForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddFileForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add File</h4>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddFileForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\nimport S3 from 'react-aws-s3';\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport UserAddressList from '../../components/lists/user/UserAddressList'\nimport UserAttendanceList from '../../components/lists/user/UserAttendanceList'\nimport UserLeaveList from '../../components/lists/user/UserLeaveList'\nimport UserImageList from '../../components/lists/user/UserImageList'\nimport UserFileList from '../../components/lists/user/UserFileList'\nimport UserAppointmentList from '../../components/lists/user/UserAppointmentList'\nimport UserNoteList from '../../components/lists/user/UserNoteList'\n\nimport FilterAddressForm from '../../components/forms/filter/FilterAddressForm';\nimport FilterAttendanceForm from '../../components/forms/filter/FilterAttendanceForm';\nimport FilterLeaveForm from '../../components/forms/filter/FilterLeaveForm';\nimport FilterImageForm from '../../components/forms/filter/FilterImageForm';\nimport FilterFileForm from '../../components/forms/filter/FilterFileForm';\nimport FilterAppointmentForm from '../../components/forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../../components/forms/filter/FilterNoteForm';\n\nimport UpdateUserSingleFieldForm from '../../components/forms/add/UpdateUserSingleFieldForm';\nimport AddAddressForm from '../../components/forms/add/AddAddressForm';\nimport AddAttendanceForm from '../../components/forms/add/AddAttendanceForm';\nimport AddLeaveForm from '../../components/forms/add/AddLeaveForm';\nimport AddNoteForm from '../../components/forms/add/AddNoteForm';\nimport AddImageForm from '../../components/forms/add/AddImageForm';\nimport AddFileForm from '../../components/forms/add/AddFileForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './profile.css';\n\nclass MyProfilePage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    calendarAttendance: null,\n    calendarLeave: null,\n    calendarAppointments: null,\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...MyProfile component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getThisUser(seshStore);\n    this.getPocketVars(seshStore);\n\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n    console.log('...retriving pocketVars..');\n    this.context.setUserAlert('...retriving pocketVars..')\n    const token = args.token;\n    const activityId = args.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")}\n          `};\n          // fetch('http://localhost:8088/graphql', {\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          this.setState({userAlert: resData.errors[0].message})\n        } else {\n          let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n          console.log('...retriving pocketVars success...');\n          this.context.setUserAlert('...retriving pocketVars success...')\n          this.setState({\n            pocketVars: pocketVarsParsed\n          });\n        }\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.context.setUserAlert(err);\n      });\n    }\ngetThisUser (args) {\n  console.log('...retrieving your profile info...');\n  this.context.setUserAlert('...retrieving your profile info...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getUserById(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\"\n      )\n      {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getUserById);\n      let responseAlert = '...profile retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.getUserById,\n        activityA: `getUserById?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.getUserById;\n\n      if (resData.data.getUserById.role === 'Admin') {\n        this.setState({\n          canDelete: true\n        })\n      }\n      this.parseForCalendar({\n        attendance: resData.data.getUserById.attendance,\n        leave: resData.data.getUserById.leave,\n        appointments: resData.data.getUserById.appointments,\n      })\n      this.logUserActivity(args);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsubmitAddAddressForm = (event) => {\n  event.preventDefault();\n  console.log('...adding address...');\n  this.context.setUserAlert('...adding address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const number = event.target.number.value;\n  const street = event.target.street.value;\n  const town = event.target.town.value;\n  const city = event.target.city.value;\n  const parish = event.target.parish.value;\n  const country = event.target.country.value;\n  const postalCode = event.target.postalCode.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${number},\n          addressStreet:\"${street}\",\n          addressTown:\"${town}\",\n          addressCity:\"${city}\",\n          addressParish:\"${parish}\",\n          addressCountry:\"${country}\",\n          addressPostalCode:\"${postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAddress);\n      let responseAlert = '...address add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserAddress,\n        activityA: `addUserAddress?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAddress = (args) => {\n  console.log('...deleting address...');\n  this.context.setUserAlert('...deleting address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      mutation {deleteUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\",\n          addressPrimary: ${args.primary}\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAddress);\n      let responseAlert = '...address delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserAddress,\n        activityA: `deleteUserAddress?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.deleteUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsetAddressPrimary = (args) => {\n  console.log('...setting primary address...');\n  this.context.setUserAlert('...setting primary address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      mutation {setUserAddressPrimary(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.setUserAddressPrimary);\n      let responseAlert = '...address set primary success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.setUserAddressPrimary,\n        activityA: `setUserAddressPrimary?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.setUserAddressPrimary;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddAttendanceForm = (event) => {\n  event.preventDefault();\n  console.log('...adding attendance...');\n  this.context.setUserAlert('...attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const attendanceDate = event.target.date.value;\n  const attendanceStatus = event.target.status.value;\n  const attendanceDescription = event.target.description.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAttendance(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          attendanceDate:\"${attendanceDate}\",\n          attendanceStatus:\"${attendanceStatus}\",\n          attendanceDescription:\"${attendanceDescription}\"\n        })\n      {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAttendance);\n      let responseAlert = '...attendance add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserAttendance,\n        activityA: `addUserAttendance?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: resData.data.addUserAttendance.attendance,\n        leave: resData.data.addUserAttendance.leave,\n        appointments: resData.data.addUserAttendance.appointments,\n      })\n      this.context.activityUser = resData.data.addUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAttendance = (args) => {\n  console.log('...deleting attendance...');\n  this.context.setUserAlert('...deleting attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserAttendance(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            attendanceDate:\"${args.date}\",\n            attendanceStatus:\"${args.status}\",\n            attendanceDescription:\"${args.description}\"\n          }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAttendance);\n      let responseAlert = '...attendance delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserAttendance,\n        activityA: `deleteUserAttendance?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: resData.data.deleteUserAttendance.attendance,\n        leave: resData.data.deleteUserAttendance.leave,\n        appointments: resData.data.deleteUserAttendance.appointments,\n      })\n      this.context.activityUser = resData.data.deleteUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddLeaveForm = (event) => {\n  event.preventDefault();\n  console.log('...adding leave...');\n  this.context.setUserAlert('...leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const startDate = event.target.startDate.value;\n  const endDate = event.target.endDate.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserLeave(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          leaveType:\"${type}\",\n          leaveStartDate:\"${startDate}\",\n          leaveEndDate:\"${endDate}\",\n          leaveDescription:\"${description}\"\n        }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserLeave);\n      let responseAlert = '...leave add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserLeave,\n        activityA: `addUserLeave?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: resData.data.addUserLeave.attendance,\n        leave: resData.data.addUserLeave.leave,\n        appointments: resData.data.addUserLeave.appointments,\n      })\n      this.context.activityUser = resData.data.addUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteLeave = (args) => {\n  console.log('...deleting leave...');\n  this.context.setUserAlert('...deleting leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserLeave(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            leaveType:\"${args.type}\",\n            leaveStartDate:\"${args.startDate}\",\n            leaveEndDate:\"${args.endDate}\",\n            leaveDescription:\"${args.description}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserLeave);\n      let responseAlert = '...leave delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserLeave,\n        activityA: `deleteUserLeave?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: resData.data.addUserLeave.attendance,\n        leave: resData.data.addUserLeave.leave,\n        appointments: resData.data.addUseLeavce.appointments,\n      })\n      this.context.activityUser = resData.data.deleteUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding image...');\n  this.context.setUserAlert('...image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  const username = this.state.activityUser.username;\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+activityId+'/images';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addUserImage(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          imageName:\"${imageName}\",\n          imageType:\"${imageType}\",\n          imagePath:\"${imagePath}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserImage);\n      let responseAlert = '...image add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserImage,\n        activityA: `addUserImage?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n  console.log('...deleting image...');\n  this.context.setUserAlert('...deleting image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const username = this.state.activityUser.username;\n\n  const filePath = 'staff/'+username+'/images';\n  const filename = args.name;\n  // console.log('foo',filename);\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            imageName:\"${args.name}\",\n            imageType:\"${args.type}\",\n            imagePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserImage);\n      let responseAlert = '...image delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserImage,\n        activityA: `deleteUserImage?activityId:${activityId},userId:${userId}`,\n      });\n      this.context.activityUser = resData.data.deleteUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'staff/'+activityId+'/images';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding file...');\n  this.context.setUserAlert('...file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  const username = this.state.activityUser.username;\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+activityId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addUserFile(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          fileName:\"${file2Name}\",\n          fileType:\"${file2Type}\",\n          filePath:\"${file2Path}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserFile);\n      let responseAlert = '...file add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserFile,\n        activityA: `addUserFile?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n  console.log('...deleting file...');\n  this.context.setUserAlert('...deleting file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const username = this.state.activityUser.username;\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserFile(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            fileName:\"${args.name}\",\n            fileType:\"${args.type}\",\n            filePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserFile);\n      let responseAlert = '...file delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserFile,\n        activityA: `deleteUserFile?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.deleteUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'staff/'+activityId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding note...');\n  this.context.setUserAlert('...note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const note = event.target.note.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserNotes(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          notes:\"${note}\"\n        }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserNotes,\n        activityA: `addUserNotes?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n  console.log('...deleting note...');\n  this.context.setUserAlert('...deleting note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  let requestBody = {\n    query: `\n        mutation {deleteUserNote(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            note: \"${args}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserNote,\n        activityA: `deleteUserNote?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.deleteUserNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateUserSingleField(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateUserSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.updateUserSingleField,\n        activityA: `updateUserSingleField?activityId:${activityId},userId:${userId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.updateUserSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing profile dates for calendar...');\n  let calendarAttendance = args.attendance.map(x => ({\n      title: x.status,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        status: x.status,\n        description: x.description,\n        field: 'attendance'\n      }\n    }))\n  let calendarLeave = args.leave.map(x => ({\n      title: x.type,\n      date: moment.unix(x.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      end: moment.unix(x.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        type: x.type,\n        startDate: x.startDate,\n        endDate: x.endDate,\n        description: x.description,\n        field: 'leave'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave\n    })\n  let calendarAppointments = args.appointments.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n        field: 'appointments'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave,\n      calendarAppointments: calendarAppointments,\n    })\n}\n\nviewCalendarEvent = (args) => {\n\n  let input = args.event.extendedProps.props;\n  let data;\n  if (input.field === 'attendance') {\n    data = {\n      date: input.date,\n      status: input.status,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAttendance', data: data}\n    })\n  }\n  if (input.field === 'leave') {\n    data = {\n      type: input.type,\n      startDate: input.startDate,\n      endDate: input.endDate,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarLeave', data: data}\n    })\n  }\n  if (input.field === 'appointments') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      location: input.location,\n      description: input.description,\n      important: input.important,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAppointment', data: data, goLink: true}\n    })\n  }\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"profilePageContainer\">\n      <Row className=\"profilePageContainerRow headRow\">\n        <Col md={9} className=\"profilePageContainerCol\">\n          <h1 className=\"profileHeading\">Profile</h1>\n        </Col>\n        <Col md={3} className=\"profilePageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Row className=\"profilePageContainerRow mainRow\">\n        <Col md={2} className=\"profilePageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"profilePageContainerCol\">\n          {!this.state.activityUser && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"profilePageContainerRow mainRow2\">\n          <Col md={3} className=\"profilePageContainerCol specialCol1\">\n\n          {this.state.sideCol === 'menu' && (\n            <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n              <Nav.Item>\n                <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'address')}>Addresses</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'attendance')}>Attendance</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'leave')}>Leave</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'image')}>Images</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'file')}>Files</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'appointment')}>Appointments</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n              </Nav.Item>\n            </Nav>\n          )}\n          {this.state.sideCol === 'filter' && (\n            <Col>\n              {this.state.menuSelect === 'address' && (\n                <FilterAddressForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'attendance' && (\n                <FilterAttendanceForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'leave' && (\n                <FilterLeaveForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'image' && (\n                <FilterImageForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'file' && (\n                <FilterFileForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'appointment' && (\n                <FilterAppointmentForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'note' && (\n                <FilterNoteForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n            </Col>\n\n          )}\n          </Col>\n\n          {this.state.activityUser && (\n            <Col md={9} className=\"profilePageContainerCol specialCol2\">\n\n              {this.state.updateSingleField.state === true && (\n                <UpdateUserSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n\n              <Tab.Content className=\"tabContent\" >\n                <Tab.Pane eventKey=\"1\">\n                  <p className=\"displayPaneTitle\">Basic:</p>\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Title:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.title}</p>\n                      <p className=\"listGroupText\">Name:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.name}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Username:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.username}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                      <p className=\"listGroupText\">Role:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.role}</p>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">DOB:</p>\n                      <p className=\"listGroupText bold\">{moment.unix(this.state.activityUser.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                      <p className=\"listGroupText\">Age:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.age}</p>\n                      <p className=\"listGroupText\">Gender:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.gender}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                    <p className=\"listGroupText\">Email:</p>\n                    <p className=\"listGroupText bold\">{this.state.activityUser.contact.email}</p>\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                    <p className=\"listGroupText\">Phone:</p>\n                    <p className=\"listGroupText bold\">{this.state.activityUser.contact.phone}</p>\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                    <p className=\"listGroupText\">Phone 2:</p>\n                    <p className=\"listGroupText bold\">{this.state.activityUser.contact.phone2}</p>\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"2\">\n                  <p className=\"displayPaneTitle\">Admin:</p>\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Reg No:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.registrationNumber}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser._id}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">LoggedIn:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.loggedIn.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">ClientConnected:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.clientConnected.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Verified:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.verification.verified.toString()}</p>\n                      <p className=\"listGroupText\">Type:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.verification.type}</p>\n                      <p className=\"listGroupText\">Code:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.verification.code}</p>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"3\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Addresses:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'address' && (\n                      <AddAddressForm\n                        onConfirm={this.submitAddAddressForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserAddressList\n                    filter={this.state.filter}\n                    addresses={this.state.activityUser.addresses}\n                    authId={this.state.activityUser._id}\n                    onDelete={this.deleteAddress}\n                    canDelete={this.state.canDelete}\n                    makePrimary={this.setAddressPrimary}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"4\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Attendance:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'attendance')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'attendance' && (\n                      <AddAttendanceForm\n                        onConfirm={this.submitAddAttendanceForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAttendanceList\n                      filter={this.state.filter}\n                      attendance={this.state.activityUser.attendance}\n                      authId={this.state.activityUser._id}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteAttendance}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAttendance}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"5\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Leave:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'leave')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'leave' && (\n                      <AddLeaveForm\n                        onConfirm={this.submitAddLeaveForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserLeaveList\n                      filter={this.state.filter}\n                      leave={this.state.activityUser.leave}\n                      authId={this.state.activityUser._id}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteLeave}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarLeave}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"6\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Images:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'image' && (\n                      <AddImageForm\n                        onConfirm={this.submitAddImageForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserImageList\n                    filter={this.state.filter}\n                    images={this.state.activityUser.images}\n                    authId={this.state.activityUser._id}showListDetails={this.showListDetails}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteImage}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"7\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Files:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'file' && (\n                      <AddFileForm\n                        onConfirm={this.submitAddFileForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserFileList\n                    filter={this.state.filter}\n                    files={this.state.activityUser.files}\n                    authId={this.state.activityUser._id}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteFile}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"8\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Appointments:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                  </Row>\n                  <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAppointmentList\n                      filter={this.state.filter}\n                      appointments={this.state.activityUser.appointments}\n                      authId={this.state.activityUser._id}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAppointments}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"9\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Notes:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'note' && (\n                      <AddNoteForm\n                        onConfirm={this.submitAddNoteForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserNoteList\n                    filter={this.state.filter}\n                    notes={this.state.activityUser.notes}\n                    authId={this.state.activityUser._id}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteNote}\n                  />\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default MyProfilePage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './authForms.css';\n\nconst LoginForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Login</h1>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"username\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control type=\"username\" placeholder=\"Enter username\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"password\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\" />\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Login</Button>\n      <Button variant=\"outline-primary\" onClick={props.onStartVerification}>Verify</Button>\n      <Button variant=\"outline-secondary\" className=\"loginFormBtn\" onClick={props.onStartForgotPassword}>ForgotPassword</Button>\n      <Button variant=\"outline-warning\" className=\"loginFormBtn\">\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default LoginForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst verifyUserForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n  <h1>Verify</h1>\n  <Form.Row>\n    <Form.Group className=\"searchInput\" controlId=\"type\">\n      <Form.Label>type</Form.Label>\n      <Form.Control as=\"select\">\n        <option>email</option>\n      </Form.Control>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"username\">\n      <Form.Label>username</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"username\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"email\">\n      <Form.Label>email</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"email\"/>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"code\">\n      <Form.Label>code</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"verification code\"/>\n    </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n    Verify\n    </Button>\n  )}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default verifyUserForm;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './ForgotPasswordForm.css';\n\nconst ForgotPasswordForm = (props) => {\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n  <h1>Forgot Password</h1>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"username\">\n      <Form.Label>Username</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"username\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"email\">\n      <Form.Label>email</Form.Label>\n      <Form.Control type=\"email\" placeholder=\"email\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">Request New Password</Button>\n  </Form.Row>\n</Form>\n</div>\n\n)};\n\nexport default ForgotPasswordForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from 'moment';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport LoginForm from '../../components/forms/auth/LoginForm';\nimport VerifyUserForm from '../../components/forms/auth/VerifyUserForm';\nimport ForgotPasswordForm from '../../components/forms/auth/ForgotPasswordForm';\n\nclass LoginPage extends Component {\n  state = {\n    verifying: false,\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    userSeshStore: false,\n    user: {},\n    activityA: null,\n    requestingPasswordReset: false,\n    showForm: 'login',\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...login component mounted...');;\n  }\n\n  submitLoginForm = (event) => {\n    event.preventDefault();\n    this.context.setUserAlert(\"...submitLoginForm...\")\n    console.log(\"...submitLoginForm...\");\n\n    const username = event.target.username.value;\n    const password = event.target.password.value;\n\n    if (username.trim().length === 0 || password.trim().length === 0) {\n      this.context.setUserAlert(\"...blank fields!!!...\")\n      return;\n    }\n    let requestBody = {\n        query: `\n          {login(username:\"${username}\",password:\"${password}\")\n          {activityId,role,token,tokenExpiration,error}}`\n        };\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.login);\n      let responseAlert = '...login success!...';\n      let error = null;\n      if (resData.data.login.error) {\n        error = resData.data.login.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      if (resData.data.login.token !== \"\") {\n        this.context.login(\n          resData.data.login.token,\n          resData.data.login.activityId,\n          resData.data.login.role,\n          resData.data.login.tokenExpiration\n        );\n        const sessionObject = {\n          token: resData.data.login.token,\n          activityId: resData.data.login.activityId,\n          role: resData.data.login.role,\n          tokenExpiration: resData.data.login.tokenExpiration\n        }\n        this.context.setUserAlert(responseAlert)\n       sessionStorage.setItem('logInfo', JSON.stringify(sessionObject));\n       this.setState({ activityA: `login?${sessionObject.activityId}`})\n       this.logUserActivity();\n      }\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n  };\n\n  logUserActivity() {\n    console.log('...logUserActivity...');\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    const activityId = seshStore.activityId;\n    const token = seshStore.token;\n    const userId = activityId;\n    const request = this.state.activityA;\n    const activityDate = moment().format('YYYY-MM-DD');\n    let requestBody = {\n      query: `\n        mutation {addUserActivity(\n          activityId:\"${activityId}\",userId:\"${userId}\",\n          userInput:{\n            activityDate:\"${activityDate}\",\n            activityRequest:\"${request}\"\n          })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n      `};\n    fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log('...resData...',resData.data.addUserActivity);\n        if (resData.data.addUserActivity.error) {\n          console.log('...resDataError...',resData.data.addUserActivity.error);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  verifyUser = (event) => {\n    event.preventDefault();\n    console.log('...verify user...');\n    const email = event.target.email.value;\n    const type = event.target.type.value;\n    const code = event.target.code.value;\n    const username = event.target.username.value;\n\n    const requestBody = {\n      query: `\n        mutation {verifyUser(\n          userInput:{\n            username:\"${username}\",\n            contactEmail:\"${email}\",\n            verificationType:\"${type}\",\n            verificationCode:\"${code}\"\n          }\n        )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log('...resData...',resData.data.verifyUser);\n        this.context.setUserAlert('Verified...Please try loggin in again..')\n      })\n      .catch(err => {\n        this.context.setUserAlert(err)\n      });\n  }\n\n  toggleVerification = () => {\n    if (this.state.showForm === 'verify') {\n      this.setState({\n        showForm: 'login'\n      })\n    } else {\n      this.setState({\n        showForm: 'verify'\n      })\n    }\n\n  };\n  toggleForgotPassword = () => {\n    if (this.state.showForm === 'forgotPassword') {\n      this.setState({\n        showForm: 'login'\n      })\n    } else {\n      this.setState({\n        showForm: 'forgotPassword'\n      })\n    }\n\n  }\n\n  requestPasswordReset = (event) => {\n    event.preventDefault();\n    console.log('...requesting password reset...');\n    this.setState({isLoading: true})\n\n    const username = event.target.username.value;\n    const email = event.target.email.value;\n    const requestBody = {\n      query: `\n         mutation {requestPasswordReset(\n           userInput:{\n             username:\"${username}\",\n             contactEmail:\"${email}\"\n           })\n           {_id,username,contact{email}verification{verified,type,code}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log('...resData...',resData.data.requestPasswordReset)\n        if (resData.errors) {\n          this.context.setUserAlert(resData.errors[0].message);\n        } else {\n          this.context.setUserAlert('...password reset request sent...');\n          this.setState({isLoading: false, requestingPasswordReset: false});\n          this.toggleForgotPassword();\n        }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  render() {\n    return (\n      <Container className=\"authPageContainer\">\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n      {this.state.showForm === 'login' && (\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n            <LoginForm\n              onConfirm={this.submitLoginForm}\n              onStartForgotPassword={this.toggleForgotPassword}\n              onStartVerification={this.toggleVerification}\n            />\n          </Col>\n        </Row>\n      )}\n\n      {this.state.showForm === 'verify' && (\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n            <VerifyUserForm\n              canCancel\n              canConfirm\n              onCancel={this.toggleVerification}\n              onConfirm={this.verifyUser}\n            />\n          </Col>\n        </Row>\n      )}\n\n\n      {this.state.showForm === 'forgotPassword' && (\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n            <ForgotPasswordForm\n              onCancel={this.toggleForgotPassword}\n              onConfirm={this.requestPasswordReset}\n            />\n          </Col>\n        </Row>\n      )}\n\n      </Container>\n\n    );\n  }\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './authForms.css';\n\nconst SignupForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Signup</h1>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"email\">\n        <Form.Label>email Address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"password\">\n        <Form.Label>password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"password\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"role\">\n        <Form.Label>role</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Admin</option>\n          <option>Staff</option>\n          <option>Nurse</option>\n          <option>Doctor</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Mr</option>\n          <option>Mrs</option>\n          <option>Ms</option>\n          <option>Dr</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"name\">\n        <Form.Label>name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"username\">\n        <Form.Label>username</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"username\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"dob\">\n        <Form.Label>dob</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"gender\">\n        <Form.Label>gender</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Female</option>\n          <option>Male</option>\n          <option>Prefer Not to Say</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"phone\">\n        <Form.Label>phone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760001234\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"phone2\">\n        <Form.Label>phone2</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760005678\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressNumber\">\n        <Form.Label>addressNumber</Form.Label>\n        <Form.Control type=\"number\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressStreet\">\n        <Form.Label>addressStreet</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressTown\">\n        <Form.Label>addressTown</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressCity\">\n        <Form.Label>addressCity</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressParish\">\n        <Form.Label>addressParish</Form.Label>\n        <Form.Control as=\"select\">\n          <option>none</option>\n          <option>Hanover</option>\n          <option>St. Elizabeth</option>\n          <option>St. James</option>\n          <option>Trelawny</option>\n          <option>Westmoreland</option>\n          <option>Clarendon</option>\n          <option>Manchester</option>\n          <option>St. Ann</option>\n          <option>St. Catherine</option>\n          <option>St. Mary</option>\n          <option>Kingston</option>\n          <option>St. Andrew</option>\n          <option>Portland</option>\n          <option>St. Thomas</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressCountry\">\n        <Form.Label>addressCountry</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressPostalCode\">\n        <Form.Label>addressPostalCode</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Signup</Button>\n    </Form.Row>\n    <Form.Row>\n      <Button variant=\"outline-warning\" className=\"loginFormBtn\">\n        <NavLink to=\"/login\">Login</NavLink>\n      </Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default SignupForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from 'moment';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport SignupForm from '../../components/forms/auth/SignupForm';\n\nclass SignUpPage extends Component {\n  state = {\n    verifying: false,\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    userSeshStore: false,\n    user: {},\n    activityA: null,\n    requestingPasswordReset: false,\n    signupStatus: null,\n    invited: false,\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...signup component mounted...');\n    // this.context.setUserAlert('...signup component mounted...')\n  }\n\n\n  submitSignupForm = (event) => {\n    event.preventDefault();\n    this.context.setUserAlert(\"...submitSignupForm...\")\n    console.log(\"...submitSignupForm...\");\n\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n    const role = event.target.role.value;\n    const name = event.target.name.value;\n    const title = event.target.title.value;\n    const username = event.target.username.value;\n    const dob = event.target.dob.value;\n    const gender = event.target.gender.value;\n    const phone = event.target.phone.value;\n    const phone2 = event.target.phone2.value;\n    const addressNumber = event.target.addressNumber.value;\n    const addressStreet = event.target.addressStreet.value;\n    const addressTown = event.target.addressTown.value;\n    const addressCity = event.target.addressCity.value;\n    const addressParish = event.target.addressParish.value;\n    const addressCountry = event.target.addressCountry.value;\n    const addressPostalCode = event.target.addressPostalCode.value;\n\n    if (email.trim().length === 0 ||\n        password.trim().length === 0 ||\n        role.trim().length === 0 ||\n        name.trim().length === 0 ||\n        username.trim().length === 0 ||\n        dob.trim().length === 0 ||\n        gender.trim().length === 0 ||\n        phone.trim().length === 0 ||\n        phone2.trim().length === 0 ||\n        addressNumber.trim().length === 0 ||\n        addressStreet.trim().length === 0 ||\n        addressTown.trim().length === 0 ||\n        addressCity.trim().length === 0 ||\n        addressParish.trim().length === 0 ||\n        addressCountry.trim().length === 0 ||\n        addressPostalCode.trim().length === 0\n        ) {\n      this.context.setUserAlert(\"...blank fields!!!...\");\n      return;\n    }\n    let requestBody = {\n        query: `\n            mutation {createUser(\n              userInput:{\n                password:\"${password}\",\n                title:\"${title}\",\n                name:\"${name}\",\n                role:\"${role}\",\n                username:\"${username}\",\n                dob:\"${dob}\",\n                gender:\"${gender}\",\n                contactPhone:\"${phone}\",\n                contactPhone2:\"${phone2}\",\n                contactEmail:\"${email}\",\n                addressNumber:${addressNumber},\n                addressStreet:\"${addressStreet}\",\n                addressTown:\"${addressTown}\",\n                addressCity:\"${addressCity}\",\n                addressParish:\"${addressParish}\",\n                addressCountry:\"${addressCountry}\",\n                addressPostalCode:\"${addressPostalCode}\"\n              }\n            )\n            {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n          `};\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createUser);\n      let responseAlert = '...Signup success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      responseAlert = '...verificationCode: '+resData.data.createUser.verification.code+'';\n      this.context.setUserAlert(responseAlert);\n      this.setState({signupStatus: 'success'})\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n  };\n\n  submitInviteForm = (event) => {\n    event.preventDefault()\n    console.log('...checking inviteCode...');\n    this.context.setUserAlert('...checking inviteCode...')\n\n    const challenge = event.target.inviteCode.value;\n\n    let requestBody = {\n        query: `\n            query {verifyInvitation(challenge:\"${challenge}\")}\n          `};\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data);\n      const result = resData.data.verifyInvitation;\n      if (result === 'matched') {\n        this.setState({invited: true})\n        this.context.setUserAlert('...invite code accepted...');\n      } else {\n        this.context.setUserAlert('...invite code rejected. Check & try again...');\n      }\n\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n\n\n  }\n\n\n  render() {\n    return (\n      <Container className=\"authPageContainer\">\n        {this.state.overlay === true && (\n          <LoadingOverlay\n            status={this.state.overlayStatus}\n          />\n        )}\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n          {this.state.invited !== true && (\n            <React.Fragment>\n            <Form onSubmit={this.submitInviteForm}>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"inviteCode\">\n                  <Form.Label>inviteCode</Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"inviteCode\"/>\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row className=\"formBtnRow\">\n                <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Submit</Button>\n              </Form.Row>\n            </Form>\n            </React.Fragment>\n          )}\n\n          {this.state.signupStatus !== 'success' &&\n          this.state.invited === true && (\n            <SignupForm\n              onConfirm={this.submitSignupForm}\n            />\n          )}\n          {this.state.signupStatus === 'success' && (\n            <React.Fragment>\n              <h1>SignUp Success...Proceed to Login</h1>\n              <Button variant=\"outline-warning\" className=\"loginFormBtn\">\n                <NavLink to=\"/login\">Login</NavLink>\n              </Button>\n            </React.Fragment>\n          )}\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default SignUpPage;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { NavLink } from 'react-router-dom';\nimport './CreateUserForm.css';\n\nconst ResetPasswordForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n\n<Form onSubmit={props.onConfirm}>\n  <h1>Reset Password</h1>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"verificationCode\">\n      <Form.Label>verificationCode</Form.Label>\n      <Form.Control type=\"text\" value={props.verf}/>\n    </Form.Group>\n  </Form.Row>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"password\">\n    <Form.Label>password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"password\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n    Reset\n    </Button>\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>\n      <NavLink to=\"/landing\">Cancel</NavLink>\n    </Button>\n  </Form.Row>\n</Form>\n\n</div>\n\n)};\n\nexport default ResetPasswordForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { useParams, NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from 'moment';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport ResetPasswordForm from '../../components/forms/auth/ResetPasswordForm';\n\nclass PasswordResetPage extends Component {\n  state = {\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    passwordResetStatus: null,\n    user: {},\n    activityA: null,\n    activityId: null,\n    verfCode: null,\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...password component mounted...');\n    console.log();\n    this.setState({\n      activityId: this.props.location.pathname.split('@')[0].split('/')[2],\n      verfCode: this.props.location.pathname.split('@')[1]\n    })\n  }\n\n\n  submitResetPasswordForm = (event) => {\n    event.preventDefault();\n    this.context.setUserAlert(\"...submitSignupForm...\")\n    console.log(\"...submitSignupForm...\");\n\n    const password = event.target.password.value;\n    const verificationCode = this.state.verfCode;\n    const userId = this.state.activityId;\n    if (password.trim().length === 0 ||\n        verificationCode.trim().length === 0\n        ) {\n      this.context.setUserAlert(\"...blank fields!!!...\");\n      return;\n    }\n    let requestBody = {\n        query: `\n            mutation {resetUserPassword(\n              userId:\"${userId}\",\n              userInput:{\n                verificationCode:\"${verificationCode}\",\n                password:\"${password}\"\n              })\n            {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n          `};\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      console.log('...resData...',resData.data.resetUserPassword);\n      let responseAlert = '...Password Reset Success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert);\n      this.setState({passwordResetStatus: 'success'})\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n  };\n\n\n  render() {\n    return (\n      <Container className=\"authPageContainer\">\n        {this.state.overlay === true && (\n          <LoadingOverlay\n            status={this.state.overlayStatus}\n          />\n        )}\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n          {this.state.passwordResetStatus !== 'success' && (\n            <ResetPasswordForm\n              onConfirm={this.submitResetPasswordForm}\n              verf={this.state.verfCode}\n            />\n          )}\n          {this.state.passwordResetStatus === 'success' && (\n            <React.Fragment>\n              <h1>Reset Success...Proceed to Login</h1>\n              <Button variant=\"outline-warning\" className=\"loginFormBtn\">\n                <NavLink to=\"/login\">Login</NavLink>\n              </Button>\n            </React.Fragment>\n          )}\n\n\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default PasswordResetPage;\n","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faUserPlus,\n  faCalendarPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst UserItem = (props) => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n  const [deleteState, setDeleteState] = useState(false);\n  const handleDeleteStateChange = () => {\n    if (deleteState === true) {\n      setDeleteState(false);\n    }\n    if (deleteState === false) {\n      setDeleteState(true);\n    }\n   }\n\n  return (\n    <li key={props.key} className=\"userItemLi\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Username: <span className=\"bold\">{props.user.username}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            role: <span className=\"bold\">{props.user.role}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n\n          {!props.appointmentPage &&\n            !props.visitPage &&\n            props.showDetails && (\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.user)}/>\n          )}\n\n          {props.appointmentPage && (\n            <Link\n              to={{\n                pathname: \"/staff\",\n                state: {user: props.user._id}\n              }}\n            >\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </Link>\n          )}\n\n          {props.visitPage && (\n            <Link\n              to={{\n                pathname: \"/staff\",\n                state: {user: props.user._id}\n              }}\n            >\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </Link>\n          )}\n\n          {props.selectUser && (\n            <FontAwesomeIcon icon={faUserPlus} className=\"listIcon\" onClick={props.selectUser.bind(this, props.user)}/>\n          )}\n\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.user._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                name: <span className=\"bold\">{props.user.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                username: <span className=\"bold\">{props.user.username}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                title: <span className=\"bold\">{props.user.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                role: <span className=\"bold\">{props.user.role}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                dob: <span className=\"bold\">{moment.unix(props.user.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                age: <span className=\"bold\">{props.user.age}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                gender: <span className=\"bold\">{props.user.gender}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                loggedIn: <span className=\"bold\">{props.user.loggedIn === true && (<FontAwesomeIcon icon={faBatteryThreeQuarters} className=\"listIcon\"/>)} {props.user.loggedIn === false && (<FontAwesomeIcon icon={faBatteryEmpty} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n\n            </ul>\n            </Row>\n          )}\n\n          {deleteState === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.user)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from '../../items/user/UserItem';\nimport './UserList.css';\n\nconst UserList = props => {\n\n  const {...filter} = props.filter;\n  let users2 = props.users;\n  let propsUsers = [];\n\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'loggedIn') {\n    propsUsers = users2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field !== 'staff') {\n    propsUsers = users2;\n  }\n\n  let count = 0;\n\n  const users = propsUsers.map(user => {\n\n    count = propsUsers.indexOf(user)+1;\n\n    return (\n      <UserItem\n        key={count}\n        user={user}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        appointmentPage={props.appointmentPage}\n        visitPage={props.visitPage}\n        selectUser={props.selectUser}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{users}</ul>;\n};\n\nexport default UserList;\n","import React from 'react';\n\nimport UserItem from '../../items/user/UserItem';\nimport './UserList.css';\n\nconst SearchUserList = props => {\n\n  const {...filter} = props.filter;\n  let users2 = props.users;\n  let propsUsers = [];\n\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'loggedIn') {\n    propsUsers = users2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field !== 'staff') {\n    propsUsers = users2;\n  }\n\n  let count = 0;\n\n  const users = propsUsers.map(user => {\n\n    count = propsUsers.indexOf(user)+1;\n\n    return (\n      <UserItem\n        key={count}\n        user={user}\n        canDelete={props.canDelete}\n        showDetails={props.showDetails}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{users}</ul>;\n};\n\nexport default SearchUserList;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\nimport S3 from 'react-aws-s3';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport UserAddressList from '../lists/user/UserAddressList'\nimport UserAttendanceList from '../lists/user/UserAttendanceList'\nimport UserLeaveList from '../lists/user/UserLeaveList'\nimport UserImageList from '../lists/user/UserImageList'\nimport UserFileList from '../lists/user/UserFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport UserNoteList from '../lists/user/UserNoteList'\n\nimport FilterAddressForm from '../forms/filter/FilterAddressForm';\nimport FilterAttendanceForm from '../forms/filter/FilterAttendanceForm';\nimport FilterLeaveForm from '../forms/filter/FilterLeaveForm';\nimport FilterImageForm from '../forms/filter/FilterImageForm';\nimport FilterFileForm from '../forms/filter/FilterFileForm';\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../forms/filter/FilterNoteForm';\n\nimport UpdateUserSingleFieldForm from '../forms/add/UpdateUserSingleFieldForm';\nimport AddAddressForm from '../forms/add/AddAddressForm';\nimport AddAttendanceForm from '../forms/add/AddAttendanceForm';\nimport AddLeaveForm from '../forms/add/AddLeaveForm';\nimport AddNoteForm from '../forms/add/AddNoteForm';\nimport AddImageForm from '../forms/add/AddImageForm';\nimport AddFileForm from '../forms/add/AddFileForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass UserDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    calendarAttendance: null,\n    calendarLeave: null,\n    calendarAppointments: null,\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    // this.props2 = this.props;\n  }\n\ncomponentDidMount () {\n  console.log('...staff details component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getPocketVars(seshStore);\n  }\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.setState({\n    selectedUser: this.context.selectedUser\n  })\n\n  this.parseForCalendar({\n    attendance: this.props.user.attendance,\n    leave: this.props.user.leave,\n    appointments: this.props.user.appointments,\n  })\n}\n// componentDidUpdate () {\n//   console.log('foo',this.props.user.appointments);\n// }\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n    console.log('...retriving pocketVars..');\n    this.context.setUserAlert('...retriving pocketVars..')\n    const token = args.token;\n    const activityId = args.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")}\n          `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          this.setState({userAlert: resData.errors[0].message})\n        } else {\n          let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n          console.log('...retriving pocketVars success...');\n          this.context.setUserAlert('...retriving pocketVars success...')\n          this.setState({\n            pocketVars: pocketVarsParsed\n          });\n        }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n    }\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\n\nsubmitAddAddressForm = (event) => {\n  event.preventDefault();\n  console.log('...adding address...');\n  this.context.setUserAlert('...adding address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const number = event.target.number.value;\n  const street = event.target.street.value;\n  const town = event.target.town.value;\n  const city = event.target.city.value;\n  const parish = event.target.parish.value;\n  const country = event.target.country.value;\n  const postalCode = event.target.postalCode.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${number},\n          addressStreet:\"${street}\",\n          addressTown:\"${town}\",\n          addressCity:\"${city}\",\n          addressParish:\"${parish}\",\n          addressCountry:\"${country}\",\n          addressPostalCode:\"${postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAddress);\n      let responseAlert = '...address add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserAddress)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserAddress,\n        activityA: `addUserAddress?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAddress = (args) => {\n  console.log('...deleting address...');\n  this.context.setUserAlert('...deleting address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\",\n          addressPrimary: ${args.primary}\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAddress);\n      let responseAlert = '...address delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserAddress)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserAddress,\n        activityA: `deleteUserAddress?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsetAddressPrimary = (args) => {\n  console.log('...setting primary address...');\n  this.context.setUserAlert('...setting primary address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n      mutation {setUserAddressPrimary(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.setUserAddressPrimary);\n      let responseAlert = '...address set primary success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.setUserAddressPrimary)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.setUserAddressPrimary,\n        activityA: `setUserAddressPrimary?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.setUserAddressPrimary;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddAttendanceForm = (event) => {\n  event.preventDefault();\n  console.log('...adding attendance...');\n  this.context.setUserAlert('...attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const attendanceDate = event.target.date.value;\n  const attendanceStatus = event.target.status.value;\n  const attendanceDescription = event.target.description.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAttendance(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          attendanceDate:\"${attendanceDate}\",\n          attendanceStatus:\"${attendanceStatus}\",\n          attendanceDescription:\"${attendanceDescription}\"\n        })\n      {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAttendance);\n      let responseAlert = '...attendance add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserAttendance)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserAttendance,\n        activityA: `addUserAttendance?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.addUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAttendance = (args) => {\n  console.log('...deleting attendance...');\n  this.context.setUserAlert('...deleting attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserAttendance(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            attendanceDate:\"${args.date}\",\n            attendanceStatus:\"${args.status}\",\n            attendanceDescription:\"${args.description}\"\n          }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAttendance);\n      let responseAlert = '...attendance delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserAttendance)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserAttendance,\n        activityA: `deleteUserAttendance?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.deleteUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddLeaveForm = (event) => {\n  event.preventDefault();\n  console.log('...adding leave...');\n  this.context.setUserAlert('...leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const startDate = event.target.startDate.value;\n  const endDate = event.target.endDate.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserLeave(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          leaveType:\"${type}\",\n          leaveStartDate:\"${startDate}\",\n          leaveEndDate:\"${endDate}\",\n          leaveDescription:\"${description}\"\n        }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserLeave);\n      let responseAlert = '...leave add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserLeave)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserLeave,\n        activityA: `addUserLeave?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.addUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteLeave = (args) => {\n  console.log('...deleting leave...');\n  this.context.setUserAlert('...deleting leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserLeave(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            leaveType:\"${args.type}\",\n            leaveStartDate:\"${args.startDate}\",\n            leaveEndDate:\"${args.endDate}\",\n            leaveDescription:\"${args.description}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserLeave);\n      let responseAlert = '...leave delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserLeave)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserLeave,\n        activityA: `deleteUserLeave?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.deleteUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding image...');\n  this.context.setUserAlert('...image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const username = this.props.user.username;\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+userId+'/images';\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addUserImage(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          imageName:\"${imageName}\",\n          imageType:\"${imageType}\",\n          imagePath:\"${imagePath}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserImage);\n      let responseAlert = '...image add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserImage)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserImage,\n        activityA: `addUserImage?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n  console.log('...deleting image...');\n  this.context.setUserAlert('...deleting image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const username = this.props.user.username;\n\n  const filePath = 'staff/'+username+'/images';\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            imageName:\"${args.name}\",\n            imageType:\"${args.type}\",\n            imagePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserImage);\n      let responseAlert = '...image delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserImage)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserImage,\n        activityA: `deleteUserImage?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'staff/'+userId+'/images';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding file...');\n  this.context.setUserAlert('...file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  const username = this.props.user.username;\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+userId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n      mutation {addUserFile(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          fileName:\"${file2Name}\",\n          fileType:\"${file2Type}\",\n          filePath:\"${file2Path}\"\n        })\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserFile);\n      let responseAlert = '...file add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserFile)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserFile,\n        activityA: `addUserFile?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n  console.log('...deleting file...');\n  this.context.setUserAlert('...deleting file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const username = this.props.user.username;\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserFile(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            fileName:\"${args.name}\",\n            fileType:\"${args.type}\",\n            filePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserFile);\n      let responseAlert = '...file delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserFile)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserFile,\n        activityA: `deleteUserFile?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'staff/'+userId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding note...');\n  this.context.setUserAlert('...note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const note = event.target.note.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserNotes(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          notes:\"${note}\"\n        }){_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserNotes)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserNotes,\n        activityA: `addUserNotes?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n  console.log('...deleting note...');\n  this.context.setUserAlert('...deleting note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  let requestBody = {\n    query: `\n        mutation {deleteUserNote(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            note: \"${args}\"\n          })\n          {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserNote)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserNote,\n        activityA: `deleteUserNote?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateUserSingleField(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateUserSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.updateUserSingleField)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.updateUserSingleField,\n        activityA: `updateUserSingleField?activityId:${activityId},userId:${userId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.updateUserSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing staff dates for calendar...');\n  let calendarAttendance = args.attendance.map(x => ({\n      title: x.status,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        status: x.status,\n        description: x.description,\n        field: 'attendance'\n      }\n    }))\n  let calendarLeave = args.leave.map(x => ({\n      title: x.type,\n      date: moment.unix(x.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      end: moment.unix(x.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        type: x.type,\n        startDate: x.startDate,\n        endDate: x.endDate,\n        description: x.description,\n        field: 'leave'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave\n    })\n  let calendarAppointments = args.appointments.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n        field: 'appointments'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave,\n      calendarAppointments: calendarAppointments,\n    })\n}\n\nviewCalendarEvent = (args) => {\n\n  let input = args.event.extendedProps.props;\n  let data;\n  if (input.field === 'attendance') {\n    data = {\n      date: input.date,\n      status: input.status,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAttendance', data: data}\n    })\n  }\n  if (input.field === 'leave') {\n    data = {\n      type: input.type,\n      startDate: input.startDate,\n      endDate: input.endDate,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarLeave', data: data}\n    })\n  }\n  if (input.field === 'appointments') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      location: input.location,\n      description: input.description,\n      important: input.important,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAppointment', data: data, goLink: true}\n    })\n  }\n\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {\n            !this.props.user && (\n              <h3>...</h3>\n            )\n          }\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={2} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'address')}>Addresses</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'attendance')}>Attendance</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'leave')}>Leave</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'image')}>Images</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'file')}>Files</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'appointment')}>Appointments</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'address' && (\n                  <FilterAddressForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'attendance' && (\n                  <FilterAttendanceForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'leave' && (\n                  <FilterLeaveForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'image' && (\n                  <FilterImageForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'file' && (\n                  <FilterFileForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'appointment' && (\n                  <FilterAppointmentForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'note' && (\n                  <FilterNoteForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n\n            )}\n          </Col>\n\n          {this.props.user && (\n            <Col md={10} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdateUserSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n              <Tab.Content className=\"tabContent\">\n                <Tab.Pane eventKey=\"1\">\n                  User Basic:\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Title:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.title}</p>\n                      {this.state.canDelete === true && (\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                      )}\n                      <p className=\"listGroupText\">Name:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.name}</p>\n                      {this.state.canDelete === true && (\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'name')}>Edit</Button>\n                      )}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Username:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.username}</p>\n                      {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                      )}\n                      <p className=\"listGroupText\">Role:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.role}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">DOB:</p>\n                      <p className=\"listGroupText bold\">{moment.unix(this.props.user.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                      )}\n                      <p className=\"listGroupText\">Age:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.age}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Gender:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.gender}</p>\n                      {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                      )}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Email:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.contact.email}</p>\n                      {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                      )}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Phone:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.contact.phone}</p>\n                      {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                      )}\n                      <p className=\"listGroupText\">Phone 2:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.contact.phone2}</p>\n                      {this.state.canDelete === true && (\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                      )}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p></p>\n                      <p></p>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"2\">\n                  User Admin\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Reg No:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.registrationNumber}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.props.user._id}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">LoggedIn:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.loggedIn.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">ClientConnected:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.clientConnected.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Verified:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.verification.verified.toString()}</p>\n                      <p className=\"listGroupText\">Type:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.verification.type}</p>\n                      <p className=\"listGroupText\">Code:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.verification.code}</p>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"3\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Address List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'address' && (\n                      <AddAddressForm\n                        onConfirm={this.submitAddAddressForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserAddressList\n                    filter={this.state.filter}\n                    addresses={this.props.user.addresses}\n                    authId={this.context.activityId}\n                    onDelete={this.deleteAddress}\n                    canDelete={this.state.canDelete}\n                    makePrimary={this.setAddressPrimary}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"4\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Attendance List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'attendance')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'attendance' && (\n                      <AddAttendanceForm\n                        onConfirm={this.submitAddAttendanceForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAttendanceList\n                      filter={this.state.filter}\n                      attendance={this.props.user.attendance}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteAttendance}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAttendance}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"5\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Leave List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'leave')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'leave' && (\n                      <AddLeaveForm\n                        onConfirm={this.submitAddLeaveForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserLeaveList\n                      filter={this.state.filter}\n                      leave={this.props.user.leave}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteLeave}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarLeave}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"6\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Image List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'image' && (\n                      <AddImageForm\n                        onConfirm={this.submitAddImageForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserImageList\n                    filter={this.state.filter}\n                    images={this.props.user.images}\n                    authId={this.context.activityId}\n                    showListDetails={this.showListDetails}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteImage}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"7\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User File List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'file' && (\n                      <AddFileForm\n                        onConfirm={this.submitAddFileForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserFileList\n                    filter={this.state.filter}\n                    files={this.props.user.files}\n                    authId={this.context.activityId}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteFile}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"8\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Appointment List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                  </Row>\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAppointmentList\n                      filter={this.state.filter}\n                      appointments={this.props.user.appointments}\n                      authId={this.context.activityId}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAppointments}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"9\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Notes:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.state.canDelete === true && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'note' && (\n                      <AddNoteForm\n                        onConfirm={this.submitAddNoteForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserNoteList\n                    filter={this.state.filter}\n                    notes={this.props.user.notes}\n                    authId={this.context.activityId}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteNote}\n                  />\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default UserDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterUserForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"staff\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>username</option>\n          <option>title</option>\n          <option>role</option>\n          <option>dob</option>\n          <option>age</option>\n          <option>gender</option>\n          <option>loggedIn</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterUserForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst UserSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>title</option>\n          <option>name</option>\n          <option>username</option>\n          <option>registrationNumber</option>\n          <option>dob</option>\n          <option>age</option>\n          <option>gender</option>\n          <option>contact.email</option>\n          <option>contact.phone</option>\n          <option>contact.phone2</option>\n          <option>addresses.number</option>\n          <option>addresses.street</option>\n          <option>addresses.town</option>\n          <option>addresses.city</option>\n          <option>addresses.parish</option>\n          <option>addresses.country</option>\n          <option>addresses.postalCode</option>\n          <option>addresses.primary</option>\n          <option>loggedIn</option>\n          <option>clientConnected</option>\n          <option>verification.verified</option>\n          <option>attendance.date</option>\n          <option>attendance.status</option>\n          <option>attendance.description</option>\n          <option>leave.type</option>\n          <option>leave.startDate</option>\n          <option>leave.endDate</option>\n          <option>leave.description</option>\n          <option>images.name</option>\n          <option>images.type</option>\n          <option>images.path</option>\n          <option>files.name</option>\n          <option>files.type</option>\n          <option>files.path</option>\n          <option>notes</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default UserSearchForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport UserList from '../../components/lists/user/UserList';\nimport SearchUserList from '../../components/lists/user/SearchUserList';\nimport UserDetail from '../../components/details/UserDetail';\n\nimport FilterUserForm from '../../components/forms/filter/FilterUserForm';\nimport UserSearchForm from '../../components/forms/search/UserSearchForm';\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './staff.css';\n\nclass StaffPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    searchUsers: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    canDelete: false,\n    fromGoLink: null,\n    goLinkId: null,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all users component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    if (this.props.location.state) {\n      if (this.props.location.state.user) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.user\n        })\n      }\n    }\n    this.getAllUsers(seshStore);\n    if (this.props.selectedUser) {\n      console.log('...found existing user selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedUser: this.props.selectedUser\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      console.log('...all users retrieval success!...');\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkUser = resData.data.getAllUsers.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedUser: goLinkUser,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n        activityA: `getAllUsers?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchUsers = (event) => {\n  event.preventDefault();\n  console.log('...searching users...');\n  this.context.setUserAlert('...searching users...')\n  // this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'age' ||\n      field === 'dob' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'attendance.date' ||\n      field === 'leave.startDate' ||\n      field === 'leave.endDate'\n    ) {\n      regex = false;\n  }\n  console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getUsersByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getUsersByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getUsersByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getUsersByField);\n      }\n\n      let responseAlert = '...staff search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchUsers: resData.data.getUsersByFieldRegex,\n          activityA: `getUsersByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n        this.context.activityUser = resData.data.getUsersByFieldRegex;\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchUsers: resData.data.getUsersByField,\n          activityA: `getUsersByField?activityId:${activityId},userId:${userId}`\n        });\n        this.context.activityUser = resData.data.getUsersByField;\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nshowDetails = (args) => {\n  this.setState({\n    showDetails: true,\n    selectedUser: args,\n    tabKey: 'detail'\n  })\n  this.props.selectUser(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nupdateUser = (args) => {\n  console.log('...updating user...');\n  this.setState({\n    selectedUser: args\n  })\n  this.props.selectUser(args);\n}\n\ndeleteUser = (args) => {\n  console.log('...deleteing user...',args);\n  this.context.setUserAlert('...deleteing user...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteUserById(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\"\n      )\n      {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserById);\n      let responseAlert = '...delete user success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteUserById?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllUsers({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n        <h1>Staff: {this.state.showDetails === true &&\n                      this.state.selectedUser &&\n                      this.state.tabKey === 'detail' && (\n                            this.state.selectedUser.name\n                          )}</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col md={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterUserForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.users && (\n            <Col md={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content>\n                <Tab.Pane eventKey=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                  <UserList\n                    filter={this.state.filter}\n                    users={this.state.users}\n                    authId={this.context.activityId}\n                    canDelete={this.state.canDelete}\n                    showDetails={this.showDetails}\n                    onDelete={this.deleteUser}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Staff</h3>\n                  <Row className=\"userSearchRow\">\n                    <UserSearchForm\n                      onConfirm={this.searchUsers}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchUsers && (\n                      <Button variant=\"outline-primary\" className=\"centered_btn\" onClick={this.toggleSideCol}>Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchUsers && (\n                      <SearchUserList\n                        filter={this.state.filter}\n                        users={this.state.searchUsers}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedUser && (\n                  <UserDetail\n                    user={this.state.selectedUser}\n                    updateUser={this.updateUser}\n                  />\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default StaffPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './createForms.css';\nimport moment from 'moment';\n\nconst CreatePatientForm = (props) => {\n  const today = moment().format('YYYY-MM-DD')\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Create Patient Form</h1>\n    <p> \"*\" denotes required fields...</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"active\">\n        <Form.Label>Active</Form.Label>\n        <Form.Control as=\"select\">\n          <option>false</option>\n          <option>true</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>Title *</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Mr</option>\n          <option>Mrs</option>\n          <option>Ms</option>\n          <option>Dr</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"name\">\n        <Form.Label>name *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"username\">\n        <Form.Label>username *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"username\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"dob\">\n        <Form.Label>dob *</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"gender\">\n        <Form.Label>gender *</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Female</option>\n          <option>Male</option>\n          <option>Prefer Not to Say</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"role\">\n        <Form.Label>role </Form.Label>\n        <Form.Control type=\"text\" value=\"standard patient\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"contactEmail\">\n        <Form.Label>email *</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"contactPhone\">\n        <Form.Label>phone *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760001234\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"contactPhone2\">\n        <Form.Label>phone2</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760005678\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressNumber\">\n        <Form.Label>addressNumber</Form.Label>\n        <Form.Control type=\"number\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressStreet\">\n        <Form.Label>addressStreet</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressTown\">\n        <Form.Label>addressTown</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressCity\">\n        <Form.Label>addressCity</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressParish\">\n        <Form.Label>addressParish</Form.Label>\n        <Form.Control as=\"select\">\n          <option>none</option>\n          <option>Hanover</option>\n          <option>St. Elizabeth</option>\n          <option>St. James</option>\n          <option>Trelawny</option>\n          <option>Westmoreland</option>\n          <option>Clarendon</option>\n          <option>Manchester</option>\n          <option>St. Ann</option>\n          <option>St. Catherine</option>\n          <option>St. Mary</option>\n          <option>Kingston</option>\n          <option>St. Andrew</option>\n          <option>Portland</option>\n          <option>St. Thomas</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressCountry\">\n        <Form.Label>addressCountry</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressPostalCode\">\n        <Form.Label>addressPostalCode</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"referralDate\">\n        <Form.Label>referralDate: YYYY-MM-DD</Form.Label>\n        <Form.Control type=\"date\" placeholder={today}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"referralReason\">\n        <Form.Label>referralReason</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"referralReason\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"referralPhysicianName\">\n        <Form.Label>referralPhysicianName</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"referralPhysicianName\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"referralPhysicianPhone\">\n        <Form.Label>referralPhysicianPhone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"referralPhysicianPhone\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"referralPhysicianEmail\">\n        <Form.Label>referralPhysicianEmail</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"referralPhysicianAddress\">\n        <Form.Label>referralPhysicianAddress</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"referralPhysicianAddress\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"attendingPhysician\">\n        <Form.Label>attendingPhysician</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"attendingPhysician\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"occupationRole\">\n        <Form.Label>occupationRole</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"occupationRole\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"occupationEmployerName\">\n        <Form.Label>occupationEmployerName</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"occupationEmployerName\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"occupationEmployerEmail\">\n        <Form.Label>occupationEmployerEmail</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"occupationEmployerPhone\">\n        <Form.Label>occupationEmployerPhone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"occupationEmployerPhone\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"occupationEmployerAddress\">\n        <Form.Label>occupationEmployerAddress</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"occupationEmployerAddress\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"occupationEmployerAddress\">\n        <Form.Label>occupationEmployerAddress</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"occupationEmployerAddress\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"insuranceCompany\">\n        <Form.Label>insuranceCompany</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"insuranceCompany\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"insurancePolicyNumber\">\n        <Form.Label>insurancePolicyNumber</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"insurancePolicyNumber\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"insuranceExpiryDate\">\n        <Form.Label>insuranceExpiryDate</Form.Label>\n        <Form.Control type=\"date\" placeholder={today}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"insuranceDescription\">\n        <Form.Label>insuranceDescription</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"insuranceDescription\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"insuranceSubscriberCompany\">\n        <Form.Label>insuranceSubscriberCompany</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"insuranceSubscriberCompany\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"insuranceSubscriberDescription\">\n        <Form.Label>insuranceSubscriberDescription</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"insuranceSubscriberDescription\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Create</Button>\n      <Button variant=\"outline-danger\" className=\"loginFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default CreatePatientForm;\n","import React from 'react';\n\nimport PatientItem from '../../items/patient/PatientItem';\nimport './UserList.css';\n\nconst SearchPatientList = props => {\n\n  const {...filter} = props.filter;\n  let patients2 = props.patients;\n  let propsPatients = [];\n\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'loggedIn') {\n    propsPatients = patients2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field === 'patient' && filter.key === 'active') {\n    propsPatients = patients2.filter(x => x.active === filter.value);\n  }\n\n  if (filter.field !== 'patient') {\n    propsPatients = patients2;\n  }\n\n  let count = 0;\n\n  const patients = propsPatients.map(patient => {\n\n    count = propsPatients.indexOf(patient)+1;\n\n    return (\n      <PatientItem\n        key={count}\n        patient={patient}\n        canDelete={props.canDelete}\n        showDetails={props.showDetails}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{patients}</ul>;\n};\n\nexport default SearchPatientList;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { PDFViewer, Page, Text, View, Document, StyleSheet, Image } from '@react-pdf/renderer';\nimport moment from 'moment';\nimport loadingGif from '../../assets/loading.gif';\nimport letterHead from '../../assets/testLetterhead.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport \"./pdfview.css\"\n\n\nconst styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35,\n  },\n  title: {\n    fontSize: 24,\n    textAlign: 'center',\n    fontFamily: 'Times-Roman'\n  },\n  author: {\n    fontSize: 12,\n    textAlign: 'center',\n    marginBottom: 40,\n  },\n  subtitle: {\n    fontSize: 18,\n    margin: 12,\n    fontFamily: 'Times-Roman'\n  },\n  text: {\n    margin: 12,\n    fontSize: 14,\n    textAlign: 'justify',\n    fontFamily: 'Times-Roman'\n  },\n  image: {\n    marginVertical: 15,\n    marginHorizontal: 100,\n  },\n  header: {\n    fontSize: 12,\n    marginBottom: 20,\n    textAlign: 'center',\n    color: 'grey',\n  },\n  pageNumber: {\n    position: 'absolute',\n    fontSize: 12,\n    bottom: 30,\n    left: 0,\n    right: 0,\n    textAlign: 'center',\n    color: 'grey',\n  },\n\n  page: {\n    flexDirection: 'row',\n    backgroundColor: '#E4E4E4'\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1\n  }\n\n});\n\n\n\nconst PdfView = (props) =>{\n\nreturn (\n  <div className=\"pdfViewBg\">\n    <div className=\"pdfView\">\n\n    <Col className=\"pdfViewClose\">\n    <Button variant=\"outline-danger\" size=\"sm\" class=\"centered_btn\" onClick={props.close}>X</Button>\n    </Col>\n    <Col className=\"pdfViewCol\">\n    <h3>Document Generator</h3>\n    </Col>\n\n    <PDFViewer className=\"viewer\">\n\n    {props.pdfViewData.type === 'test' && (\n      <Document>\n        <Page style={styles.body}>\n          <Image\n            style={styles.image}\n            src={letterHead}\n          />\n\n          <Text style={styles.title}>{props.pdfViewData.type}</Text>\n          <Text style={styles.author}>Miguel de Cervantes</Text>\n\n\n          <Text style={styles.subtitle}>\n            Capítulo I: Que trata de la condición y ejercicio del famoso hidalgo D.\n            Quijote de la Mancha\n          </Text>\n          <Text style={styles.text}>\n            En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha\n            mucho tiempo que vivía un hidalgo de los de lanza en astillero, adarga\n            antigua, rocín flaco y galgo corredor. Una olla de algo más vaca que\n            carnero, salpicón las más noches, duelos y quebrantos los sábados,\n            lentejas los viernes, algún palomino de añadidura los domingos,\n            consumían las tres partes de su hacienda. El resto della concluían sayo\n            de velarte, calzas de velludo para las fiestas con sus pantuflos de lo\n            mismo, los días de entre semana se honraba con su vellori de lo más\n            fino. Tenía en su casa una ama que pasaba de los cuarenta, y una sobrina\n            que no llegaba a los veinte, y un mozo de campo y plaza, que así\n            ensillaba el rocín como tomaba la podadera. Frisaba la edad de nuestro\n            hidalgo con los cincuenta años, era de complexión recia, seco de carnes,\n            enjuto de rostro; gran madrugador y amigo de la caza. Quieren decir que\n            tenía el sobrenombre de Quijada o Quesada (que en esto hay alguna\n            diferencia en los autores que deste caso escriben), aunque por\n            conjeturas verosímiles se deja entender que se llama Quijana; pero esto\n            importa poco a nuestro cuento; basta que en la narración dél no se salga\n            un punto de la verdad\n          </Text>\n          <Text style={styles.text}>\n            _________________________________________________________\n          </Text>\n          <Text style={styles.text}>\n            Con estas y semejantes razones perdía el pobre caballero el juicio, y\n            desvelábase por entenderlas, y desentrañarles el sentido, que no se lo\n            sacara, ni las entendiera el mismo Aristóteles, si resucitara para sólo\n            ello. No estaba muy bien con las heridas que don Belianis daba y\n            recibía, porque se imaginaba que por grandes maestros que le hubiesen\n            curado, no dejaría de tener el rostro y todo el cuerpo lleno de\n            cicatrices y señales; pero con todo alababa en su autor aquel acabar su\n            libro con la promesa de aquella inacabable aventura, y muchas veces le\n            vino deseo de tomar la pluma, y darle fin al pie de la letra como allí\n            se promete; y sin duda alguna lo hiciera, y aun saliera con ello, si\n            otros mayores y continuos pensamientos no se lo estorbaran. Tuvo muchas\n            veces competencia con el cura de su lugar (que era hombre docto graduado\n            en Sigüenza), sobre cuál había sido mejor caballero, Palmerín de\n            Inglaterra o Amadís de Gaula; mas maese Nicolás, barbero del mismo\n            pueblo, decía que ninguno llegaba al caballero del Febo, y que si alguno\n            se le podía comparar, era don Galaor, hermano de Amadís de Gaula, porque\n            tenía muy acomodada condición para todo; que no era caballero\n            melindroso, ni tan llorón como su hermano, y que en lo de la valentía no\n            le iba en zaga.\n          </Text>\n          <Text style={styles.text}>\n            En resolución, él se enfrascó tanto en su lectura, que se le pasaban las\n            noches leyendo de claro en claro, y los días de turbio en turbio, y así,\n            del poco dormir y del mucho leer, se le secó el cerebro, de manera que\n            vino a perder el juicio. Llenósele la fantasía de todo aquello que leía\n            en los libros, así de encantamientos, como de pendencias, batallas,\n            desafíos, heridas, requiebros, amores, tormentas y disparates\n            imposibles, y asentósele de tal modo en la imaginación que era verdad\n            toda aquella máquina de aquellas soñadas invenciones que leía, que para\n            él no había otra historia más cierta en el mundo.\n          </Text>\n          <Text style={styles.subtitle} break>\n            Capítulo II: Que trata de la primera salida que de su tierra hizo el\n            ingenioso Don Quijote\n          </Text>\n\n          <Text style={styles.text}>\n            Hechas, pues, estas prevenciones, no quiso aguardar más tiempo a poner\n            en efeto su pensamiento, apretándole a ello la falta que él pensaba que\n            hacía en el mundo su tardanza, según eran los agravios que pensaba\n            deshacer, tuertos que enderezar, sinrazones que emendar y abusos que\n            mejorar y deudas que satisfacer. Y así, sin dar parte a persona alguna\n            de su intención y sin que nadie le viese, una mañana, antes del día, que\n            era uno de los calurosos del mes de Julio, se armó de todas sus armas,\n            subió sobre Rocinante, puesta su mal compuesta celada, embrazó su\n            adarga, tomó su lanza y por la puerta falsa de un corral salió al campo\n            con grandísimo contento y alborozo de ver con cuánta facilidad había\n            dado principio a su buen deseo. Mas apenas se vio en el campo cuando le\n            asaltó un pensamiento terrible, y tal, que por poco le hiciera dejar la\n            comenzada empresa; y fue que le vino a la memoria que no era armado\n            caballero, y que, conforme a ley de caballería, ni podía ni debía tomar\n            armas con ningún caballero; y puesto que lo fuera, había de llevar armas\n            blancas, como novel caballero, sin empresa en el escudo, hasta que por\n            su esfuerzo la ganase. Estos pensamientos le hicieron titubear en su\n            propósito; mas pudiendo más su locura que otra razón alguna, propuso de\n            hacerse armar caballero del primero que topase, a imitación de otros\n            muchos que así lo hicieron, según él había leído en los libros que tal\n            le tenían. En lo de las armas blancas, pensaba limpiarlas de manera, en\n            teniendo lugar, que lo fuesen más que un arminio; y con esto se quietó18\n            y prosiguió su camino, sin llevar otro que aquel que su caballo quería,\n            creyendo que en aquello consistía la fuerza de las aventuras\n          </Text>\n          <Text style={styles.text}>\n            Yendo, pues, caminando nuestro flamante aventurero, iba hablando consigo\n            mesmo, y diciendo: —¿Quién duda, sino que en los venideros tiempos,\n            cuando salga a luz la verdadera historia de mis famosos hechos, que el\n            sabio que los escribiere no ponga, cuando llegue a contar esta mi\n            primera salida tan de mañana, desta manera?: Apenas había el rubicundo\n            Apolo tendido por la faz de la ancha y espaciosa tierra las doradas\n            hebras de sus hermosos cabellos, y apenas los pequeños y pintados\n            pajarillos con sus arpadas lenguas habían saludado con dulce y meliflua\n            armonía la venida de la rosada Aurora, que, dejando la blanda cama del\n            celoso marido, por las puertas y balcones del manchego horizonte a los\n            mortales se mostraba, cuando el famoso caballero don Quijote de la\n            Mancha, dejando las ociosas plumas, subió sobre su famoso caballo\n            Rocinante y comenzó a caminar por el antiguo y conocido Campo de\n            Montiel.\n          </Text>\n          <Text style={styles.text}>\n            Y era la verdad que por él caminaba; y añadió diciendo: —Dichosa edad y\n            siglo dichoso aquel adonde saldrán a luz las famosas hazañas mías,\n            dignas de entallarse en bronces, esculpirse en mármoles y pintarse en\n            tablas, para memoria en lo futuro. ¡Oh tú, sabio encantador, quienquiera\n            que seas, a quien ha de tocar el ser coronista desta peregrina historia!\n            Ruégote que no te olvides de mi buen Rocinante, compañero eterno mío en\n            todos mis caminos y carreras.\n          </Text>\n          <Text style={styles.text}>\n            Luego volvía diciendo, como si verdaderamente fuera enamorado: —¡Oh\n            princesa Dulcinea, señora deste cautivo corazón! Mucho agravio me\n            habedes fecho en despedirme y reprocharme con el riguroso afincamiento\n            de mandarme no parecer ante la vuestra fermosura. Plégaos, señora, de\n            membraros deste vuestro sujeto corazón, que tantas cuitas por vuestro\n            amor padece. Con estos iba ensartando otros disparates, todos al modo de\n            los que sus libros le habían enseñado, imitando en cuanto podía su\n            lenguaje. Con esto caminaba tan despacio, y el sol entraba tan apriesa y\n            con tanto ardor, que fuera bastante a derretirle los sesos, si algunos\n            tuviera\n          </Text>\n          <Text style={styles.text}>\n            Casi todo aquel día caminó sin acontecerle cosa que de contar fuese, de\n            lo cual se desesperaba, porque quisiera topar luego luego con quien\n            hacer experiencia del valor de su fuerte brazo. Autores hay que dicen\n            que la primera aventura que le avino fue la del Puerto Lápice, otros\n            dicen que la de los molinos de viento; pero lo que yo he podido\n            averiguar en este caso, y lo que he hallado escrito en los anales de la\n            Mancha, es que él anduvo todo aquel día, y, al anochecer, su rocín y él\n            se hallaron cansados y muertos de hambre, y que, mirando a todas partes\n            por ver si descubriría algún castillo o alguna majada de pastores donde\n            recogerse y adonde pudiese remediar su mucha hambre y necesidad, vio, no\n            lejos del camino por donde iba, una venta,que fue como si viera una\n            estrella que, no a los portales, sino a los alcázares de su redención le\n            encaminaba. Diose priesa a caminar, y llegó a ella a tiempo que\n            anochecía.\n          </Text>\n        </Page>\n      </Document>\n    )}\n\n    {props.pdfViewData.type === 'referral' && (\n      <Document>\n        <Page style={styles.body}>\n          <Image\n            style={styles.image}\n            src={letterHead}\n          />\n\n          <Text style={styles.title}>{props.pdfViewData.type}</Text>\n          <Text style={styles.author}>Miguel de Cervantes</Text>\n\n\n          <Text style={styles.subtitle}>\n            Capítulo I: Que trata de la condición y ejercicio del famoso hidalgo D.\n            Quijote de la Mancha\n          </Text>\n          <Text style={styles.text}>\n            En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha\n            mucho tiempo que vivía un hidalgo de los de lanza en astillero, adarga\n            antigua, rocín flaco y galgo corredor.\n          </Text>\n          <Text style={styles.text}>\n            _________________________________________________________\n          </Text>\n          <Text style={styles.text}>\n            Con estas y semejantes razones perdía el pobre caballero el juicio, y\n            desvelábase por entenderlas, y desentrañarles el sentido, que no se lo\n            sacara, ni las entendiera el mismo\n          </Text>\n          <Text style={styles.text}>\n            En resolución, él se enfrascó tanto en su lectura, que se le pasaban las\n            noches leyendo de claro en claro, y los días de turbio en turbio, y así,\n            del poco dormir y del mucho leer, se\n          </Text>\n\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'admissionReminder' && (\n      <Document>\n        <Page style={styles.body}>\n          <Image\n            style={styles.image}\n            src={letterHead}\n          />\n\n          <Text style={styles.title}>{props.pdfViewData.type}</Text>\n          <Text style={styles.author}>Miguel de Cervantes</Text>\n\n\n          <Text style={styles.subtitle}>\n            Capítulo I: Que trata de la condición y ejercicio del famoso hidalgo D.\n            Quijote de la Mancha\n          </Text>\n          <Text style={styles.text}>\n            En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha\n            mucho tiempo que vivía un hidalgo de los de lanza en astillero, adarga\n            antigua, rocín flaco y galgo corredor.\n          </Text>\n          <Text style={styles.text}>\n            _________________________________________________________\n          </Text>\n          <Text style={styles.text}>\n            Es, pues, de saber, que este sobredicho hidalgo, los ratos que estaba\n            ocioso (que eran los más del año) se daba a leer libros de caballerías\n            con tanta afición y gusto, que olvidó\n          </Text>\n\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'sickNote' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'insurance' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'diagnosisTesting' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'prescription' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'treatmentConsent' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'treatmentInstructions' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n    {props.pdfViewData.type === 'unfitToFly' && (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>{props.pdfViewData.type}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    )}\n\n    </PDFViewer>\n\n    </div>\n  </div>\n)\n\n}\n\nexport default PdfView;\n","import React from 'react';\n\nimport AddressItem from '../../items/user/AddressItem';\nimport './UserList.css';\n\nconst PatientAddressList = props => {\n\n  const {...filter} = props.filter;\n  let addresses2 = props.addresses;\n  let propsAddresses = [];\n\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number > b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number < b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street > b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street < b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town > b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town < b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city > b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city < b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish > b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish < b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country > b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country < b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode > b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode < b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'primary') {\n    propsAddresses = addresses2.filter(x => x.primary === filter.value);\n  }\n  if (filter.field !== 'address') {\n    propsAddresses = addresses2;\n  }\n\n  let count = 0;\n\n  const addresses = propsAddresses.map(address => {\n\n    count = propsAddresses.indexOf(address)+1;\n\n    return (\n      <AddressItem\n        key={count}\n        address={address}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        makePrimary={props.makePrimary}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{addresses}</ul>;\n};\n\nexport default PatientAddressList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst NextOfKinItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Name: <span className=\"bold\">{props.nextOfKin.name}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Relation: <span className=\"bold\">{props.nextOfKin.relation}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.nextOfKin.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Relation: <span className=\"bold\">{props.nextOfKin.relation}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Email: <span className=\"bold\">{props.nextOfKin.contact.email}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Phone: <span className=\"bold\">{props.nextOfKin.contact.phone}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Phone2: <span className=\"bold\">{props.nextOfKin.contact.phone2}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.nextOfKin)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default NextOfKinItem;\n","import React from 'react';\n\nimport NextOfKinItem from '../../items/patient/NextOfKinItem';\nimport './UserList.css';\n\nconst PatientNextOfKinList = props => {\n\n  const {...filter} = props.filter;\n  let nextOfKin2 = props.nextOfKin;\n  let propsNextOfKin = [];\n\n  if (filter.field === 'nextOfKin' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'nextOfKin' && filter.key === 'name' && filter.value === 'Descending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'nextOfKin' && filter.key === 'relation' && filter.value === 'Ascending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.relation > b.relation) ? 1 : -1);\n  }\n  if (filter.field === 'nextOfKin' && filter.key === 'relation' && filter.value === 'Descending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.relation < b.relation) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'nextOfKin') {\n    propsNextOfKin = nextOfKin2;\n  }\n\n  let count = 0;\n\n  const nextOfKin = propsNextOfKin.map(nextOfKinItem => {\n    // console.log('nok',nextOfKinItem);\n    count = propsNextOfKin.indexOf(nextOfKinItem)+1;\n\n    return (\n      <NextOfKinItem\n        key={count}\n        nextOfKin={nextOfKinItem}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        makePrimary={props.makePrimary}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{nextOfKin}</ul>;\n};\n\nexport default PatientNextOfKinList;\n","import React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst AttachmentItem = props => {\n\n  const [deleteState, setDeleteState] = useState(false);\n  const handleDeleteStateChange = () => {\n    if (deleteState === true) {\n      setDeleteState(false);\n    }\n    if (deleteState === false) {\n      setDeleteState(true);\n    }\n   }\n\n  return (\n    <li key={props.key} className=\"\">\n\n        <Row>\n          <p>\n            <span className=\"bold\">{props.attachment}</span>\n          </p>\n          {props.canDelete === true && (\n            <FontAwesomeIcon icon={faEraser} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {props.canDelete === true &&\n             deleteState === true && (\n            <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, {\n              type: props.type,\n              attachment: props.attachment,\n              item: props.item\n            })}>Delete</Button>\n          )}\n        </Row>\n\n    </li>\n  )\n}\n\nexport default AttachmentItem;\n","import React from 'react';\n\nimport AttachmentItem from '../../items/patient/AttachmentItem';\nimport './UserList.css';\n\nconst PatientAttachmentList = props => {\n\n  let count = 0;\n\n  const attachments = props.attachments.map(attachment => {\n    count = props.attachments.indexOf(attachment)+1;\n\n    return (\n      <AttachmentItem\n        key={count}\n        item={props.item}\n        attachment={attachment}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        type={props.type}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{attachments}</ul>;\n};\n\nexport default PatientAttachmentList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './PatientItem.css';\n\nconst AllergyItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.allergy.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.allergy.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.allergy.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.allergy.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'allergy',data:props.allergy})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.allergy}\n                attachments={props.allergy.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"allergy\"\n              />\n              </li>\n              <li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              </li>\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.allergy)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AllergyItem;\n","import React from 'react';\n\nimport AllergyItem from '../../items/patient/AllergyItem';\nimport './UserList.css';\n\nconst PatientAllergyList = props => {\n\n  const {...filter} = props.filter;\n  let allergies2 = props.allergies;\n  let propsAllergies = [];\n\n  if (filter.field === 'allergy' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsAllergies = allergies2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'allergy' && filter.key === 'title' && filter.value === 'Descending') {\n    propsAllergies = allergies2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'allergy' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsAllergies = allergies2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'allergy' && filter.key === 'type' && filter.value === 'Descending') {\n    propsAllergies = allergies2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'allergy') {\n    propsAllergies = allergies2;\n  }\n\n  let count = 0;\n\n  const allergies = propsAllergies.map(allergy => {\n    count = propsAllergies.indexOf(allergy)+1;\n\n    return (\n      <AllergyItem\n        key={count}\n        allergy={allergy}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{allergies}</ul>;\n};\n\nexport default PatientAllergyList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './PatientItem.css';\n\nconst MedicationItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.medication.title}</span>\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.medication.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.medication.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.medication.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'medication',data:props.medication})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.medication}\n                attachments={props.medication.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"medication\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.medication)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default MedicationItem;\n","import React from 'react';\n\nimport MedicationItem from '../../items/patient/MedicationItem';\nimport './UserList.css';\n\nconst PatientMedicationList = props => {\n\n  const {...filter} = props.filter;\n  let medication2 = props.medication;\n  let propsMedication = [];\n\n  if (filter.field === 'medication' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsMedication = medication2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'medication' && filter.key === 'title' && filter.value === 'Descending') {\n    propsMedication = medication2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'medication' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsMedication = medication2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'medication' && filter.key === 'type' && filter.value === 'Descending') {\n    propsMedication = medication2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'medication') {\n    propsMedication = medication2;\n  }\n\n  let count = 0;\n\n  const medication = propsMedication.map(medicationItem => {\n    count = propsMedication.indexOf(medicationItem)+1;\n\n    return (\n      <MedicationItem\n        key={count}\n        medication={medicationItem}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{medication}</ul>;\n};\n\nexport default PatientMedicationList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst ImageItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Link: <span className=\"bold\">{props.image.path}</span>\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.image.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.image.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.image.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.image)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n\n};\n\nexport default ImageItem;\n","import React from 'react';\n\nimport ImageItem from '../../items/patient/ImageItem';\nimport './UserList.css';\n\nconst PatientImageList = props => {\n\n  const {...filter} = props.filter;\n  let images2 = props.images;\n  let propsImages = [];\n\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'image') {\n    propsImages = images2;\n  }\n\n  let count = 0;\n\n  const images = propsImages.map(image => {\n\n    count = propsImages.indexOf(image)+1;\n\n    return (\n      <ImageItem\n        key={count}\n        image={image}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"imageList\">{images}</ul>;\n};\n\nexport default PatientImageList;\n","import React from 'react';\n\nimport FileItem from '../../items/patient/FileItem';\nimport './UserList.css';\n\nconst UserFileList = props => {\n\n  const {...filter} = props.filter;\n  let files2 = props.files;\n  let propsFiles = [];\n\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'file') {\n    propsFiles = files2;\n  }\n\n  let count = 0;\n\n  const files = propsFiles.map(file => {\n\n    count = propsFiles.indexOf(file)+1;\n\n    return (\n      <FileItem\n        key={count}\n        file={file}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{files}</ul>;\n};\n\nexport default UserFileList;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst NoteItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Note: <span className=\"bold\">{props.note}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.note)}>Delete</Button>\n              )}\n            </Row>\n            )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\n\nimport NoteItem from '../../items/patient/NoteItem';\nimport './UserList.css';\n\nconst PatientNoteList = props => {\n\n  const {...filter} = props.filter;\n  let notes2 = props.notes;\n  let propsNotes = [];\n\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Ascending') {\n    propsNotes = notes2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Descending') {\n    propsNotes = notes2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'note') {\n    propsNotes = notes2;\n  }\n\n  let count = 0;\n\n  const notes = propsNotes.map(note => {\n\n    count = propsNotes.indexOf(note)+1;\n\n    return (\n      <NoteItem\n        key={count}\n        note={note}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{notes}</ul>;\n};\n\nexport default PatientNoteList;\n","import React, { useState } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst TagItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Tag: <span className=\"bold\">{props.tag}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.tag)}>Delete</Button>\n              )}\n            </Row>\n            )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default TagItem;\n","import React from 'react';\n\nimport TagItem from '../../items/patient/TagItem';\nimport './UserList.css';\n\nconst PatientTagList = props => {\n\n  const {...filter} = props.filter;\n  let tags2 = props.tags;\n  let propsTags = [];\n\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Ascending') {\n    propsTags = tags2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Descending') {\n    propsTags = tags2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'tag') {\n    propsTags = tags2;\n  }\n\n  let count = 0;\n\n  const tags = propsTags.map(tag => {\n\n    count = propsTags.indexOf(tag)+1;\n\n    return (\n      <TagItem\n        key={count}\n        tag={tag}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{tags}</ul>;\n};\n\nexport default PatientTagList;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './visitItem.css';\n\nconst VisitItem = props => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n  }\n\n  const [deleteState, setDeleteState] = useState(false);\n  const handleDeleteStateChange = () => {\n    if (deleteState === true) {\n      setDeleteState(false);\n    }\n    if (deleteState === false) {\n      setDeleteState(true);\n    }\n   }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Date: <span className=\"bold\">{moment.unix(props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Time: <span className=\"bold\">{props.visit.time}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.visit.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {!props.patientPage && (\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.visit)}/>\n          )}\n\n          {props.patientPage && (\n            <Link\n              to={{\n                pathname: \"/visits\",\n                state: {visit: props.visit._id}\n              }}\n            >\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n            </Link>\n          )}\n\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Id: <span className=\"bold\">{props.visit._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                type: <span className=\"bold\">{props.visit.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                subType: <span className=\"bold\">{props.visit.subType}</span>\n              </Card.Text>\n              </li>\n              {!props.patientPage && (\n                <li>\n                <Card.Text className=\"cardText\">\n                  Patient:\n                </Card.Text>\n                </li>\n              )}\n              {!props.patientPage && (\n                <li>\n                <Card.Text className=\"cardText\">\n                  Id: <span className=\"bold\">{props.visit.patient._id}</span>\n                </Card.Text>\n                </li>\n              )}\n              {!props.patientPage && (\n                <li>\n                <Card.Text className=\"cardText\">\n                  Name: <span className=\"bold\">{props.visit.patient.name}</span>\n                </Card.Text>\n                </li>\n              )}\n\n\n            </ul>\n            </Row>\n          )}\n          {deleteState === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.visit)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default VisitItem;\n","import React from 'react';\n\nimport VisitItem from '../../items/visit/VisitItem';\nimport './visitList.css';\n\nconst VisitList = props => {\n\n  const {...filter} = props.filter;\n  let visits2 = props.visits;\n  let propsVisits = [];\n\n  if (filter.field === 'visit' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'title' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'date' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'time' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.time > b.time) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'time' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.time < b.time) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'type' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'subType' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.subType > b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'subType' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.subType < b.subType) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'visit') {\n    propsVisits = visits2;\n  }\n\n  let count = 0;\n\n  const visits = propsVisits.map(visit => {\n\n    count = propsVisits.indexOf(visit)+1;\n\n    return (\n      <VisitItem\n        key={count}\n        visit={visit}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        patientPage={props.patientPage}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{visits}</ul>;\n};\n\nexport default VisitList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAllergyForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"allergy\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>type</option>\n          <option>title</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAllergyForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterMedicationForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"medication\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterMedicationForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterNextOfKinForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"nextOfKin\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>relation</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterNextOfKinForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterVisitForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"visit\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>title</option>\n          <option>type</option>\n          <option>subType</option>\n          <option>date</option>\n          <option>time</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterVisitForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterTagForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"tag\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>tag</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterTagForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst UpdatePatientSingleFieldForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Update Single Field</h4>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>field</Form.Label>\n        <Form.Control type=\"text\" value={props.field}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"query... date = YYY-MM-DD!!\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default UpdatePatientSingleFieldForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddTagForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Tags</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"tags\">\n        <Form.Label>tags</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"tag,tag,tag,tag\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddTagForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddNextOfKinForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Next of Kin</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"name\">\n        <Form.Label>name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"relation\">\n        <Form.Label>relation</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Mother</option>\n          <option>Father</option>\n          <option>Brother</option>\n          <option>Sister</option>\n          <option>Grandfather</option>\n          <option>Grandmother</option>\n          <option>Uncle</option>\n          <option>Aunt</option>\n          <option>Niece</option>\n          <option>Uncle</option>\n          <option>Cousin</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n\n    <Form.Row>\n    <Form.Group as={Col} controlId=\"email\">\n      <Form.Label>email</Form.Label>\n      <Form.Control type=\"email\" placeholder=\"relation@nextOfKin.com\"/>\n    </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"phone\">\n        <Form.Label>phone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+187600000\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"phone2\">\n        <Form.Label>phone2</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+187600000\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddNextOfKinForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddAllergyForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Allergy</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Food</option>\n          <option>Drug</option>\n        </Form.Control>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row>\n    <Form.Group as={Col} controlId=\"description\">\n      <Form.Label>description</Form.Label>\n      <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n    </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAllergyForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddMedicationForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Medication</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddMedicationForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddAttachmentForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Attachment</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"attachment\">\n        <Form.Label>attachment</Form.Label>\n        <Form.Control type=\"textarea\" placeholder=\"file link address\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAttachmentForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\nimport S3 from 'react-aws-s3';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\nimport PdfView from '../pdfView/PdfView';\n\nimport PatientAddressList from '../lists/patient/PatientAddressList';\nimport PatientNextOfKinList from '../lists/patient/PatientNextOfKinList'\nimport PatientAllergyList from '../lists/patient/PatientAllergyList'\nimport PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientImageList from '../lists/patient/PatientImageList'\nimport PatientFileList from '../lists/patient/PatientFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport PatientNoteList from '../lists/patient/PatientNoteList'\nimport PatientTagList from '../lists/patient/PatientTagList'\nimport VisitList from '../lists/visit/VisitList'\n\nimport FilterAddressForm from '../forms/filter/FilterAddressForm';\nimport FilterAllergyForm from '../forms/filter/FilterAllergyForm';\nimport FilterMedicationForm from '../forms/filter/FilterMedicationForm';\nimport FilterNextOfKinForm from '../forms/filter/FilterNextOfKinForm';\nimport FilterVisitForm from '../forms/filter/FilterVisitForm';\nimport FilterImageForm from '../forms/filter/FilterImageForm';\nimport FilterFileForm from '../forms/filter/FilterFileForm';\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../forms/filter/FilterNoteForm';\nimport FilterTagForm from '../forms/filter/FilterTagForm';\n\nimport UpdatePatientSingleFieldForm from '../forms/add/UpdatePatientSingleFieldForm';\nimport AddAddressForm from '../forms/add/AddAddressForm';\nimport AddAttendanceForm from '../forms/add/AddAttendanceForm';\nimport AddLeaveForm from '../forms/add/AddLeaveForm';\nimport AddNoteForm from '../forms/add/AddNoteForm';\nimport AddTagForm from '../forms/add/AddTagForm';\nimport AddImageForm from '../forms/add/AddImageForm';\nimport AddFileForm from '../forms/add/AddFileForm';\nimport AddNextOfKinForm from '../forms/add/AddNextOfKinForm';\nimport AddAllergyForm from '../forms/add/AddAllergyForm';\nimport AddMedicationForm from '../forms/add/AddMedicationForm';\nimport AddAttachmentForm from '../forms/add/AddAttachmentForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass PatientDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    selectedPatient: this.props.patient,\n    addAttachmentForm: false,\n    addAttachmentArgs: null,\n    calendarAppointments: null,\n    calendarVisits: null,\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n    showPdfView: false,\n    showPdfData: {\n      type: null,\n      data: null\n    }\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.propsPatient = this.props.patient;\n  }\n\ncomponentDidMount () {\n  console.log('...patient details component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getPocketVars(seshStore);\n  }\n  this.setState({\n    selectedPatient: this.context.selectedPatient\n  })\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.parseForCalendar({\n    appointments: this.props.patient.appointments,\n    visits: this.props.patient.visits,\n  })\n\n}\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n    console.log('...retriving pocketVars..');\n    this.context.setUserAlert('...retriving pocketVars..')\n    const token = args.token;\n    const activityId = args.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")}\n          `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          this.setState({userAlert: resData.errors[0].message})\n        } else {\n          let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n          console.log('...retriving pocketVars success...');\n          this.context.setUserAlert('...retriving pocketVars success...')\n          this.setState({\n            pocketVars: pocketVarsParsed\n          });\n        }\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.context.setUserAlert(err);\n      });\n    }\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsubmitAddAddressForm = (event) => {\n  event.preventDefault();\n  console.log('...adding address...');\n  this.context.setUserAlert('...adding address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const number = event.target.number.value;\n  const street = event.target.street.value;\n  const town = event.target.town.value;\n  const city = event.target.city.value;\n  const parish = event.target.parish.value;\n  const country = event.target.country.value;\n  const postalCode = event.target.postalCode.value;\n\n  let requestBody = {\n    query: `\n      mutation {addPatientAddress(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          addressNumber:${number},\n          addressStreet:\"${street}\",\n          addressTown:\"${town}\",\n          addressCity:\"${city}\",\n          addressParish:\"${parish}\",\n          addressCountry:\"${country}\",\n          addressPostalCode:\"${postalCode}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientAddress);\n      let responseAlert = '...address add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientAddress)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientAddress,\n        activityA: `addPatientAddress?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAddress = (args) => {\n  console.log('...deleting address...');\n  this.context.setUserAlert('...deleting address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientAddress(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\",\n          addressPrimary:${args.primary}\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientAddress);\n      let responseAlert = '...address delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientAddress)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientAddress,\n        activityA: `deletePatientAddress?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsetAddressPrimary = (args) => {\n  console.log('...setting primary address...');\n  this.context.setUserAlert('...setting primary address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {setPatientAddressPrimary(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\"\n        })\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.setPatientAddressPrimary);\n      let responseAlert = '...address set primary success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.setPatientAddressPrimary)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.setPatientAddressPrimary,\n        activityA: `setPatientAddressPrimary?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.setPatientAddressPrimary;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddNextOfKinForm = (event) => {\n  event.preventDefault();\n  console.log('...add next of kin...');\n  this.context.setUserAlert('...adding next of kin...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const name = event.target.name.value;\n  const relation = event.target.relation.value;\n  const email = event.target.email.value;\n  const phone = event.target.phone.value;\n  const phone2 = event.target.phone2.value;\n\n  let requestBody = {\n    query: `\n      mutation {addPatientNextOfKin(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          nextOfKinName:\"${name}\",\n          nextOfKinRelation:\"${relation}\",\n          nextOfKinContactEmail:\"${email}\",\n          nextOfKinContactPhone1:\"${phone}\",\n          nextOfKinContactPhone2:\"${phone2}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientNextOfKin);\n      let responseAlert = '...next of kin add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientNextOfKin)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientNextOfKin,\n        activityA: `addPatientNextOfKin?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientNextOfKin;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNextOfKin = (args) => {\n  console.log('...deleting next of kin...');\n  this.context.setUserAlert('...deleting next of kin....')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientNextOfKin(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          nextOfKinName:\"${args.name}\",\n          nextOfKinRelation:\"${args.relation}\",\n          nextOfKinContactEmail:\"${args.contact.email}\",\n          nextOfKinContactPhone1:\"${args.contact.phone1}\",\n          nextOfKinContactPhone2:\"${args.contact.phone2}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      console.log('...resData...',resData.data.deletePatientNextOfKin);\n      let responseAlert = '...next of kin delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientNextOfKin)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientNextOfKin,\n        activityA: `deletePatientNextOfKin?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientNextOfKin;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddAllergyForm = (event) => {\n  event.preventDefault();\n  console.log('...add allergy...');\n  this.context.setUserAlert('...adding allergy...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/allergy/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'allergy attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'allergy attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientAllergy(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          allergyType:\"${type}\",\n          allergyTitle:\"${title}\",\n          allergyDescription:\"${description}\",\n          allergyAttachment:\"${file2Path}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientAllergy);\n      let responseAlert = '...allergy add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientAllergy)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientAllergy,\n        activityA: `addPatientAllergy?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientAllergy;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAllergy = (args) => {\n  console.log('...deleting allergy...');\n  this.context.setUserAlert('...deleting allergy...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientAllergy(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          allergyType:\"${args.type}\",\n          allergyTitle:\"${args.title}\",\n          allergyDescription:\"${args.description}\",\n          allergyAttachments:\"${args.attachments}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientAllergy);\n      let responseAlert = '...allergy delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientAllergy)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientAllergy,\n        activityA: `deletePatientAllergy?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientAllergy;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'patient/'+patientId+'/allergy/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/patient/'+patientId+'/allergy/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `allergy attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddMedicationForm = (event) => {\n  event.preventDefault();\n  console.log('...add medication...');\n  this.context.setUserAlert('...adding medication...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      type.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/medication/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'medication attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'medication attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'medication attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'medication attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientMedication(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          medicationType:\"${type}\",\n          medicationTitle:\"${title}\",\n          medicationDescription:\"${description}\",\n          medicationAttachment:\"${file2Path}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientMedication);\n      let responseAlert = '...medication add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientMedication)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientMedication,\n        activityA: `addPatientMedication?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientMedication;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteMedication = (args) => {\n  console.log('...deleting medication...');\n  this.context.setUserAlert('...deleting medication...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientMedication(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          medicationType:\"${args.type}\",\n          medicationTitle:\"${args.title}\",\n          medicationDescription:\"${args.description}\",\n          medicationAttachments:\"${args.attachments}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientMedication);\n      let responseAlert = '...medication delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientMedication)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientMedication,\n        activityA: `deletePatientMedication?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientMedication;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'patient/'+patientId+'/medication/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/patient/'+patientId+'/medication/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `medication attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartAddAttachment = (args) => {\n  console.log('...start add attachment...');\n  this.setState({\n    addAttachmentForm: true,\n    addAttachmentArgs: args\n  })\n}\ncancelAddAttachment = () => {\n  this.setState({\n    addAttachmentForm: false\n  })\n}\naddAttachment = (event) => {\n  event.preventDefault();\n  console.log('...adding attachment...');\n  this.context.setUserAlert('...adding attachment...');\n  this.setState({\n    isLoading: true,\n    addAttachmentForm: false\n  })\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n  let args = this.state.addAttachmentArgs;\n  let field = args.field;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/'+field+'/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading allergy attachment ...\")\n    console.log('...s3 uploading allergy attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: `${field} attachment`,\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: `${field} attachment`,\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: `${field} attachment`,\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: `${field} attachment`,\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let allergyTitle;\n  let allergyType;\n  let allergyDescription;\n  let allergyAttachment;\n  let medicationTitle;\n  let medicationType;\n  let medicationDescription;\n  let medicationAttachment;\n\n  if (field === 'allergy') {\n    allergyTitle = args.data.title;\n    allergyType = args.data.type;\n    allergyDescription = args.data.description;\n    allergyAttachment = file2Path;\n  }\n  if (field === 'medication') {\n    medicationTitle = args.data.title;\n    medicationType = args.data.type;\n    medicationDescription = args.data.description;\n    medicationAttachment = file2Path;\n  }\n\n  let requestBody;\n  if (field === 'allergy') {\n    requestBody = {\n      query: `\n        mutation {addPatientAllergyAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            allergyType:\"${allergyType}\",\n            allergyTitle:\"${allergyTitle}\",\n            allergyDescription:\"${allergyDescription}\",\n            allergyAttachment:\"${file2Path}\"\n          })\n          {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (field === 'medication') {\n    requestBody = {\n      query: `\n        mutation {addPatientMedicationAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            medicationType:\"${medicationType}\",\n            medicationTitle:\"${medicationTitle}\",\n            medicationDescription:\"${medicationDescription}\",\n            medicationAttachment:\"${file2Path}\"\n          })\n          {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n\n\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'allergy') {\n        // console.log('...resData...',resData.data.addPatientAllergyAttachment);\n      }\n      if (field === 'medication') {\n        // console.log('...resData...',resData.data.addPatientMedicationAttachment);\n      }\n\n      let responseAlert = '...add attachment success!...';\n      let error = null;\n\n      if (field === 'allergy') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'medication') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'allergy') {\n        this.props.updatePatient(resData.data.addPatientAllergyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.addPatientAllergyAttachment,\n          activityA: `addPatientAllergyAttachmentRegex?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n      if (field === 'medication') {\n        this.props.updatePatient(resData.data.addPatientMedicationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.addPatientMedicationAttachment,\n          activityA: `addPatientMedicationAttachment?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ndeleteAttachment = (args) => {\n  console.log('...deleting attachment...');\n  this.context.setUserAlert('...adding attachment...');\n  this.setState({isLoading: true})\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n\n  const field = args.type;\n  const attachment = args.attachment;\n  const item = args.item;\n\n  let requestBody;\n\n  if (field === 'allergy') {\n    let allergyType = item.type;\n    let allergyTitle = item.title;\n    let allergyDescription = item.description;\n    let allergyAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deletePatientAllergyAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            allergyType:\"${allergyType}\",\n            allergyTitle:\"${allergyTitle}\",\n            allergyDescription:\"${allergyDescription}\",\n            allergyAttachment:\"${allergyAttachment}\"\n          })\n          {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (field === 'medication') {\n    let medicationType = item.type;\n    let medicationTitle = item.title;\n    let medicationDescription = item.description;\n    let medicationAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deletePatientMedicationAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            medicationType:\"${medicationType}\",\n            medicationTitle:\"${medicationTitle}\",\n            medicationDescription:\"${medicationDescription}\",\n            medicationAttachment:\"${medicationAttachment}\"\n          })\n          {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'allergy') {\n        // console.log('...resData...',resData.data.deletePatientAllergyAttachment);\n      }\n      if (field === 'medication') {\n        // console.log('...resData...',resData.data.deletePatientMedicationAttachment);\n      }\n\n      let responseAlert = '...delete attachment success!...';\n      let error = null;\n\n      if (field === 'allergy') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'medication') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'allergy') {\n        this.props.updatePatient(resData.data.deletePatientAllergyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.deletePatientAllergyAttachment,\n          activityA: `deletePatientAllergyAttachment?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n      if (field === 'medication') {\n        this.props.updatePatient(resData.data.deletePatientMedicationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.deletePatientMedicationAttachment,\n          activityA: `deletePatientMedicationAttachment?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'patient/'+patientId+'/'+field+'/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/patient/'+patientId+'/'+field+'/attachments/';\n      const filename = attachment;\n      const filename2 = filename.replace(filePath2,'');\n      console.log('1:',filePath);\n      console.log('2:',filename);\n      console.log('3:',filename2);\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachment..')\n      console.log('...s3 deleting attachment..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `${field} attachment`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: `${field} attachment`,\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename2, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding image...');\n  this.context.setUserAlert('...adding image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  const patientName = this.props.patient.name;\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/images';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientImage(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          imageName:\"${imageName}\",\n          imageType:\"${imageType}\",\n          imagePath:\"${imagePath}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientImage);\n      let responseAlert = '...image add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientImage)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientImage,\n        activityA: `addPatientImage?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n  console.log('...deleting image...');\n  this.context.setUserAlert('...deleting image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n\n  const filePath = 'patient/'+patientId+'/images';\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n    mutation {deletePatientImage(\n      activityId:\"${activityId}\",\n      patientId:\"${patientId}\",\n      patientInput:{\n        imageName:\"${args.name}\",\n        imageType:\"${args.type}\",\n        imagePath:\"${args.path}\"\n      })\n    {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientImage);\n      let responseAlert = '...image delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientImage)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientImage,\n        activityA: `deletePatientImage?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding file...');\n  this.context.setUserAlert('...adding file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  const patientName = this.props.patient.name;\n\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientFile(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          fileName:\"${file2Name}\",\n          fileType:\"${file2Type}\",\n          filePath:\"${file2Path}\"\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientFile);\n      let responseAlert = '...file add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientFile)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientFile,\n        activityA: `addPatientFile?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n  console.log('...deleting file...');\n  this.context.setUserAlert('...deleting file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n\n  let requestBody = {\n    query: `\n    mutation {deletePatientFile(\n      activityId:\"${activityId}\",\n      patientId:\"${patientId}\",\n      patientInput:{\n        fileName:\"${args.name}\",\n        fileType:\"${args.type}\",\n        filePath:\"${args.path}\"\n      })\n    {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientFile);\n      let responseAlert = '...file delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientFile)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientFile,\n        activityA: `deletePatientFile?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'patient/'+patientId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding notes...');\n  this.context.setUserAlert('...adding notes...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const notes = event.target.notes.value;\n\n  let requestBody = {\n    query: `\n      mutation {addPatientNotes(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          notes:\"${notes}\",\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientNotes)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientNotes,\n        activityA: `addPatientNotes?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n  console.log('...deleting note...');\n  this.context.setUserAlert('...deleting note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientNote(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          note:\"${args}\"\n        })\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientNote)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientNote,\n        activityA: `deletePatientNote?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddTagForm = (event) => {\n  event.preventDefault();\n  console.log('...adding tags...');\n  this.context.setUserAlert('...adding tags...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const tags = event.target.tags.value;\n\n  let requestBody = {\n    query: `\n      mutation {addPatientTags(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          tags:\"${tags}\",\n        })\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientTags);\n      let responseAlert = '...tags add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientTags)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientTags,\n        activityA: `addPatientTags?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientTags;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteTag = (args) => {\n  console.log('...deleting tag...');\n  this.context.setUserAlert('...deleting tag...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientTag(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          tag:\"${args}\"\n        })\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientTag);\n      let responseAlert = '...tag delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientTag)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientTag,\n        activityA: `deletePatienTag?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientTag;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n    mutation {updatePatientSingleField(\n      activityId:\"${activityId}\",\n      patientId:\"${patientId}\",\n      field:\"${field}\",\n      query:\"${query}\"\n    )\n    {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updatePatientSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.updatePatientSingleField)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.updatePatientSingleField,\n        activityA: `updatePatientSingleField?activityId:${activityId},patientId:${patientId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.updatePatientSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing patient dates for calendar...');\n\n  let calendarAppointments = args.appointments.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n        field: 'appointments'\n      }\n    }))\n  let calendarVisits = args.visits.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        field: 'visits'\n      }\n    }))\n    this.setState({\n      calendarAppointments: calendarAppointments,\n      calendarVisits: calendarVisits,\n    })\n}\n\nviewCalendarEvent = (args) => {\n\n  let input = args.event.extendedProps.props;\n  let data;\n\n  if (input.field === 'appointments') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      location: input.location,\n      description: input.description,\n      important: input.important,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAppointment', data: data, goLink: true}\n    })\n  }\n  if (input.field === 'visits') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarVisit', data: data, goLink: true}\n    })\n  }\n\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\nshowPdfView = (args) => {\n  this.setState({\n    showPdfView: true,\n    showPdfData: {\n      type: args.type,\n      data: args.data\n    }\n  })\n}\n\n\nclosePdfView = () => {\n  this.setState({\n    showPdfView: false,\n    showPdfData: {\n      type: null,\n      data: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {!this.props.patient && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={3} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'address')}>Addresses</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'nextOfKin')}>Next Of Kin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'allergy')}>Allergies</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'medication')}>Medication</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'image')}>Images</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'file')}>Files</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'appointment')}>Appointments</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"10\" onClick={this.menuSelect.bind(this, 'visit')}>Visits</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"11\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"12\" onClick={this.menuSelect.bind(this, 'tag')}>Tag</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"13\" onClick={this.menuSelect.bind(this, 'doc')}>Document</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'address' && (\n                  <FilterAddressForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'nextOfKin' && (\n                  <FilterNextOfKinForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'allergy' && (\n                  <FilterAllergyForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'medication' && (\n                  <FilterMedicationForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'image' && (\n                  <FilterImageForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'file' && (\n                  <FilterFileForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'appointment' && (\n                  <FilterAppointmentForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'visit' && (\n                  <FilterVisitForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'note' && (\n                  <FilterNoteForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'tag' && (\n                  <FilterTagForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n\n            )}\n          </Col>\n\n          {this.props.patient && (\n            <Col md={9} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdatePatientSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n                <Tab.Content className=\"tabContent\">\n                  <Tab.Pane eventKey=\"1\">\n                    Patient Basic:\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.title}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                        <p className=\"listGroupText\">Name:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.name}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'name')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText\">Username:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.username}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">DOB:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.dob.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                        <p className=\"listGroupText\">Age:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.age}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">DOB:</p>\n                        <p className=\"listGroupText\">Gender:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.gender}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Email:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.contact.email}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Phone:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.contact.phone}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                        <p className=\"listGroupText\">Phone 2:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.contact.phone2}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Role:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.role}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'role')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Registration:</p>\n                        <p className=\"listGroupText\">Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.registration.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <p className=\"listGroupText\">Number:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.registration.number}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Expiry Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.expiryDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'expiryDate')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Referral:</p>\n                        <p className=\"listGroupText\">Date:</p>\n                        {this.props.patient.referral.date && (\n                          <p className=\"listGroupText bold\">{moment.unix(this.props.patient.referral.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        )}\n\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.date')}>Edit</Button>\n                        <p className=\"listGroupText\">Reason:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.reason}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.reason')}>Edit</Button>\n                        <p className=\"listGroupText\">Referral Physician:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.physician.name}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.name')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Referral Physician:</p>\n                        <p className=\"listGroupText\">Email:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.physician.email}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.email')}>Edit</Button>\n                        <p className=\"listGroupText\">Phone:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.physician.phone}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.phone')}>Edit</Button>\n                      </ListGroup.Item>\n\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Attending Physician:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.attendingPhysician}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'attendingPhysician')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Occupation:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.occupation.role}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.role')}>Edit</Button>\n                      <p className=\"listGroupText\">Employer:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.name}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.name')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Contact:</p>\n                        <p className=\"listGroupText\">Phone:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.phone}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.phone')}>Edit</Button>\n                        <p className=\"listGroupText\">Email:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.email}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.email')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Address:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.address}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.address')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Insurance:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.insurance.company}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.company')}>Edit</Button>\n                        <p className=\"listGroupText bold\">{this.props.patient.insurance.policyNumber}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.policyNumber')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText bold\">{this.props.patient.insurance.description}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.description')}>Edit</Button>\n                      {this.props.patient.insurance.expiryDate && (\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.insurance.expiryDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      )}\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.expiryDate')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Subscriber:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.insurance.subscriber.company}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.subscriber.company')}>Edit</Button>\n                      <p className=\"listGroupText bold\">{this.props.patient.insurance.subscriber.description}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.subscriber.description')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"2\">\n                    Patient Admin\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Id:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient._id}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">LoggedIn:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.loggedIn.toString()}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">ClientConnected:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.clientConnected.toString()}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Verified:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.verification.verified.toString()}</p>\n                        <p className=\"listGroupText\">Type:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.verification.type}</p>\n                        <p className=\"listGroupText\">Code:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.verification.code}</p>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"3\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">User Address List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'address' && (\n                        <AddAddressForm\n                          onConfirm={this.submitAddAddressForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientAddressList\n                      filter={this.state.filter}\n                      addresses={this.props.patient.addresses}\n                      authId={this.context.activityId}\n                      onDelete={this.deleteAddress}\n                      canDelete={this.state.canDelete}\n                      makePrimary={this.setAddressPrimary}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"4\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Next of Kin List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'nextOfKin')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'nextOfKin' && (\n                        <AddNextOfKinForm\n                          onConfirm={this.submitAddNextOfKinForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientNextOfKinList\n                      filter={this.state.filter}\n                      nextOfKin={this.props.patient.nextOfKin}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteNextOfKin}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"5\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Allergies List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'allergy')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'allergy' && (\n                        <AddAllergyForm\n                          onConfirm={this.submitAddAllergyForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <PatientAllergyList\n                      filter={this.state.filter}\n                      allergies={this.props.patient.allergies}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteAllergy}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"6\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Medication List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'medication')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'medication' && (\n                        <AddMedicationForm\n                          onConfirm={this.submitAddMedicationForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <PatientMedicationList\n                      filter={this.state.filter}\n                      medication={this.props.patient.medication}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteMedication}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"7\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Image List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'image' && (\n                        <AddImageForm\n                          onConfirm={this.submitAddImageForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientImageList\n                      filter={this.state.filter}\n                      images={this.props.patient.images}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteImage}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"8\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient File List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'file' && (\n                        <AddFileForm\n                          onConfirm={this.submitAddFileForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientFileList\n                      filter={this.state.filter}\n                      files={this.props.patient.files}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteFile}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"9\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Appointment List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    </Row>\n                    <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                      <Tab eventKey=\"1\" title=\"list\">\n                      <UserAppointmentList\n                        filter={this.state.filter}\n                        appointments={this.props.patient.appointments}\n                        authId={this.context.activityId}\n                      />\n                      </Tab>\n                      <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                        <h3>Calendar</h3>\n                        <FullCalendar\n                          defaultView=\"dayGridMonth\"\n                          plugins={[dayGridPlugin]}\n                          events={this.state.calendarAppointments}\n                          eventClick={this.viewCalendarEvent}\n                        />\n                      </Tab>\n                    </Tabs>\n\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"10\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Visit List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    </Row>\n                    <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                      <Tab eventKey=\"1\" title=\"list\">\n                      <VisitList\n                        filter={this.state.filter}\n                        visits={this.props.patient.visits}\n                        authId={this.context.activityId}\n                        patientPage={true}\n                      />\n                      </Tab>\n                      <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                        <h3>Calendar</h3>\n                        <FullCalendar\n                          defaultView=\"dayGridMonth\"\n                          plugins={[dayGridPlugin]}\n                          events={this.state.calendarVisits}\n                          eventClick={this.viewCalendarEvent}\n                        />\n                      </Tab>\n                    </Tabs>\n\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"11\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Notes:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role === 'Admin' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'note' && (\n                        <AddNoteForm\n                          onConfirm={this.submitAddNoteForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientNoteList\n                      filter={this.state.filter}\n                      notes={this.props.patient.notes}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteNote}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"12\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Tags:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'tag')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'tag' && (\n                        <AddTagForm\n                          onConfirm={this.submitAddTagForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientTagList\n                      filter={this.state.filter}\n                      tags={this.props.patient.tags}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteTag}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"13\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Docu-Gen:</p>\n\n                    </Row>\n                    <Row className=\"displayPaneHeadRow\">\n                      <ListGroup className=\"profileBasicListGroup\">\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">Test</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'test', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">Referral</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'referral', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">admissionReminder</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'admissionReminder', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">sickNote</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'sickNote', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">insurance</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'insurance', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">diagnosisTesting</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'diagnosisTesting', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">prescription</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'prescription', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">treatmentConsent</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'treatmentConsent', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">treatmentInstructions</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'treatmentInstructions', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">unfitToFly</p>\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.showPdfView.bind(this, {type: 'unfitToFly', data: 'abc_xyz'})}>Create</Button>\n                        </ListGroup.Item>\n                      </ListGroup>\n                    </Row>\n                    {this.state.showPdfView === true && (\n                      <PdfView\n                        pdfViewData={this.state.showPdfData}\n                        close={this.closePdfView}\n                      />\n                    )}\n                  </Tab.Pane>\n                </Tab.Content>\n\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n}\n\n}\n\nexport default PatientDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterPatientForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"patient\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>active</option>\n          <option>name</option>\n          <option>username</option>\n          <option>title</option>\n          <option>role</option>\n          <option>dob</option>\n          <option>age</option>\n          <option>gender</option>\n          <option>registration.date</option>\n          <option>registration.number</option>\n          <option>contact.email</option>\n          <option>contact.phone</option>\n          <option>contact.phone2</option>\n          <option>addresses.number</option>\n          <option>addresses.street</option>\n          <option>addresses.town</option>\n          <option>addresses.city</option>\n          <option>addresses.parish</option>\n          <option>addresses.country</option>\n          <option>addresses.postalCode</option>\n          <option>addresses.primary</option>\n          <option>verification.verified</option>\n          <option>expiryDate</option>\n          <option>loggedIn</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterPatientForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst PatientSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>active</option>\n        <option>name</option>\n        <option>username</option>\n        <option>title</option>\n        <option>role</option>\n        <option>dob</option>\n        <option>age</option>\n        <option>gender</option>\n        <option>registration.date</option>\n        <option>registration.number</option>\n        <option>contact.email</option>\n        <option>contact.phone</option>\n        <option>contact.phone2</option>\n        <option>addresses.number</option>\n        <option>addresses.street</option>\n        <option>addresses.town</option>\n        <option>addresses.city</option>\n        <option>addresses.parish</option>\n        <option>addresses.country</option>\n        <option>addresses.postalCode</option>\n        <option>addresses.primary</option>\n        <option>verification.verified</option>\n        <option>expiryDate</option>\n        <option>referral.date</option>\n        <option>referral.reason</option>\n        <option>referral.physician.name</option>\n        <option>referral.physician.email</option>\n        <option>referral.physician.phone</option>\n        <option>attendingPhysician</option>\n        <option>occupation.role</option>\n        <option>occupation.employer.name</option>\n        <option>occupation.employer.phone</option>\n        <option>occupation.employer.email</option>\n        <option>insurance.company</option>\n        <option>insurance.policyNumber</option>\n        <option>insurance.description</option>\n        <option>insurance.expiryDate</option>\n        <option>insurance.subscriber.company</option>\n        <option>insurance.subscriber.description</option>\n        <option>nextOfKin.name</option>\n        <option>nextOfKin.relation</option>\n        <option>nextOfKin.contact.email</option>\n        <option>nextOfKin.contact.phone</option>\n        <option>nextOfKin.contact.phone2</option>\n        <option>allergies.type</option>\n        <option>allergies.title</option>\n        <option>allergies.description</option>\n        <option>allergies.attachments</option>\n        <option>medication.title</option>\n        <option>medication.type</option>\n        <option>medication.description</option>\n        <option>medication.attachments</option>\n        <option>images.name</option>\n        <option>images.type</option>\n        <option>images.path</option>\n        <option>files.name</option>\n        <option>files.type</option>\n        <option>files.path</option>\n        <option>notes</option>\n        <option>tags</option>\n        <option>loggedIn</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default PatientSearchForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport CreatePatientForm from '../../components/forms/create/CreatePatientForm';\nimport PatientList from '../../components/lists/patient/PatientList';\nimport SearchPatientList from '../../components/lists/patient/SearchPatientList';\nimport PatientDetail from '../../components/details/PatientDetail';\n\nimport FilterPatientForm from '../../components/forms/filter/FilterPatientForm';\nimport PatientSearchForm from '../../components/forms/search/PatientSearchForm';\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './patient.css';\n\nclass PatientPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    patients: null,\n    searchPatients: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    canDelete: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    selectedPatient: null,\n    creatingPatient: false,\n    newPatient: null,\n    fromGoLink: null,\n    goLinkId: null,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all patients component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    if (this.props.location.state) {\n      if (this.props.location.state.patient) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.patient\n        })\n      }\n    }\n    this.getAllPatients(seshStore);\n    if (this.props.selectedPatient) {\n      console.log('...found existing Patient selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedPatient: this.props.selectedPatient\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkPatient = resData.data.getAllPatients.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedPatient: goLinkPatient,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n        activityA: `getAllPatients?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchPatients = (event) => {\n  event.preventDefault();\n  console.log('...searching patients...');\n  this.context.setUserAlert('...searching patients...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.context.activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'active' ||\n      field === 'age' ||\n      field === 'dob' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'registration.date' ||\n      field === 'expiryDate' ||\n      field === 'referral.date' ||\n      field === 'insurance.expiryDate' ||\n      field === 'insurance.expiryDate'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getPatientsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getPatientsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getPatientsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getPatientsByField);\n      }\n\n      let responseAlert = '...patient search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchPatients: resData.data.getPatientsByFieldRegex,\n          activityA: `getPatientsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchPatients: resData.data.getPatientsByField,\n          activityA: `getPatientsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nonStartCreateNewPatient = () => {\n  this.setState({\n    creatingPatient: true\n  })\n}\ncancelCreateNewPatient = () => {\n  this.setState({\n    creatingPatient: false\n  })\n}\nsubmitCreateNewPatientForm = (event) => {\n  event.preventDefault();\n  console.log('...creating new patient...');\n  this.context.setUserAlert('...creating new patient...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n\n  const active = event.target.active.value;\n  const title = event.target.title.value;\n  const name = event.target.name.value;\n  const username = event.target.username.value;\n  const dob = event.target.dob.value;\n  const role = event.target.role.value;\n  const gender = event.target.gender.value;\n  const contactEmail = event.target.contactEmail.value;\n  const contactPhone = event.target.contactPhone.value;\n  const contactPhone2 = event.target.contactPhone2.value;\n  let addressNumber = event.target.addressNumber.value;\n  if (addressNumber === '') {\n    addressNumber = 0;\n  }\n  const addressStreet = event.target.addressStreet.value;\n  const addressTown = event.target.addressTown.value;\n  const addressCity = event.target.addressCity.value;\n  const addressParish = event.target.addressParish.value;\n  const addressCountry = event.target.addressCountry.value;\n  const addressPostalCode = event.target.addressPostalCode.value;\n  const referralDate = event.target.referralDate.value;\n  const referralReason = event.target.referralReason.value;\n  const referralPhysicianName = event.target.referralPhysicianName.value;\n  const referralPhysicianPhone = event.target.referralPhysicianPhone.value;\n  const referralPhysicianEmail = event.target.referralPhysicianEmail.value;\n  const referralPhysicianAddress = event.target.referralPhysicianAddress.value;\n  const attendingPhysician = event.target.attendingPhysician.value;\n  const occupationRole = event.target.occupationRole.value;\n  const occupationEmployerName = event.target.occupationEmployerName.value;\n  const occupationEmployerEmail = event.target.occupationEmployerEmail.value;\n  const occupationEmployerPhone = event.target.occupationEmployerPhone.value;\n  const occupationEmployerAddress = event.target.occupationEmployerAddress.value;\n  const insuranceCompany = event.target.insuranceCompany.value;\n  const insurancePolicyNumber = event.target.insurancePolicyNumber.value;\n  const insuranceDescription = event.target.insuranceDescription.value;\n  const insuranceExpiryDate = event.target.insuranceExpiryDate.value;\n  const insuranceSubscriberCompany = event.target.insuranceSubscriberCompany.value;\n  const insuranceSubscriberDescription = event.target.insuranceSubscriberDescription.value;\n\n  if (\n      active.trim().length === 0 ||\n      title.trim().length === 0 ||\n      name.trim().length === 0 ||\n      username.trim().length === 0 ||\n      dob.trim().length === 0 ||\n      role.trim().length === 0 ||\n      gender.trim().length === 0 ||\n      contactEmail.trim().length === 0 ||\n      contactPhone.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n\n  let requestBody = {\n    query: `\n      mutation {createPatient(\n        activityId:\"${activityId}\",\n        patientInput:{\n          active:${active},\n          username:\"${username}\",\n          dob:\"${dob}\",\n          title:\"${title}\",\n          name:\"${name}\",\n          role:\"${role}\",\n          gender:\"${gender}\",\n          contactEmail:\"${contactEmail}\",\n          contactPhone:\"${contactPhone}\",\n          contactPhone2:\"${contactPhone2}\",\n          addressNumber:${addressNumber},\n          addressStreet:\"${addressStreet}\",\n          addressTown:\"${addressTown}\",\n          addressCity:\"${addressCity}\",\n          addressParish:\"${addressParish}\",\n          addressCountry:\"${addressCountry}\",\n          addressPostalCode:\"${addressPostalCode}\",\n          referralDate:\"${referralDate}\",\n          referralReason:\"${referralReason}\",\n          referralPhysicianName:\"${referralPhysicianName}\",\n          referralPhysicianEmail:\"${referralPhysicianEmail}\",\n          referralPhysicianPhone:\"${referralPhysicianPhone}\",\n          attendingPhysician:\"${attendingPhysician}\",\n          occupationRole:\"${occupationRole}\",\n          occupationEmployerName:\"${occupationEmployerName}\",\n          occupationEmployerPhone:\"${occupationEmployerPhone}\",\n          occupationEmployerEmail:\"${occupationEmployerEmail}\",\n          occupationEmployerAddress:\"${occupationEmployerAddress}\",\n          insuranceCompany:\"${insuranceCompany}\",\n          insurancePolicyNumber:\"${insurancePolicyNumber}\",\n          insuranceDescription:\"${insuranceDescription}\",\n          insuranceExpiryDate:\"${insuranceExpiryDate}\",\n          insuranceSubscriberCompany:\"${insuranceSubscriberCompany}\",\n          insuranceSubscriberDescription:\"${insuranceSubscriberDescription}\"\n        })\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createPatient);\n      let responseAlert = '...create patient success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        showDetails: true,\n        creatingPatient: false,\n        tabKey: 'detail',\n        selectedPatient: resData.data.createPatient,\n        newPatient: resData.data.createPatient,\n        activityA: `createPatient?activityId:${activityId},patientId:${resData.data.createPatient._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'))\n      this.getAllPatients(seshStore);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nshowDetails = (args) => {\n\n  this.setState({\n    showDetails: true,\n    selectedPatient: args,\n    tabKey: 'detail'\n  })\n  this.props.selectPatient(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nupdatePatient = (args) => {\n  console.log('...updating selected patient...');\n  this.setState({\n    selectedPatient: args\n  })\n  this.props.selectPatient(args)\n}\n\ndeletePatient = (args) => {\n  console.log('...deleteing patient...',args);\n  this.context.setUserAlert('...deleteing patient...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientById(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientById);\n      let responseAlert = '...delete patient success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deletePatientById?activityId:${activityId},patientId:${patientId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllPatients({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n        <h1>Patients: {this.state.showDetails === true &&\n                      this.state.selectedPatient &&\n                      this.state.tabKey === 'detail' && (\n                            this.state.selectedPatient.name\n                          )}</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col lg={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterPatientForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.patients && (\n            <Col lg={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content>\n                <Tab.Pane eventKey=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                    <PatientList\n                      filter={this.state.filter}\n                      patients={this.state.patients}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      showDetails={this.showDetails}\n                      onDelete={this.deletePatient}\n                    />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Patient</h3>\n                  <Row className=\"userSearchRow\">\n                    <PatientSearchForm\n                      onConfirm={this.searchPatients}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchPatients && (\n                      <Button variant=\"outline-primary\" className=\"centered_btn\" onClick={this.toggleSideCol}>Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchPatients && (\n                      <SearchPatientList\n                        filter={this.state.filter}\n                        patients={this.state.searchPatients}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedPatient && (\n                  <PatientDetail\n                    patient={this.state.selectedPatient}\n                    updatePatient={this.updatePatient}\n                  />\n                )}\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"new\">\n                {this.state.creatingPatient === false && (\n                  <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={this.onStartCreateNewPatient}>Create New</Button>\n                )}\n                {this.state.creatingPatient === true && (\n                  <CreatePatientForm\n                    onConfirm={this.submitCreateNewPatientForm}\n                    onCancel={this.cancelCreateNewPatient}\n                  />\n                )}\n                {this.state.newPatient && (\n                  <Row>\n                    <h3>Review New Patient</h3>\n                    {this.state.newPatient.username}\n                  </Row>\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default PatientPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './createForms.css';\n\nconst CreateAppointmentForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Create Appointment Form</h1>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"patientId\">\n        <Form.Label>Patient: {props.patient.username}</Form.Label>\n        <Form.Control type=\"text\" value={props.patient._id}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"subType\">\n        <Form.Label>subType</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"subType\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"date\">\n        <Form.Label>date</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"time\">\n        <Form.Label>time</Form.Label>\n        <Form.Control type=\"time\" placeholder=\"time\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"location\">\n        <Form.Label>location</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"location\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"important\">\n        <Form.Label>important</Form.Label>\n        <Form.Control as=\"select\">\n          <option>false</option>\n          <option>true</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Create</Button>\n      <Button variant=\"outline-danger\" className=\"loginFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default CreateAppointmentForm;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './AppointmentItem.css';\n\nconst NoteItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Note: <span className=\"bold\">{props.note}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.note)}>Delete</Button>\n              )}\n            </Row>\n            )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\n\nimport NoteItem from '../../items/appointment/NoteItem';\nimport './AppointmentList.css';\n\nconst AppointmentNoteList = props => {\n\n  const {...filter} = props.filter;\n  let notes2 = props.notes;\n  let propsNotes = [];\n\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Ascending') {\n    propsNotes = notes2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Descending') {\n    propsNotes = notes2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'note') {\n    propsNotes = notes2;\n  }\n\n  let count = 0;\n\n  const notes = propsNotes.map(note => {\n\n    count = propsNotes.indexOf(note)+1;\n\n    return (\n      <NoteItem\n        key={count}\n        note={note}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{notes}</ul>;\n};\n\nexport default AppointmentNoteList;\n","import React, { useState } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './AppointmentItem.css';\n\nconst TagItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Tag: <span className=\"bold\">{props.tag}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.tag)}>Delete</Button>\n              )}\n            </Row>\n            )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default TagItem;\n","import React from 'react';\n\nimport TagItem from '../../items/appointment/TagItem';\nimport './AppointmentList.css';\n\nconst AppointmentTagList = props => {\n\n  const {...filter} = props.filter;\n  let tags2 = props.tags;\n  let propsTags = [];\n\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Ascending') {\n    propsTags = tags2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Descending') {\n    propsTags = tags2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'tag') {\n    propsTags = tags2;\n  }\n\n  let count = 0;\n\n  const tags = propsTags.map(tag => {\n\n    count = propsTags.indexOf(tag)+1;\n\n    return (\n      <TagItem\n        key={count}\n        tag={tag}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{tags}</ul>;\n};\n\nexport default AppointmentTagList;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport UserList from '../../lists/user/UserList';\nimport './addForms.css';\n\nconst AddUserForm = (props) => {\n\n  const [user, setUser] = useState(\"\");\n  const handleSetUser = (args) => {\n    setUser(args);\n   }\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Staff</h4>\n\n    <Form.Row>\n      <UserList\n        users={props.users}\n        selectUser={handleSetUser}\n        filter={props.filter}\n      />\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"user\">\n        <Form.Label>user</Form.Label>\n        <Form.Control type=\"text\" value={user._id}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddUserForm;\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport AddToCalendar from 'react-add-to-calendar';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport PatientAddressList from '../lists/patient/PatientAddressList';\nimport PatientNextOfKinList from '../lists/patient/PatientNextOfKinList'\nimport PatientAllergyList from '../lists/patient/PatientAllergyList'\nimport PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientImageList from '../lists/patient/PatientImageList'\nimport PatientFileList from '../lists/patient/PatientFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport AppointmentNoteList from '../lists/appointment/AppointmentNoteList'\nimport AppointmentTagList from '../lists/appointment/AppointmentTagList'\nimport UserList from '../lists/user/UserList'\n\n\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../forms/filter/FilterNoteForm';\nimport FilterTagForm from '../forms/filter/FilterTagForm';\nimport FilterUserForm from '../forms/filter/FilterUserForm';\n\nimport UpdatePatientSingleFieldForm from '../forms/add/UpdatePatientSingleFieldForm';\n\nimport AddUserForm from '../forms/add/AddUserForm';\nimport AddNoteForm from '../forms/add/AddNoteForm';\nimport AddTagForm from '../forms/add/AddTagForm';\nimport loadingGif from '../../assets/loading.gif';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faBath\n} from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass AppointmentDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: this.props.appointment,\n    addAttachmentForm: false,\n    addAttachmentArgs: null,\n    showAddConsultantForm: false,\n    users: null,\n    calEvent: {\n      title: this.props.appointment.title,\n      description: this.props.appointment.description,\n      location: this.props.appointment.location,\n      startTime: moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.appointment.time+':00-05:00',\n      endTime: moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.appointment.time+':00-05:00',\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.propsPatient = this.props.appointment;\n  }\n\ncomponentDidMount () {\n  console.log('...appointment details component mounted...');\n  // console.log(moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.appointment.time+':00-05:00');\n  let seshStore;\n  if (sessionStorage.getItem('logInfo')) {\n    seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n  }\n  this.setState({\n    selectedPatient: this.context.selectedPatient\n  })\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.getAllUsers(seshStore);\n}\ncomponentWillUnmount() {\n\n}\n\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n        activityA: `getAllUsers?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding notes...');\n  this.context.setUserAlert('...adding notes...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const notes = event.target.notes.value;\n\n  let requestBody = {\n    query: `\n      mutation {addAppointmentNotes(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          notes:\"${notes}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addAppointmentNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.addAppointmentNotes)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.addAppointmentNotes,\n        activityA: `addAppointmentNotes?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.addAppointmentNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n\n  console.log('...deleting notes...');\n  this.context.setUserAlert('...deleting notes...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const note = args;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentNote(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          note:\"${note}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.deleteAppointmentNote)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.deleteAppointmentNote,\n        activityA: `deleteAppointmentNote?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.deleteAppointmentNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddTagForm = (event) => {\n  event.preventDefault();\n  console.log('...adding tags...');\n  this.context.setUserAlert('...adding tags...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const tags = event.target.tags.value;\n\n  let requestBody = {\n    query: `\n      mutation {addAppointmentTags(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          tags:\"${tags}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addAppointmentTags);\n      let responseAlert = '...tags add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.addAppointmentTags)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.addAppointmentTags,\n        activityA: `addAppointmentTags?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.addAppointmentTags;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteTag = (args) => {\n\n  console.log('...deleting tags...');\n  this.context.setUserAlert('...deleting tags...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const tag = args;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentTag(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          tag:\"${tag}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentTag);\n      let responseAlert = '...tag delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.deleteAppointmentTag)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.deleteAppointmentTag,\n        activityA: `deleteAppointmentTag?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.deleteAppointmentTag;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddUserForm = (event) => {\n  event.preventDefault();\n  console.log('...adding consultant...');\n  this.context.setUserAlert('...adding consultant...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = event.target.user.value;\n  const appointmentId = this.props.appointment._id;\n\n  const userRole = this.state.users.filter(x => x._id === consultantId)[0].role;\n  if (userRole !== 'Doctor' && userRole !== 'Nurse') {\n    console.log('...please choose a Doctor or Nurse to add please...');\n    this.context.setUserAlert('...please choose a Doctor or Nurse to add please...')\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addAppointmentConsultant(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addAppointmentConsultant);\n      let responseAlert = '...add consultant success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.addAppointmentConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `addAppointmentConsultant?activityId:${activityId},appointmentId:${appointmentId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteConsultant = (args) => {\n  console.log('...deleting consultant...');\n  this.context.setUserAlert('...deleting consultant...')\n  this.setState({isLoading: true});\n  //\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = args._id;\n  const appointmentId = this.props.appointment._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentConsultant(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentConsultant);\n      let responseAlert = '...delete consultant success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.deleteAppointmentConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteAppointmentConsultant?activityId:${activityId},appointmentId:${appointmentId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdatePatient = () => {\n  console.log('show update patient select list');\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateAppointmentSingleField(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateAppointmentSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.updateAppointmentSingleField)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.updateAppointmentSingleField,\n        activityA: `updateAppointmentSingleField?activityId:${activityId},appointmentId:${appointmentId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.updateAppointmentSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {!this.props.appointment && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={3} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'consultant')}>Consultants</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'tag')}>Tags</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'consultant' && (\n                  <FilterUserForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'note' && (\n                  <FilterNoteForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'tag' && (\n                  <FilterTagForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n\n            )}\n          </Col>\n\n          {this.props.appointment && (\n            <Col md={9} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdatePatientSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n                <Tab.Content className=\"tabContent\">\n                  <Tab.Pane eventKey=\"1\">\n                    Appointment Basic:\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.title}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Type:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.type}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'type')}>Edit</Button>\n                        <p className=\"listGroupText\">subType:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.subType}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'subType')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <p className=\"listGroupText\">Time:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.time}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'time')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Location:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.location}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'location')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Description:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.description}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'description')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Important:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.important.toString()}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'important')}>Edit</Button>\n                        <p className=\"listGroupText\">In Progress:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.inProgress.toString()}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'inProgress')}>Edit</Button>\n                        <p className=\"listGroupText\">Attended:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.attended.toString()}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'attended')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Patient:</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Name:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.patient.title}</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.patient.name}</p>\n                        <Link\n                          to={{\n                            pathname: \"/patients\",\n                            state: {patient: this.props.appointment.patient._id}\n                          }}\n                        >\n                        <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                        </Link>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.props.appointment.patient._id}</p>\n                      </ListGroup.Item>\n                      {this.props.appointment.visit && (\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">Visit:</p>\n                          <p className=\"listGroupText bold\">{this.props.appointment.visit._id}</p>\n                        </ListGroup.Item>\n                      )}\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Export:</p>\n                        <AddToCalendar event={this.state.calEvent} />\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"2\">\n                    Appointment Admin\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Id:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment._id}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Creator:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.creator._id}</p>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"3\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Appointment Consultant List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'consultant')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'consultant' &&\n                      this.state.users && (\n                        <AddUserForm\n                          onConfirm={this.submitAddUserForm}\n                          onCancel={this.cancelAdd}\n                          filter={this.state.filter}\n                          users={this.state.users}\n                        />\n                    )}\n                    <UserList\n                      filter={this.state.filter}\n                      authId={this.context.activityId}\n                      users={this.props.appointment.consultants}\n                      appointmentPage={true}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteConsultant}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"4\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Appointment Note List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'note' && (\n                        <AddNoteForm\n                          onConfirm={this.submitAddNoteForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <AppointmentNoteList\n                      filter={this.state.filter}\n                      notes={this.props.appointment.notes}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteNote}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"5\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Appointment Tag List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'tag')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'tag' && (\n                        <AddTagForm\n                          onConfirm={this.submitAddTagForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <AppointmentTagList\n                      filter={this.state.filter}\n                      tags={this.props.appointment.tags}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteTag}\n                    />\n                  </Tab.Pane>\n\n                </Tab.Content>\n\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n}\n\n}\n\nexport default AppointmentDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst AppointmentSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>type</option>\n        <option>subType</option>\n        <option>date</option>\n        <option>time</option>\n        <option>checkinTime</option>\n        <option>seenTime</option>\n        <option>location</option>\n        <option>description</option>\n        <option>inProgress</option>\n        <option>attended</option>\n        <option>important</option>\n        <option>notes</option>\n        <option>tags</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AppointmentSearchForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport CreateAppointmentForm from '../../components/forms/create/CreateAppointmentForm';\nimport AppointmentList from '../../components/lists/appointment/AppointmentList';\nimport PatientList from '../../components/lists/patient/PatientList';\n// import SearchAppointmentList from '../../components/lists/appointment/SearchAppointmentList';\nimport AppointmentDetail from '../../components/details/AppointmentDetail';\n\nimport FilterAppointmentForm from '../../components/forms/filter/FilterAppointmentForm';\nimport AppointmentSearchForm from '../../components/forms/search/AppointmentSearchForm';\nimport PatientSearchForm from '../../components/forms/search/PatientSearchForm';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './appointment.css';\n\nclass AppointmentPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    patients: null,\n    canDelete: false,\n    appointments: null,\n    searchAppointments: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    creatingAppointment: false,\n    newAppointment: null,\n    calendarAppointments: null,\n    fromGoLink: null,\n    goLinkId: null,\n    sublistSearch: false,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all appointments component mounted...');\n\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    this.getAllPatients(seshStore);\n    if (this.props.location.state) {\n      if (this.props.location.state.appointment) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.appointment\n        })\n      }\n    }\n    this.getAllAppointments(seshStore);\n    if (this.props.selectedAppointment) {\n      console.log('...found existing Appointment selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedAppointment: this.props.selectedAppointment\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllAppointments (args) {\n  console.log('...retrieving all appointments...');\n  this.context.setUserAlert('...retrieving all appointments...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllAppointments(\n        activityId:\"${activityId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllAppointments);\n      let responseAlert = '...all appointments retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkAppointment = resData.data.getAllAppointments.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedAppointment: goLinkAppointment,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        appointments: resData.data.getAllAppointments,\n        activityA: `getAllAppointments?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.parseForCalendar(resData.data.getAllAppointments)\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n        activityA: `getAllPatients?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchAppointments = (event) => {\n  event.preventDefault();\n  console.log('...searching appointments...');\n  this.context.setUserAlert('...searching appointments...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'date' ||\n      field === 'inProgress' ||\n      field === 'attended' ||\n      field === 'important' ||\n      field === 'important'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getAppointmentsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n      query {getAppointmentsByField(\n        activityId:\"${activityId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getAppointmentsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getAppointmentsByField);\n      }\n\n      let responseAlert = '...appointment search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchAppointments: resData.data.getAppointmentsByFieldRegex,\n          activityA: `getAppointmentsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchAppointments: resData.data.getAppointmentsByField,\n          activityA: `getAppointmentsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nonStartCreateNewAppointment = () => {\n  this.setState({\n    creatingAppointment: true\n  })\n}\ncancelCreateNewAppointment = () => {\n  this.setState({\n    creatingAppointment: false,\n    selectedPatient: null\n  })\n}\nsubmitCreateNewAppointmentForm = (event) => {\n  event.preventDefault();\n  console.log('...creating new appointment...');\n  this.context.setUserAlert('...creating new appointment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.state.selectedPatient._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const subType = event.target.subType.value;\n  const date = event.target.date.value;\n  const time = event.target.time.value;\n  const location = event.target.location.value;\n  const description = event.target.description.value;\n  const important = event.target.important.value;\n\n  if (\n      title.trim().length === 0 ||\n      date.trim().length === 0 ||\n      time.trim().length === 0 ||\n      location.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    return;\n  }\n  console.log('foo',date);\n\n  if (date < moment().format('YYYY-MM-DD')) {\n    console.log('...ummm no! Please pick a date today or in the future...');\n    this.context.setUserAlert('...ummm no! Please pick a date today or in the future...')\n    this.setState({isLoading:false})\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {createAppointment(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        appointmentInput:{\n          title:\"${title}\",\n          type:\"${type}\",\n          subType:\"${subType}\",\n          date:\"${date}\",\n          time:\"${time}\",\n          location:\"${location}\",\n          description:\"${description}\",\n          important:${important}\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createAppointment);\n      let responseAlert = '...create appointment success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        showDetails: true,\n        creatingAppointment: false,\n        selectedAppointment: resData.data.createAppointment,\n        newAppointment: resData.data.createAppointment,\n        tabKey: 'detail',\n        activityA: `createAppointment?activityId:${activityId},appointmentId:${resData.data.createAppointment._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'))\n      this.getAllAppointments(seshStore);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nshowDetails = (args) => {\n  this.setState({\n    showDetails: true,\n    selectedAppointment: args,\n    overlay: false,\n    tabKey: 'detail'\n  })\n  this.props.selectAppointment(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\nselectPatient = (args) => {\n  this.setState({\n    selectedPatient: args\n  })\n\n}\nupdateAppointment = (args) => {\n  console.log('...updating selected appointment...');\n  this.setState({\n    selectedAppointment: args\n  })\n  this.props.selectAppointment(args);\n}\n\ndeleteAppointment = (args) => {\n  console.log('...deleteing appointment...',args);\n  this.context.setUserAlert('...deleteing appointment...')\n\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentById(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentById);\n      let responseAlert = '...delete appointment success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteAppointmentById?activityId:${activityId},appointmentId:${appointmentId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllAppointments({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing appointments for calendar...');\n  let calendarAppointments = args.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n      }\n    }))\n    this.setState({\n      calendarAppointments: calendarAppointments\n    })\n\n}\n\nviewCalendarEvent = (args) => {\n  console.log('...viewing calendar appointment...',args.event.extendedProps.props);\n  const appointment = this.state.appointments.filter(x => x._id === args.event.extendedProps.props._id)[0];\n  this.setState({\n    overlay: true,\n    overlayStatus: {type: 'calendarAppointment', data: appointment}\n  })\n}\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\nstartSublistSearch = () => {\n  this.setState({\n    sublistSearch: true\n  })\n}\ncancelSublistSearch = () => {\n  this.setState({\n    sublistSearch: false,\n  })\n  this.getAllPatients({activityId: this.context.activityId,token: this.context.token});\n}\nsubmitSublistSearchForm = (event) => {\n  event.preventDefault()\n  console.log('...searching patient sublist...');\n  this.context.setUserAlert('...searching patient sublist...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'active' ||\n      field === 'age' ||\n      field === 'dob' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'registration.date' ||\n      field === 'expiryDate' ||\n      field === 'referral.date' ||\n      field === 'insurance.expiryDate' ||\n      field === 'insurance.expiryDate'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getPatientsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getPatientsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getPatientsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getPatientsByField);\n      }\n\n      let responseAlert = '...patient search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          patients: resData.data.getPatientsByFieldRegex,\n          activityA: `getPatientsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          patients: resData.data.getPatientsByField,\n          activityA: `getPatientsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        selectCalendarDetails={this.showDetails}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n        <h1>Appointments: {this.state.showDetails === true &&\n                      this.state.selectedAppointment &&\n                      this.state.tabKey === 'detail' && (\n                            this.state.selectedAppointment.title\n                          )}</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col md={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterAppointmentForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.appointments && (\n            <Col md={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content >\n                <Tab.Pane eventKey=\"list\" className=\"mainList\">\n\n                <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                  <Tab eventKey=\"1\" title=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                    <AppointmentList\n                      filter={this.state.filter}\n                      appointments={this.state.appointments}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      showDetails={this.showDetails}\n                      onDelete={this.deleteAppointment}\n                    />\n                  </Tab>\n                  <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                    <h3>Calendar</h3>\n                    <FullCalendar\n                      defaultView=\"dayGridMonth\"\n                      plugins={[dayGridPlugin]}\n                      events={this.state.calendarAppointments}\n                      eventClick={this.viewCalendarEvent}\n                    />\n                  </Tab>\n                </Tabs>\n\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Appointment</h3>\n                  <Row className=\"userSearchRow searchForm\">\n                    <AppointmentSearchForm\n                      onConfirm={this.searchAppointments}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchAppointments && (\n                      <Button variant=\"outline-primary\" className=\"centered_btn\" onClick={this.toggleSideCol}>Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchAppointments && (\n                      <AppointmentList\n                        filter={this.state.filter}\n                        appointments={this.state.searchAppointments}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedAppointment && (\n                  <AppointmentDetail\n                    appointment={this.state.selectedAppointment}\n                    updateAppointment={this.updateAppointment}\n                  />\n                )}\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"new\">\n                {this.state.creatingAppointment === false && (\n                  <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={this.onStartCreateNewAppointment}>Create New</Button>\n                )}\n                {this.state.creatingAppointment === true &&\n                  this.state.patients &&\n                  !this.state.selectedPatient && (\n                  <Col className=\"patientSubListCol\">\n                  <Row className=\"patientSubListRow\">\n                  <Button variant=\"outline-success\" className=\"patientSublistSearchBtn\" onClick={this.startSublistSearch}>Search</Button>\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  {this.state.sublistSearch === true && (\n                    <PatientSearchForm\n                      onCancel={this.cancelSublistSearch}\n                      onConfirm={this.submitSublistSearchForm}\n                    />\n                  )}\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  <PatientList\n                    filter={this.state.filter}\n                    patients={this.state.patients}\n                    authId={this.context.activityId}\n                    onSelect={this.selectPatient}\n                    appointmentPage={true}\n                  />\n                  </Row>\n\n                  </Col>\n                )}\n                {this.state.creatingAppointment === true &&\n                  this.state.selectedPatient && (\n                  <Row>\n                    <CreateAppointmentForm\n                      onConfirm={this.submitCreateNewAppointmentForm}\n                      onCancel={this.cancelCreateNewAppointment}\n                      patient={this.state.selectedPatient}\n                    />\n                  </Row>\n                )}\n                {this.state.newAppointment && (\n                  <Row>\n                    <h3>Review New Appointment {this.state.newAppointment._id}</h3>\n                  </Row>\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default AppointmentPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './createForms.css';\n\nconst CreateVisitForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Create Visit Form</h1>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"appointmentId\">\n        <Form.Label>Appointment: {props.appointment.title}</Form.Label>\n        <Form.Control type=\"text\" value={props.appointment._id}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"subType\">\n        <Form.Label>subType</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"subType\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Create</Button>\n      <Button variant=\"outline-danger\" className=\"loginFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default CreateVisitForm;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst ComplaintItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.complaint.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.complaint.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.complaint.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Anamnesis: <span className=\"bold\">{props.complaint.anamnesis}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'complaint',data:props.complaint})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.complaint}\n                attachments={props.complaint.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"complaint\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.complaint)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default ComplaintItem;\n","import React from 'react';\n\nimport ComplaintItem from '../../items/visit/ComplaintItem';\nimport './visitList.css';\n\nconst VisitComplaintList = props => {\n\n  const {...filter} = props.filter;\n  let complaints2 = props.complaints;\n  let propsComplaints = [];\n\n  if (filter.field === 'complaint' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsComplaints = complaints2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'title' && filter.value === 'Descending') {\n    propsComplaints = complaints2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsComplaints = complaints2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'description' && filter.value === 'Descending') {\n    propsComplaints = complaints2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'anamnesis' && filter.value === 'Ascending') {\n    propsComplaints = complaints2.sort((a, b) => (a.anamnesis > b.anamnesis) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'anamnesis' && filter.value === 'Descending') {\n    propsComplaints = complaints2.sort((a, b) => (a.anamnesis < b.anamnesis) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'complaint') {\n    propsComplaints = complaints2;\n  }\n\n  let count = 0;\n\n  const complaints = propsComplaints.map(complaint => {\n\n    count = propsComplaints.indexOf(complaint)+1;\n\n    return (\n      <ComplaintItem\n        key={count}\n        complaint={complaint}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{complaints}</ul>;\n};\n\nexport default VisitComplaintList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst SurveyItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.survey.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.survey.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.survey.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'survey',data:props.survey})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.survey}\n                attachments={props.survey.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"survey\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.survey)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default SurveyItem;\n","import React from 'react';\n\nimport SurveyItem from '../../items/visit/SurveyItem';\nimport './visitList.css';\n\nconst VisitSurveyList = props => {\n\n  const {...filter} = props.filter;\n  let surveys2 = props.surveys;\n  let propsSurveys = [];\n\n  if (filter.field === 'survey' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsSurveys = surveys2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'survey' && filter.key === 'title' && filter.value === 'Descending') {\n    propsSurveys = surveys2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'survey' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsSurveys = surveys2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'survey' && filter.key === 'description' && filter.value === 'Descending') {\n    propsSurveys = surveys2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'survey') {\n    propsSurveys = surveys2;\n  }\n\n  let count = 0;\n\n  const surveys = propsSurveys.map(survey => {\n\n    count = propsSurveys.indexOf(survey)+1;\n\n    return (\n      <SurveyItem\n        key={count}\n        survey={survey}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{surveys}</ul>;\n};\n\nexport default VisitSurveyList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst SystematicInquiryItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.systematicInquiry.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.systematicInquiry.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.systematicInquiry.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'systematicInquiry',data:props.systematicInquiry})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.systematicInquiry}\n                attachments={props.systematicInquiry.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"systematicInquiry\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.systematicInquiry)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default SystematicInquiryItem;\n","import React from 'react';\n\nimport SystematicInquiryItem from '../../items/visit/SystematicInquiryItem';\nimport './visitList.css';\n\nconst VisitSystematicInquiryList = props => {\n\n  const {...filter} = props.filter;\n  let systematicInquirys2 = props.systematicInquiry;\n  let propsSystematicInquirys = [];\n\n  if (filter.field === 'systematicInquiry' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'systematicInquiry' && filter.key === 'title' && filter.value === 'Descending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'systematicInquiry' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'systematicInquiry' && filter.key === 'description' && filter.value === 'Descending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'systematicInquiry') {\n    propsSystematicInquirys = systematicInquirys2;\n  }\n\n  let count = 0;\n\n  const systematicInquirys = propsSystematicInquirys.map(systematicInquiry => {\n\n    count = propsSystematicInquirys.indexOf(systematicInquiry)+1;\n\n    return (\n      <SystematicInquiryItem\n        key={count}\n        systematicInquiry={systematicInquiry}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{systematicInquirys}</ul>;\n};\n\nexport default VisitSystematicInquiryList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst VitalsItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Pulse Rate: <span className=\"bold\">{props.vitals.pr}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Respiratory Rate: <span className=\"bold\">{props.vitals.rr}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              <Card.Text className=\"cardText\">\n                Pulse Rate: <span className=\"bold\">{props.vitals.pr}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Respiratory Rate: <span className=\"bold\">{props.vitals.rr}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Blood Pressure : <span className=\"bold\">{props.vitals.bp1}</span> / <span className=\"bold\">{props.vitals.bp2}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Temperature: <span className=\"bold\">{props.vitals.temp}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                PS02: <span className=\"bold\">{props.vitals.ps02}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Height : <span className=\"bold\">{props.vitals.heightValue}</span>  <span className=\"bold\">{props.vitals.heightUnit}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Weight : <span className=\"bold\">{props.vitals.weightValue}</span>  <span className=\"bold\">{props.vitals.weightUnit}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                BMI : <span className=\"bold\">{props.vitals.bmi}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Urine\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.vitals.urine.type}</span> Value: <span className=\"bold\">{props.vitals.urine.value}</span>\n              </Card.Text>\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.vitals)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default VitalsItem;\n","import React from 'react';\n\nimport VitalsItem from '../../items/visit/VitalsItem';\nimport './visitList.css';\n\nconst VisitVitalsList = props => {\n\n  const {...filter} = props.filter;\n  let vitals2 = props.vitals;\n  let propsVitals = [];\n\n  if (filter.field === 'vitals' && filter.key === 'pr' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.pr > b.pr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'pr' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.pr < b.pr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp1' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp1 > b.bp1) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp1' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp1 < b.bp1) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp2' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp2 > b.bp2) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp2' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp2 < b.bp2) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'rr' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.rr > b.rr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'rr' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.rr < b.rr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'temp' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.temp > b.temp) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'temp' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.temp < b.temp) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'ps02' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.ps02 > b.ps02) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'ps02' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.ps02 < b.ps02) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'heightValue' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.heightValue > b.heightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'heightValue' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.heightValue < b.heightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'weightValue' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.weightValue > b.weightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'weightValue' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.weightValue < b.weightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bmi' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.bmi > b.bmi) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bmi' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.bmi < b.bmi) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.type' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.type > b.urine.type) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.type' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.type < b.urine.type) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.value' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.value > b.urine.value) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.value' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.value < b.urine.value) ? 1 : -1);\n  }\n  // if (filter.field === 'vitals' && filter.key === 'role') {\n  //   propsVitals = vitals2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'vitals') {\n    propsVitals = vitals2;\n  }\n\n  let count = 0;\n\n  const vitals = propsVitals.map(vitalsItem => {\n\n    count = propsVitals.indexOf(vitalsItem)+1;\n\n    return (\n      <VitalsItem\n        key={count}\n        vitals={vitalsItem}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{vitals}</ul>;\n};\n\nexport default VisitVitalsList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst ExaminationItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            General: <span className=\"bold\">{props.examination.general}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Area: <span className=\"bold\">{props.examination.area}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                General: <span className=\"bold\">{props.examination.general}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Area: <span className=\"bold\">{props.examination.area}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                type: <span className=\"bold\">{props.examination.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                measure: <span className=\"bold\">{props.examination.measure}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                value: <span className=\"bold\">{props.examination.value}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                description: <span className=\"bold\">{props.examination.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                 followUp: <span className=\"bold\">{props.examination.followUp === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'examination',data:props.examination})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.examination}\n                attachments={props.examination.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"examination\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.examination)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default ExaminationItem;\n","import React from 'react';\n\nimport ExaminationItem from '../../items/visit/ExaminationItem';\nimport './visitList.css';\n\nconst VisitExaminationList = props => {\n\n  const {...filter} = props.filter;\n  let examinations2 = props.examination;\n  let propsExaminations = [];\n\n  if (filter.field === 'examination' && filter.key === 'general' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.general > b.general) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'general' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.general < b.general) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'area' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.area > b.area) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'area' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.area < b.area) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'type' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'measure' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.measure > b.measure) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'measure' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.measure < b.measure) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'value' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.value > b.value) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'value' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.value < b.value) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'description' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'followUp') {\n    propsExaminations = examinations2.filter(x => x.followUp === filter.value);\n  }\n  if (filter.field !== 'examination') {\n    propsExaminations = examinations2;\n  }\n\n  let count = 0;\n\n  const examinations = propsExaminations.map(examination => {\n\n    count = propsExaminations.indexOf(examination)+1;\n\n    return (\n      <ExaminationItem\n        key={count}\n        examination={examination}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{examinations}</ul>;\n};\n\nexport default VisitExaminationList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst InvestigationItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.investigation.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.investigation.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.investigation.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.investigation.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.investigation.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'investigation',data:props.investigation})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.investigation}\n                attachments={props.investigation.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"investigation\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.investigation)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default InvestigationItem;\n","import React from 'react';\n\nimport InvestigationItem from '../../items/visit/InvestigationItem';\nimport './visitList.css';\n\nconst VisitInvestigationList = props => {\n\n  const {...filter} = props.filter;\n  let investigations2 = props.investigation;\n  let propsInvestigations = [];\n\n  if (filter.field === 'investigation' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'investigation' && filter.key === 'title' && filter.value === 'Descending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'investigation' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'investigation' && filter.key === 'description' && filter.value === 'Descending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'investigation') {\n    propsInvestigations = investigations2;\n  }\n\n  let count = 0;\n\n  const investigations = propsInvestigations.map(investigation => {\n\n    count = propsInvestigations.indexOf(investigation)+1;\n\n    return (\n      <InvestigationItem\n        key={count}\n        investigation={investigation}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{investigations}</ul>;\n};\n\nexport default VisitInvestigationList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst DiagnosisItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.diagnosis.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.diagnosis.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.diagnosis.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.diagnosis.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.diagnosis.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'diagnosis',data:props.diagnosis})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.diagnosis}\n                attachments={props.diagnosis.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"diagnosis\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.diagnosis)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default DiagnosisItem;\n","import React from 'react';\n\nimport DiagnosisItem from '../../items/visit/DiagnosisItem';\nimport './visitList.css';\n\nconst VisitDiagnosisList = props => {\n\n  const {...filter} = props.filter;\n  let diagnosis2 = props.diagnosis;\n  let propsDiagnosis = [];\n\n  if (filter.field === 'diagnosis' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'title' && filter.value === 'Descending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'type' && filter.value === 'Descending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'description' && filter.value === 'Descending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'diagnosis') {\n    propsDiagnosis = diagnosis2;\n  }\n\n  let count = 0;\n\n  const diagnoses = propsDiagnosis.map(diagnosis => {\n\n    count = propsDiagnosis.indexOf(diagnosis)+1;\n\n    return (\n      <DiagnosisItem\n        key={count}\n        diagnosis={diagnosis}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{diagnoses}</ul>;\n};\n\nexport default VisitDiagnosisList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst TreatmentItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.treatment.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.treatment.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.treatment.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.treatment.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.treatment.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Dose: <span className=\"bold\">{props.treatment.dose}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Frequency: <span className=\"bold\">{props.treatment.frequency}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'treatment',data:props.treatment})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.treatment}\n                attachments={props.treatment.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"treatment\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.treatment)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default TreatmentItem;\n","import React from 'react';\n\nimport TreatmentItem from '../../items/visit/TreatmentItem';\nimport './visitList.css';\n\nconst VisitTreatmentList = props => {\n\n  const {...filter} = props.filter;\n  let treatment2 = props.treatment;\n  let propsTreatment = [];\n\n  if (filter.field === 'treatment' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'title' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'type' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'dose' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.dose > b.dose) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'dose' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.dose < b.dose) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'frequency' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.frequency > b.frequency) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'frequency' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.frequency < b.frequency) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'description' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'treatment') {\n    propsTreatment = treatment2;\n  }\n\n  let count = 0;\n\n  const treatments = propsTreatment.map(treatment => {\n\n    count = propsTreatment.indexOf(treatment)+1;\n\n    return (\n      <TreatmentItem\n        key={count}\n        treatment={treatment}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{treatments}</ul>;\n};\n\nexport default VisitTreatmentList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst BillingItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.billing.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.billing.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.billing.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.billing.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.billing.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Notes: <span className=\"bold\">{props.billing.notes}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Amount: <span className=\"bold\">{props.billing.amount}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Paid: <span className=\"bold\">{props.billing.paid === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'billing',data:props.billing})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.billing}\n                attachments={props.billing.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"billing\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.billing)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default BillingItem;\n","import React from 'react';\n\nimport BillingItem from '../../items/visit/BillingItem';\nimport './visitList.css';\n\nconst VisitBillingList = props => {\n\n  const {...filter} = props.filter;\n  let billing2 = props.billing;\n  let propsBilling = [];\n\n  if (filter.field === 'billing' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'title' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'type' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'amount' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.amount > b.amount) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'amount' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.amount < b.amount) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'description' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'notes' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.notes > b.notes) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'notes' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.notes < b.notes) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'paid') {\n    propsBilling = billing2.filter(x => x.paid === filter.value);\n  }\n  if (filter.field !== 'billing') {\n    propsBilling = billing2;\n  }\n\n  let count = 0;\n\n  const billings = propsBilling.map(billing => {\n\n    count = propsBilling.indexOf(billing)+1;\n\n    return (\n      <BillingItem\n        key={count}\n        billing={billing}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{billings}</ul>;\n};\n\nexport default VisitBillingList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst VigilanceItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            number: <span className=\"bold\">{props.key}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              <h3>chronicIllness:</h3>\n              <p>Diabetes</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.diabetes.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.diabetes.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.diabetes.comment}</span>\n              </Card.Text>\n\n              <p>High BloodPressure</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.hbp.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.hbp.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.hbp.comment}</span>\n              </Card.Text>\n\n              <p>Dyslipidemia</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.dyslipidemia.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.dyslipidemia.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.dyslipidemia.comment}</span>\n              </Card.Text>\n\n              <p>Cad</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.cad.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.cad.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.cad.comment}</span>\n              </Card.Text>\n\n              <h3>lifestyle</h3>\n              <p>Weight</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.weight.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.weight.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.weight.comment}</span>\n              </Card.Text>\n\n              <p>Diet</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.diet.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.diet.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.diet.comment}</span>\n              </Card.Text>\n\n              <p>Smoking</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.smoking.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.smoking.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.smoking.comment}</span>\n              </Card.Text>\n\n              <p>SubstanceAbuse</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.substanceAbuse.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.substanceAbuse.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.substanceAbuse.comment}</span>\n              </Card.Text>\n\n              <p>exercise</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.exercise.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.exercise.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.exercise.comment}</span>\n              </Card.Text>\n\n              <p>allergies</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.allergies.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.allergies.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.allergies.comment}</span>\n              </Card.Text>\n\n              <p>asthma</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.asthma.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.asthma.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.asthma.comment}</span>\n              </Card.Text>\n\n              <h3>Screening</h3>\n              <p>breast</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.breast.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.breast.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.breast.comment}</span>\n              </Card.Text>\n\n              <p>prostate</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.prostate.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.prostate.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.prostate.comment}</span>\n              </Card.Text>\n\n              <p>cervix</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.cervix.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.cervix.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.cervix.comment}</span>\n              </Card.Text>\n\n              <p>colon</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.colon.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.colon.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.colon.comment}</span>\n              </Card.Text>\n\n              <p>dental</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.dental.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.dental.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.dental.comment}</span>\n              </Card.Text>\n\n              <h3>Vaccines</h3>\n              <p>Influenza</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.influenza.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.influenza.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.influenza.comment}</span>\n              </Card.Text>\n\n              <p>varicella</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.varicella.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.varicella.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.varicella.comment}</span>\n              </Card.Text>\n\n              <p>hpv</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.hpv.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.hpv.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.hpv.comment}</span>\n              </Card.Text>\n\n              <p>mmr</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.mmr.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.mmr.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.mmr.comment}</span>\n              </Card.Text>\n\n              <p>tetanus</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.tetanus.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.tetanus.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.tetanus.comment}</span>\n              </Card.Text>\n\n              <p>pneumovax</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.pneumovax.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.pneumovax.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.pneumovax.comment}</span>\n              </Card.Text>\n\n              <p>other</p>\n              <Card.Text className=\"cardText\">\n                Other: <span className=\"bold\">{props.vigilance.vaccines.other.name}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.other.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.other.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.other.comment}</span>\n              </Card.Text>\n\n\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.vigilance)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default VigilanceItem;\n","import React from 'react';\n\nimport VigilanceItem from '../../items/visit/VigilanceItem';\nimport './visitList.css';\n\nconst VisitVigilanceList = props => {\n\n  const {...filter} = props.filter;\n  let vigilance2 = props.vigilance;\n  let propsVigilance = [];\n\n  if (filter.field === 'vigilance' && filter.key === 'chronicIllness.diabetes.medication') {\n    propsVigilance = vigilance2.filter(x => x.chronicIllness.diabetes.medication === filter.value)\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'vigilance') {\n    propsVigilance = vigilance2;\n  }\n\n  let count = 0;\n\n  const vigilances = propsVigilance.map(vigilance => {\n\n    count = propsVigilance.indexOf(vigilance)+1;\n\n    return (\n      <VigilanceItem\n        key={count}\n        vigilance={vigilance}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{vigilances}</ul>;\n};\n\nexport default VisitVigilanceList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst ImageItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Link: <span className=\"bold\">{props.image.path}</span>\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.image.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.image.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.image.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.image)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n\n};\n\nexport default ImageItem;\n","import React from 'react';\n\nimport ImageItem from '../../items/visit/ImageItem';\nimport './visitList.css';\n\nconst VisitImageList = props => {\n\n  const {...filter} = props.filter;\n  let images2 = props.images;\n  let propsImages = [];\n\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'image') {\n    propsImages = images2;\n  }\n\n  let count = 0;\n\n  const images = propsImages.map(image => {\n\n    count = propsImages.indexOf(image)+1;\n\n    return (\n      <ImageItem\n        key={count}\n        image={image}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"imageList\">{images}</ul>;\n};\n\nexport default VisitImageList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst FileItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Link: <span className=\"bold\">{props.file.path}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.file.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.file.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.file.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.file)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default FileItem;\n","import React from 'react';\n\nimport FileItem from '../../items/visit/FileItem';\nimport './visitList.css';\n\nconst VisitFileList = props => {\n\n  const {...filter} = props.filter;\n  let files2 = props.files;\n  let propsFiles = [];\n\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'file') {\n    propsFiles = files2;\n  }\n\n  let count = 0;\n\n  const files = propsFiles.map(file => {\n\n    count = propsFiles.indexOf(file)+1;\n\n    return (\n      <FileItem\n        key={count}\n        file={file}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{files}</ul>;\n};\n\nexport default VisitFileList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterComplaintForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"complaint\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>description</option>\n        <option>anamnesis</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterComplaintForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterSurveyForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"survey\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterSurveyForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterSystematicInquiryForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"systematicInquiry\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterSystematicInquiryForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterDiagnosisForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"diagnosis\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterDiagnosisForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterVitalsForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"vitals\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>pr</option>\n        <option>bp1</option>\n        <option>bp2</option>\n        <option>rr</option>\n        <option>temp</option>\n        <option>ps02</option>\n        <option>heightUnit</option>\n        <option>heightValue</option>\n        <option>weightUnit</option>\n        <option>weightValue</option>\n        <option>bmi</option>\n        <option>urine.type</option>\n        <option>urine.value</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterVitalsForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterExaminationForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"examination\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>general</option>\n        <option>area</option>\n        <option>type</option>\n        <option>measure</option>\n        <option>value</option>\n        <option>description</option>\n        <option>followUp</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterExaminationForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterInvestigationForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"investigation\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterInvestigationForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterTreatmentForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"treatment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        <option>dose</option>\n        <option>frequency</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterTreatmentForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterBillingForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"billing\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        <option>amount</option>\n        <option>paid</option>\n        <option>notes</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterBillingForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddComplaintForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Complaint</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"anamnesis\">\n        <Form.Label>anamnesis</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"anamnesis\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddComplaintForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddSurveyForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Survey</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddSurveyForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddSystematicInquiryForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add SystematicInquiry</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddSystematicInquiryForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddVitalsForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Vitals</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"pr\">\n        <Form.Label>Pulse Rate</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"pr\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"bp1\">\n        <Form.Label>Blood Pressure (top)</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"bp1\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"bp2\">\n        <Form.Label>Blood Pressure (bottom)</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"bp2\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"rr\">\n        <Form.Label>Respiratory Rate</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"rr\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"temp\">\n        <Form.Label>Temperature</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"temp\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"ps02\">\n        <Form.Label>PS-02</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"ps02\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"heightUnit\">\n        <Form.Label>Height: Unit</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ft</option>\n          <option>M</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"heightValue\">\n        <Form.Label>Height: Value</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"heightValue\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"weightUnit\">\n        <Form.Label>Weight: Unit</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Kg</option>\n          <option>Lbs</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"weightValue\">\n        <Form.Label>Weight: Value</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"weightValue\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"bmi\">\n        <Form.Label>BMI</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"bmi\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"urineType\">\n        <Form.Label>Urine: type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"urineType\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"urineValue\">\n        <Form.Label>Urine: value</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"urineValue\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddVitalsForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddExaminationForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Examination</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"general\">\n        <Form.Label>General</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"general\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"area\">\n        <Form.Label>Area</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"area\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>Type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"measure\">\n        <Form.Label>Measure</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"measure\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Value</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"value\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"followUp\">\n        <Form.Label>FollowUp ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddExaminationForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddInvestigationForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Investigation</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddInvestigationForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddDiagnosisForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Diagnosis</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddDiagnosisForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddTreatmentForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Treatment</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"dose\">\n        <Form.Label>dose</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"dose\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"frequency\">\n        <Form.Label>frequency</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"frequency\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddTreatmentForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddBillingForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Billing</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"amount\">\n        <Form.Label>amount</Form.Label>\n        <Form.Control type=\"number\" step=\"0.001\" placeholder=\"amount\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"paid\">\n        <Form.Label>Paid ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"notes\">\n        <Form.Label>notes</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"notes\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddBillingForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddVigilanceForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Vigilance</h4>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>Diabetes</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDiabetesMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDiabetesTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDiabetesComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>HBP</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessHbpMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessHbpTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessHbpComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>Dyslipidemia</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDyslipidemiaMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDyslipidemiaTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDyslipidemiaComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>Cad</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessCadMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessCadTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessCadComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Lifestyle:</h4>\n    <p>Weight</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleWeightMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleWeightTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleWeightComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Diet</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleDietMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleDietTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleDietComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Smoking</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSmokingMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSmokingTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSmokingComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>SubstanceAbuse</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSubstanceAbuseMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSubstanceAbuseTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSubstanceAbuseComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Exercise</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleExerciseMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleExerciseTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleExerciseComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Allergies</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAllergiesMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAllergiesTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAllergiesComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Asthma</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAsthmaMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAsthmaTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAsthmaComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Screening:</h4>\n    <p>Breast</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningBreastMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningBreastTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningBreastComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Prostate</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningProstateMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningProstateTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningProstateComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Cervix</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningCervixMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningCervixTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningCervixComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Colon</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningColonMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningColonTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningColonComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Dental</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningDentalMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningDentalTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningDentalComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Vaccines</h4>\n    <p>Influenza</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesInfluenzaMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesInfluenzaTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesInfluenzaComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Varicella</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesVaricellaMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesVaricellaTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesVaricellaComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Hpv</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesHpvMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesHpvTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesHpvComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Mmr</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesMmrMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesMmrTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesMmrComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Tetanus</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesTetanusMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesTetanusTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesTetanusComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Pneumovax</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesPneumovaxMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesPneumovaxTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesPneumovaxComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Other</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherName\">\n        <Form.Label>name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddVigilanceForm;\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport AddToCalendar from 'react-add-to-calendar';\nimport S3 from 'react-aws-s3';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport PatientAddressList from '../lists/patient/PatientAddressList';\nimport PatientNextOfKinList from '../lists/patient/PatientNextOfKinList'\nimport PatientAllergyList from '../lists/patient/PatientAllergyList'\nimport PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientImageList from '../lists/patient/PatientImageList'\nimport PatientFileList from '../lists/patient/PatientFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport AppointmentNoteList from '../lists/appointment/AppointmentNoteList'\nimport VisitComplaintList from '../lists/visit/VisitComplaintList'\nimport VisitSurveyList from '../lists/visit/VisitSurveyList'\nimport VisitSystematicInquiryList from '../lists/visit/VisitSystematicInquiryList'\nimport VisitVitalsList from '../lists/visit/VisitVitalsList'\nimport VisitExaminationList from '../lists/visit/VisitExaminationList'\nimport VisitInvestigationList from '../lists/visit/VisitInvestigationList'\nimport VisitDiagnosisList from '../lists/visit/VisitDiagnosisList'\nimport VisitTreatmentList from '../lists/visit/VisitTreatmentList'\nimport VisitBillingList from '../lists/visit/VisitBillingList'\nimport VisitVigilanceList from '../lists/visit/VisitVigilanceList'\nimport VisitImageList from '../lists/visit/VisitImageList'\nimport VisitFileList from '../lists/visit/VisitFileList'\nimport UserList from '../lists/user/UserList'\n\n\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterComplaintForm from '../forms/filter/FilterComplaintForm';\nimport FilterSurveyForm from '../forms/filter/FilterSurveyForm';\nimport FilterSystematicInquiryForm from '../forms/filter/FilterSystematicInquiryForm';\nimport FilterDiagnosisForm from '../forms/filter/FilterDiagnosisForm';\nimport FilterVitalsForm from '../forms/filter/FilterVitalsForm';\nimport FilterExaminationForm from '../forms/filter/FilterExaminationForm';\nimport FilterInvestigationForm from '../forms/filter/FilterInvestigationForm';\nimport FilterTreatmentForm from '../forms/filter/FilterTreatmentForm';\nimport FilterBillingForm from '../forms/filter/FilterBillingForm';\nimport FilterImageForm from '../forms/filter/FilterImageForm';\nimport FilterFileForm from '../forms/filter/FilterFileForm';\nimport FilterUserForm from '../forms/filter/FilterUserForm';\n\nimport UpdatePatientSingleFieldForm from '../forms/add/UpdatePatientSingleFieldForm';\n\nimport AddUserForm from '../forms/add/AddUserForm';\nimport AddAttachmentForm from '../forms/add/AddAttachmentForm';\nimport AddImageForm from '../forms/add/AddImageForm';\nimport AddFileForm from '../forms/add/AddFileForm';\nimport AddComplaintForm from '../forms/add/AddComplaintForm';\nimport AddSurveyForm from '../forms/add/AddSurveyForm';\nimport AddSystematicInquiryForm from '../forms/add/AddSystematicInquiryForm';\nimport AddVitalsForm from '../forms/add/AddVitalsForm';\nimport AddExaminationForm from '../forms/add/AddExaminationForm';\nimport AddInvestigationForm from '../forms/add/AddInvestigationForm';\nimport AddDiagnosisForm from '../forms/add/AddDiagnosisForm';\nimport AddTreatmentForm from '../forms/add/AddTreatmentForm';\nimport AddBillingForm from '../forms/add/AddBillingForm';\nimport AddVigilanceForm from '../forms/add/AddVigilanceForm';\nimport loadingGif from '../../assets/loading.gif';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt,\n  faBath\n} from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass VisitDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    selectedPatient: null,\n    selectedVisit: null,\n    selectedAppointment: null,\n    addAttachmentForm: false,\n    addAttachmentArgs: null,\n    showAddConsultantForm: false,\n    users: null,\n    calEvent: {\n      title: this.props.visit.title,\n      description: this.props.visit.appointment.description,\n      location: this.props.visit.appointment.location,\n      startTime: moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.visit.time+':00-05:00',\n      endTime: moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.visit.time+':00-05:00',\n    },\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.propsVisit = this.props.visit;\n  }\n\ncomponentDidMount () {\n  console.log('...visit details component mounted...');\n  let seshStore;\n  if (sessionStorage.getItem('logInfo')) {\n    seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getPocketVars(seshStore);\n  }\n  if (this.context.role === 'Admin' ||\n      this.context.role === 'Doctor' ||\n      this.context.role === 'Nurse'\n    ) {\n    this.setState({\n      canDelete: true\n    })\n  }\n\n  this.getAllUsers(seshStore);\n}\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n  console.log('...retriving pocketVars..');\n  this.context.setUserAlert('...retriving pocketVars..')\n  const token = args.token;\n  const activityId = args.activityId;\n  const requestBody = {\n        query:`\n          query {getPocketVars(\n            activityId:\"${activityId}\")}\n        `};\n\n  fetch('http://localhost:8088/graphql', {\n    method: 'POST',\n    body: JSON.stringify(requestBody),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + token\n    }\n  })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (resData.errors) {\n        this.setState({userAlert: resData.errors[0].message})\n      } else {\n        let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n        console.log('...retriving pocketVars success...');\n        this.context.setUserAlert('...retriving pocketVars success...')\n        this.setState({\n          pocketVars: pocketVarsParsed\n        });\n      }\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n    });\n  }\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,employmentDate,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n        activityA: `getAllUsers?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nsubmitAddComplaintForm = (event) => {\n  event.preventDefault();\n  console.log('...adding complaint...');\n  this.context.setUserAlert('...adding complaint...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = event.target.title.value;\n  const description = event.target.description.value;\n  const anamnesis = event.target.anamnesis.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0 ||\n      anamnesis.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/complaint/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'complaint attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'complaint attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'complaint attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'complaint attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitComplaint(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${title}\",\n            complaintDescription:\"${description}\",\n            complaintAnamnesis:\"${anamnesis}\",\n            complaintAttachment:\"${file2Path}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitComplaint);\n      let responseAlert = '...complaint add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitComplaint)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitComplaint,\n        activityA: `addVisitComplaint?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitComplaint;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteComplaint = (args) => {\n\n  console.log('...deleting complaint...');\n  this.context.setUserAlert('...deleting complaint...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = args.title;\n  const description = args.description;\n  const anamnesis = args.anamnesis;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitComplaint(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${title}\",\n            complaintDescription:\"${description}\",\n            complaintAnamnesis:\"${anamnesis}\",\n            complaintAttachments:\"${attachments}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitComplaint);\n      let responseAlert = '...complaint delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitComplaint)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitComplaint,\n        activityA: `deleteVisitComplaint?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitComplaint;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/complaint/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/complaint/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `complaint attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddSurveyForm = (event) => {\n  event.preventDefault();\n  console.log('...adding survey...');\n  this.context.setUserAlert('...adding survey...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/survey/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'survey attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'survey attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'survey attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'survey attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitSurvey(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          surveyTitle:\"${title}\",\n          surveyDescription:\"${description}\",\n          surveyAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitSurvey);\n      let responseAlert = '...survey add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitSurvey)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitSurvey,\n        activityA: `addVisitSurvey?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitSurvey;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteSurvey = (args) => {\n\n  console.log('...deleting survey...');\n  this.context.setUserAlert('...deleting survey...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = args.title;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitSurvey(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          surveyTitle:\"${title}\",\n          surveyDescription:\"${description}\",\n          surveyAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitSurvey);\n      let responseAlert = '...survey delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitSurvey)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitSurvey,\n        activityA: `deleteVisitSurvey?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitSurvey;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/survey/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/survey/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `survey attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddSystematicInquiryForm = (event) => {\n  event.preventDefault();\n  console.log('...adding systematicInquiry...');\n  this.context.setUserAlert('...adding systematicInquiry...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/systematicInquiry/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'systematicInquiry attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'systematicInquiry attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'systematicInquiry attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'systematicInquiry attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitSysInquiry(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          systematicInquiryTitle:\"${title}\",\n          systematicInquiryDescription:\"${description}\",\n          systematicInquiryAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitSysInquiry);\n      let responseAlert = '...systematicInquiry add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitSysInquiry)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitSysInquiry,\n        activityA: `addVisitSysInquiry?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitSysInquiry;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteSystematicInquiry = (args) => {\n\n  console.log('...deleting systematicInquiry...');\n  this.context.setUserAlert('...deleting systematicInquiry...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = args.title;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitSysInquiry(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          systematicInquiryTitle:\"${title}\",\n          systematicInquiryDescription:\"${description}\",\n          systematicInquiryAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitSysInquiry);\n      let responseAlert = '...sys inquiry delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitSysInquiry)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitSysInquiry,\n        activityA: `deleteVisitSysInquiry?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitSysInquiry;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/systematicInquiry/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/systematicInquiry/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `systematicInquiry attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddVitalsForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Vitals...');\n  this.context.setUserAlert('...adding Vitals...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const pr = event.target.pr.value;\n  const bp1 = event.target.bp1.value;\n  const bp2 = event.target.bp2.value;\n  const rr = event.target.rr.value;\n  const temp = event.target.temp.value;\n  const ps02 = event.target.ps02.value;\n  const heightUnit = event.target.heightUnit.value;\n  const heightValue = event.target.heightValue.value;\n  const weightUnit = event.target.weightUnit.value;\n  const weightValue = event.target.weightValue.value;\n  const bmi = event.target.bmi.value;\n  const urineType = event.target.urineType.value;\n  const urineValue = event.target.urineValue.value;\n\n  let requestBody = {\n    query: `\n      mutation {addVisitVitals(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          vitalsPr:${pr},\n          vitalsBp1:${bp1},\n          vitalsBp2:${bp2},\n          vitalsRr:${rr},\n          vitalsTemp:${temp},\n          vitalsPs02:${ps02},\n          vitalsHeightUnit:\"${heightUnit}\",\n          vitalsHeightValue:${heightValue},\n          vitalsWeightUnit:\"${weightUnit}\",\n          vitalsWeightValue:${weightValue},\n          vitalsBmi:${bmi},\n          vitalsUrineType:\"${urineType}\",\n          vitalsUrineValue:\"${urineValue}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitVitals);\n      let responseAlert = '...Vitals add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitVitals)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitVitals,\n        activityA: `addVisitVitals?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitVitals;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteVitals = (args) => {\n\n  console.log('...deleting Vitals...');\n  this.context.setUserAlert('...deleting Vitals...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const pr = args.pr;\n  const bp1 = args.bp1;\n  const bp2 = args.bp2;\n  const rr = args.rr;\n  const temp = args.temp;\n  const ps02 = args.ps02;\n  const heightUnit = args.heightUnit;\n  const heightValue = args.heightValue;\n  const weightUnit = args.weightUnit;\n  const weightValue = args.weightValue;\n  const bmi = args.bmi;\n  const urineType = args.urine.type;\n  const urineValue = args.urine.value;\n\n  let requestBody = {\n    query: `\n    mutation {deleteVisitVitals(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        vitalsPr:${pr},\n        vitalsBp1:${bp1},\n        vitalsBp2:${bp2},\n        vitalsRr:${rr},\n        vitalsTemp:${temp},\n        vitalsPs02:${ps02},\n        vitalsHeightUnit:\"${heightUnit}\",\n        vitalsHeightValue:${heightValue},\n        vitalsWeightUnit:\"${weightUnit}\",\n        vitalsWeightValue:${weightValue},\n        vitalsBmi:${bmi},\n        vitalsUrineType:\"${urineType}\",\n        vitalsUrineValue:\"${urineValue}\"\n      })\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitVitals);\n      let responseAlert = '...vitals delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitVitals)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitVitals,\n        activityA: `deleteVisitVitals?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitVitals;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddExaminationForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Examination...');\n  this.context.setUserAlert('...adding Examination...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const general = event.target.general.value;\n  const area = event.target.area.value;\n  const type = event.target.type.value;\n  const measure = event.target.measure.value;\n  const value = event.target.value.value;\n  const description = event.target.description.value;\n  const followUp = event.target.followUp.checked;\n  const attachment = event.target.attachment.value;\n\n  if (\n      general.trim().length === 0 ||\n      area.trim().length === 0 ||\n      type.trim().length === 0 ||\n      measure.trim().length === 0 ||\n      value.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/examination/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'examination attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'examination attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'examination attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'examination attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitExamination(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          examinationGeneral:\"${general}\",\n          examinationArea:\"${area}\",\n          examinationType:\"${type}\",\n          examinationMeasure:\"${measure}\",\n          examinationValue:\"${value}\",\n          examinationDescription:\"${description}\",\n          examinationFollowUp:${followUp},\n          examinationAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitExamination);\n      let responseAlert = '...Examination add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitExamination)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitExamination,\n        activityA: `addVisitExamination?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitExamination;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteExamination = (args) => {\n\n  console.log('...deleting Examination...');\n  this.context.setUserAlert('...deleting Examination...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const general = args.general;\n  const area = args.area;\n  const type = args.type;\n  const measure = args.measure;\n  const value = args.value;\n  const description = args.description;\n  const followUp = args.followUp;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitExamination(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          examinationGeneral:\"${general}\",\n          examinationArea:\"${area}\",\n          examinationType:\"${type}\",\n          examinationMeasure:\"${measure}\",\n          examinationValue:\"${value}\",\n          examinationDescription:\"${description}\",\n          examinationFollowUp:${followUp},\n          examinationAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitExamination);\n      let responseAlert = '...Examination delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitExamination)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitExamination,\n        activityA: `deleteVisitExamination?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitExamination;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/examination/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/examination/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `examination attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddInvestigationForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Investigation...');\n  this.context.setUserAlert('...adding Investigation...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/investigation/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'investigation attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'investigation attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'investigation attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'investigation attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitInvestigation(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          investigationTitle:\"${title}\",\n          investigationType:\"${type}\",\n          investigationDescription:\"${description}\",\n          investigationAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitInvestigation);\n      let responseAlert = '...Investigation add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitInvestigation)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitInvestigation,\n        activityA: `addVisitInvestigation?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitInvestigation;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteInvestigation = (args) => {\n\n  console.log('...deleting Investigation...');\n  this.context.setUserAlert('...deleting Investigation...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitInvestigation(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          investigationTitle:\"${title}\",\n          investigationType:\"${type}\",\n          investigationDescription:\"${description}\",\n          investigationAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitInvestigation);\n      let responseAlert = '...Investigation delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitInvestigation)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitInvestigation,\n        activityA: `deleteVisitInvestigation?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitInvestigation;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/investigation/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/investigation/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `investigation attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddDiagnosisForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Diagnosis...');\n  this.context.setUserAlert('...adding Diagnosis...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/diagnosis/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'diagnosis attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'diagnosis attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'diagnosis attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'diagnosis attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitDiagnosis(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          diagnosisTitle:\"${title}\",\n          diagnosisType:\"${type}\",\n          diagnosisDescription:\"${description}\",\n          diagnosisAttachment:\"${file2Path}\"\n        })\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitDiagnosis);\n      let responseAlert = '...Diagnosis add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitDiagnosis)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitDiagnosis,\n        activityA: `addVisitDiagnosis?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitDiagnosis;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteDiagnosis = (args) => {\n\n  console.log('...deleting Diagnosis...');\n  this.context.setUserAlert('...deleting Diagnosis...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitDiagnosis(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          diagnosisTitle:\"${title}\",\n          diagnosisType:\"${type}\",\n          diagnosisDescription:\"${description}\",\n          diagnosisAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitDiagnosis);\n      let responseAlert = '...Diagnosis delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitDiagnosis)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitDiagnosis,\n        activityA: `deleteVisitDiagnosis?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitDiagnosis;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/diagnosis/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/diagnosis/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `diagnosis attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddTreatmentForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Treatment...');\n  this.context.setUserAlert('...adding Treatment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const dose = event.target.dose.value;\n  const frequency = event.target.frequency.value;\n  const attachment = event.target.attachment.value;\n\n\n  if (\n      title.trim().length === 0 ||\n      type.trim().length === 0 ||\n      description.trim().length === 0 ||\n      dose.trim().length === 0 ||\n      frequency.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/treatment/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'treatment attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'treatment attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'treatment attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'treatment attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n        mutation {addVisitTreatment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${type}\",\n            treatmentTitle:\"${title}\",\n            treatmentDescription:\"${description}\",\n            treatmentDose:\"${dose}\",\n            treatmentFrequency:\"${frequency}\",\n            treatmentAttachment:\"${file2Path}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitTreatment);\n      let responseAlert = '...Treatment add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitTreatment)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitTreatment,\n        activityA: `addVisitTreatment?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitTreatment;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteTreatment = (args) => {\n\n  console.log('...deleting Treatment...');\n  this.context.setUserAlert('...deleting Treatment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const dose = args.dose;\n  const frequency = args.frequency;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n        mutation {deleteVisitTreatment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${type}\",\n            treatmentTitle:\"${title}\",\n            treatmentDescription:\"${description}\",\n            treatmentDose:\"${dose}\",\n            treatmentFrequency:\"${frequency}\",\n            treatmentAttachments:\"${attachments}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitTreatment);\n      let responseAlert = '...Treatment delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitTreatment)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitTreatment,\n        activityA: `deleteVisitTreatment?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitTreatment;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/treatment/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/treatment/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `treatment attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddBillingForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Billing...');\n  this.context.setUserAlert('...adding Billing...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const amount = event.target.amount.value;\n  const paid = event.target.paid.checked;\n  const notes = event.target.notes.value;\n  const attachment = event.target.attachment.value;\n\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0 ||\n      amount <= 0 ||\n      notes.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/billing/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'billing attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'billing attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'billing attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'billing attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n        mutation {addVisitBilling(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${title}\",\n            billingType:\"${type}\",\n            billingDescription:\"${description}\",\n            billingAmount:${amount},\n            billingPaid:${paid},\n            billingAttachment:\"${file2Path}\",\n            billingNotes:\"${notes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitBilling);\n      let responseAlert = '...Billing add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitBilling)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitBilling,\n        activityA: `addVisitBilling?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitBilling;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteBilling = (args) => {\n\n  console.log('...deleting Billing...',args);\n  this.context.setUserAlert('...deleting Billing...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const amount = args.amount;\n  const paid = args.paid;\n  const notes = args.notes;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n        mutation {deleteVisitBilling(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${title}\",\n            billingType:\"${type}\",\n            billingDescription:\"${description}\",\n            billingAmount:${amount},\n            billingPaid:${paid},\n            billingAttachments:\"${attachments}\",\n            billingNotes:\"${notes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitBilling);\n      let responseAlert = '...Billing delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitBilling)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitBilling,\n        activityA: `deleteVisitBilling?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitBilling;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/billing/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/billing/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `billing attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Image...');\n  this.context.setUserAlert('...adding Image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/images';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n        mutation {addVisitImage(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            imageName:\"${imageName}\",\n            imageType:\"${imageType}\",\n            imagePath:\"${imagePath}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitImage);\n      let responseAlert = '...Image add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitImage)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitImage,\n        activityA: `addVisitImage?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n\n  console.log('...deleting Image...',args);\n  this.context.setUserAlert('...deleting Image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const name = args.name;\n  const type = args.type;\n  const path = args.path;\n\n  let requestBody = {\n    query: `\n    mutation {deleteVisitImage(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        imageName:\"${name}\",\n        imageType:\"${type}\",\n        imagePath:\"${path}\"\n      })\n    {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitImage);\n      let responseAlert = '...Image delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitImage)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitImage,\n        activityA: `deleteVisitImage?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'visit/'+visitId+'/images';\n      const filename = args.name;\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding File...');\n  this.context.setUserAlert('...adding File...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n        mutation {addVisitFile(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            fileName:\"${file2Name}\",\n            fileType:\"${file2Type}\",\n            filePath:\"${file2Path}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitFile);\n      let responseAlert = '...File add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitFile)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitFile,\n        activityA: `addVisitFile?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n\n  console.log('...deleting File...',args);\n  this.context.setUserAlert('...deleting File...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const name = args.name;\n  const type = args.type;\n  const path = args.path;\n\n  let requestBody = {\n    query: `\n    mutation {deleteVisitFile(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        fileName:\"${name}\",\n        fileType:\"${type}\",\n        filePath:\"${path}\"\n      })\n    {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitFile);\n      let responseAlert = '...File delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitFile)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitFile,\n        activityA: `deleteVisitFile?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'visit/'+visitId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddVigilanceForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Vigilance...');\n  this.context.setUserAlert('...adding Vigilance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n    mutation {addVisitVigilance(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        vigilanceChronicIllnessDiabetesMedication:${event.target.vigilanceChronicIllnessDiabetesMedication.checked},\n        vigilanceChronicIllnessDiabetesTesting:${event.target.vigilanceChronicIllnessDiabetesTesting.checked},\n        vigilanceChronicIllnessDiabetesComment:\"${event.target.vigilanceChronicIllnessDiabetesComment.value}\",\n        vigilanceChronicIllnessHbpMedication:${event.target.vigilanceChronicIllnessHbpMedication.checked},\n        vigilanceChronicIllnessHbpTesting:${event.target.vigilanceChronicIllnessHbpTesting.checked},\n        vigilanceChronicIllnessHbpComment:\"${event.target.vigilanceChronicIllnessHbpComment.value}\",\n        vigilanceChronicIllnessDyslipidemiaMedication:${event.target.vigilanceChronicIllnessDyslipidemiaMedication.checked},\n        vigilanceChronicIllnessDyslipidemiaTesting:${event.target.vigilanceChronicIllnessDyslipidemiaTesting.checked},\n        vigilanceChronicIllnessDyslipidemiaComment:\"${event.target.vigilanceChronicIllnessDyslipidemiaComment.value}\",\n        vigilanceChronicIllnessCadMedication:${event.target.vigilanceChronicIllnessCadMedication.checked},\n        vigilanceChronicIllnessCadTesting:${event.target.vigilanceChronicIllnessCadTesting.checked},\n        vigilanceChronicIllnessCadComment:\"${event.target.vigilanceChronicIllnessCadComment.value}\",\n        vigilanceLifestyleWeightMedication:${event.target.vigilanceLifestyleWeightMedication.checked},\n        vigilanceLifestyleWeightTesting:${event.target.vigilanceLifestyleWeightTesting.checked},\n        vigilanceLifestyleWeightComment:\"${event.target.vigilanceLifestyleWeightComment.value}\",\n        vigilanceLifestyleDietMedication:${event.target.vigilanceLifestyleDietMedication.checked},\n        vigilanceLifestyleDietTesting:${event.target.vigilanceLifestyleDietTesting.checked},\n        vigilanceLifestyleDietComment:\"${event.target.vigilanceLifestyleDietComment.value}\",\n        vigilanceLifestyleSmokingMedication:${event.target.vigilanceLifestyleSmokingMedication.checked},\n        vigilanceLifestyleSmokingTesting:${event.target.vigilanceLifestyleSmokingTesting.checked},\n        vigilanceLifestyleSmokingComment:\"${event.target.vigilanceLifestyleSmokingComment.value}\",\n        vigilanceLifestyleSubstanceAbuseMedication:${event.target.vigilanceLifestyleSubstanceAbuseMedication.checked},\n        vigilanceLifestyleSubstanceAbuseTesting:${event.target.vigilanceLifestyleSubstanceAbuseTesting.checked},\n        vigilanceLifestyleSubstanceAbuseComment:\"${event.target.vigilanceLifestyleSubstanceAbuseComment.value}\",\n        vigilanceLifestyleExerciseMedication:${event.target.vigilanceLifestyleExerciseMedication.checked},\n        vigilanceLifestyleExerciseTesting:${event.target.vigilanceLifestyleExerciseTesting.checked},\n        vigilanceLifestyleExerciseComment:\"${event.target.vigilanceLifestyleExerciseComment.value}\",\n        vigilanceLifestyleAllergiesMedication:${event.target.vigilanceLifestyleAllergiesMedication.checked},\n        vigilanceLifestyleAllergiesTesting:${event.target.vigilanceLifestyleAllergiesTesting.checked},\n        vigilanceLifestyleAllergiesComment:\"${event.target.vigilanceLifestyleAllergiesComment.value}\",\n        vigilanceLifestyleAsthmaMedication:${event.target.vigilanceLifestyleAsthmaMedication.checked},\n        vigilanceLifestyleAsthmaTesting:${event.target.vigilanceLifestyleAsthmaTesting.checked},\n        vigilanceLifestyleAsthmaComment:\"${event.target.vigilanceLifestyleAsthmaComment.value}\",\n        vigilanceScreeningBreastMedication:${event.target.vigilanceScreeningBreastMedication.checked},\n        vigilanceScreeningBreastTesting:${event.target.vigilanceScreeningBreastTesting.checked},\n        vigilanceScreeningBreastComment:\"${event.target.vigilanceScreeningBreastComment.value}\",\n        vigilanceScreeningProstateMedication:${event.target.vigilanceScreeningProstateMedication.checked},\n        vigilanceScreeningProstateTesting:${event.target.vigilanceScreeningProstateTesting.checked},\n        vigilanceScreeningProstateComment:\"${event.target.vigilanceScreeningProstateComment.value}\",\n        vigilanceScreeningCervixMedication:${event.target.vigilanceScreeningCervixMedication.checked},\n        vigilanceScreeningCervixTesting:${event.target.vigilanceScreeningCervixTesting.checked},\n        vigilanceScreeningCervixComment:\"${event.target.vigilanceScreeningCervixComment.value}\",\n        vigilanceScreeningColonMedication:${event.target.vigilanceScreeningColonMedication.checked},\n        vigilanceScreeningColonTesting:${event.target.vigilanceScreeningColonTesting.checked},\n        vigilanceScreeningColonComment:\"${event.target.vigilanceScreeningColonComment.value}\",\n        vigilanceScreeningDentalMedication:${event.target.vigilanceScreeningDentalMedication.checked},\n        vigilanceScreeningDentalTesting:${event.target.vigilanceScreeningDentalTesting.checked},\n        vigilanceScreeningDentalComment:\"${event.target.vigilanceScreeningDentalComment.value}\",\n        vigilanceVaccinesInfluenzaMedication:${event.target.vigilanceVaccinesInfluenzaMedication.checked},\n        vigilanceVaccinesInfluenzaTesting:${event.target.vigilanceVaccinesInfluenzaTesting.checked},\n        vigilanceVaccinesInfluenzaComment:\"${event.target.vigilanceVaccinesInfluenzaComment.value}\",\n        vigilanceVaccinesVaricellaMedication:${event.target.vigilanceVaccinesVaricellaMedication.checked},\n        vigilanceVaccinesVaricellaTesting:${event.target.vigilanceVaccinesVaricellaTesting.checked},\n        vigilanceVaccinesVaricellaComment:\"${event.target.vigilanceVaccinesVaricellaComment.value}\",\n        vigilanceVaccinesHpvMedication:${event.target.vigilanceVaccinesHpvMedication.checked},\n        vigilanceVaccinesHpvTesting:${event.target.vigilanceVaccinesHpvTesting.checked},\n        vigilanceVaccinesHpvComment:\"${event.target.vigilanceVaccinesHpvComment.value}\",\n        vigilanceVaccinesMmrMedication:${event.target.vigilanceVaccinesMmrMedication.checked},\n        vigilanceVaccinesMmrTesting:${event.target.vigilanceVaccinesMmrTesting.checked},\n        vigilanceVaccinesMmrComment:\"${event.target.vigilanceVaccinesMmrComment.value}\",\n        vigilanceVaccinesTetanusMedication:${event.target.vigilanceVaccinesTetanusMedication.checked},\n        vigilanceVaccinesTetanusTesting:${event.target.vigilanceVaccinesTetanusTesting.checked},\n        vigilanceVaccinesTetanusComment:\"${event.target.vigilanceVaccinesTetanusComment.value}\",\n        vigilanceVaccinesPneumovaxMedication:${event.target.vigilanceVaccinesPneumovaxMedication.checked},\n        vigilanceVaccinesPneumovaxTesting:${event.target.vigilanceVaccinesPneumovaxTesting.checked},\n        vigilanceVaccinesPneumovaxComment:\"${event.target.vigilanceVaccinesPneumovaxComment.value}\",\n        vigilanceVaccinesOtherName:\"${event.target.vigilanceVaccinesOtherName.value}\",\n        vigilanceVaccinesOtherMedication:${event.target.vigilanceVaccinesOtherMedication.checked},\n        vigilanceVaccinesOtherTesting:${event.target.vigilanceVaccinesOtherTesting.checked},\n        vigilanceVaccinesOtherComment:\"${event.target.vigilanceVaccinesOtherComment.value}\"\n      })\n    {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitVigilance);\n      let responseAlert = '...Vigilance add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitVigilance)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitVigilance,\n        activityA: `addVisitVigilance?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitVigilance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteVigilance = (args) => {\n\n  console.log('...deleting Vigilance...');\n  this.context.setUserAlert('...deleting Vigilance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n        mutation {deleteVisitVigilance(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            vigilanceChronicIllnessDiabetesMedication:${args.chronicIllness.diabetes.medication},\n            vigilanceChronicIllnessDiabetesTesting:${args.chronicIllness.diabetes.testing},\n            vigilanceChronicIllnessDiabetesComment:\"${args.chronicIllness.diabetes.comment}\",\n            vigilanceChronicIllnessHbpMedication:${args.chronicIllness.hbp.medication},\n            vigilanceChronicIllnessHbpTesting:${args.chronicIllness.hbp.testing},\n            vigilanceChronicIllnessHbpComment:\"${args.chronicIllness.hbp.comment}\",\n            vigilanceChronicIllnessDyslipidemiaMedication:${args.chronicIllness.dyslipidemia.medication},\n            vigilanceChronicIllnessDyslipidemiaTesting:${args.chronicIllness.dyslipidemia.testing},\n            vigilanceChronicIllnessDyslipidemiaComment:\"${args.chronicIllness.dyslipidemia.comment}\",\n            vigilanceChronicIllnessCadMedication:${args.chronicIllness.cad.medication},\n            vigilanceChronicIllnessCadTesting:${args.chronicIllness.cad.testing},\n            vigilanceChronicIllnessCadComment:\"${args.chronicIllness.cad.comment}\",\n            vigilanceLifestyleWeightMedication:${args.lifestyle.weight.medication},\n            vigilanceLifestyleWeightTesting:${args.lifestyle.weight.testing},\n            vigilanceLifestyleWeightComment:\"${args.lifestyle.weight.comment}\",\n            vigilanceLifestyleDietMedication:${args.lifestyle.diet.medication},\n            vigilanceLifestyleDietTesting:${args.lifestyle.diet.testing},\n            vigilanceLifestyleDietComment:\"${args.lifestyle.diet.comment}\",\n            vigilanceLifestyleSmokingMedication:${args.lifestyle.smoking.medication},\n            vigilanceLifestyleSmokingTesting:${args.lifestyle.smoking.testing},\n            vigilanceLifestyleSmokingComment:\"${args.lifestyle.smoking.comment}\",\n            vigilanceLifestyleSubstanceAbuseMedication:${args.lifestyle.substanceAbuse.medication},\n            vigilanceLifestyleSubstanceAbuseTesting:${args.lifestyle.substanceAbuse.testing},\n            vigilanceLifestyleSubstanceAbuseComment:\"${args.lifestyle.substanceAbuse.comment}\",\n            vigilanceLifestyleExerciseMedication:${args.lifestyle.exercise.medication},\n            vigilanceLifestyleExerciseTesting:${args.lifestyle.exercise.testing},\n            vigilanceLifestyleExerciseComment:\"${args.lifestyle.exercise.comment}\",\n            vigilanceLifestyleAllergiesMedication:${args.lifestyle.allergies.medication},\n            vigilanceLifestyleAllergiesTesting:${args.lifestyle.allergies.testing},\n            vigilanceLifestyleAllergiesComment:\"${args.lifestyle.allergies.comment}\",\n            vigilanceLifestyleAsthmaMedication:${args.lifestyle.asthma.medication},\n            vigilanceLifestyleAsthmaTesting:${args.lifestyle.asthma.testing},\n            vigilanceLifestyleAsthmaComment:\"${args.lifestyle.asthma.comment}\",\n            vigilanceScreeningBreastMedication:${args.screening.breast.medication},\n            vigilanceScreeningBreastTesting:${args.screening.breast.testing},\n            vigilanceScreeningBreastComment:\"${args.screening.breast.comment}\",\n            vigilanceScreeningProstateMedication:${args.screening.prostate.medication},\n            vigilanceScreeningProstateTesting:${args.screening.prostate.testing},\n            vigilanceScreeningProstateComment:\"${args.screening.prostate.comment}\",\n            vigilanceScreeningCervixMedication:${args.screening.cervix.medication},\n            vigilanceScreeningCervixTesting:${args.screening.cervix.testing},\n            vigilanceScreeningCervixComment:\"${args.screening.cervix.comment}\",\n            vigilanceScreeningColonMedication:${args.screening.colon.medication},\n            vigilanceScreeningColonTesting:${args.screening.colon.testing},\n            vigilanceScreeningColonComment:\"${args.screening.colon.comment}\",\n            vigilanceScreeningDentalMedication:${args.screening.dental.medication},\n            vigilanceScreeningDentalTesting:${args.screening.dental.testing},\n            vigilanceScreeningDentalComment:\"${args.screening.dental.comment}\",\n            vigilanceVaccinesInfluenzaMedication:${args.vaccines.influenza.medication},\n            vigilanceVaccinesInfluenzaTesting:${args.vaccines.influenza.testing},\n            vigilanceVaccinesInfluenzaComment:\"${args.vaccines.influenza.comment}\",\n            vigilanceVaccinesVaricellaMedication:${args.vaccines.varicella.medication},\n            vigilanceVaccinesVaricellaTesting:${args.vaccines.varicella.testing},\n            vigilanceVaccinesVaricellaComment:\"${args.vaccines.varicella.comment}\",\n            vigilanceVaccinesHpvMedication:${args.vaccines.hpv.medication},\n            vigilanceVaccinesHpvTesting:${args.vaccines.hpv.testing},\n            vigilanceVaccinesHpvComment:\"${args.vaccines.hpv.comment}\",\n            vigilanceVaccinesMmrMedication:${args.vaccines.mmr.medication},\n            vigilanceVaccinesMmrTesting:${args.vaccines.mmr.testing},\n            vigilanceVaccinesMmrComment:\"${args.vaccines.mmr.comment}\",\n            vigilanceVaccinesTetanusMedication:${args.vaccines.tetanus.medication},\n            vigilanceVaccinesTetanusTesting:${args.vaccines.tetanus.testing},\n            vigilanceVaccinesTetanusComment:\"${args.vaccines.tetanus.comment}\",\n            vigilanceVaccinesPneumovaxMedication:${args.vaccines.pneumovax.medication},\n            vigilanceVaccinesPneumovaxTesting:${args.vaccines.pneumovax.testing},\n            vigilanceVaccinesPneumovaxComment:\"${args.vaccines.pneumovax.comment}\",\n            vigilanceVaccinesOtherName:\"${args.vaccines.other.name}\",\n            vigilanceVaccinesOtherMedication:${args.vaccines.other.medication},\n            vigilanceVaccinesOtherTesting:${args.vaccines.other.testing},\n            vigilanceVaccinesOtherComment:\"${args.vaccines.other.comment}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitVigilance);\n      let responseAlert = '...Vigilance delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitVigilance)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitVigilance,\n        activityA: `deleteVisitFile?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitVigilance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddUserForm = (event) => {\n  event.preventDefault();\n  console.log('...adding consultant...');\n  this.context.setUserAlert('...adding consultant...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = event.target.user.value;\n  const visitId = this.props.visit._id;\n\n  const userRole = this.state.users.filter(x => x._id === consultantId)[0].role;\n  if (userRole !== 'Doctor' && userRole !== 'Nurse') {\n    console.log('...please choose a Doctor or Nurse to add please...');\n    this.context.setUserAlert('...please choose a Doctor or Nurse to add please...')\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitConsultant(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitConsultant);\n      let responseAlert = '...add consultant success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `addVisitConsultant?activityId:${activityId},visitId:${visitId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteConsultant = (args) => {\n  console.log('...deleting consultant...');\n  this.context.setUserAlert('...deleting consultant...')\n  this.setState({isLoading: true});\n  //\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = args._id;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitConsultant(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitConsultant);\n      let responseAlert = '...delete consultant success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteVisitConsultant?activityId:${activityId},visitId:${visitId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartAddAttachment = (args) => {\n  console.log('...start add attachment...');\n  this.setState({\n    addAttachmentForm: true,\n    addAttachmentArgs: args\n  })\n}\ncancelAddAttachment = () => {\n  this.setState({\n    addAttachmentForm: false\n  })\n}\naddAttachment = (event) => {\n  event.preventDefault();\n  console.log('...adding attachment...');\n  this.context.setUserAlert('...adding attachment...');\n  this.setState({\n    isLoading: true,\n    addAttachmentForm: false\n  })\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  let args = this.state.addAttachmentArgs;\n  let field = args.field;\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/'+field+'/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading allergy attachment ...\")\n    console.log('...s3 uploading allergy attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: `${field} attachment`,\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: `${field} attachment`,\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody;\n\n  if (field === 'complaint') {\n    let complaintTitle = args.data.title;\n    let complaintDescription = args.data.description;\n    let complaintAnamnesis = args.data.anamnesis;\n    let complaintAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitComplaintAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${complaintTitle}\",\n            complaintDescription:\"${complaintDescription}\",\n            complaintAnamnesis:\"${complaintAnamnesis}\",\n            complaintAttachment:\"${complaintAttachment}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'survey') {\n    let surveyTitle = args.data.title;\n    let surveyDescription = args.data.description;\n    let surveyAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitSurveyAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            surveyTitle:\"${surveyTitle}\",\n            surveyDescription:\"${surveyDescription}\",\n            surveyAttachment:\"${surveyAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'systematicInquiry') {\n    let systematicInquiryTitle = args.data.title;\n    let systematicInquiryDescription = args.data.description;\n    let systematicInquiryAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitSysInquiryAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            systematicInquiryTitle:\"${systematicInquiryTitle}\",\n            systematicInquiryDescription:\"${systematicInquiryDescription}\",\n            systematicInquiryAttachment:\"${systematicInquiryAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'examination') {\n    let examinationGeneral = args.data.general;\n    let examinationArea = args.data.area;\n    let examinationType = args.data.type;\n    let examinationMeasure = args.data.measure;\n    let examinationValue = args.data.value;\n    let examinationDescription = args.data.description;\n    let examinationFollowUp = args.data.followUp;\n    let examinationAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitExaminationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            examinationGeneral:\"${examinationGeneral}\",\n            examinationArea:\"${examinationArea}\",\n            examinationType:\"${examinationType}\",\n            examinationMeasure:\"${examinationMeasure}\",\n            examinationValue:\"${examinationValue}\",\n            examinationDescription:\"${examinationDescription}\",\n            examinationFollowUp:${examinationFollowUp},\n            examinationAttachment:\"${examinationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'investigation') {\n    let investigationTitle = args.data.title;\n    let investigationType = args.data.type;\n    let investigationDescription = args.data.description;\n    let investigationAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitInvestigationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            investigationTitle:\"${investigationTitle}\",\n            investigationType:\"${investigationType}\",\n            investigationDescription:\"${investigationDescription}\",\n            investigationAttachment:\"${investigationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'diagnosis') {\n    let diagnosisTitle = args.data.title;\n    let diagnosisType = args.data.type;\n    let diagnosisDescription = args.data.description;\n    let diagnosisAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitDiagnosisAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            diagnosisTitle:\"${diagnosisTitle}\",\n            diagnosisType:\"${diagnosisType}\",\n            diagnosisDescription:\"${diagnosisDescription}\",\n            diagnosisAttachment:\"${diagnosisAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'treatment') {\n    let treatmentType = args.data.type;\n    let treatmentTitle = args.data.title;\n    let treatmentDescription = args.data.description;\n    let treatmentDose = args.data.dose;\n    let treatmentFrequency = args.data.frequency;\n    let treatmentAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitTreatmentAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${treatmentType}\",\n            treatmentTitle:\"${treatmentTitle}\",\n            treatmentDescription:\"${treatmentDescription}\",\n            treatmentDose:\"${treatmentDose}\",\n            treatmentFrequency:\"${treatmentFrequency}\",\n            treatmentAttachment:\"${treatmentAttachment}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'billing') {\n    let billingAmount = args.data.amount;\n    let billingPaid = args.data.paid;\n    let billingTitle = args.data.title;\n    let billingType = args.data.type;\n    let billingDescription = args.data.description;\n    let billingNotes = args.data.notes;\n    let billingAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitBillingAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${billingTitle}\",\n            billingType:\"${billingType}\",\n            billingDescription:\"${billingDescription}\",\n            billingAmount:${billingAmount},\n            billingPaid:${billingPaid},\n            billingAttachment:\"${billingAttachment}\",\n            billingNotes:\"${billingNotes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'complaint') {\n        // console.log('...resData...',resData.data.addVisitComplaintAttachment);\n      }\n      if (field === 'survey') {\n        // console.log('...resData...',resData.data.addVisitSurveyAttachment);\n      }\n      if (field === 'systematicInquiry') {\n        // console.log('...resData...',resData.data.addVisitSysInquiryAttachment);\n      }\n      if (field === 'examination') {\n        // console.log('...resData...',resData.data.addVisitExaminationAttachment);\n      }\n      if (field === 'investigation') {\n        // console.log('...resData...',resData.data.addVisitInvestigationAttachment);\n      }\n      if (field === 'diagnosis') {\n        // console.log('...resData...',resData.data.addVisitDiagnosisAttachment);\n      }\n      if (field === 'treatment') {\n        // console.log('...resData...',resData.data.addVisitTreatmentAttachment);\n      }\n      if (field === 'billing') {\n        // console.log('...resData...',resData.data.addVisitBillingAttachment);\n      }\n\n      let responseAlert = '...add attachment success!...';\n      let error = null;\n\n      if (field === 'complaint') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'survey') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'systematicInquiry') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'examination') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'investigation') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'diagnosis') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'treatment') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'billing') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'complaint') {\n        this.props.updateVisit(resData.data.addVisitComplaintAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitComplaintAttachment,\n          activityA: `addVisitComplaintAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'survey') {\n        this.props.updateVisit(resData.data.addVisitSurveyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitSurveyAttachment,\n          activityA: `addVisitSurveyAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'systematicInquiry') {\n        this.props.updateVisit(resData.data.addVisitSysInquiryAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitSysInquiryAttachment,\n          activityA: `addVisitSysInquiryAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'examination') {\n        this.props.updateVisit(resData.data.addVisitExaminationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitExaminationAttachment,\n          activityA: `addVisitExaminationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'investigation') {\n        this.props.updateVisit(resData.data.addVisitInvestigationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitInvestigationAttachment,\n          activityA: `addVisitInvestigationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'diagnosis') {\n        this.props.updateVisit(resData.data.addVisitDiagnosisAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitDiagnosisAttachment,\n          activityA: `addVisitDiagnosisAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'treatment') {\n        this.props.updateVisit(resData.data.addVisitTreatmentAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitTreatmentAttachment,\n          activityA: `addVisitTreatmentAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'billing') {\n        this.props.updateVisit(resData.data.addVisitBillingAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitBillingAttachment,\n          activityA: `addVisitBillingAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ndeleteAttachment = (args) => {\n  console.log('...deleting attachment...', args.type);\n  this.context.setUserAlert('...adding attachment...');\n  // this.setState({isLoading: true})\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const field = args.type;\n  const attachment = args.attachment;\n  const item = args.item;\n\n  let requestBody;\n\n  if (field === 'complaint') {\n    let complaintTitle = item.title;\n    let complaintDescription = item.description;\n    let complaintAnamnesis = item.anamnesis;\n    let complaintAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitComplaintAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${complaintTitle}\",\n            complaintDescription:\"${complaintDescription}\",\n            complaintAnamnesis:\"${complaintAnamnesis}\",\n            complaintAttachment:\"${complaintAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'survey') {\n    let surveyTitle = item.title;\n    let surveyDescription = item.description;\n    let surveyAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitSurveyAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            surveyTitle:\"${surveyTitle}\",\n            surveyDescription:\"${surveyDescription}\",\n            surveyAttachment:\"${surveyAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'systematicInquiry') {\n    let systematicInquiryTitle = item.title;\n    let systematicInquiryDescription = item.description;\n    let systematicInquiryAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitSysInquiryAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            systematicInquiryTitle:\"${systematicInquiryTitle}\",\n            systematicInquiryDescription:\"${systematicInquiryDescription}\",\n            systematicInquiryAttachment:\"${systematicInquiryAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'examination') {\n    let examinationGeneral = item.general;\n    let examinationArea = item.area;\n    let examinationType = item.type;\n    let examinationMeasure = item.measure;\n    let examinationValue = item.value;\n    let examinationDescription = item.description;\n    let examinationFollowUp = item.followUp;\n    let examinationAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitExaminationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            examinationGeneral:\"${examinationGeneral}\",\n            examinationArea:\"${examinationArea}\",\n            examinationType:\"${examinationType}\",\n            examinationMeasure:\"${examinationMeasure}\",\n            examinationValue:\"${examinationValue}\",\n            examinationDescription:\"${examinationDescription}\",\n            examinationFollowUp:${examinationFollowUp},\n            examinationAttachment:\"${examinationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'investigation') {\n    let investigationTitle = item.title;\n    let investigationType = item.type;\n    let investigationDescription = item.description;\n    let investigationAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitInvestigationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            investigationTitle:\"${investigationTitle}\",\n            investigationType:\"${investigationType}\",\n            investigationDescription:\"${investigationDescription}\",\n            investigationAttachment:\"${investigationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'diagnosis') {\n    let diagnosisTitle = item.title;\n    let diagnosisType = item.type;\n    let diagnosisDescription = item.description;\n    let diagnosisAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitDiagnosisAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            diagnosisTitle:\"${diagnosisTitle}\",\n            diagnosisType:\"${diagnosisType}\",\n            diagnosisDescription:\"${diagnosisDescription}\",\n            diagnosisAttachment:\"${diagnosisAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'treatment') {\n\n    let treatmentType = item.type;\n    let treatmentTitle = item.title;\n    let treatmentDescription = item.description;\n    let treatmentDose = item.dose;\n    let treatmentFrequency = item.frequency;\n    let treatmentAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitTreatmentAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${treatmentType}\",\n            treatmentTitle:\"${treatmentTitle}\",\n            treatmentDescription:\"${treatmentDescription}\",\n            treatmentDose:\"${treatmentDose}\",\n            treatmentFrequency:\"${treatmentFrequency}\",\n            treatmentAttachment:\"${treatmentAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'billing') {\n\n    let billingTitle = item.title;\n    let billingType = item.type;\n    let billingDescription = item.description;\n    let billingAmount = item.amount;\n    let billingPaid = item.paid;\n    let billingAttachment = attachment;\n    let billingNotes = item.notes;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitBillingAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${billingTitle}\",\n            billingType:\"${billingType}\",\n            billingDescription:\"${billingDescription}\",\n            billingAmount:${billingAmount},\n            billingPaid:${billingPaid},\n            billingAttachment:\"${billingAttachment}\",\n            billingNotes:\"${billingNotes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'complaint') {\n        // console.log('...resData...',resData.data.deleteVisitComplaintAttachment);\n      }\n      if (field === 'survey') {\n        // console.log('...resData...',resData.data.deleteVisitSurveyAttachment);\n      }\n      if (field === 'systematicInquiry') {\n        // console.log('...resData...',resData.data.deleteVisitSysInquiryAttachment);\n      }\n      if (field === 'examination') {\n        // console.log('...resData...',resData.data.deleteVisitExaminationAttachment);\n      }\n      if (field === 'investigation') {\n        // console.log('...resData...',resData.data.deleteVisitInvestigationAttachment);\n      }\n      if (field === 'diagnosis') {\n        // console.log('...resData...',resData.data.deleteVisitDiagnosisAttachment);\n      }\n      if (field === 'treatment') {\n        // console.log('...resData...',resData.data.deleteVisitTreatmentAttachment);\n      }\n      if (field === 'billing') {\n        // console.log('...resData...',resData.data.deleteVisitBillingAttachment);\n      }\n\n      let responseAlert = '...delete attachment success!...';\n      let error = null;\n\n      if (field === 'complaint') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'survey') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'systematicInquiry') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'examination') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'investigation') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'diagnosis') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'treatment') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'billing') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'complaint') {\n        this.props.updateVisit(resData.data.deleteVisitComplaintAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitComplaintAttachment,\n          activityA: `deleteVisitComplaintAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'survey') {\n        this.props.updateVisit(resData.data.deleteVisitSurveyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitSurveyAttachment,\n          activityA: `deleteVisitSurveyAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'systematicInquiry') {\n        this.props.updateVisit(resData.data.deleteVisitSysInquiryAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitSysInquiryAttachment,\n          activityA: `deleteVisitSysInquiryAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'examination') {\n        this.props.updateVisit(resData.data.deleteVisitExaminationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitExaminationAttachment,\n          activityA: `deleteVisitExaminationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'investigation') {\n        this.props.updateVisit(resData.data.deleteVisitInvestigationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitInvestigationAttachment,\n          activityA: `deleteVisitInvestigationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'diagnosis') {\n        this.props.updateVisit(resData.data.deleteVisitDiagnosisAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitDiagnosisAttachment,\n          activityA: `deleteVisitDiagnosisAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'treatment') {\n        this.props.updateVisit(resData.data.deleteVisitTreatmentAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitTreatmentAttachment,\n          activityA: `deleteVisitTreatmentAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'billing') {\n        this.props.updateVisit(resData.data.deleteVisitBillingAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitBillingAttachment,\n          activityA: `deleteVisitBillingAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'visit/'+visitId+'/'+field+'/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/'+field+'/attachments/';\n      const filename = attachment;\n      const filename2 = filename.replace(filePath2,'');\n      console.log('1:',filePath);\n      console.log('2:',filename);\n      console.log('3:',filename2);\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachment..')\n      console.log('...s3 deleting attachment..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `${field} attachment`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: `${field} attachment`,\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename2, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateVisitSingleField(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateVisitSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.updateVisitSingleField)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.updateVisitSingleField,\n        activityA: `updateVisitSingleField?activityId:${activityId},visitId:${visitId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.updateVisitSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ncompleteVisit = () => {\n  console.log('...completing visit...');\n  this.context.setUserAlert('...completing visit...')\n  this.setState({isLoading: true})\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n      mutation {completeVisitById(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\"\n      )\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.completeVisitById);\n      let responseAlert = '...visit completed!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.completeVisitById)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.completeVisitById,\n        activityA: `completeVisitById?activityId:${activityId},visitId:${visitId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.completeVisitById;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {!this.props.visit && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={3} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'consultant')}>Consultants</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'complaint')}>Complaints</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'survey')}>Survey</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'systematicInquiry')}>Systematic Inquiry</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'vitals')}>Vitals</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'examination')}>Examination</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'investigation')}>investigation</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"10\" onClick={this.menuSelect.bind(this, 'diagnosis')}>diagnosis</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"11\" onClick={this.menuSelect.bind(this, 'treatment')}>treatment</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"12\" onClick={this.menuSelect.bind(this, 'billing')}>billing</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"13\" onClick={this.menuSelect.bind(this, 'vigilance')}>vigilance</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"14\" onClick={this.menuSelect.bind(this, 'image')}>images</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"15\" onClick={this.menuSelect.bind(this, 'file')}>files</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'consultant' && (\n                  <FilterUserForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'complaint' && (\n                  <FilterComplaintForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'survey' && (\n                  <FilterSurveyForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'systematicInquiry' && (\n                  <FilterSystematicInquiryForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'vitals' && (\n                  <FilterVitalsForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'examination' && (\n                  <FilterExaminationForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'investigation' && (\n                  <FilterInvestigationForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'diagnosis' && (\n                  <FilterDiagnosisForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'treatment' && (\n                  <FilterTreatmentForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'billing' && (\n                  <FilterBillingForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'vigilance' && (\n                  <h3>Filter vigilance form</h3>\n                )}\n                {this.state.menuSelect === 'image' && (\n                  <FilterImageForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'file' && (\n                  <FilterFileForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n            )}\n          </Col>\n\n          {this.props.visit && (\n            <Col md={9} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdatePatientSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n                <Tab.Content className=\"tabContent\">\n                  <Tab.Pane eventKey=\"1\">\n                    Visit Basic:\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.title}</p>\n                        {this.context.role !== 'Staff' && (\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                        )}\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Type:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.type}</p>\n                        {this.context.role !== 'Staff' && (\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'type')}>Edit</Button>\n                        )}\n                        <p className=\"listGroupText\">subType:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.subType}</p>\n                        {this.context.role !== 'Staff' && (\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'subType')}>Edit</Button>\n                        )}\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <p className=\"listGroupText\">Time:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.time}</p>\n                        {this.context.role !== 'Staff' && (\n                          <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'time')}>Edit</Button>\n                        )}\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Patient:</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Name:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.patient.title}</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.patient.name}</p>\n                        <Link\n                          to={{\n                            pathname: \"/patients\",\n                            state: {patient: this.props.visit.patient._id}\n                          }}\n                        >\n                        <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                        </Link>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Attending Physician:</p>\n                      <p className=\"listGroupText bold\">{this.props.visit.patient.attendingPhysician}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Appointment:</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.appointment.title}</p>\n                        <p className=\"listGroupText\">Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.visit.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <Link\n                          to={{\n                            pathname: \"/appointments\",\n                            state: {appointment: this.props.visit.appointment._id}\n                          }}\n                        >\n                        <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                        </Link>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"2\">\n                    Visit Admin\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Id:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit._id}</p>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"3\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Consultant List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'consultant')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'consultant' &&\n                      this.state.users && (\n                        <AddUserForm\n                          onConfirm={this.submitAddUserForm}\n                          onCancel={this.cancelAdd}\n                          filter={this.state.filter}\n                          users={this.state.users}\n                        />\n                    )}\n                    <UserList\n                      filter={this.state.filter}\n                      authId={this.context.activityId}\n                      users={this.props.visit.consultants}\n                      visitPage={true}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteConsultant}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"4\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Complaint List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'complaint')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'complaint' && (\n                        <AddComplaintForm\n                          onConfirm={this.submitAddComplaintForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitComplaintList\n                      filter={this.state.filter}\n                      complaints={this.props.visit.complaints}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteComplaint}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"5\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Survey List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'survey')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'survey' && (\n                        <AddSurveyForm\n                          onConfirm={this.submitAddSurveyForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitSurveyList\n                      filter={this.state.filter}\n                      surveys={this.props.visit.surveys}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteSurvey}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"6\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit SystematicInquiry List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'systematicInquiry')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'systematicInquiry' && (\n                        <AddSystematicInquiryForm\n                          onConfirm={this.submitAddSystematicInquiryForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitSystematicInquiryList\n                      filter={this.state.filter}\n                      systematicInquiry={this.props.visit.systematicInquiry}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteSystematicInquiry}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"7\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Vitals List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'vitals')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'vitals' && (\n                        <AddVitalsForm\n                          onConfirm={this.submitAddVitalsForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitVitalsList\n                      filter={this.state.filter}\n                      vitals={this.props.visit.vitals}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteVitals}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"8\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Examination List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'examination')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'examination' && (\n                        <AddExaminationForm\n                          onConfirm={this.submitAddExaminationForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitExaminationList\n                      filter={this.state.filter}\n                      examination={this.props.visit.examination}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteExamination}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"9\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Investigation List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'investigation')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'investigation' && (\n                        <AddInvestigationForm\n                          onConfirm={this.submitAddInvestigationForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitInvestigationList\n                      filter={this.state.filter}\n                      investigation={this.props.visit.investigation}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteInvestigation}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"10\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Diagnosis List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'diagnosis')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'diagnosis' && (\n                        <AddDiagnosisForm\n                          onConfirm={this.submitAddDiagnosisForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitDiagnosisList\n                      filter={this.state.filter}\n                      diagnosis={this.props.visit.diagnosis}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteDiagnosis}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"11\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Treatment List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'treatment')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'treatment' && (\n                        <AddTreatmentForm\n                          onConfirm={this.submitAddTreatmentForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitTreatmentList\n                      filter={this.state.filter}\n                      treatment={this.props.visit.treatment}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteTreatment}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"12\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Billing List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'billing')}>Add</Button>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.completeVisit}>Complete Visit</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'billing' && (\n                        <AddBillingForm\n                          onConfirm={this.submitAddBillingForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitBillingList\n                      filter={this.state.filter}\n                      billing={this.props.visit.billing}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteBilling}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"13\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Vigilance List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'vigilance')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'vigilance' && (\n                        <AddVigilanceForm\n                          onConfirm={this.submitAddVigilanceForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitVigilanceList\n                      filter={this.state.filter}\n                      vigilance={this.props.visit.vigilance}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteVigilance}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"14\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Image List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'image' && (\n                        <AddImageForm\n                          onConfirm={this.submitAddImageForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitImageList\n                      filter={this.state.filter}\n                      images={this.props.visit.images}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteImage}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"15\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit File List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'file' && (\n                        <AddFileForm\n                          onConfirm={this.submitAddFileForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitFileList\n                      filter={this.state.filter}\n                      files={this.props.visit.files}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteFile}\n                    />\n                  </Tab.Pane>\n\n                </Tab.Content>\n\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n}\n\n}\n\nexport default VisitDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst VisitSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>date</option>\n        <option>time</option>\n        <option>title</option>\n        <option>type</option>\n        <option>subType</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default VisitSearchForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport CreateVisitForm from '../../components/forms/create/CreateVisitForm';\nimport VisitList from '../../components/lists/visit/VisitList';\nimport PatientList from '../../components/lists/patient/PatientList';\nimport AppointmentList from '../../components/lists/appointment/AppointmentList';\n// import SearchAppointmentList from '../../components/lists/appointment/SearchAppointmentList';\nimport VisitDetail from '../../components/details/VisitDetail';\n\nimport FilterVisitForm from '../../components/forms/filter/FilterVisitForm';\nimport VisitSearchForm from '../../components/forms/search/VisitSearchForm';\nimport AppointmentSearchForm from '../../components/forms/search/AppointmentSearchForm';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './visit.css';\n\nclass VisitPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    patients: null,\n    appointments: null,\n    canDelete: false,\n    visits: null,\n    searchVisits: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    selectedVisit: null,\n    creatingVisit: false,\n    newVisit: null,\n    calendarVisits: null,\n    fromGoLink: null,\n    goLinkId: null,\n    sublistSearch: false,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all visits component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    if (this.props.location.state) {\n      if (this.props.location.state.visit) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.visit\n        })\n      }\n    }\n    this.getAllVisits(seshStore);\n    this.getAllAppointments(seshStore);\n    // this.getAllPatients(seshStore);\n    if (this.props.selectedVisit) {\n      console.log('...found existing visit selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedVisit: this.props.selectedVisit\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\ncomponentDidUpdate () {\n}\n\ngetAllVisits (args) {\n  console.log('...retrieving all visits...');\n  this.context.setUserAlert('...retrieving all visits...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllVisits(\n        activityId:\"${activityId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllVisits);\n      let responseAlert = '...all visits retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkVisit = resData.data.getAllVisits.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedVisit: goLinkVisit,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        visits: resData.data.getAllVisits,\n        activityA: `getAllVisits?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.parseForCalendar(resData.data.getAllVisits)\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\ngetAllAppointments (args) {\n  console.log('...retrieving all appointments...');\n  this.context.setUserAlert('...retrieving all appointments...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllAppointments(\n        activityId:\"${activityId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllAppointments);\n      let responseAlert = '...all appointments retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        appointments: resData.data.getAllAppointments,\n        activityA: `getAllAppointments?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,lastName,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n        activityA: `getAllPatients?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchVisits = (event) => {\n  event.preventDefault();\n  console.log('...searching visits...');\n  this.context.setUserAlert('...searching visits...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'date') {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n      query {getVisitsByFieldRegex(\n        activityId:\"${activityId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getVisitsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getVisitsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getVisitsByField);\n      }\n\n      let responseAlert = '...visit search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchVisits: resData.data.getVisitsByFieldRegex,\n          activityA: `getVisitsByFieldRegex?activityId:${activityId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchVisits: resData.data.getVisitsByField,\n          activityA: `getVisitsByField?activityId:${activityId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nonStartCreateNewVisit = () => {\n  this.setState({\n    creatingVisit: true\n  })\n}\ncancelCreateNewVisit = () => {\n  this.setState({\n    creatingVisit: false,\n    selectedAppointment: null\n  })\n}\nsubmitCreateNewVisitForm = (event) => {\n  event.preventDefault();\n  console.log('...creating new visit...');\n  this.context.setUserAlert('...creating new visit...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.state.selectedAppointment._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const subType = event.target.subType.value;\n\n  if (\n      title.trim().length === 0 ||\n      type.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    return;\n  }\n\n  const tooEarly = moment().format('YYYY-MM-DD') < moment.unix(this.state.selectedAppointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD');\n  const tooLate = moment().format('YYYY-MM-DD') > moment.unix(this.state.selectedAppointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD');\n\n  if (tooEarly === true) {\n    console.log('...appointment for this visit is in the future...please wait or create a new appointment...');\n    this.context.setUserAlert('...appointment for this visit is in the future...please wait or create a new appointment...')\n    this.setState({isLoading: false})\n    return\n  }\n  if (tooLate === true) {\n    console.log('...appointment for this visit has already gone... please create a new appointment...');\n    this.context.setUserAlert('...appointment for this visit has already gone... please create a new appointment...')\n    this.setState({isLoading: false})\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {createVisit(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        visitInput:{\n          title:\"${title}\",\n          type:\"${type}\",\n          subType:\"${subType}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      console.log('...resData...',resData.data.createVisit);\n      let responseAlert = '...create visit success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        showDetails: true,\n        creatingVisit: false,\n        selectedVisit: resData.data.createVisit,\n        newVisit: resData.data.createVisit,\n        tabKey: 'detail',\n        activityA: `createAppointment?activityId:${activityId},visitId:${resData.data.createVisit._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'))\n      this.getAllVisits(seshStore);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nselectAppointment = (args) => {\n  this.setState({\n    selectedAppointment: args\n  })\n}\n\nshowDetails = (args) => {\n  this.setState({\n    showDetails: true,\n    selectedVisit: args,\n    overlay: false,\n    tabKey: 'detail'\n  })\n  this.props.selectVisit(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\nupdateVisit = (args) => {\n  console.log('...updating selected visit...');\n  this.setState({\n    selectedVisit: args\n  })\n  this.props.selectVisit(args);\n}\n\ndeleteVisit = (args) => {\n  console.log('...deleteing visit...');\n  this.context.setUserAlert('...deleteing visit...')\n\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitById(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitById);\n      let responseAlert = '...delete visit success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteVisitById?activityId:${activityId},visitId:${visitId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllVisits({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing visits for calendar...');\n  let calendarVisits = args.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        title: x.title,\n        type: x.type,\n        date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n        time: x.time,\n        subType: x.subType,\n      }\n    }))\n    this.setState({\n      calendarVisits: calendarVisits\n    })\n}\n\nviewCalendarEvent = (args) => {\n  console.log('...viewing calendar visit...');\n  const visit = this.state.visits.filter(x => x._id === args.event.extendedProps.props._id)[0];\n  this.setState({\n    overlay: true,\n    overlayStatus: {type: 'calendarVisit', data: visit}\n  })\n}\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\nstartSublistSearch = () => {\n  this.setState({\n    sublistSearch: true\n  })\n}\ncancelSublistSearch = () => {\n  this.setState({\n    sublistSearch: false,\n  })\n  this.getAllAppointments({activityId: this.context.activityId,token: this.context.token});\n}\nsubmitSublistSearchForm = (event) => {\n  event.preventDefault();\n  console.log('...searching appointments...');\n  this.context.setUserAlert('...searching appointments...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'date' ||\n      field === 'inProgress' ||\n      field === 'attended' ||\n      field === 'important' ||\n      field === 'important'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getAppointmentsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n      query {getAppointmentsByField(\n        activityId:\"${activityId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getAppointmentsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getAppointmentsByField);\n      }\n\n      let responseAlert = '...appointment search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          appointments: resData.data.getAppointmentsByFieldRegex,\n          activityA: `getAppointmentsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          appointments: resData.data.getAppointmentsByField,\n          activityA: `getAppointmentsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        selectCalendarDetails={this.showDetails}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n          <h1>Visits: {this.state.showDetails === true &&\n                        this.state.selectedVisit &&\n                        this.state.tabKey === 'detail' && (\n                              this.state.selectedVisit.title\n                            )}</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col md={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n                {this.context.role === 'Nurse' && (\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                  </Nav.Item>\n                )}\n                {this.context.role === 'Doctor' && (\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                  </Nav.Item>\n                )}\n\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterVisitForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.visits && (\n            <Col md={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content>\n                <Tab.Pane eventKey=\"list\">\n\n                <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                  <Tab eventKey=\"1\" title=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                    <VisitList\n                      filter={this.state.filter}\n                      visits={this.state.visits}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      showDetails={this.showDetails}\n                      onDelete={this.deleteVisit}\n                    />\n                  </Tab>\n                  <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                    <h3>Calendar</h3>\n                    <FullCalendar\n                      plugins={[dayGridPlugin]}\n                      intitialView=\"dayGridMonth\"\n                      events={this.state.calendarVisits}\n                      eventClick={this.viewCalendarEvent}\n                    />\n                  </Tab>\n                </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Visit</h3>\n                  <Row className=\"userSearchRow\">\n                    <VisitSearchForm\n                      onConfirm={this.searchVisits}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchVisits && (\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol} className=\"centered_btn\">Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchVisits && (\n                      <VisitList\n                        filter={this.state.filter}\n                        visits={this.state.searchVisits}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedVisit && (\n                    <VisitDetail\n                      visit={this.state.selectedVisit}\n                      updateVisit={this.updateVisit}\n                    />\n                )}\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"new\">\n                {this.state.creatingVisit === false && (\n                  <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={this.onStartCreateNewVisit}>Create New</Button>\n                )}\n                {this.state.creatingVisit === true &&\n                  this.state.appointments &&\n                  !this.state.selectedAppointment && (\n                  <Col className=\"patientSubListCol\">\n                  <Row className=\"patientSubListRow\">\n                  <h3>\n                  Choose an Appointment\n                  </h3>\n                  <Button variant=\"outline-secondary\" className=\"patientSublistSearchBtn\" onClick={this.startSublistSearch}>Search</Button>\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  {this.state.sublistSearch === true && (\n                    <AppointmentSearchForm\n                      onCancel={this.cancelSublistSearch}\n                      onConfirm={this.submitSublistSearchForm}\n                    />\n                  )}\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  <AppointmentList\n                    filter={this.state.filter}\n                    appointments={this.state.appointments}\n                    authId={this.context.activityId}\n                    onSelect={this.selectAppointment}\n                    visitPage={true}\n                  />\n                  </Row>\n\n                  </Col>\n                )}\n                {this.state.creatingVisit === true &&\n                  this.state.selectedAppointment && (\n                  <Row>\n                    <CreateVisitForm\n                      onConfirm={this.submitCreateNewVisitForm}\n                      onCancel={this.cancelCreateNewVisit}\n                      appointment={this.state.selectedAppointment}\n                    />\n                  </Row>\n                )}\n                {this.state.newVisit && (\n                  <Row>\n                    <h3>Review New Visit {this.state.newVisit._id}</h3>\n                  </Row>\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default VisitPage;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport AlertBox from './components/alertBox/AlertBox';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport LandingPage from './pages/landing/Landing';\nimport HomePage from './pages/landing/Home';\nimport MyProfilePage from './pages/profile/Profile';\nimport LoginPage from './pages/auth/Login';\nimport SignupPage from './pages/auth/Signup';\nimport PasswordResetPage from './pages/auth/PasswordReset';\nimport StaffPage from './pages/staff/Staff';\nimport PatientPage from './pages/patient/Patients';\nimport AppointmentPage from './pages/appointment/Appointment';\nimport VisitPage from './pages/visit/Visit';\n\nimport AuthContext from './context/auth-context';\nimport io from 'socket.io-client';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    activityId: null,\n    role: null,\n    context: this.context,\n    sessionStorageAuth: JSON.parse(sessionStorage.getItem('logInfo')),\n    sessionCookiePresent: false,\n    passwordResetState: 'incomplete',\n    passwordResetMessage: '...',\n    userAlert: null,\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    selectedVisit: null,\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.sessionStorageAuth = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.socket = io('http://localhost:9099');\n  }\n\n  login = (token, activityId, role, tokenExpiration) => {\n    console.log('...context login...');\n    this.setState({\n      token: token,\n      activityId: activityId,\n      role: role,\n      sessionStorageAuth: {\n        token: token,\n        activityId: activityId,\n        role: role,\n        tokenExpiration: tokenExpiration\n      }\n    });\n    this.sessionStorageAuth = {\n      token: token,\n      activityId: activityId,\n      role: role,\n      tokenExpiration: tokenExpiration\n    }\n    this.context.token = token;\n    this.context.activityId = activityId;\n    this.context.role = role;\n    this.userOnline();\n  };\n\n  logout = () => {\n      this.logout2();\n  };\n\n  componentDidMount() {\n    console.log('...app component mounted...');\n    if (sessionStorage.getItem('logInfo') && this.state.token === null) {\n      console.log('...sessionStorageFound...');\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n      this.login(\n        seshStore.token,\n        seshStore.activityId,\n        seshStore.role,\n        seshStore.tokenExpiration,\n      )\n    }\n    if (!this.sessionStorageAuth) {\n      console.log('...noSessionStorageFound...');\n    }\n    this.socket.emit('unauthorizedClientConnect');\n    console.log(\"socket listening....\");\n    // this.userOnline();\n    this.socket.on('test', function(data) {\n      console.log(\"testing...\",data);\n    });\n  }\n\n  componentWillUnmount() {\n    console.log('...app component un-mounting...');\n  }\n\n  logout2 () {\n    console.log('...logging you out...');\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n        query{logout(\n          activityId:\"${activityId}\")\n        {_id,loggedIn}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        this.setState({\n           token: null,\n           activityId: null,\n           role: null,\n           sessionCookiePresent: null,\n           sessionStorageAuth: null,\n        });\n        this.sessionStorageAuth = null;\n        sessionStorage.clear();\n        this.context = {\n          token: null,\n          activityId: null,\n          activityA: null,\n          activityUser: null,\n          role: null,\n          userId: null,\n          user: {},\n          users:[],\n          selectedUser: null,\n          selectedPatient: null,\n          selectedAppointment: null,\n          selectedVisit: null,\n          sender: null,\n          receiver: null,\n          userAlert: \"...\",\n          file: null,\n          fancyDate: null,\n          login: this.login,\n          logout: this.logout,\n          setUserAlert: this.setUserAlert,\n          userOnline: this.userOnline,\n        };\n        this.setState({userAlert: '...logout success...'});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  userOnline = () => {\n    console.log('...domesticating socket client...');\n    this.socket.emit('msg_subscribe', {user: this.context.activityId, room:'msg'+this.context.activityId});\n  }\n\n  passwordReset = (event) => {\n    event.preventDefault();\n    console.log('...reset password submission...');\n      const params = event.target.formGridParams.value.split('@');\n      const verificationCode = params[1];\n      const userId = params[0];\n      const password = event.target.formGridPassword.value;\n      // console.log('params',params);\n\n      const requestBody = {\n        query:`\n          mutation {resetUserPassword(\n            userId:\"${userId}\",\n            verification:\"${verificationCode}\",\n            userInput:{\n              password:\"${password}\"\n            })\n            {_id,password,verification{verified}}}\n        `};\n\n      fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log('passwordReset',resData);\n          if (resData.errors) {\n            this.setState({passwordResetState: 'error', passwordResetMessage: resData.errors[0].message+'..if not, try making a new reset request..' })\n          } else {\n            this.setState({passwordResetState: 'complete' })\n          }\n\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({passwordResetState: 'error', passwordResetMessage: err })\n        });\n  }\n  cancelPasswordReset = () => {\n    this.setState({passwordResetState: 'cancelled'})\n  }\n\n  setUserAlert = (args) => {\n    // console.log('...setUserAlert...',args);\n    this.setState({userAlert: args})\n  }\n\n  selectUser = (args) => {\n    console.log('...updating top-level selected user...');\n    this.setState({\n      selectedUser: args\n    })\n  }\n  selectPatient = (args) => {\n    console.log('...updating top-level selected patient...');\n    this.setState({\n      selectedPatient: args\n    })\n  }\n  selectAppointment = (args) => {\n    console.log('...updating top-level selected appointment...');\n    this.setState({\n      selectedAppointment: args\n    })\n  }\n  selectVisit = (args) => {\n    console.log('...updating top-level selected visit...');\n    this.setState({\n      selectedVisit: args\n    })\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              activityId: this.state.activityId,\n              activityA: null,\n              activityUser: null,\n              role: this.state.role,\n              userId: null,\n              user: {},\n              users:[],\n              selectedUser: null,\n              selectedPatient: null,\n              selectedAppointment: null,\n              selectedVisit: null,\n              sender: null,\n              receiver: null,\n              userAlert: \"...\",\n              file: null,\n              fancyDate: null,\n              login: this.login,\n              logout: this.logout,\n              setUserAlert: this.setUserAlert,\n              userOnline: this.userOnline,\n            }}\n          >\n            <MainNavigation\n              role={this.state.role}\n            />\n            <AlertBox\n              authId={this.context.activityId}\n              alert={this.state.userAlert}\n            />\n            <main className=\"main-content\">\n              <Switch>\n\n              {this.state.sessionStorageAuth && (\n                <Redirect from=\"/login\" to=\"/home\" exact />\n              )}\n\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/home\" render={(props) => <HomePage {...props}\n                  title=\"home\"\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/profile\" render={(props) => <MyProfilePage {...props}\n                  title=\"profile\"\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/staff\" render={(props) => <StaffPage {...props}\n                  title=\"staff\"\n                  selectedUser={this.state.selectedUser}\n                  selectUser={this.selectUser}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/patients\" render={(props) => <PatientPage {...props}\n                  title=\"patients\"\n                  selectedPatient={this.state.selectedPatient}\n                  selectPatient={this.selectPatient}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/appointments\" render={(props) => <AppointmentPage {...props}\n                  title=\"appointments\"\n                  selectedAppointment={this.state.selectedAppointment}\n                  selectAppointment={this.selectAppointment}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/visits\" render={(props) => <VisitPage {...props}\n                  title=\"visits\"\n                  selectedVisit={this.state.selectedVisit}\n                  selectVisit={this.selectVisit}\n                />}/>\n              )}\n\n              {this.state.sessionStorageAuth && (\n                <Redirect from=\"/\" to=\"/home\" exact />\n              )}\n              {this.state.sessionStorageAuth && (\n                <Redirect from=\"*\" to=\"/home\" exact />\n              )}\n\n\n\n              {!this.state.sessionStorageAuth && (\n                <Route path=\"/landing\" render={(props) => <LandingPage {...props}\n                  title=\"landing\"\n                />}/>\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Route path=\"/login\" render={(props) => <LoginPage {...props}\n                  title=\"login\"\n                />}/>\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Route path=\"/signup\" render={(props) => <SignupPage {...props}\n                  title=\"signup\"\n                  setUserAlert={this.setUserAlert}\n                />}/>\n              )}\n\n              <Route path=\"/passwordReset/:params\" render={(props) => <PasswordResetPage {...props}\n                passwordReset={this.passwordReset}\n                cancelPasswordReset={this.cancelPasswordReset}\n                resetState={this.state.passwordResetState}\n                message={this.state.passwordResetMessage}\n                />}\n              />\n\n              {!this.state.sessionStorageAuth && (\n                <Redirect from=\"/home\" to=\"/landing\" exact />\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Redirect from=\"/\" to=\"/landing\" exact />\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Redirect from=\"*\" to=\"/landing\" exact />\n              )}\n\n              </Switch>\n            </main>\n\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}