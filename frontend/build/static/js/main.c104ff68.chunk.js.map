{"version":3,"sources":["logo.svg","components/alertBox/AlertBox.js","context/auth-context.js","components/Navigation/MainNavigation.js","components/overlay/LoadingOverlay.js","pages/landing/Landing.js","components/items/patient/PatientItem.js","components/lists/patient/PatientList.js","components/items/appointment/AppointmentItem.js","components/lists/appointment/AppointmentList.js","pages/landing/Home.js","components/items/user/AddressItem.js","components/lists/user/UserAddressList.js","components/items/user/AttendanceItem.js","components/lists/user/UserAttendanceList.js","components/items/user/LeaveItem.js","components/lists/user/UserLeaveList.js","components/items/user/ImageItem.js","components/lists/user/UserImageList.js","components/items/patient/FileItem.js","components/lists/user/UserFileList.js","components/items/user/AppointmentItem.js","components/lists/user/UserAppointmentList.js","components/items/user/NoteItem.js","components/lists/user/UserNoteList.js","components/forms/filter/FilterAddressForm.js","components/forms/filter/FilterAttendanceForm.js","components/forms/filter/FilterLeaveForm.js","components/forms/filter/FilterImageForm.js","components/forms/filter/FilterFileForm.js","components/forms/filter/FilterAppointmentForm.js","components/forms/filter/FilterNoteForm.js","components/forms/add/UpdateUserSingleFieldForm.js","components/forms/add/AddAddressForm.js","components/forms/add/AddAttendanceForm.js","components/forms/add/AddLeaveForm.js","components/forms/add/AddNoteForm.js","components/forms/add/AddImageForm.js","components/forms/add/AddFileForm.js","pages/profile/Profile.js","components/forms/auth/LoginForm.js","components/forms/auth/VerifyUserForm.js","components/forms/auth/ForgotPasswordForm.js","pages/auth/Login.js","components/forms/auth/SignupForm.js","pages/auth/Signup.js","components/forms/auth/ResetPasswordForm.js","pages/auth/PasswordReset.js","components/items/user/UserItem.js","components/lists/user/UserList.js","components/lists/user/SearchUserList.js","components/details/UserDetail.js","components/forms/filter/FilterUserForm.js","components/forms/search/UserSearchForm.js","pages/staff/Staff.js","components/forms/create/CreatePatientForm.js","components/lists/patient/SearchPatientList.js","components/lists/patient/PatientAddressList.js","components/items/patient/NextOfKinItem.js","components/lists/patient/PatientNextOfKinList.js","components/items/patient/AttachmentItem.js","components/lists/patient/PatientAttachmentList.js","components/items/patient/AllergyItem.js","components/lists/patient/PatientAllergyList.js","components/items/patient/MedicationItem.js","components/lists/patient/PatientMedicationList.js","components/items/patient/ImageItem.js","components/lists/patient/PatientImageList.js","components/lists/patient/PatientFileList.js","components/items/patient/NoteItem.js","components/lists/patient/PatientNoteList.js","components/items/patient/TagItem.js","components/lists/patient/PatientTagList.js","components/items/visit/VisitItem.js","components/lists/visit/VisitList.js","components/forms/filter/FilterAllergyForm.js","components/forms/filter/FilterMedicationForm.js","components/forms/filter/FilterNextOfKinForm.js","components/forms/filter/FilterVisitForm.js","components/forms/filter/FilterTagForm.js","components/forms/add/UpdatePatientSingleFieldForm.js","components/forms/add/AddTagForm.js","components/forms/add/AddNextOfKinForm.js","components/forms/add/AddAllergyForm.js","components/forms/add/AddMedicationForm.js","components/forms/add/AddAttachmentForm.js","components/details/PatientDetail.js","components/forms/filter/FilterPatientForm.js","components/forms/search/PatientSearchForm.js","pages/patient/Patients.js","components/forms/create/CreateAppointmentForm.js","components/items/appointment/NoteItem.js","components/lists/appointment/AppointmentNoteList.js","components/items/appointment/TagItem.js","components/lists/appointment/AppointmentTagList.js","components/forms/add/AddUserForm.js","components/details/AppointmentDetail.js","components/forms/search/AppointmentSearchForm.js","pages/appointment/Appointment.js","components/forms/create/CreateVisitForm.js","components/items/visit/ComplaintItem.js","components/lists/visit/VisitComplaintList.js","components/items/visit/SurveyItem.js","components/lists/visit/VisitSurveyList.js","components/items/visit/SystematicInquiryItem.js","components/lists/visit/VisitSystematicInquiryList.js","components/items/visit/VitalsItem.js","components/lists/visit/VisitVitalsList.js","components/items/visit/ExaminationItem.js","components/lists/visit/VisitExaminationList.js","components/items/visit/InvestigationItem.js","components/lists/visit/VisitInvestigationList.js","components/items/visit/DiagnosisItem.js","components/lists/visit/VisitDiagnosisList.js","components/items/visit/TreatmentItem.js","components/lists/visit/VisitTreatmentList.js","components/items/visit/BillingItem.js","components/lists/visit/VisitBillingList.js","components/items/visit/VigilanceItem.js","components/lists/visit/VisitVigilanceList.js","components/items/visit/ImageItem.js","components/lists/visit/VisitImageList.js","components/items/visit/FileItem.js","components/lists/visit/VisitFileList.js","components/forms/filter/FilterComplaintForm.js","components/forms/filter/FilterSurveyForm.js","components/forms/filter/FilterSystematicInquiryForm.js","components/forms/filter/FilterDiagnosisForm.js","components/forms/filter/FilterVitalsForm.js","components/forms/filter/FilterExaminationForm.js","components/forms/filter/FilterInvestigationForm.js","components/forms/filter/FilterTreatmentForm.js","components/forms/filter/FilterBillingForm.js","components/forms/add/AddComplaintForm.js","components/forms/add/AddSurveyForm.js","components/forms/add/AddSystematicInquiryForm.js","components/forms/add/AddVitalsForm.js","components/forms/add/AddExaminationForm.js","components/forms/add/AddInvestigationForm.js","components/forms/add/AddDiagnosisForm.js","components/forms/add/AddTreatmentForm.js","components/forms/add/AddBillingForm.js","components/forms/add/AddVigilanceForm.js","components/details/VisitDetail.js","components/forms/search/VisitSearchForm.js","pages/visit/Visit.js","App.js","serviceWorker.js","index.js","assets/loading.gif"],"names":["module","exports","AlertBox","props","alert","className","Alert","variant","React","createContext","token","activityId","activityA","activityUser","role","userId","user","users","selectedUser","selectedPatient","selectedAppointment","selectedVisit","userAlert","file","fancyDate","login","tokenExpiration","logout","setUserAlert","args","userOnline","mainNavigation","Consumer","context","Fragment","to","onClick","LoadingOverlay","status","type","Container","Row","data","_id","date","title","subType","time","location","important","description","selectCalendarDetails","Button","size","bind","goLink","pathname","state","appointment","timee","visit","startDate","endDate","action","target","Image","src","loadingGif","fluid","toggleOverlay","LandingPage","overlay","overlayStatus","isGuest","this","Col","Component","PatientItem","useState","setState","deleteState","setDeleteState","key","Card","Body","Text","patient","username","icon","faEye","canDelete","faTrashAlt","name","moment","unix","dob","substr","add","format","age","gender","appointmentPage","onSelect","showDetails","homePage","onDelete","PatientList","filter","patients2","patients","propsPatients","field","value","sort","a","b","registration","x","loggedIn","active","count","map","indexOf","AppointmentItem","checkinTime","seenTime","inProgress","toString","attended","visitPage","AppointmentList","appointments2","appointments","propsAppointments","HomePage","isLoading","seshStore","todayAppointments","queue","weekImportantAppointments","recentPatients","loadHome","getAppointmentsToday","getAppointmentsImportantWeek","getRecentPatients","console","log","requestBody","query","fetch","method","body","JSON","stringify","headers","Authorization","then","res","Error","json","resData","responseAlert","error","catch","err","getAppointmentsImportantNextWeek","sessionStorage","getItem","parse","md","authId","contextType","AuthContext","AddressItem","address","town","country","number","street","city","parish","primary","faBatteryThreeQuarters","faBatteryEmpty","makePrimary","UserAddressList","addresses2","addresses","propsAddresses","postalCode","AttendanceItem","attendance","UserAttendanceList","attendance2","propsAttendance","attendanceItem","LeaveItem","leave","UserLeaveList","leave2","propsLeave","leaveItem","ImageItem","image","path","UserImageList","images2","images","propsImages","FileItem","PatientFileList","files2","files","propsFiles","UserAppointmentList","NoteItem","note","UserNoteList","notes2","notes","propsNotes","FilterAddressForm","Form","onSubmit","onConfirm","Group","as","controlId","Control","hidden","Label","onCancel","FilterLeaveForm","FilterImageForm","FilterFileForm","FilterAppointmentForm","FilterNoteForm","UpdateUserSingleFieldForm","placeholder","AddAddressForm","AddAttendanceForm","Date","rows","AddLeaveForm","AddNoteForm","AddImageForm","id","onChange","e","_currentValue","AddFileForm","MyProfilePage","profileLoaded","sideCol","menuSelected","adding","updateSingleField","calendarAttendance","calendarLeave","calendarAppointments","pocketVars","s3State","submitAddAddressForm","event","preventDefault","addUserAddress","logUserActivity","deleteAddress","deleteUserAddress","setAddressPrimary","setUserAddressPrimary","submitAddAttendanceForm","attendanceDate","attendanceStatus","attendanceDescription","addUserAttendance","parseForCalendar","deleteAttendance","deleteUserAttendance","submitAddLeaveForm","addUserLeave","deleteLeave","deleteUserLeave","addUseLeavce","submitAddImageForm","imageName","imageType","imagePath","fileInput","fileName","filePath","fileType","split","config","bucketName","dirName","region","accessKeyId","s3","secretAccessKey","s3Url","ReactS3Client","S3","uploadFile","statusText","addUserImage","deleteImage","deleteUserImage","filename","deleteFile","response","message","submitAddFileForm","file2Name","file2Type","file2Path","addUserFile","deleteUserFile","submitAddNoteForm","addUserNotes","deleteNote","deleteUserNote","submitUpdateSingleFieldForm","updateUserSingleField","startUpdateSingleField","cancelUpdateSingleField","toggleSideCol","menuSelect","submitFilterForm","startAdd","cancelAdd","end","viewCalendarEvent","input","extendedProps","getThisUser","getPocketVars","errors","pocketVarsParsed","getUserById","request","activityDate","addUserActivity","Tab","defaultActiveKey","Nav","Item","Link","eventKey","FilterAttendanceForm","Content","Pane","ListGroup","registrationNumber","contact","email","phone","phone2","clientConnected","verification","verified","code","Tabs","defaultView","plugins","dayGridPlugin","events","eventClick","showListDetails","LoginForm","onStartVerification","onStartForgotPassword","verifyUserForm","canCancel","canConfirm","ForgotPasswordForm","LoginPage","verifying","activeTab","userSeshStore","requestingPasswordReset","showForm","submitLoginForm","password","trim","length","sessionObject","setItem","verifyUser","toggleVerification","toggleForgotPassword","requestPasswordReset","VerifyUserForm","SignupForm","SignUpPage","signupStatus","invited","submitSignupForm","addressNumber","addressStreet","addressTown","addressCity","addressParish","addressCountry","addressPostalCode","createUser","submitInviteForm","challenge","inviteCode","verifyInvitation","ResetPasswordForm","verf","PasswordResetPage","passwordResetStatus","verfCode","submitResetPasswordForm","verificationCode","resetUserPassword","UserItem","selectUser","UserList","users2","propsUsers","SearchUserList","UserDetail","updateUser","FilterUserForm","UserSearchForm","StaffPage","searchUsers","fromGoLink","goLinkId","tabKey","regex","getUsersByFieldRegex","getUsersByField","deleteUser","getAllUsers","resetFilter","goLinkUser","activeKey","CreatePatientForm","today","SearchPatientList","PatientAddressList","NextOfKinItem","nextOfKin","relation","PatientNextOfKinList","nextOfKin2","propsNextOfKin","nextOfKinItem","AttachmentItem","attachment","item","PatientAttachmentList","attachments","AllergyItem","allergy","deleteAttachment","onAddAttachment","PatientAllergyList","allergies2","allergies","propsAllergies","MedicationItem","medication","PatientMedicationList","medication2","propsMedication","medicationItem","PatientImageList","UserFileList","PatientNoteList","TagItem","tag","PatientTagList","tags2","tags","propsTags","VisitItem","patientPage","VisitList","visits2","visits","propsVisits","FilterAllergyForm","FilterMedicationForm","FilterNextOfKinForm","FilterVisitForm","FilterTagForm","UpdatePatientSingleFieldForm","AddTagForm","AddNextOfKinForm","AddAllergyForm","AddMedicationForm","AddAttachmentForm","PatientDetail","addAttachmentForm","addAttachmentArgs","calendarVisits","patientId","updatePatient","addPatientAddress","deletePatientAddress","setPatientAddressPrimary","submitAddNextOfKinForm","addPatientNextOfKin","deleteNextOfKin","phone1","deletePatientNextOfKin","submitAddAllergyForm","addPatientAllergy","deleteAllergy","deletePatientAllergy","preAttachments","filePath2","index","preAttachment","filename2","replace","submitAddMedicationForm","addPatientMedication","deleteMedication","deletePatientMedication","startAddAttachment","cancelAddAttachment","addAttachment","allergyTitle","allergyType","allergyDescription","medicationTitle","medicationType","medicationDescription","addPatientAllergyAttachment","addPatientMedicationAttachment","allergyAttachment","medicationAttachment","deletePatientAllergyAttachment","deletePatientMedicationAttachment","addPatientImage","deletePatientImage","addPatientFile","deletePatientFile","addPatientNotes","deletePatientNote","submitAddTagForm","addPatientTags","deleteTag","deletePatientTag","updatePatientSingleField","propsPatient","expiryDate","referral","reason","physician","attendingPhysician","occupation","employer","insurance","company","policyNumber","subscriber","FilterPatientForm","PatientSearchForm","PatientPage","searchPatients","creatingPatient","newPatient","getPatientsByFieldRegex","getPatientsByField","onStartCreateNewPatient","cancelCreateNewPatient","submitCreateNewPatientForm","contactEmail","contactPhone","contactPhone2","referralDate","referralReason","referralPhysicianName","referralPhysicianPhone","referralPhysicianEmail","referralPhysicianAddress","occupationRole","occupationEmployerName","occupationEmployerEmail","occupationEmployerPhone","occupationEmployerAddress","insuranceCompany","insurancePolicyNumber","insuranceDescription","insuranceExpiryDate","insuranceSubscriberCompany","insuranceSubscriberDescription","createPatient","getAllPatients","selectPatient","deletePatient","goLinkPatient","lg","CreateAppointmentForm","AppointmentNoteList","AppointmentTagList","AddUserForm","setUser","AppointmentDetail","showAddConsultantForm","calEvent","startTime","endTime","appointmentId","updateAppointment","addAppointmentNotes","deleteAppointmentNote","addAppointmentTags","deleteAppointmentTag","submitAddUserForm","consultantId","userRole","addAppointmentConsultant","deleteConsultant","deleteAppointmentConsultant","startUpdatePatient","updateAppointmentSingleField","creator","consultants","AppointmentSearchForm","AppointmentPage","searchAppointments","creatingAppointment","newAppointment","sublistSearch","getAppointmentsByFieldRegex","getAppointmentsByField","onStartCreateNewAppointment","cancelCreateNewAppointment","submitCreateNewAppointmentForm","createAppointment","getAllAppointments","selectAppointment","deleteAppointment","startSublistSearch","cancelSublistSearch","submitSublistSearchForm","goLinkAppointment","CreateVisitForm","ComplaintItem","complaint","anamnesis","VisitComplaintList","complaints2","complaints","propsComplaints","SurveyItem","survey","VisitSurveyList","surveys2","surveys","propsSurveys","SystematicInquiryItem","systematicInquiry","VisitSystematicInquiryList","systematicInquirys2","propsSystematicInquirys","systematicInquirys","VitalsItem","vitals","pr","rr","bp1","bp2","temp","ps02","heightValue","heightUnit","weightValue","weightUnit","bmi","urine","VisitVitalsList","vitals2","propsVitals","vitalsItem","ExaminationItem","examination","general","area","measure","followUp","VisitExaminationList","examinations2","propsExaminations","examinations","InvestigationItem","investigation","VisitInvestigationList","investigations2","propsInvestigations","investigations","DiagnosisItem","diagnosis","VisitDiagnosisList","diagnosis2","propsDiagnosis","diagnoses","TreatmentItem","treatment","dose","frequency","VisitTreatmentList","treatment2","propsTreatment","treatments","BillingItem","billing","amount","paid","VisitBillingList","billing2","propsBilling","billings","VigilanceItem","vigilance","chronicIllness","diabetes","testing","comment","hbp","dyslipidemia","cad","lifestyle","weight","diet","smoking","substanceAbuse","exercise","asthma","screening","breast","prostate","cervix","colon","dental","vaccines","influenza","varicella","hpv","mmr","tetanus","pneumovax","other","VisitVigilanceList","vigilance2","propsVigilance","vigilances","VisitImageList","VisitFileList","FilterComplaintForm","FilterSurveyForm","FilterSystematicInquiryForm","FilterDiagnosisForm","FilterVitalsForm","FilterExaminationForm","FilterInvestigationForm","FilterTreatmentForm","FilterBillingForm","AddComplaintForm","AddSurveyForm","AddSystematicInquiryForm","AddVitalsForm","step","AddExaminationForm","checked","AddInvestigationForm","AddDiagnosisForm","AddTreatmentForm","AddBillingForm","AddVigilanceForm","VisitDetail","submitAddComplaintForm","visitId","updateVisit","addVisitComplaint","deleteComplaint","deleteVisitComplaint","submitAddSurveyForm","addVisitSurvey","deleteSurvey","deleteVisitSurvey","submitAddSystematicInquiryForm","addVisitSysInquiry","deleteSystematicInquiry","deleteVisitSysInquiry","submitAddVitalsForm","urineType","urineValue","addVisitVitals","deleteVitals","deleteVisitVitals","submitAddExaminationForm","addVisitExamination","deleteExamination","deleteVisitExamination","submitAddInvestigationForm","addVisitInvestigation","deleteInvestigation","deleteVisitInvestigation","submitAddDiagnosisForm","addVisitDiagnosis","deleteDiagnosis","deleteVisitDiagnosis","submitAddTreatmentForm","addVisitTreatment","deleteTreatment","deleteVisitTreatment","submitAddBillingForm","addVisitBilling","deleteBilling","deleteVisitBilling","addVisitImage","deleteVisitImage","addVisitFile","deleteVisitFile","submitAddVigilanceForm","vigilanceChronicIllnessDiabetesMedication","vigilanceChronicIllnessDiabetesTesting","vigilanceChronicIllnessDiabetesComment","vigilanceChronicIllnessHbpMedication","vigilanceChronicIllnessHbpTesting","vigilanceChronicIllnessHbpComment","vigilanceChronicIllnessDyslipidemiaMedication","vigilanceChronicIllnessDyslipidemiaTesting","vigilanceChronicIllnessDyslipidemiaComment","vigilanceChronicIllnessCadMedication","vigilanceChronicIllnessCadTesting","vigilanceChronicIllnessCadComment","vigilanceLifestyleWeightMedication","vigilanceLifestyleWeightTesting","vigilanceLifestyleWeightComment","vigilanceLifestyleDietMedication","vigilanceLifestyleDietTesting","vigilanceLifestyleDietComment","vigilanceLifestyleSmokingMedication","vigilanceLifestyleSmokingTesting","vigilanceLifestyleSmokingComment","vigilanceLifestyleSubstanceAbuseMedication","vigilanceLifestyleSubstanceAbuseTesting","vigilanceLifestyleSubstanceAbuseComment","vigilanceLifestyleExerciseMedication","vigilanceLifestyleExerciseTesting","vigilanceLifestyleExerciseComment","vigilanceLifestyleAllergiesMedication","vigilanceLifestyleAllergiesTesting","vigilanceLifestyleAllergiesComment","vigilanceLifestyleAsthmaMedication","vigilanceLifestyleAsthmaTesting","vigilanceLifestyleAsthmaComment","vigilanceScreeningBreastMedication","vigilanceScreeningBreastTesting","vigilanceScreeningBreastComment","vigilanceScreeningProstateMedication","vigilanceScreeningProstateTesting","vigilanceScreeningProstateComment","vigilanceScreeningCervixMedication","vigilanceScreeningCervixTesting","vigilanceScreeningCervixComment","vigilanceScreeningColonMedication","vigilanceScreeningColonTesting","vigilanceScreeningColonComment","vigilanceScreeningDentalMedication","vigilanceScreeningDentalTesting","vigilanceScreeningDentalComment","vigilanceVaccinesInfluenzaMedication","vigilanceVaccinesInfluenzaTesting","vigilanceVaccinesInfluenzaComment","vigilanceVaccinesVaricellaMedication","vigilanceVaccinesVaricellaTesting","vigilanceVaccinesVaricellaComment","vigilanceVaccinesHpvMedication","vigilanceVaccinesHpvTesting","vigilanceVaccinesHpvComment","vigilanceVaccinesMmrMedication","vigilanceVaccinesMmrTesting","vigilanceVaccinesMmrComment","vigilanceVaccinesTetanusMedication","vigilanceVaccinesTetanusTesting","vigilanceVaccinesTetanusComment","vigilanceVaccinesPneumovaxMedication","vigilanceVaccinesPneumovaxTesting","vigilanceVaccinesPneumovaxComment","vigilanceVaccinesOtherName","vigilanceVaccinesOtherMedication","vigilanceVaccinesOtherTesting","vigilanceVaccinesOtherComment","addVisitVigilance","deleteVigilance","deleteVisitVigilance","addVisitConsultant","deleteVisitConsultant","complaintTitle","complaintDescription","complaintAnamnesis","complaintAttachment","surveyTitle","surveyDescription","surveyAttachment","systematicInquiryTitle","systematicInquiryDescription","systematicInquiryAttachment","examinationGeneral","examinationArea","examinationType","examinationMeasure","examinationValue","examinationDescription","examinationFollowUp","examinationAttachment","investigationTitle","investigationType","investigationDescription","investigationAttachment","diagnosisTitle","diagnosisType","diagnosisDescription","diagnosisAttachment","treatmentType","treatmentTitle","treatmentDescription","treatmentDose","treatmentFrequency","treatmentAttachment","billingAmount","billingPaid","billingTitle","billingType","billingDescription","billingNotes","billingAttachment","addVisitComplaintAttachment","addVisitSurveyAttachment","addVisitSysInquiryAttachment","addVisitExaminationAttachment","addVisitInvestigationAttachment","addVisitDiagnosisAttachment","addVisitTreatmentAttachment","addVisitBillingAttachment","deleteVisitComplaintAttachment","deleteVisitSurveyAttachment","deleteVisitSysInquiryAttachment","deleteVisitExaminationAttachment","deleteVisitInvestigationAttachment","deleteVisitDiagnosisAttachment","deleteVisitTreatmentAttachment","deleteVisitBillingAttachment","updateVisitSingleField","completeVisit","completeVisitById","propsVisit","VisitSearchForm","VisitPage","searchVisits","creatingVisit","newVisit","getVisitsByFieldRegex","getVisitsByField","onStartCreateNewVisit","cancelCreateNewVisit","submitCreateNewVisitForm","tooEarly","tooLate","createVisit","getAllVisits","selectVisit","deleteVisit","goLinkVisit","intitialView","App","sessionStorageAuth","sessionCookiePresent","passwordResetState","passwordResetMessage","logout2","socket","emit","room","passwordReset","params","formGridParams","formGridPassword","cancelPasswordReset","io","on","clear","sender","receiver","Provider","from","exact","render","Home","Staff","Appointment","Visit","Landing","Login","Signup","PasswordReset","resetState","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.c104ff68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nimport React from 'react';\nimport Alert from 'react-bootstrap/Alert'\n\nimport './alertBox.css'\n\nconst AlertBox = (props) => {\n  let alert = \"Alerts shown here\";\n\n  if (props.alert !== null) {\n    alert = '\"'+props.alert+'\"';\n  }\n\nreturn (\n  <div className=\"alertBox\">\n  <Alert variant=\"warning\">\n  <p className=\"alertBoxText\">{alert}</p>\n  </Alert>\n  </div>\n)\n\n}\n\nexport default AlertBox;\n","import React from 'react';\n\nexport default React.createContext({\n    token: null,\n    activityId: null,\n    activityA: null,\n    activityUser: null,\n    role: null,\n    userId: null,\n    user: {},\n    users:[],\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    selectedVisit: null,\n    userAlert: \"...\",\n    file: null,\n    fancyDate: null,\n    login: (token, activityId, role, tokenExpiration) => {},\n    logout: () => {},\n    setUserAlert: (args) => {},\n    userOnline: () => {},\n});\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n// import Button from 'react-bootstrap/Button';\n\nimport AuthContext from '../../context/auth-context';\nimport './MainNavigation.css';\n\n\nconst mainNavigation = props => (\n  <AuthContext.Consumer>\n    {context => {\n      return (\n        <header className=\"main-navigation\">\n          <div className=\"main-navigation__logo\">\n            <h1>MBJ ENT EMR V2.0.1</h1>\n          </div>\n          <nav className=\"main-navigation__items\">\n            <ul>\n              {!context.token && (\n                <React.Fragment>\n                <li>\n                  <NavLink to=\"/landing\">Landing</NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/login\">Login</NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/signup\">Signup</NavLink>\n                </li>\n                </React.Fragment>\n              )}\n              {context.token && (\n                <React.Fragment>\n                  <li>\n                    <NavLink to=\"/home\">Home</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/profile\">Profile</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/staff\">Staff</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/patients\">Patients</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/appointments\">Appointments</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/visits\">Visits</NavLink>\n                  </li>\n                  <li>\n                    <button onClick={context.logout}>Logout</button>\n                  </li>\n                </React.Fragment>\n              )}\n              {\n                // !context.token && (\n                //   <React.Fragment>\n                //     <li>\n                //       <NavLink to=\"/landing\">.</NavLink>\n                //     </li>\n                //   </React.Fragment>\n                // )\n              }\n            </ul>\n          </nav>\n        </header>\n      );\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default mainNavigation;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport loadingGif from '../../assets/loading.gif';\n\nimport \"./loadingOverlay.css\"\n\nconst LoadingOverlay = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"loadingOverlay\">\n\n    {props.status && (\n      <h5 className=\"attachmentViewerTitle\">... {props.status.type} ...</h5>\n    )}\n\n\n      <Container className=\"overlayContainer\">\n        {props.status.type === 'calendarAppointment' && (\n          <React.Fragment>\n            <Row className=\"overlayRow\">\n              <p>ID: {props.status.data._id}</p>\n              <p>date{props.status.data.date}</p>\n              <p>title{props.status.data.title}</p>\n              <p>type{props.status.data.type}</p>\n              <p>subType{props.status.data.subType}</p>\n              <p>time{props.status.data.time}</p>\n              <p>location{props.status.data.location}</p>\n              <p>important{props.status.data.important}</p>\n              <p>description{props.status.data.description}</p>\n            </Row>\n            {props.selectCalendarDetails && (\n              <Row className=\"overlayRow\">\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={props.selectCalendarDetails.bind(this, props.status.data)}>Details</Button>\n              </Row>\n            )}\n            {props.status.goLink && (\n              <Link\n                to={{\n                  pathname: \"/appointments\",\n                  state: {appointment: props.status.data._id}\n                }}\n              >Go!\n              </Link>\n            )}\n          </React.Fragment>\n        )}\n\n        {props.status.type === 'calendarVisit' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <p>Id: {props.status.data._id}</p>\n            <p>date: {props.status.data.date}</p>\n            <p>timee: {props.status.data.timee}</p>\n            <p>title: {props.status.data.title}</p>\n            <p>type: {props.status.data.type}</p>\n            <p>subType: {props.status.data.subType}</p>\n            {props.selectCalendarDetails && (\n              <Row className=\"overlayRow\">\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={props.selectCalendarDetails.bind(this, props.status.data)}>Details</Button>\n              </Row>\n            )}\n            {props.status.goLink && (\n              <Link\n                to={{\n                  pathname: \"/visits\",\n                  state: {visit: props.status.data._id}\n                }}\n              >Go!\n              </Link>\n            )}\n          </Row>\n          </React.Fragment>\n        )}\n        {props.status.type === 'calendarAttendance' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <p>Date: {props.status.data.date}</p>\n            <p>Status: {props.status.data.status}</p>\n            <p>Description: {props.status.data.description}</p>\n\n          </Row>\n          </React.Fragment>\n        )}\n        {props.status.type === 'calendarLeave' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <p>Type: {props.status.data.type}</p>\n            <p>startDate: {props.status.data.startDate}</p>\n            <p>endDate: {props.status.data.endDate}</p>\n            <p>Description: {props.status.data.description}</p>\n\n          </Row>\n          </React.Fragment>\n        )}\n        {props.status.type === 's3' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <p>{props.status.data.action} -ing {props.status.data.target}...</p>\n\n          </Row>\n          <Row className=\"overlayRow\">\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          </Row>\n          </React.Fragment>\n        )}\n\n        {props.toggleOverlay &&\n          props.status.type !== 's3' && (\n          <Button className=\"sidebarButton\" variant=\"warning\" onClick={props.toggleOverlay}>X</Button>\n        )}\n      </Container>\n\n    </div>\n  </div>\n)\n\n}\n\nexport default LoadingOverlay;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { NavLink } from 'react-router-dom';\n\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport './landing.css';\n\nclass LandingPage extends Component {\n  state = {\n    role: null,\n    userAlert: \"landing page\",\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n  };\n\ncomponentDidMount () {\n}\n\n  render() {\n\n    return (\n      <React.Fragment>\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n      <Container className=\"landingPageContainer\">\n\n      <Row className=\"landingPageRow\">\n      <Col className=\"landingPageCol\">\n        <h1> Welcome to MBJ ENT EMR</h1>\n      </Col>\n      </Row>\n\n\n          {\n            // this.state.isGuest === true && (\n            //   <NavLink to=\"/login\">Login</NavLink>\n            // )\n          }\n          {\n            // this.state.isGuest === true && (\n            //   <NavLink to=\"/signup\">Signup</NavLink>\n            // )\n          }\n\n      </Container>\n\n      </React.Fragment>\n    );\n\n  }\n\n\n}\n\nexport default LandingPage;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './PatientItem.css';\n\nconst PatientItem = (props) => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Username: <span className=\"bold\">{props.patient.username}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            role: <span className=\"bold\">{props.patient.role}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.patient._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                name: <span className=\"bold\">{props.patient.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                username: <span className=\"bold\">{props.patient.username}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                title: <span className=\"bold\">{props.patient.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                role: <span className=\"bold\">{props.patient.role}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                dob: <span className=\"bold\">{moment.unix(props.patient.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                age: <span className=\"bold\">{props.patient.age}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                gender: <span className=\"bold\">{props.patient.gender}</span>\n              </Card.Text>\n              </li>\n              {props.appointmentPage === true && (\n                <li>\n                <Button variant=\"outline-primary\" onClick={props.onSelect.bind(this, props.patient)}>Select</Button>\n                </li>\n              )}\n              {props.appointmentPage !== true &&\n                props.showDetails && (\n                <li>\n                <Button variant=\"outline-primary\" onClick={props.showDetails.bind(this, props.patient)}>Details</Button>\n                </li>\n              )}\n              {props.homePage && (\n                <Link\n                  to={{\n                    pathname: \"/patients\",\n                    state: {patient: props.patient._id}\n                  }}\n                >Go!\n                </Link>\n              )}\n\n            </ul>\n            </Row>\n          )}\n          {deleteState === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.patient)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default PatientItem;\n","import React from 'react';\n\nimport PatientItem from '../../items/patient/PatientItem';\nimport './UserList.css';\n\nconst PatientList = props => {\n\n  const {...filter} = props.filter;\n  let patients2 = props.patients;\n  let propsPatients = [];\n\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'registration.date' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.registration.date > b.registration.date) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'registration.date' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.registration.date < b.registration.date) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'loggedIn') {\n    propsPatients = patients2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field === 'patient' && filter.key === 'active') {\n    propsPatients = patients2.filter(x => x.active === filter.value);\n  }\n\n  if (filter.field !== 'patient') {\n    propsPatients = patients2;\n  }\n\n  let count = 0;\n\n  const patients = propsPatients.map(patient => {\n\n    count = propsPatients.indexOf(patient)+1;\n\n    return (\n      <PatientItem\n        key={count}\n        patient={patient}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        appointmentPage={props.appointmentPage}\n        homePage={props.homePage}\n        onSelect={props.onSelect}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{patients}</ul>;\n};\n\nexport default PatientList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './AppointmentItem.css';\n\nconst AppointmentItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.appointment.title}</span>\n          </Card.Text>\n          {!props.homePage && (\n            <Card.Text className=\"cardText\">\n              Type: <span className=\"bold\">{props.appointment.type}</span>\n            </Card.Text>\n          )}\n          {!props.homePage && (\n            <Card.Text className=\"cardText\">\n              Date: <span className=\"bold\">{moment.unix(props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n            </Card.Text>\n          )}\n          {\n            props.homePage && (\n\n            <Card.Text className=\"cardText\">\n              Patient: <span className=\"bold\">{props.appointment.patient._id}</span>\n            </Card.Text>\n\n          )\n        }\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.appointment._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.appointment.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.appointment.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Date: <span className=\"bold\">{moment.unix(props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                time: <span className=\"bold\">{props.appointment.time}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Patient: <span className=\"bold\">{props.appointment.patient.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                checkinTime: <span className=\"bold\">{props.appointment.checkinTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                seenTime: <span className=\"bold\">{props.appointment.seenTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                location: <span className=\"bold\">{props.appointment.location}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                description: <span className=\"bold\">{props.appointment.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                inProgress: <span className=\"bold\">{props.appointment.inProgress.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                attended: <span className=\"bold\">{props.appointment.attended.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                important: <span className=\"bold\">{props.appointment.important.toString()}</span>\n              </Card.Text>\n              </li>\n              {props.visitPage !== true &&\n                props.showDetails && (\n                <li>\n                <Button variant=\"outline-primary\" onClick={props.showDetails.bind(this, props.appointment)}>Details</Button>\n                </li>\n              )}\n              {props.visitPage === true && (\n                <li>\n                <Button variant=\"outline-primary\" onClick={props.onSelect.bind(this, props.appointment)}>Select</Button>\n                </li>\n              )}\n              {props.homePage && (\n                <Link\n                  to={{\n                    pathname: \"/appointments\",\n                    state: {appointment: props.appointment._id}\n                  }}\n                >Go!\n                </Link>\n              )}\n\n            </ul>\n            </Row>\n          )}\n          {deleteState === true && (\n            <Row>\n              {props.canDelete && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.appointment)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AppointmentItem;\n","import React from 'react';\nimport AppointmentItem from '../../items/appointment/AppointmentItem';\nimport './AppointmentList.css'\n\nconst AppointmentList = props => {\n\n  const {...filter} = props.filter;\n  let appointments2 = props.appointments;\n  let propsAppointments = [];\n\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType > b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType < b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time > b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time < b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location > b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location < b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'important') {\n    propsAppointments = appointments2.filter(x => x.important === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'inProgress') {\n    propsAppointments = appointments2.filter(x => x.inProgress === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'attended') {\n    propsAppointments = appointments2.filter(x => x.attended === filter.value);\n  }\n\n  if (filter.field !== 'appointment') {\n    propsAppointments = appointments2;\n  }\n\n  let count = 0;\n\n  const appointments = propsAppointments.map(appointment=> {\n\n    count = propsAppointments.indexOf(appointment+1);\n\n    return (\n      <AppointmentItem\n        key={count}\n        appointment={appointment}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        visitPage={props.visitPage}\n        homePage={props.homePage}\n        onSelect={props.onSelect}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{appointments}</ul>;\n};\n\nexport default AppointmentList;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { NavLink } from 'react-router-dom';\nimport Image from 'react-bootstrap/Image';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport PatientList from '../../components/lists/patient/PatientList';\nimport AppointmentList from '../../components/lists/appointment/AppointmentList';\nimport loadingGif from '../../assets/loading.gif';\nimport './landing.css';\n\nclass HomePage extends Component {\n  state = {\n    role: null,\n    userAlert: \"landing\",\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    isLoading: false,\n    seshStore: null,\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    todayAppointments: null,\n    queue: null,\n    weekImportantAppointments: null,\n    recentPatients: null,\n  };\n  static contextType = AuthContext;\n\n\ncomponentDidMount () {\n  console.log('...home component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n\n    this.getAppointmentsToday(seshStore);\n    this.getAppointmentsImportantWeek(seshStore);\n    this.getRecentPatients(seshStore);\n\n  }\n}\n\nloadHome = () => {\n  const args = {\n    token: this.context.token,\n    activityId: this.context.activityId\n  }\n\n  this.getAppointmentsToday(args);\n  this.getAppointmentsImportantWeek(args);\n  this.getRecentPatients(args);\n\n}\n\ngetAppointmentsToday = (args) => {\n  console.log('...retrieving todays appointments...');\n  this.context.setUserAlert('...retrieving todays appointments...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAppointmentsToday(\n        activityId:\"${activityId}\")\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAppointmentsToday);\n      console.log('...get todays appointments success!...');\n      let responseAlert = '...get todays appointments success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        todayAppointments: resData.data.getAppointmentsToday,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\ngetAppointmentsImportantWeek = (args) => {\n  console.log('...retrieving important appointments for week...');\n  this.context.setUserAlert('...retrieving important appointments for week...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAppointmentsImportantNextWeek(\n        activityId:\"${activityId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAppointmentsImportantNextWeek);\n      console.log('...get week important appointments success!...');\n      let responseAlert = '...get week important appointments success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        weekImportantAppointments: resData.data.getAppointmentsImportantNextWeek,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\ngetRecentPatients = (args) => {\n  console.log('...retrieving recent patients...');\n  this.context.setUserAlert('...retrieving recent patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getRecentPatients(\n        activityId:\"${activityId}\",\n        amount:7\n      )\n        {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getRecentPatients);\n      console.log('...retrieve recent patients success!...');\n      let responseAlert = '...retrieve recent patients success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        recentPatients: resData.data.getRecentPatients,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\n  render() {\n\n    return (\n      <React.Fragment>\n\n      {\n        this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )\n    }\n      <Container className=\"landingPageContainer\">\n\n      <Row className=\"landingPageTopRow\">\n\n        <Button variant=\"outline-secondary\" size=\"md\" onClick={this.loadHome}>Home</Button>\n        {this.state.isLoading ? (\n          <Image src={loadingGif} className=\"loadingGif\" fluid />\n        ):(\n          <p>.</p>\n        )}\n\n      </Row>\n\n      <Row className=\"landingPageRow\">\n      <Col md={6} className=\"landingPageCol\">\n        <h3>Todays appts</h3>\n        {this.state.todayAppointments && (\n          <AppointmentList\n            filter={this.state.filter}\n            appointments={this.state.todayAppointments}\n            authId={this.context.activityId}\n            homePage={true}\n          />\n        )}\n      </Col>\n      <Col md={6} className=\"landingPageCol\">\n        <h3>Queue</h3>\n        {this.state.queue && (\n          <h3>Queue list</h3>\n        )}\n      </Col>\n      </Row>\n\n      <Row className=\"landingPageRow\">\n      <Col md={5}className=\"landingPageCol\">\n        <h3>Weeks important</h3>\n        {this.state.weekImportantAppointments && (\n          <AppointmentList\n            filter={this.state.filter}\n            appointments={this.state.weekImportantAppointments}\n            authId={this.context.activityId}\n            homePage={true}\n          />\n        )}\n      </Col>\n      <Col md={4}className=\"landingPageCol\">\n        <h3>Recent patients</h3>\n        {this.state.recentPatients && (\n          <PatientList\n            filter={this.state.filter}\n            patients={this.state.recentPatients}\n            authId={this.context.activityId}\n            homePage={true}\n          />\n        )}\n      </Col>\n      <Col md={3}className=\"landingPageCol\">\n        <h3>more stats</h3>\n      </Col>\n      </Row>\n\n      </Container>\n\n      </React.Fragment>\n    );\n\n  }\n\n\n}\n\nexport default HomePage;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nimport './UserItem.css';\n\nconst AddressItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Town: <span className=\"bold\">{props.address.town}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Country: <span className=\"bold\">{props.address.country}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                No: <span className=\"bold\">{props.address.number}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Street: <span className=\"bold\">{props.address.street}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Town: <span className=\"bold\">{props.address.town}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                City: <span className=\"bold\">{props.address.city}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Parish: <span className=\"bold\">{props.address.parish}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Country: <span className=\"bold\">{props.address.country}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Primary: <span className=\"bold\"> {props.address.primary === true && (<FontAwesomeIcon icon={faBatteryThreeQuarters} className=\"listIcon\"/>)} {props.address.primary === false && (<FontAwesomeIcon icon={faBatteryEmpty} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n              {props.makePrimary && (\n                <li>\n                <Button variant=\"outline-primary\" onClick={props.makePrimary.bind(this, props.address)}>Set Primary</Button>\n                </li>\n              )}\n              {props.canDelete === true && (\n                <li>\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.address)}>Delete</Button>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AddressItem;\n","import React from 'react';\n\nimport AddressItem from '../../items/user/AddressItem';\nimport './UserList.css';\n\nconst UserAddressList = props => {\n\n  const {...filter} = props.filter;\n  let addresses2 = props.addresses;\n  let propsAddresses = [];\n\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number > b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number < b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street > b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street < b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town > b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town < b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city > b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city < b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish > b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish < b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country > b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country < b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode > b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode < b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'primary') {\n    propsAddresses = addresses2.filter(x => x.primary === filter.value);\n  }\n  if (filter.field !== 'address') {\n    propsAddresses = addresses2;\n  }\n\n  let count = 0;\n\n  const addresses = propsAddresses.map(address => {\n\n    count = propsAddresses.indexOf(address)+1;\n\n    return (\n      <AddressItem\n        key={count}\n        address={address}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        makePrimary={props.makePrimary}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{addresses}</ul>;\n};\n\nexport default UserAddressList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst AttendanceItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Date: <span className=\"bold\">{moment.unix(props.attendance.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Date: <span className=\"bold\">{moment.unix(props.attendance.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Status: <span className=\"bold\">{props.attendance.status}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.attendance.description}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.attendance)}>Delete</Button>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default AttendanceItem;\n","import React from 'react';\n\nimport AttendanceItem from '../../items/user/AttendanceItem';\nimport './UserList.css';\n\nconst UserAttendanceList = props => {\n\n  const {...filter} = props.filter;\n  let attendance2 = props.attendance;\n  let propsAttendance = [];\n\n  if (filter.field === 'attendance' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsAttendance = attendance2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'attendance' && filter.key === 'status' && filter.value === 'Descending') {\n    propsAttendance = attendance2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'attendance' && filter.key === 'status' && filter.value === 'Ascending') {\n    propsAttendance = attendance2.sort((a, b) => (a.status > b.status) ? 1 : -1);\n  }\n  if (filter.field === 'attendance' && filter.key === 'status' && filter.value === 'Descending') {\n    propsAttendance = attendance2.sort((a, b) => (a.status < b.status) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'attendance') {\n    propsAttendance = attendance2;\n  }\n\n  let count = 0;\n\n  const attendance = propsAttendance.map(attendanceItem => {\n\n    count = propsAttendance.indexOf(attendanceItem)+1;\n\n    return (\n      <AttendanceItem\n        key={count}\n        attendance={attendanceItem}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"attendanceList\">{attendance}</ul>;\n};\n\nexport default UserAttendanceList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst LeaveItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Start: <span className=\"bold\">{moment.unix(props.leave.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.leave.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Start: <span className=\"bold\">{moment.unix(props.leave.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                End: <span className=\"bold\">{moment.unix(props.leave.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.leave.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              {props.canDelete === true && (\n                <li>\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.leave)}>Delete</Button>\n                </li>\n              )}\n              </li>\n\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default LeaveItem;\n","import React from 'react';\n\nimport LeaveItem from '../../items/user/LeaveItem';\nimport './UserList.css';\n\nconst UserLeaveList = props => {\n\n  const {...filter} = props.filter;\n  let leave2 = props.leave;\n  let propsLeave = [];\n\n  if (filter.field === 'leave' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsLeave = leave2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'type' && filter.value === 'Descending') {\n    propsLeave = leave2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'startDate' && filter.value === 'Ascending') {\n    propsLeave = leave2.sort((a, b) => (a.startDate > b.startDate) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'startDate' && filter.value === 'Descending') {\n    propsLeave = leave2.sort((a, b) => (a.startDate < b.startDate) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'endDate' && filter.value === 'Ascending') {\n    propsLeave = leave2.sort((a, b) => (a.endDate > b.endDate) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'endDate' && filter.value === 'Descending') {\n    propsLeave = leave2.sort((a, b) => (a.endDate < b.endDate) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'leave') {\n    propsLeave = leave2;\n  }\n\n  let count = 0;\n\n  const leave = propsLeave.map(leaveItem => {\n\n    count = propsLeave.indexOf(leaveItem)+1;\n\n    return (\n      <LeaveItem\n        key={count}\n        leave={leaveItem}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"leaveList\">{leave}</ul>;\n};\n\nexport default UserLeaveList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nimport './UserItem.css';\n\nconst ImageItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Name: <span className=\"bold\">{props.image.name}</span>\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.image.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.image.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.image.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.image)}>Delete</Button>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n\n};\n\nexport default ImageItem;\n","import React from 'react';\n\nimport ImageItem from '../../items/user/ImageItem';\nimport './UserList.css';\n\nconst UserImageList = props => {\n\n  const {...filter} = props.filter;\n  let images2 = props.images;\n  let propsImages = [];\n\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'image') {\n    propsImages = images2;\n  }\n\n  let count = 0;\n\n  const images = propsImages.map(image => {\n\n    count = propsImages.indexOf(image)+1;\n\n    return (\n      <ImageItem\n        key={count}\n        image={image}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"imageList\">{images}</ul>;\n};\n\nexport default UserImageList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst FileItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Name: <span className=\"bold\">{props.file.name}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.file.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.file.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.file.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.file)}>Delete</Button>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default FileItem;\n","import React from 'react';\n\nimport FileItem from '../../items/patient/FileItem';\nimport './UserList.css';\n\nconst PatientFileList = props => {\n\n  const {...filter} = props.filter;\n  let files2 = props.files;\n  let propsFiles = [];\n\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'file') {\n    propsFiles = files2;\n  }\n\n  let count = 0;\n\n  const files = propsFiles.map(file => {\n\n    count = propsFiles.indexOf(file)+1;\n\n    return (\n      <FileItem\n        key={count}\n        file={file}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{files}</ul>;\n};\n\nexport default PatientFileList;\n","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst AppointmentItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.appointment.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.appointment.type}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Date: <span className=\"bold\">{moment.unix(props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.appointment._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                time: <span className=\"bold\">{props.appointment.time}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                checkinTime: <span className=\"bold\">{props.appointment.checkinTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                seenTime: <span className=\"bold\">{props.appointment.seenTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                location: <span className=\"bold\">{props.appointment.location}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                description: <span className=\"bold\">{props.appointment.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                inProgress: <span className=\"bold\">{props.appointment.inProgress.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                attended: <span className=\"bold\">{props.appointment.attended.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                important: <span className=\"bold\">{props.appointment.important.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Link\n                to={{\n                  pathname: \"/appointments\",\n                  state: {appointment: props.appointment._id}\n                }}\n              >Go!\n              </Link>\n              </li>\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AppointmentItem;\n","import React from 'react';\n\nimport AppointmentItem from '../../items/user/AppointmentItem';\nimport './UserList.css';\n\nconst UserAppointmentList = props => {\n\n  const {...filter} = props.filter;\n  let appointments2 = props.appointments;\n  let propsAppointments = [];\n\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType > b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType < b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time > b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time < b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location > b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location < b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'important') {\n    propsAppointments = appointments2.filter(x => x.important === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'inProgress') {\n    propsAppointments = appointments2.filter(x => x.inProgress === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'attended') {\n    propsAppointments = appointments2.filter(x => x.attended === filter.value);\n  }\n  if (filter.field !== 'appointment') {\n    propsAppointments = appointments2;\n  }\n\n  let count = 0;\n\n  const appointments = propsAppointments.map(appointment => {\n\n    count = propsAppointments.indexOf(appointment)+1;\n\n    return (\n      <AppointmentItem\n        key={count}\n        appointment={appointment}\n      />\n    );\n  });\n\n  return <ul className=\"appointmentList\">{appointments}</ul>;\n};\n\nexport default UserAppointmentList;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './UserItem.css';\n\nconst NoteItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Note: <span className=\"bold\">{props.note}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.note)}>Delete</Button>\n              )}\n            </Row>\n            )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\n\nimport NoteItem from '../../items/user/NoteItem';\nimport './UserList.css';\n\nconst UserNoteList = props => {\n\n  const {...filter} = props.filter;\n  let notes2 = props.notes;\n  let propsNotes = [];\n\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Ascending') {\n    propsNotes = notes2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Descending') {\n    propsNotes = notes2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'note') {\n    propsNotes = notes2;\n  }\n\n  let count = 0;\n\n  const notes = propsNotes.map(note => {\n\n    count = propsNotes.indexOf(note)+1;\n\n    return (\n      <NoteItem\n        key={count}\n        note={note}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{notes}</ul>;\n};\n\nexport default UserNoteList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAddressForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"address\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>number</option>\n          <option>street</option>\n          <option>town</option>\n          <option>city</option>\n          <option>parish</option>\n          <option>country</option>\n          <option>postalCode</option>\n          <option>primary</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAddressForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAddressForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"attendance\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>status</option>\n          <option>date</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAddressForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterLeaveForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"leave\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>type</option>\n          <option>startDate</option>\n          <option>endDate</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterLeaveForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterImageForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"image\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>type</option>\n          <option>link</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterImageForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterFileForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"file\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>type</option>\n          <option>link</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterFileForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAppointmentForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"appointment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>title</option>\n          <option>type</option>\n          <option>subType</option>\n          <option>date</option>\n          <option>time</option>\n          <option>location</option>\n          <option>important</option>\n          <option>inProgress</option>\n          <option>attended</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAppointmentForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterNoteForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"note\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>note</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterNoteForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst UpdateUserSingleFieldForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Update Single Field</h4>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>field</Form.Label>\n        <Form.Control type=\"text\" value={props.field}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"query... date = YYY-MM-DD!!\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default UpdateUserSingleFieldForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './addForms.css';\n\nconst AddAddressForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Address</h4>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"number\">\n        <Form.Label>addressNumber</Form.Label>\n        <Form.Control type=\"number\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"street\">\n        <Form.Label>addressStreet</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"town\">\n        <Form.Label>addressTown</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"city\">\n        <Form.Label>addressCity</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"parish\">\n        <Form.Label>addressParish</Form.Label>\n        <Form.Control as=\"select\">\n          <option>none</option>\n          <option>Hanover</option>\n          <option>St. Elizabeth</option>\n          <option>St. James</option>\n          <option>Trelawny</option>\n          <option>Westmoreland</option>\n          <option>Clarendon</option>\n          <option>Manchester</option>\n          <option>St. Ann</option>\n          <option>St. Catherine</option>\n          <option>St. Mary</option>\n          <option>Kingston</option>\n          <option>St. Andrew</option>\n          <option>Portland</option>\n          <option>St. Thomas</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"country\">\n        <Form.Label>addressCountry</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"postalCode\">\n        <Form.Label>addressPostalCode</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAddressForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddAttendanceForm = (props) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const handleChangeStartDate = startDate => {\n    setStartDate(startDate);\n    console.log(`startDate ${startDate}`);\n   }\n   const [endDate, setEndDate] = useState(new Date());\n   const handleChangeEndDate = endDate => {\n     setEndDate(endDate);\n     console.log(`endDate ${endDate}`);\n    }\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Attendance</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"date\">\n        <Form.Label>date</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"date\"/>\n      </Form.Group>\n      {\n        // <Form.Group as={Col} controlId=\"\">\n        //   <Form.Label>startDate</Form.Label>\n        //   <DatePicker className=\"\" id=\"startDate\"\n        //     selected={startDate}\n        //     onChange={handleChangeStartDate}\n        //   />\n        // </Form.Group>\n        // <Form.Group as={Col} controlId=\"\">\n        //   <Form.Label>startDate</Form.Label>\n        //   <DatePicker className=\"\" id=\"endDate\"\n        //     selected={endDate}\n        //     onChange={handleChangeEndDate}\n        //   />\n        // </Form.Group>\n      }\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"status\">\n        <Form.Label>status</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"status\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAttendanceForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddLeaveForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Leave</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"startDate\">\n        <Form.Label>startDate</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"startDate\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"endDate\">\n        <Form.Label>endDate</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"endDate\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddLeaveForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddNoteForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Notes</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"notes\">\n        <Form.Label>notes</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"note,note,note,note\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddNoteForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddImageForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Image</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"name\">\n        <Form.Label>name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"path\">\n        <Form.Label>path</Form.Label>\n        <Form.Control path=\"text\" placeholder=\"path\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n  <Form.Row className=\"formBtnRow\">\n    <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n    <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddImageForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddFileForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add File</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"name\">\n        <Form.Label>name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"path\">\n        <Form.Label>path</Form.Label>\n        <Form.Control path=\"text\" placeholder=\"path\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddFileForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\nimport S3 from 'react-aws-s3';\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport UserAddressList from '../../components/lists/user/UserAddressList'\nimport UserAttendanceList from '../../components/lists/user/UserAttendanceList'\nimport UserLeaveList from '../../components/lists/user/UserLeaveList'\nimport UserImageList from '../../components/lists/user/UserImageList'\nimport UserFileList from '../../components/lists/user/UserFileList'\nimport UserAppointmentList from '../../components/lists/user/UserAppointmentList'\nimport UserNoteList from '../../components/lists/user/UserNoteList'\n\nimport FilterAddressForm from '../../components/forms/filter/FilterAddressForm';\nimport FilterAttendanceForm from '../../components/forms/filter/FilterAttendanceForm';\nimport FilterLeaveForm from '../../components/forms/filter/FilterLeaveForm';\nimport FilterImageForm from '../../components/forms/filter/FilterImageForm';\nimport FilterFileForm from '../../components/forms/filter/FilterFileForm';\nimport FilterAppointmentForm from '../../components/forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../../components/forms/filter/FilterNoteForm';\n\nimport UpdateUserSingleFieldForm from '../../components/forms/add/UpdateUserSingleFieldForm';\nimport AddAddressForm from '../../components/forms/add/AddAddressForm';\nimport AddAttendanceForm from '../../components/forms/add/AddAttendanceForm';\nimport AddLeaveForm from '../../components/forms/add/AddLeaveForm';\nimport AddNoteForm from '../../components/forms/add/AddNoteForm';\nimport AddImageForm from '../../components/forms/add/AddImageForm';\nimport AddFileForm from '../../components/forms/add/AddFileForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './profile.css';\n\nclass MyProfilePage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    calendarAttendance: null,\n    calendarLeave: null,\n    calendarAppointments: null,\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...MyProfile component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getThisUser(seshStore);\n    this.getPocketVars(seshStore);\n\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n    console.log('...retriving pocketVars..');\n    this.context.setUserAlert('...retriving pocketVars..')\n    const token = args.token;\n    const activityId = args.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")}\n          `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          this.setState({userAlert: resData.errors[0].message})\n        } else {\n          let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n          console.log('...retriving pocketVars success...');\n          this.context.setUserAlert('...retriving pocketVars success...')\n          this.setState({\n            pocketVars: pocketVarsParsed\n          });\n        }\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.context.setUserAlert(err);\n      });\n    }\ngetThisUser (args) {\n  console.log('...retrieving your profile info...');\n  this.context.setUserAlert('...retrieving your profile info...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getUserById(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\"\n      )\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getUserById);\n      let responseAlert = '...profile retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.getUserById,\n        activityA: `getUserById?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.getUserById;\n      if (resData.data.getUserById.role === 'Admin') {\n        this.setState({\n          canDelete: true\n        })\n      }\n      this.parseForCalendar({\n        attendance: resData.data.getUserById.attendance,\n        leave: resData.data.getUserById.leave,\n        appointments: resData.data.getUserById.appointments,\n      })\n      this.logUserActivity(args);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsubmitAddAddressForm = (event) => {\n  event.preventDefault();\n  console.log('...adding address...');\n  this.context.setUserAlert('...adding address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const number = event.target.number.value;\n  const street = event.target.street.value;\n  const town = event.target.town.value;\n  const city = event.target.city.value;\n  const parish = event.target.parish.value;\n  const country = event.target.country.value;\n  const postalCode = event.target.postalCode.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${number},\n          addressStreet:\"${street}\",\n          addressTown:\"${town}\",\n          addressCity:\"${city}\",\n          addressParish:\"${parish}\",\n          addressCountry:\"${country}\",\n          addressPostalCode:\"${postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAddress);\n      let responseAlert = '...address add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserAddress,\n        activityA: `addUserAddress?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAddress = (args) => {\n  console.log('...deleting address...');\n  this.context.setUserAlert('...deleting address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      mutation {deleteUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\",\n          addressPrimary: ${args.primary}\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAddress);\n      let responseAlert = '...address delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserAddress,\n        activityA: `deleteUserAddress?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.deleteUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsetAddressPrimary = (args) => {\n  console.log('...setting primary address...');\n  this.context.setUserAlert('...setting primary address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      mutation {setUserAddressPrimary(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.setUserAddressPrimary);\n      let responseAlert = '...address set primary success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.setUserAddressPrimary,\n        activityA: `setUserAddressPrimary?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.setUserAddressPrimary;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddAttendanceForm = (event) => {\n  event.preventDefault();\n  console.log('...adding attendance...');\n  this.context.setUserAlert('...attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const attendanceDate = event.target.date.value;\n  const attendanceStatus = event.target.status.value;\n  const attendanceDescription = event.target.description.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAttendance(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          attendanceDate:\"${attendanceDate}\",\n          attendanceStatus:\"${attendanceStatus}\",\n          attendanceDescription:\"${attendanceDescription}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAttendance);\n      let responseAlert = '...attendance add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserAttendance,\n        activityA: `addUserAttendance?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: resData.data.addUserAttendance.attendance,\n        leave: resData.data.addUserAttendance.leave,\n        appointments: resData.data.addUserAttendance.appointments,\n      })\n      this.context.activityUser = resData.data.addUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAttendance = (args) => {\n  console.log('...deleting attendance...');\n  this.context.setUserAlert('...deleting attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserAttendance(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            attendanceDate:\"${args.date}\",\n            attendanceStatus:\"${args.status}\",\n            attendanceDescription:\"${args.description}\"\n          }){_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAttendance);\n      let responseAlert = '...attendance delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserAttendance,\n        activityA: `deleteUserAttendance?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: resData.data.deleteUserAttendance.attendance,\n        leave: resData.data.deleteUserAttendance.leave,\n        appointments: resData.data.deleteUserAttendance.appointments,\n      })\n      this.context.activityUser = resData.data.deleteUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddLeaveForm = (event) => {\n  event.preventDefault();\n  console.log('...adding leave...');\n  this.context.setUserAlert('...leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const startDate = event.target.startDate.value;\n  const endDate = event.target.endDate.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserLeave(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          leaveType:\"${type}\",\n          leaveStartDate:\"${startDate}\",\n          leaveEndDate:\"${endDate}\",\n          leaveDescription:\"${description}\"\n        }){_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserLeave);\n      let responseAlert = '...leave add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserLeave,\n        activityA: `addUserLeave?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: resData.data.addUserLeave.attendance,\n        leave: resData.data.addUserLeave.leave,\n        appointments: resData.data.addUserLeave.appointments,\n      })\n      this.context.activityUser = resData.data.addUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteLeave = (args) => {\n  console.log('...deleting leave...');\n  this.context.setUserAlert('...deleting leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserLeave(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            leaveType:\"${args.type}\",\n            leaveStartDate:\"${args.startDate}\",\n            leaveEndDate:\"${args.endDate}\",\n            leaveDescription:\"${args.description}\"\n          })\n          {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserLeave);\n      let responseAlert = '...leave delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserLeave,\n        activityA: `deleteUserLeave?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: resData.data.addUserLeave.attendance,\n        leave: resData.data.addUserLeave.leave,\n        appointments: resData.data.addUseLeavce.appointments,\n      })\n      this.context.activityUser = resData.data.deleteUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding image...');\n  this.context.setUserAlert('...image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  const username = this.state.activityUser.username;\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+activityId+'/images';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addUserImage(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          imageName:\"${imageName}\",\n          imageType:\"${imageType}\",\n          imagePath:\"${imagePath}\"\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserImage);\n      let responseAlert = '...image add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserImage,\n        activityA: `addUserImage?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n  console.log('...deleting image...');\n  this.context.setUserAlert('...deleting image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const username = this.state.activityUser.username;\n\n  const filePath = 'staff/'+username+'/images';\n  const filename = args.name;\n  // console.log('foo',filename);\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            imageName:\"${args.name}\",\n            imageType:\"${args.type}\",\n            imagePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserImage);\n      let responseAlert = '...image delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserImage,\n        activityA: `deleteUserImage?activityId:${activityId},userId:${userId}`,\n      });\n      this.context.activityUser = resData.data.deleteUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'staff/'+activityId+'/images';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding file...');\n  this.context.setUserAlert('...file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  const username = this.state.activityUser.username;\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+activityId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addUserFile(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          fileName:\"${file2Name}\",\n          fileType:\"${file2Type}\",\n          filePath:\"${file2Path}\"\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserFile);\n      let responseAlert = '...file add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserFile,\n        activityA: `addUserFile?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n  console.log('...deleting file...');\n  this.context.setUserAlert('...deleting file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const username = this.state.activityUser.username;\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserFile(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            fileName:\"${args.name}\",\n            fileType:\"${args.type}\",\n            filePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserFile);\n      let responseAlert = '...file delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserFile,\n        activityA: `deleteUserFile?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.deleteUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'staff/'+activityId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding note...');\n  this.context.setUserAlert('...note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const note = event.target.note.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserNotes(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          notes:\"${note}\"\n        }){_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserNotes,\n        activityA: `addUserNotes?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n  console.log('...deleting note...');\n  this.context.setUserAlert('...deleting note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  let requestBody = {\n    query: `\n        mutation {deleteUserNote(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            note: \"${args}\"\n          })\n          {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserNote,\n        activityA: `deleteUserNote?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.deleteUserNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateUserSingleField(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateUserSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.updateUserSingleField,\n        activityA: `updateUserSingleField?activityId:${activityId},userId:${userId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.updateUserSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing profile dates for calendar...');\n  let calendarAttendance = args.attendance.map(x => ({\n      title: x.status,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        status: x.status,\n        description: x.description,\n        field: 'attendance'\n      }\n    }))\n  let calendarLeave = args.leave.map(x => ({\n      title: x.type,\n      date: moment.unix(x.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      end: moment.unix(x.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        type: x.type,\n        startDate: x.startDate,\n        endDate: x.endDate,\n        description: x.description,\n        field: 'leave'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave\n    })\n  let calendarAppointments = args.appointments.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n        field: 'appointments'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave,\n      calendarAppointments: calendarAppointments,\n    })\n}\n\nviewCalendarEvent = (args) => {\n\n  let input = args.event.extendedProps.props;\n  let data;\n  if (input.field === 'attendance') {\n    data = {\n      date: input.date,\n      status: input.status,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAttendance', data: data}\n    })\n  }\n  if (input.field === 'leave') {\n    data = {\n      type: input.type,\n      startDate: input.startDate,\n      endDate: input.endDate,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarLeave', data: data}\n    })\n  }\n  if (input.field === 'appointments') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      location: input.location,\n      description: input.description,\n      important: input.important,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAppointment', data: data, goLink: true}\n    })\n  }\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"profilePageContainer\">\n      <Row className=\"profilePageContainerRow headRow\">\n        <Col md={9} className=\"profilePageContainerCol\">\n          <h1 className=\"profileHeading\">Profile</h1>\n        </Col>\n        <Col md={3} className=\"profilePageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Row className=\"profilePageContainerRow mainRow\">\n        <Col md={2} className=\"profilePageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"profilePageContainerCol\">\n          {!this.state.activityUser && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"profilePageContainerRow mainRow2\">\n          <Col md={3} className=\"profilePageContainerCol specialCol1\">\n\n          {this.state.sideCol === 'menu' && (\n            <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n              <Nav.Item>\n                <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'address')}>Addresses</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'attendance')}>Attendance</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'leave')}>Leave</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'image')}>Images</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'file')}>Files</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'appointment')}>Appointments</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n              </Nav.Item>\n            </Nav>\n          )}\n          {this.state.sideCol === 'filter' && (\n            <Col>\n              {this.state.menuSelect === 'address' && (\n                <FilterAddressForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'attendance' && (\n                <FilterAttendanceForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'leave' && (\n                <FilterLeaveForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'image' && (\n                <FilterImageForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'file' && (\n                <FilterFileForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'appointment' && (\n                <FilterAppointmentForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'note' && (\n                <FilterNoteForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n            </Col>\n\n          )}\n          </Col>\n\n          {this.state.activityUser && (\n            <Col md={9} className=\"profilePageContainerCol specialCol2\">\n\n              {this.state.updateSingleField.state === true && (\n                <UpdateUserSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n\n              <Tab.Content className=\"tabContent\" >\n                <Tab.Pane eventKey=\"1\">\n                  <p className=\"displayPaneTitle\">Basic:</p>\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Title:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.title}</p>\n                      <p className=\"listGroupText\">Name:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.name}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Username:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.username}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                      <p className=\"listGroupText\">Role:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.role}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Reg No:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.registrationNumber}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">DOB:</p>\n                      <p className=\"listGroupText bold\">{moment.unix(this.state.activityUser.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                      <p className=\"listGroupText\">Age:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.age}</p>\n                      <p className=\"listGroupText\">Gender:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.gender}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                    <p className=\"listGroupText\">Email:</p>\n                    <p className=\"listGroupText bold\">{this.state.activityUser.contact.email}</p>\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                    <p className=\"listGroupText\">Phone:</p>\n                    <p className=\"listGroupText bold\">{this.state.activityUser.contact.phone}</p>\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                    <p className=\"listGroupText\">Phone 2:</p>\n                    <p className=\"listGroupText bold\">{this.state.activityUser.contact.phone2}</p>\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p></p>\n                      <p></p>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"2\">\n                  <p className=\"displayPaneTitle\">Admin:</p>\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser._id}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">LoggedIn:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.loggedIn.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">ClientConnected:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.clientConnected.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Verified:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.verification.verified.toString()}</p>\n                      <p className=\"listGroupText\">Type:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.verification.type}</p>\n                      <p className=\"listGroupText\">Code:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.verification.code}</p>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"3\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Addresses:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'address' && (\n                      <AddAddressForm\n                        onConfirm={this.submitAddAddressForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserAddressList\n                    filter={this.state.filter}\n                    addresses={this.state.activityUser.addresses}\n                    authId={this.state.activityUser._id}\n                    onDelete={this.deleteAddress}\n                    canDelete={this.state.canDelete}\n                    makePrimary={this.setAddressPrimary}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"4\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Attendance:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'attendance')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'attendance' && (\n                      <AddAttendanceForm\n                        onConfirm={this.submitAddAttendanceForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAttendanceList\n                      filter={this.state.filter}\n                      attendance={this.state.activityUser.attendance}\n                      authId={this.state.activityUser._id}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteAttendance}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAttendance}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"5\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Leave:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'leave')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'leave' && (\n                      <AddLeaveForm\n                        onConfirm={this.submitAddLeaveForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserLeaveList\n                      filter={this.state.filter}\n                      leave={this.state.activityUser.leave}\n                      authId={this.state.activityUser._id}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteLeave}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarLeave}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"6\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Images:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'image' && (\n                      <AddImageForm\n                        onConfirm={this.submitAddImageForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserImageList\n                    filter={this.state.filter}\n                    images={this.state.activityUser.images}\n                    authId={this.state.activityUser._id}showListDetails={this.showListDetails}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteImage}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"7\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Files:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'file' && (\n                      <AddFileForm\n                        onConfirm={this.submitAddFileForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserFileList\n                    filter={this.state.filter}\n                    files={this.state.activityUser.files}\n                    authId={this.state.activityUser._id}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteFile}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"8\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Appointments:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                  </Row>\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAppointmentList\n                      filter={this.state.filter}\n                      appointments={this.state.activityUser.appointments}\n                      authId={this.state.activityUser._id}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAppointments}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"9\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Notes:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'note' && (\n                      <AddNoteForm\n                        onConfirm={this.submitAddNoteForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserNoteList\n                    filter={this.state.filter}\n                    notes={this.state.activityUser.notes}\n                    authId={this.state.activityUser._id}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteNote}\n                  />\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default MyProfilePage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './authForms.css';\n\nconst LoginForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Login</h1>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"email\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"password\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\" />\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Login</Button>\n      <Button variant=\"outline-primary\" onClick={props.onStartVerification}>Verify</Button>\n      <Button variant=\"outline-secondary\" className=\"loginFormBtn\" onClick={props.onStartForgotPassword}>ForgotPassword</Button>\n      <Button variant=\"outline-warning\" className=\"loginFormBtn\">\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default LoginForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst verifyUserForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n  <h1>Verify</h1>\n  <Form.Row>\n    <Form.Group className=\"searchInput\" controlId=\"type\">\n      <Form.Label>type</Form.Label>\n      <Form.Control as=\"select\">\n        <option>email</option>\n      </Form.Control>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"username\">\n      <Form.Label>username</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"username\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"email\">\n      <Form.Label>email</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"email\"/>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"code\">\n      <Form.Label>code</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"verification code\"/>\n    </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n    Verify\n    </Button>\n  )}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default verifyUserForm;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './ForgotPasswordForm.css';\n\nconst ForgotPasswordForm = (props) => {\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n  <h1>Forgot Password</h1>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"username\">\n      <Form.Label>Username</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"username\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"email\">\n      <Form.Label>email</Form.Label>\n      <Form.Control type=\"email\" placeholder=\"email\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">Request New Password</Button>\n  </Form.Row>\n</Form>\n</div>\n\n)};\n\nexport default ForgotPasswordForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from 'moment';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport LoginForm from '../../components/forms/auth/LoginForm';\nimport VerifyUserForm from '../../components/forms/auth/VerifyUserForm';\nimport ForgotPasswordForm from '../../components/forms/auth/ForgotPasswordForm';\n\nclass LoginPage extends Component {\n  state = {\n    verifying: false,\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    userSeshStore: false,\n    user: {},\n    activityA: null,\n    requestingPasswordReset: false,\n    showForm: 'login',\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...login component mounted...');;\n  }\n\n  submitLoginForm = (event) => {\n    event.preventDefault();\n    this.context.setUserAlert(\"...submitLoginForm...\")\n    console.log(\"...submitLoginForm...\");\n\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      this.context.setUserAlert(\"...blank fields!!!...\")\n      return;\n    }\n    let requestBody = {\n        query: `\n          {login(email:\"${email}\",password:\"${password}\"){activityId,role,token,tokenExpiration,error}}`};\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.login);\n      let responseAlert = '...login success!...';\n      let error = null;\n      if (resData.data.login.error) {\n        error = resData.data.login.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      if (resData.data.login.token !== \"\") {\n        this.context.login(\n          resData.data.login.token,\n          resData.data.login.activityId,\n          resData.data.login.role,\n          resData.data.login.tokenExpiration\n        );\n        const sessionObject = {\n          token: resData.data.login.token,\n          activityId: resData.data.login.activityId,\n          role: resData.data.login.role,\n          tokenExpiration: resData.data.login.tokenExpiration\n        }\n        this.context.setUserAlert(responseAlert)\n       sessionStorage.setItem('logInfo', JSON.stringify(sessionObject));\n       this.setState({ activityA: `login?${sessionObject.activityId}`})\n       this.logUserActivity();\n      }\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n  };\n\n  logUserActivity() {\n    console.log('...logUserActivity...');\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    const activityId = seshStore.activityId;\n    const token = seshStore.token;\n    const userId = activityId;\n    const request = this.state.activityA;\n    const activityDate = moment().format('YYYY-MM-DD');\n    let requestBody = {\n      query: `\n        mutation {addUserActivity(\n          activityId:\"${activityId}\",userId:\"${userId}\",\n          userInput:{\n            activityDate:\"${activityDate}\",\n            activityRequest:\"${request}\"\n          })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n      `};\n    fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log('...resData...',resData.data.addUserActivity);\n        if (resData.data.addUserActivity.error) {\n          console.log('...resDataError...',resData.data.addUserActivity.error);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  verifyUser = (event) => {\n    event.preventDefault();\n    console.log('...verify user...');\n    const email = event.target.email.value;\n    const type = event.target.type.value;\n    const code = event.target.code.value;\n    const username = event.target.username.value;\n\n    const requestBody = {\n      query: `\n        mutation {verifyUser(\n          userInput:{\n            username:\"${username}\",\n            contactEmail:\"${email}\",\n            verificationType:\"${type}\",\n            verificationCode:\"${code}\"\n          }\n        )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log('...resData...',resData.data.verifyUser);\n        this.context.setUserAlert('Verified...Please try loggin in again..')\n      })\n      .catch(err => {\n        this.context.setUserAlert(err)\n      });\n  }\n\n  toggleVerification = () => {\n    if (this.state.showForm === 'verify') {\n      this.setState({\n        showForm: 'login'\n      })\n    } else {\n      this.setState({\n        showForm: 'verify'\n      })\n    }\n\n  };\n  toggleForgotPassword = () => {\n    if (this.state.showForm === 'forgotPassword') {\n      this.setState({\n        showForm: 'login'\n      })\n    } else {\n      this.setState({\n        showForm: 'forgotPassword'\n      })\n    }\n\n  }\n\n  requestPasswordReset = (event) => {\n    event.preventDefault();\n    console.log('...requesting password reset...');\n    this.setState({isLoading: true})\n\n    const username = event.target.username.value;\n    const email = event.target.email.value;\n    const requestBody = {\n      query: `\n         mutation {requestPasswordReset(\n           userInput:{\n             username:\"${username}\",\n             contactEmail:\"${email}\"\n           })\n           {_id,username,contact{email}verification{verified,type,code}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log('...resData...',resData.data.requestPasswordReset)\n        if (resData.errors) {\n          this.context.setUserAlert(resData.errors[0].message);\n        } else {\n          this.context.setUserAlert('...password reset request sent...');\n          this.setState({isLoading: false, requestingPasswordReset: false});\n          this.toggleForgotPassword();\n        }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  render() {\n    return (\n      <Container className=\"authPageContainer\">\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n      {this.state.showForm === 'login' && (\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n            <LoginForm\n              onConfirm={this.submitLoginForm}\n              onStartForgotPassword={this.toggleForgotPassword}\n              onStartVerification={this.toggleVerification}\n            />\n          </Col>\n        </Row>\n      )}\n\n      {this.state.showForm === 'verify' && (\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n            <VerifyUserForm\n              canCancel\n              canConfirm\n              onCancel={this.toggleVerification}\n              onConfirm={this.verifyUser}\n            />\n          </Col>\n        </Row>\n      )}\n\n\n      {this.state.showForm === 'forgotPassword' && (\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n            <ForgotPasswordForm\n              onCancel={this.toggleForgotPassword}\n              onConfirm={this.requestPasswordReset}\n            />\n          </Col>\n        </Row>\n      )}\n\n      </Container>\n\n    );\n  }\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './authForms.css';\n\nconst SignupForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Signup</h1>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"email\">\n        <Form.Label>email Address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"password\">\n        <Form.Label>password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"password\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"role\">\n        <Form.Label>role</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Admin</option>\n          <option>Staff</option>\n          <option>Nurse</option>\n          <option>Doctor</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Mr</option>\n          <option>Mrs</option>\n          <option>Ms</option>\n          <option>Dr</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"name\">\n        <Form.Label>name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"username\">\n        <Form.Label>username</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"username\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"dob\">\n        <Form.Label>dob</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"gender\">\n        <Form.Label>gender</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Female</option>\n          <option>Male</option>\n          <option>Prefer Not to Say</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"phone\">\n        <Form.Label>phone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760001234\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"phone2\">\n        <Form.Label>phone2</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760005678\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressNumber\">\n        <Form.Label>addressNumber</Form.Label>\n        <Form.Control type=\"number\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressStreet\">\n        <Form.Label>addressStreet</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressTown\">\n        <Form.Label>addressTown</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressCity\">\n        <Form.Label>addressCity</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressParish\">\n        <Form.Label>addressParish</Form.Label>\n        <Form.Control as=\"select\">\n          <option>none</option>\n          <option>Hanover</option>\n          <option>St. Elizabeth</option>\n          <option>St. James</option>\n          <option>Trelawny</option>\n          <option>Westmoreland</option>\n          <option>Clarendon</option>\n          <option>Manchester</option>\n          <option>St. Ann</option>\n          <option>St. Catherine</option>\n          <option>St. Mary</option>\n          <option>Kingston</option>\n          <option>St. Andrew</option>\n          <option>Portland</option>\n          <option>St. Thomas</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressCountry\">\n        <Form.Label>addressCountry</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressPostalCode\">\n        <Form.Label>addressPostalCode</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Signup</Button>\n    </Form.Row>\n    <Form.Row>\n      <Button variant=\"outline-warning\" className=\"loginFormBtn\">\n        <NavLink to=\"/login\">Login</NavLink>\n      </Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default SignupForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from 'moment';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport SignupForm from '../../components/forms/auth/SignupForm';\n\nclass SignUpPage extends Component {\n  state = {\n    verifying: false,\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    userSeshStore: false,\n    user: {},\n    activityA: null,\n    requestingPasswordReset: false,\n    signupStatus: null,\n    invited: false,\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...signup component mounted...');\n    // this.context.setUserAlert('...signup component mounted...')\n  }\n\n\n  submitSignupForm = (event) => {\n    event.preventDefault();\n    this.context.setUserAlert(\"...submitSignupForm...\")\n    console.log(\"...submitSignupForm...\");\n\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n    const role = event.target.role.value;\n    const name = event.target.name.value;\n    const title = event.target.title.value;\n    const username = event.target.username.value;\n    const dob = event.target.dob.value;\n    const gender = event.target.gender.value;\n    const phone = event.target.phone.value;\n    const phone2 = event.target.phone2.value;\n    const addressNumber = event.target.addressNumber.value;\n    const addressStreet = event.target.addressStreet.value;\n    const addressTown = event.target.addressTown.value;\n    const addressCity = event.target.addressCity.value;\n    const addressParish = event.target.addressParish.value;\n    const addressCountry = event.target.addressCountry.value;\n    const addressPostalCode = event.target.addressPostalCode.value;\n\n    if (email.trim().length === 0 ||\n        password.trim().length === 0 ||\n        role.trim().length === 0 ||\n        name.trim().length === 0 ||\n        username.trim().length === 0 ||\n        dob.trim().length === 0 ||\n        gender.trim().length === 0 ||\n        phone.trim().length === 0 ||\n        phone2.trim().length === 0 ||\n        addressNumber.trim().length === 0 ||\n        addressStreet.trim().length === 0 ||\n        addressTown.trim().length === 0 ||\n        addressCity.trim().length === 0 ||\n        addressParish.trim().length === 0 ||\n        addressCountry.trim().length === 0 ||\n        addressPostalCode.trim().length === 0\n        ) {\n      this.context.setUserAlert(\"...blank fields!!!...\");\n      return;\n    }\n    let requestBody = {\n        query: `\n            mutation {createUser(\n              userInput:{\n                password:\"${password}\",\n                title:\"${title}\",\n                name:\"${name}\",\n                role:\"${role}\",\n                username:\"${username}\",\n                dob:\"${dob}\",\n                gender:\"${gender}\",\n                contactPhone:\"${phone}\",\n                contactPhone2:\"${phone2}\",\n                contactEmail:\"${email}\",\n                addressNumber:${addressNumber},\n                addressStreet:\"${addressStreet}\",\n                addressTown:\"${addressTown}\",\n                addressCity:\"${addressCity}\",\n                addressParish:\"${addressParish}\",\n                addressCountry:\"${addressCountry}\",\n                addressPostalCode:\"${addressPostalCode}\"\n              }\n            )\n            {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n          `};\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createUser);\n      let responseAlert = '...Signup success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      responseAlert = '...verificationCode: '+resData.data.createUser.verification.code+'';\n      this.context.setUserAlert(responseAlert);\n      this.setState({signupStatus: 'success'})\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n  };\n\n  submitInviteForm = (event) => {\n    event.preventDefault()\n    console.log('...checking inviteCode...');\n    this.context.setUserAlert('...checking inviteCode...')\n\n    const challenge = event.target.inviteCode.value;\n\n    let requestBody = {\n        query: `\n            query {verifyInvitation(challenge:\"${challenge}\")}\n          `};\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data);\n      const result = resData.data.verifyInvitation;\n      if (result === 'matched') {\n        this.setState({invited: true})\n        this.context.setUserAlert('...invite code accepted...');\n      } else {\n        this.context.setUserAlert('...invite code rejected. Check & try again...');\n      }\n\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n\n\n  }\n\n\n  render() {\n    return (\n      <Container className=\"authPageContainer\">\n        {this.state.overlay === true && (\n          <LoadingOverlay\n            status={this.state.overlayStatus}\n          />\n        )}\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n          {this.state.invited !== true && (\n            <React.Fragment>\n            <Form onSubmit={this.submitInviteForm}>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"inviteCode\">\n                  <Form.Label>inviteCode</Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"inviteCode\"/>\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row className=\"formBtnRow\">\n                <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Submit</Button>\n              </Form.Row>\n            </Form>\n            </React.Fragment>\n          )}\n\n          {this.state.signupStatus !== 'success' &&\n          this.state.invited === true && (\n            <SignupForm\n              onConfirm={this.submitSignupForm}\n            />\n          )}\n          {this.state.signupStatus === 'success' && (\n            <React.Fragment>\n              <h1>SignUp Success...Proceed to Login</h1>\n              <Button variant=\"outline-warning\" className=\"loginFormBtn\">\n                <NavLink to=\"/login\">Login</NavLink>\n              </Button>\n            </React.Fragment>\n          )}\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default SignUpPage;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { NavLink } from 'react-router-dom';\nimport './CreateUserForm.css';\n\nconst ResetPasswordForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n\n<Form onSubmit={props.onConfirm}>\n  <h1>Reset Password</h1>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"verificationCode\">\n      <Form.Label>verificationCode</Form.Label>\n      <Form.Control type=\"text\" value={props.verf}/>\n    </Form.Group>\n  </Form.Row>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"password\">\n    <Form.Label>password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"password\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n    Reset\n    </Button>\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>\n      <NavLink to=\"/landing\">Cancel</NavLink>\n    </Button>\n  </Form.Row>\n</Form>\n\n</div>\n\n)};\n\nexport default ResetPasswordForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { useParams, NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from 'moment';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport ResetPasswordForm from '../../components/forms/auth/ResetPasswordForm';\n\nclass PasswordResetPage extends Component {\n  state = {\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    passwordResetStatus: null,\n    user: {},\n    activityA: null,\n    activityId: null,\n    verfCode: null,\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...password component mounted...');\n    console.log();\n    this.setState({\n      activityId: this.props.location.pathname.split('@')[0].split('/')[2],\n      verfCode: this.props.location.pathname.split('@')[1]\n    })\n  }\n\n\n  submitResetPasswordForm = (event) => {\n    event.preventDefault();\n    this.context.setUserAlert(\"...submitSignupForm...\")\n    console.log(\"...submitSignupForm...\");\n\n    const password = event.target.password.value;\n    const verificationCode = this.state.verfCode;\n    const userId = this.state.activityId;\n    if (password.trim().length === 0 ||\n        verificationCode.trim().length === 0\n        ) {\n      this.context.setUserAlert(\"...blank fields!!!...\");\n      return;\n    }\n    let requestBody = {\n        query: `\n            mutation {resetUserPassword(\n              userId:\"${userId}\",\n              userInput:{\n                verificationCode:\"${verificationCode}\",\n                password:\"${password}\"\n              })\n            {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n          `};\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      console.log('...resData...',resData.data.resetUserPassword);\n      let responseAlert = '...Password Reset Success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert);\n      this.setState({passwordResetStatus: 'success'})\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n  };\n\n\n  render() {\n    return (\n      <Container className=\"authPageContainer\">\n        {this.state.overlay === true && (\n          <LoadingOverlay\n            status={this.state.overlayStatus}\n          />\n        )}\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n          {this.state.passwordResetStatus !== 'success' && (\n            <ResetPasswordForm\n              onConfirm={this.submitResetPasswordForm}\n              verf={this.state.verfCode}\n            />\n          )}\n          {this.state.passwordResetStatus === 'success' && (\n            <React.Fragment>\n              <h1>Reset Success...Proceed to Login</h1>\n              <Button variant=\"outline-warning\" className=\"loginFormBtn\">\n                <NavLink to=\"/login\">Login</NavLink>\n              </Button>\n            </React.Fragment>\n          )}\n\n\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default PasswordResetPage;\n","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst UserItem = (props) => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n  const [deleteState, setDeleteState] = useState(false);\n  const handleDeleteStateChange = () => {\n    if (deleteState === true) {\n      setDeleteState(false);\n    }\n    if (deleteState === false) {\n      setDeleteState(true);\n    }\n   }\n\n  return (\n    <li key={props.key} className=\"userItemLi\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Username: <span className=\"bold\">{props.user.username}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            role: <span className=\"bold\">{props.user.role}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.user._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                name: <span className=\"bold\">{props.user.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                username: <span className=\"bold\">{props.user.username}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                title: <span className=\"bold\">{props.user.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                role: <span className=\"bold\">{props.user.role}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                dob: <span className=\"bold\">{moment.unix(props.user.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                age: <span className=\"bold\">{props.user.age}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                gender: <span className=\"bold\">{props.user.gender}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                loggedIn: <span className=\"bold\">{props.user.loggedIn === true && (<FontAwesomeIcon icon={faBatteryThreeQuarters} className=\"listIcon\"/>)} {props.user.loggedIn === false && (<FontAwesomeIcon icon={faBatteryEmpty} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n              {!props.appointmentPage &&\n                !props.visitPage &&\n                props.showDetails && (\n                  <li>\n                  <Button variant=\"outline-primary\" onClick={props.showDetails.bind(this, props.user)}>Details</Button>\n                  </li>\n              )}\n              {props.appointmentPage && (\n                <li>\n                <Link\n                  to={{\n                    pathname: \"/staff\",\n                    state: {user: props.user._id}\n                  }}\n                >Go!\n                </Link>\n                </li>\n              )}\n              {props.visitPage && (\n                <li>\n                <Link\n                  to={{\n                    pathname: \"/staff\",\n                    state: {user: props.user._id}\n                  }}\n                >Go!\n                </Link>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n          {props.selectUser && (\n            <Button variant=\"outline-primary\" onClick={props.selectUser.bind(this, props.user)}>Add</Button>\n          )}\n          {deleteState === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.user)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from '../../items/user/UserItem';\nimport './UserList.css';\n\nconst UserList = props => {\n\n  const {...filter} = props.filter;\n  let users2 = props.users;\n  let propsUsers = [];\n\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'loggedIn') {\n    propsUsers = users2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field !== 'staff') {\n    propsUsers = users2;\n  }\n\n  let count = 0;\n\n  const users = propsUsers.map(user => {\n\n    count = propsUsers.indexOf(user)+1;\n\n    return (\n      <UserItem\n        key={count}\n        user={user}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        appointmentPage={props.appointmentPage}\n        visitPage={props.visitPage}\n        selectUser={props.selectUser}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{users}</ul>;\n};\n\nexport default UserList;\n","import React from 'react';\n\nimport UserItem from '../../items/user/UserItem';\nimport './UserList.css';\n\nconst SearchUserList = props => {\n\n  const {...filter} = props.filter;\n  let users2 = props.users;\n  let propsUsers = [];\n\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'loggedIn') {\n    propsUsers = users2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field !== 'staff') {\n    propsUsers = users2;\n  }\n\n  let count = 0;\n\n  const users = propsUsers.map(user => {\n\n    count = propsUsers.indexOf(user)+1;\n\n    return (\n      <UserItem\n        key={count}\n        user={user}\n        canDelete={props.canDelete}\n        showDetails={props.showDetails}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{users}</ul>;\n};\n\nexport default SearchUserList;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\nimport S3 from 'react-aws-s3';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport UserAddressList from '../lists/user/UserAddressList'\nimport UserAttendanceList from '../lists/user/UserAttendanceList'\nimport UserLeaveList from '../lists/user/UserLeaveList'\nimport UserImageList from '../lists/user/UserImageList'\nimport UserFileList from '../lists/user/UserFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport UserNoteList from '../lists/user/UserNoteList'\n\nimport FilterAddressForm from '../forms/filter/FilterAddressForm';\nimport FilterAttendanceForm from '../forms/filter/FilterAttendanceForm';\nimport FilterLeaveForm from '../forms/filter/FilterLeaveForm';\nimport FilterImageForm from '../forms/filter/FilterImageForm';\nimport FilterFileForm from '../forms/filter/FilterFileForm';\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../forms/filter/FilterNoteForm';\n\nimport UpdateUserSingleFieldForm from '../forms/add/UpdateUserSingleFieldForm';\nimport AddAddressForm from '../forms/add/AddAddressForm';\nimport AddAttendanceForm from '../forms/add/AddAttendanceForm';\nimport AddLeaveForm from '../forms/add/AddLeaveForm';\nimport AddNoteForm from '../forms/add/AddNoteForm';\nimport AddImageForm from '../forms/add/AddImageForm';\nimport AddFileForm from '../forms/add/AddFileForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass UserDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    calendarAttendance: null,\n    calendarLeave: null,\n    calendarAppointments: null,\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    // this.props2 = this.props;\n  }\n\ncomponentDidMount () {\n  console.log('...staff details component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getPocketVars(seshStore);\n  }\n  this.setState({\n    selectedUser: this.context.selectedUser\n  })\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.parseForCalendar({\n    attendance: this.props.user.attendance,\n    leave: this.props.user.leave,\n    appointments: this.props.user.appointments,\n  })\n}\n// componentDidUpdate () {\n//   console.log('foo',this.props.user.appointments);\n// }\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n    console.log('...retriving pocketVars..');\n    this.context.setUserAlert('...retriving pocketVars..')\n    const token = args.token;\n    const activityId = args.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")}\n          `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          this.setState({userAlert: resData.errors[0].message})\n        } else {\n          let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n          console.log('...retriving pocketVars success...');\n          this.context.setUserAlert('...retriving pocketVars success...')\n          this.setState({\n            pocketVars: pocketVarsParsed\n          });\n        }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n    }\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\n\nsubmitAddAddressForm = (event) => {\n  event.preventDefault();\n  console.log('...adding address...');\n  this.context.setUserAlert('...adding address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const number = event.target.number.value;\n  const street = event.target.street.value;\n  const town = event.target.town.value;\n  const city = event.target.city.value;\n  const parish = event.target.parish.value;\n  const country = event.target.country.value;\n  const postalCode = event.target.postalCode.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${number},\n          addressStreet:\"${street}\",\n          addressTown:\"${town}\",\n          addressCity:\"${city}\",\n          addressParish:\"${parish}\",\n          addressCountry:\"${country}\",\n          addressPostalCode:\"${postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAddress);\n      let responseAlert = '...address add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserAddress)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserAddress,\n        activityA: `addUserAddress?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAddress = (args) => {\n  console.log('...deleting address...');\n  this.context.setUserAlert('...deleting address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\",\n          addressPrimary: ${args.primary}\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAddress);\n      let responseAlert = '...address delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserAddress)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserAddress,\n        activityA: `deleteUserAddress?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsetAddressPrimary = (args) => {\n  console.log('...setting primary address...');\n  this.context.setUserAlert('...setting primary address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n      mutation {setUserAddressPrimary(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.setUserAddressPrimary);\n      let responseAlert = '...address set primary success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.setUserAddressPrimary)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.setUserAddressPrimary,\n        activityA: `setUserAddressPrimary?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.setUserAddressPrimary;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddAttendanceForm = (event) => {\n  event.preventDefault();\n  console.log('...adding attendance...');\n  this.context.setUserAlert('...attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const attendanceDate = event.target.date.value;\n  const attendanceStatus = event.target.status.value;\n  const attendanceDescription = event.target.description.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAttendance(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          attendanceDate:\"${attendanceDate}\",\n          attendanceStatus:\"${attendanceStatus}\",\n          attendanceDescription:\"${attendanceDescription}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAttendance);\n      let responseAlert = '...attendance add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserAttendance)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserAttendance,\n        activityA: `addUserAttendance?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.addUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAttendance = (args) => {\n  console.log('...deleting attendance...');\n  this.context.setUserAlert('...deleting attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserAttendance(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            attendanceDate:\"${args.date}\",\n            attendanceStatus:\"${args.status}\",\n            attendanceDescription:\"${args.description}\"\n          }){_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAttendance);\n      let responseAlert = '...attendance delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserAttendance)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserAttendance,\n        activityA: `deleteUserAttendance?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.deleteUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddLeaveForm = (event) => {\n  event.preventDefault();\n  console.log('...adding leave...');\n  this.context.setUserAlert('...leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const startDate = event.target.startDate.value;\n  const endDate = event.target.endDate.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserLeave(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          leaveType:\"${type}\",\n          leaveStartDate:\"${startDate}\",\n          leaveEndDate:\"${endDate}\",\n          leaveDescription:\"${description}\"\n        }){_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserLeave);\n      let responseAlert = '...leave add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserLeave)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserLeave,\n        activityA: `addUserLeave?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.addUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteLeave = (args) => {\n  console.log('...deleting leave...');\n  this.context.setUserAlert('...deleting leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserLeave(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            leaveType:\"${args.type}\",\n            leaveStartDate:\"${args.startDate}\",\n            leaveEndDate:\"${args.endDate}\",\n            leaveDescription:\"${args.description}\"\n          })\n          {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserLeave);\n      let responseAlert = '...leave delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserLeave)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserLeave,\n        activityA: `deleteUserLeave?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.deleteUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding image...');\n  this.context.setUserAlert('...image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const username = this.props.user.username;\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+userId+'/images';\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addUserImage(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          imageName:\"${imageName}\",\n          imageType:\"${imageType}\",\n          imagePath:\"${imagePath}\"\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserImage);\n      let responseAlert = '...image add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserImage)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserImage,\n        activityA: `addUserImage?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n  console.log('...deleting image...');\n  this.context.setUserAlert('...deleting image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const username = this.props.user.username;\n\n  const filePath = 'staff/'+username+'/images';\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            imageName:\"${args.name}\",\n            imageType:\"${args.type}\",\n            imagePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserImage);\n      let responseAlert = '...image delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserImage)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserImage,\n        activityA: `deleteUserImage?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'staff/'+userId+'/images';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding file...');\n  this.context.setUserAlert('...file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  const username = this.props.user.username;\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+userId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n      mutation {addUserFile(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          fileName:\"${file2Name}\",\n          fileType:\"${file2Type}\",\n          filePath:\"${file2Path}\"\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserFile);\n      let responseAlert = '...file add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserFile)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserFile,\n        activityA: `addUserFile?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n  console.log('...deleting file...');\n  this.context.setUserAlert('...deleting file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const username = this.props.user.username;\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserFile(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            fileName:\"${args.name}\",\n            fileType:\"${args.type}\",\n            filePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserFile);\n      let responseAlert = '...file delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserFile)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserFile,\n        activityA: `deleteUserFile?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'staff/'+userId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding note...');\n  this.context.setUserAlert('...note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const note = event.target.note.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserNotes(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          notes:\"${note}\"\n        }){_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserNotes)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserNotes,\n        activityA: `addUserNotes?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n  console.log('...deleting note...');\n  this.context.setUserAlert('...deleting note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  let requestBody = {\n    query: `\n        mutation {deleteUserNote(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            note: \"${args}\"\n          })\n          {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserNote)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserNote,\n        activityA: `deleteUserNote?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateUserSingleField(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateUserSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.updateUserSingleField)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.updateUserSingleField,\n        activityA: `updateUserSingleField?activityId:${activityId},userId:${userId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.updateUserSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing staff dates for calendar...');\n  let calendarAttendance = args.attendance.map(x => ({\n      title: x.status,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        status: x.status,\n        description: x.description,\n        field: 'attendance'\n      }\n    }))\n  let calendarLeave = args.leave.map(x => ({\n      title: x.type,\n      date: moment.unix(x.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      end: moment.unix(x.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        type: x.type,\n        startDate: x.startDate,\n        endDate: x.endDate,\n        description: x.description,\n        field: 'leave'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave\n    })\n  let calendarAppointments = args.appointments.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n        field: 'appointments'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave,\n      calendarAppointments: calendarAppointments,\n    })\n}\n\nviewCalendarEvent = (args) => {\n\n  let input = args.event.extendedProps.props;\n  let data;\n  if (input.field === 'attendance') {\n    data = {\n      date: input.date,\n      status: input.status,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAttendance', data: data}\n    })\n  }\n  if (input.field === 'leave') {\n    data = {\n      type: input.type,\n      startDate: input.startDate,\n      endDate: input.endDate,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarLeave', data: data}\n    })\n  }\n  if (input.field === 'appointments') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      location: input.location,\n      description: input.description,\n      important: input.important,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAppointment', data: data, goLink: true}\n    })\n  }\n\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {\n            !this.props.user && (\n              <h3>...</h3>\n            )\n          }\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={3} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'address')}>Addresses</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'attendance')}>Attendance</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'leave')}>Leave</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'image')}>Images</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'file')}>Files</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'appointment')}>Appointments</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'address' && (\n                  <FilterAddressForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'attendance' && (\n                  <FilterAttendanceForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'leave' && (\n                  <FilterLeaveForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'image' && (\n                  <FilterImageForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'file' && (\n                  <FilterFileForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'appointment' && (\n                  <FilterAppointmentForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'note' && (\n                  <FilterNoteForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n\n            )}\n          </Col>\n\n          {this.props.user && (\n            <Col md={9} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdateUserSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n              <Tab.Content className=\"tabContent\">\n                <Tab.Pane eventKey=\"1\">\n                  User Basic:\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Title:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.title}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                      <p className=\"listGroupText\">Name:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.name}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'name')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Username:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.username}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                      <p className=\"listGroupText\">Role:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.role}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Reg No:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.registrationNumber}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">DOB:</p>\n                      <p className=\"listGroupText bold\">{moment.unix(this.props.user.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                      <p className=\"listGroupText\">Age:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.age}</p>\n                      <p className=\"listGroupText\">Gender:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.gender}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Email:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.contact.email}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                      <p className=\"listGroupText\">Phone:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.contact.phone}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                      <p className=\"listGroupText\">Phone 2:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.contact.phone2}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p></p>\n                      <p></p>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"2\">\n                  User Admin\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.props.user._id}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">LoggedIn:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.loggedIn.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">ClientConnected:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.clientConnected.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Verified:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.verification.verified.toString()}</p>\n                      <p className=\"listGroupText\">Type:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.verification.type}</p>\n                      <p className=\"listGroupText\">Code:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.verification.code}</p>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"3\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Address List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.context.role === 'Admin' && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'address' && (\n                      <AddAddressForm\n                        onConfirm={this.submitAddAddressForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserAddressList\n                    filter={this.state.filter}\n                    addresses={this.props.user.addresses}\n                    authId={this.context.activityId}\n                    onDelete={this.deleteAddress}\n                    canDelete={this.state.canDelete}\n                    makePrimary={this.setAddressPrimary}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"4\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Attendance List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.context.role === 'Admin' && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'attendance')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'attendance' && (\n                      <AddAttendanceForm\n                        onConfirm={this.submitAddAttendanceForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAttendanceList\n                      filter={this.state.filter}\n                      attendance={this.props.user.attendance}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteAttendance}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAttendance}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"5\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Leave List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.context.role === 'Admin' && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'leave')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'leave' && (\n                      <AddLeaveForm\n                        onConfirm={this.submitAddLeaveForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserLeaveList\n                      filter={this.state.filter}\n                      leave={this.props.user.leave}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteLeave}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarLeave}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"6\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Image List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.context.role === 'Admin' && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'image' && (\n                      <AddImageForm\n                        onConfirm={this.submitAddImageForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserImageList\n                    filter={this.state.filter}\n                    images={this.props.user.images}\n                    authId={this.context.activityId}\n                    showListDetails={this.showListDetails}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteImage}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"7\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User File List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.context.role === 'Admin' && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'file' && (\n                      <AddFileForm\n                        onConfirm={this.submitAddFileForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserFileList\n                    filter={this.state.filter}\n                    files={this.props.user.files}\n                    authId={this.context.activityId}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteFile}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"8\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Appointment List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                  </Row>\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAppointmentList\n                      filter={this.state.filter}\n                      appointments={this.props.user.appointments}\n                      authId={this.context.activityId}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAppointments}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"9\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Notes:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.context.role === 'Admin' && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'note' && (\n                      <AddNoteForm\n                        onConfirm={this.submitAddNoteForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserNoteList\n                    filter={this.state.filter}\n                    notes={this.props.user.notes}\n                    authId={this.context.activityId}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteNote}\n                  />\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default UserDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterUserForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"staff\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>username</option>\n          <option>title</option>\n          <option>role</option>\n          <option>dob</option>\n          <option>age</option>\n          <option>gender</option>\n          <option>loggedIn</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterUserForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst UserSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>title</option>\n          <option>name</option>\n          <option>username</option>\n          <option>registrationNumber</option>\n          <option>dob</option>\n          <option>age</option>\n          <option>gender</option>\n          <option>contact.email</option>\n          <option>contact.phone</option>\n          <option>contact.phone2</option>\n          <option>addresses.number</option>\n          <option>addresses.street</option>\n          <option>addresses.town</option>\n          <option>addresses.city</option>\n          <option>addresses.parish</option>\n          <option>addresses.country</option>\n          <option>addresses.postalCode</option>\n          <option>addresses.primary</option>\n          <option>loggedIn</option>\n          <option>clientConnected</option>\n          <option>verification.verified</option>\n          <option>attendance.date</option>\n          <option>attendance.status</option>\n          <option>attendance.description</option>\n          <option>leave.type</option>\n          <option>leave.startDate</option>\n          <option>leave.endDate</option>\n          <option>leave.description</option>\n          <option>images.name</option>\n          <option>images.type</option>\n          <option>images.path</option>\n          <option>files.name</option>\n          <option>files.type</option>\n          <option>files.path</option>\n          <option>notes</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default UserSearchForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport UserList from '../../components/lists/user/UserList';\nimport SearchUserList from '../../components/lists/user/SearchUserList';\nimport UserDetail from '../../components/details/UserDetail';\n\nimport FilterUserForm from '../../components/forms/filter/FilterUserForm';\nimport UserSearchForm from '../../components/forms/search/UserSearchForm';\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './staff.css';\n\nclass StaffPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    searchUsers: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    canDelete: false,\n    fromGoLink: null,\n    goLinkId: null,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all users component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    if (this.props.location.state) {\n      if (this.props.location.state.user) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.user\n        })\n      }\n    }\n    this.getAllUsers(seshStore);\n    if (this.props.selectedUser) {\n      console.log('...found existing user selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedUser: this.props.selectedUser\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      console.log('...all users retrieval success!...');\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkUser = resData.data.getAllUsers.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedUser: goLinkUser,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n        activityA: `getAllUsers?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchUsers = (event) => {\n  event.preventDefault();\n  console.log('...searching users...');\n  this.context.setUserAlert('...searching users...')\n  // this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'age' ||\n      field === 'dob' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'attendance.date' ||\n      field === 'leave.startDate' ||\n      field === 'leave.endDate'\n    ) {\n      regex = false;\n  }\n  console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getUsersByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getUsersByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getUsersByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getUsersByField);\n      }\n\n      let responseAlert = '...staff search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchUsers: resData.data.getUsersByFieldRegex,\n          activityA: `getUsersByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n        this.context.activityUser = resData.data.getUsersByFieldRegex;\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchUsers: resData.data.getUsersByField,\n          activityA: `getUsersByField?activityId:${activityId},userId:${userId}`\n        });\n        this.context.activityUser = resData.data.getUsersByField;\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nshowDetails = (args) => {\n  this.setState({\n    showDetails: true,\n    selectedUser: args,\n    tabKey: 'detail'\n  })\n  this.props.selectUser(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nupdateUser = (args) => {\n  console.log('...updating user...');\n  this.setState({\n    selectedUser: args\n  })\n  this.props.selectUser(args);\n}\n\ndeleteUser = (args) => {\n  console.log('...deleteing user...',args);\n  this.context.setUserAlert('...deleteing user...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteUserById(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\"\n      )\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserById);\n      let responseAlert = '...delete user success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteUserById?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllUsers({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n          <h1>Staff List</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col md={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterUserForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.users && (\n            <Col md={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content>\n                <Tab.Pane eventKey=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                  <UserList\n                    filter={this.state.filter}\n                    users={this.state.users}\n                    authId={this.context.activityId}\n                    canDelete={this.state.canDelete}\n                    showDetails={this.showDetails}\n                    onDelete={this.deleteUser}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Staff</h3>\n                  <Row className=\"userSearchRow\">\n                    <UserSearchForm\n                      onConfirm={this.searchUsers}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchUsers && (\n                      <Button variant=\"outline-primary\" className=\"centered_btn\" onClick={this.toggleSideCol}>Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchUsers && (\n                      <SearchUserList\n                        filter={this.state.filter}\n                        users={this.state.searchUsers}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedUser && (\n                  <UserDetail\n                    user={this.state.selectedUser}\n                    updateUser={this.updateUser}\n                  />\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default StaffPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './createForms.css';\nimport moment from 'moment';\n\nconst CreatePatientForm = (props) => {\n  const today = moment().format('YYYY-MM-DD')\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Create Patient Form</h1>\n    <p> \"*\" denotes required fields...</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"active\">\n        <Form.Label>Active</Form.Label>\n        <Form.Control as=\"select\">\n          <option>false</option>\n          <option>true</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>Title *</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Mr</option>\n          <option>Mrs</option>\n          <option>Ms</option>\n          <option>Dr</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"name\">\n        <Form.Label>name *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"username\">\n        <Form.Label>username *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"username\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"dob\">\n        <Form.Label>dob *</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"gender\">\n        <Form.Label>gender *</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Female</option>\n          <option>Male</option>\n          <option>Prefer Not to Say</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"role\">\n        <Form.Label>role </Form.Label>\n        <Form.Control type=\"text\" value=\"standard patient\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"contactEmail\">\n        <Form.Label>email *</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"contactPhone\">\n        <Form.Label>phone *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760001234\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"contactPhone2\">\n        <Form.Label>phone2</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760005678\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressNumber\">\n        <Form.Label>addressNumber</Form.Label>\n        <Form.Control type=\"number\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressStreet\">\n        <Form.Label>addressStreet</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressTown\">\n        <Form.Label>addressTown</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressCity\">\n        <Form.Label>addressCity</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressParish\">\n        <Form.Label>addressParish</Form.Label>\n        <Form.Control as=\"select\">\n          <option>none</option>\n          <option>Hanover</option>\n          <option>St. Elizabeth</option>\n          <option>St. James</option>\n          <option>Trelawny</option>\n          <option>Westmoreland</option>\n          <option>Clarendon</option>\n          <option>Manchester</option>\n          <option>St. Ann</option>\n          <option>St. Catherine</option>\n          <option>St. Mary</option>\n          <option>Kingston</option>\n          <option>St. Andrew</option>\n          <option>Portland</option>\n          <option>St. Thomas</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressCountry\">\n        <Form.Label>addressCountry</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressPostalCode\">\n        <Form.Label>addressPostalCode</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"referralDate\">\n        <Form.Label>referralDate: YYYY-MM-DD</Form.Label>\n        <Form.Control type=\"date\" placeholder={today}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"referralReason\">\n        <Form.Label>referralReason</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"referralReason\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"referralPhysicianName\">\n        <Form.Label>referralPhysicianName</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"referralPhysicianName\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"referralPhysicianPhone\">\n        <Form.Label>referralPhysicianPhone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"referralPhysicianPhone\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"referralPhysicianEmail\">\n        <Form.Label>referralPhysicianEmail</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"referralPhysicianAddress\">\n        <Form.Label>referralPhysicianAddress</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"referralPhysicianAddress\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"attendingPhysician\">\n        <Form.Label>attendingPhysician</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"attendingPhysician\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"occupationRole\">\n        <Form.Label>occupationRole</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"occupationRole\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"occupationEmployerName\">\n        <Form.Label>occupationEmployerName</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"occupationEmployerName\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"occupationEmployerEmail\">\n        <Form.Label>occupationEmployerEmail</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"occupationEmployerPhone\">\n        <Form.Label>occupationEmployerPhone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"occupationEmployerPhone\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"occupationEmployerAddress\">\n        <Form.Label>occupationEmployerAddress</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"occupationEmployerAddress\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"occupationEmployerAddress\">\n        <Form.Label>occupationEmployerAddress</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"occupationEmployerAddress\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"insuranceCompany\">\n        <Form.Label>insuranceCompany</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"insuranceCompany\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"insurancePolicyNumber\">\n        <Form.Label>insurancePolicyNumber</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"insurancePolicyNumber\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"insuranceExpiryDate\">\n        <Form.Label>insuranceExpiryDate</Form.Label>\n        <Form.Control type=\"date\" placeholder={today}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"insuranceDescription\">\n        <Form.Label>insuranceDescription</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"insuranceDescription\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"insuranceSubscriberCompany\">\n        <Form.Label>insuranceSubscriberCompany</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"insuranceSubscriberCompany\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"insuranceSubscriberDescription\">\n        <Form.Label>insuranceSubscriberDescription</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"insuranceSubscriberDescription\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Create</Button>\n      <Button variant=\"outline-danger\" className=\"loginFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default CreatePatientForm;\n","import React from 'react';\n\nimport PatientItem from '../../items/patient/PatientItem';\nimport './UserList.css';\n\nconst SearchPatientList = props => {\n\n  const {...filter} = props.filter;\n  let patients2 = props.patients;\n  let propsPatients = [];\n\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'loggedIn') {\n    propsPatients = patients2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field === 'patient' && filter.key === 'active') {\n    propsPatients = patients2.filter(x => x.active === filter.value);\n  }\n\n  if (filter.field !== 'patient') {\n    propsPatients = patients2;\n  }\n\n  let count = 0;\n\n  const patients = propsPatients.map(patient => {\n\n    count = propsPatients.indexOf(patient)+1;\n\n    return (\n      <PatientItem\n        key={count}\n        patient={patient}\n        canDelete={props.canDelete}\n        showDetails={props.showDetails}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{patients}</ul>;\n};\n\nexport default SearchPatientList;\n","import React from 'react';\n\nimport AddressItem from '../../items/user/AddressItem';\nimport './UserList.css';\n\nconst PatientAddressList = props => {\n\n  const {...filter} = props.filter;\n  let addresses2 = props.addresses;\n  let propsAddresses = [];\n\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number > b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number < b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street > b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street < b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town > b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town < b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city > b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city < b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish > b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish < b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country > b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country < b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode > b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode < b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'primary') {\n    propsAddresses = addresses2.filter(x => x.primary === filter.value);\n  }\n  if (filter.field !== 'address') {\n    propsAddresses = addresses2;\n  }\n\n  let count = 0;\n\n  const addresses = propsAddresses.map(address => {\n\n    count = propsAddresses.indexOf(address)+1;\n\n    return (\n      <AddressItem\n        key={count}\n        address={address}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        makePrimary={props.makePrimary}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{addresses}</ul>;\n};\n\nexport default PatientAddressList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst NextOfKinItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Name: <span className=\"bold\">{props.nextOfKin.name}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Relation: <span className=\"bold\">{props.nextOfKin.relation}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.nextOfKin.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Relation: <span className=\"bold\">{props.nextOfKin.relation}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Email: <span className=\"bold\">{props.nextOfKin.contact.email}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Phone: <span className=\"bold\">{props.nextOfKin.contact.phone}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Phone2: <span className=\"bold\">{props.nextOfKin.contact.phone2}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.nextOfKin)}>Delete</Button>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default NextOfKinItem;\n","import React from 'react';\n\nimport NextOfKinItem from '../../items/patient/NextOfKinItem';\nimport './UserList.css';\n\nconst PatientNextOfKinList = props => {\n\n  const {...filter} = props.filter;\n  let nextOfKin2 = props.nextOfKin;\n  let propsNextOfKin = [];\n\n  if (filter.field === 'nextOfKin' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'nextOfKin' && filter.key === 'name' && filter.value === 'Descending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'nextOfKin' && filter.key === 'relation' && filter.value === 'Ascending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.relation > b.relation) ? 1 : -1);\n  }\n  if (filter.field === 'nextOfKin' && filter.key === 'relation' && filter.value === 'Descending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.relation < b.relation) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'nextOfKin') {\n    propsNextOfKin = nextOfKin2;\n  }\n\n  let count = 0;\n\n  const nextOfKin = propsNextOfKin.map(nextOfKinItem => {\n    // console.log('nok',nextOfKinItem);\n    count = propsNextOfKin.indexOf(nextOfKinItem)+1;\n\n    return (\n      <NextOfKinItem\n        key={count}\n        nextOfKin={nextOfKinItem}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        makePrimary={props.makePrimary}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{nextOfKin}</ul>;\n};\n\nexport default PatientNextOfKinList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst AttachmentItem = props => (\n  <li key={props.key} className=\"\">\n    <Card>\n      <Card.Body className=\"cardBody\">\n        <Card.Text className=\"cardText\">\n          <span className=\"bold\">{props.attachment}</span>\n        </Card.Text>\n        {props.canDelete === true && (\n          <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, {\n            type: props.type,\n            attachment: props.attachment,\n            item: props.item\n          })}>Delete</Button>\n        )}\n      </Card.Body>\n    </Card>\n  </li>\n);\n\nexport default AttachmentItem;\n","import React from 'react';\n\nimport AttachmentItem from '../../items/patient/AttachmentItem';\nimport './UserList.css';\n\nconst PatientAttachmentList = props => {\n\n  let count = 0;\n\n  const attachments = props.attachments.map(attachment => {\n    count = props.attachments.indexOf(attachment)+1;\n\n    return (\n      <AttachmentItem\n        key={count}\n        item={props.item}\n        attachment={attachment}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        type={props.type}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{attachments}</ul>;\n};\n\nexport default PatientAttachmentList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './PatientItem.css';\n\nconst AllergyItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.allergy.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.allergy.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.allergy.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.allergy.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                attachments:\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.allergy}\n                attachments={props.allergy.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"allergy\"\n              />\n              </li>\n              <li>\n              <Button variant=\"outline-primary\" onClick={props.onAddAttachment.bind(this, {field: 'allergy',data:props.allergy})}>Add Attachment</Button>\n              </li>\n              <li>\n              {props.canDelete === true && (\n                <li>\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.allergy)}>Delete</Button>\n                </li>\n              )}\n              </li>\n\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AllergyItem;\n","import React from 'react';\n\nimport AllergyItem from '../../items/patient/AllergyItem';\nimport './UserList.css';\n\nconst PatientAllergyList = props => {\n\n  const {...filter} = props.filter;\n  let allergies2 = props.allergies;\n  let propsAllergies = [];\n\n  if (filter.field === 'allergy' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsAllergies = allergies2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'allergy' && filter.key === 'title' && filter.value === 'Descending') {\n    propsAllergies = allergies2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'allergy' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsAllergies = allergies2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'allergy' && filter.key === 'type' && filter.value === 'Descending') {\n    propsAllergies = allergies2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'allergy') {\n    propsAllergies = allergies2;\n  }\n\n  let count = 0;\n\n  const allergies = propsAllergies.map(allergy => {\n    count = propsAllergies.indexOf(allergy)+1;\n\n    return (\n      <AllergyItem\n        key={count}\n        allergy={allergy}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{allergies}</ul>;\n};\n\nexport default PatientAllergyList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './PatientItem.css';\n\nconst MedicationItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.medication.title}</span>\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.medication.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.medication.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.medication.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments:\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.medication}\n                attachments={props.medication.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"medication\"\n              />\n              </li>\n              <li>\n              <Button variant=\"outline-primary\" onClick={props.onAddAttachment.bind(this, {field: 'medication',data:props.medication})}>Add Attachment</Button>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.medication)}>Delete</Button>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default MedicationItem;\n","import React from 'react';\n\nimport MedicationItem from '../../items/patient/MedicationItem';\nimport './UserList.css';\n\nconst PatientMedicationList = props => {\n\n  const {...filter} = props.filter;\n  let medication2 = props.medication;\n  let propsMedication = [];\n\n  if (filter.field === 'medication' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsMedication = medication2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'medication' && filter.key === 'title' && filter.value === 'Descending') {\n    propsMedication = medication2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'medication' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsMedication = medication2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'medication' && filter.key === 'type' && filter.value === 'Descending') {\n    propsMedication = medication2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'medication') {\n    propsMedication = medication2;\n  }\n\n  let count = 0;\n\n  const medication = propsMedication.map(medicationItem => {\n    count = propsMedication.indexOf(medicationItem)+1;\n\n    return (\n      <MedicationItem\n        key={count}\n        medication={medicationItem}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{medication}</ul>;\n};\n\nexport default PatientMedicationList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst ImageItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Name: <span className=\"bold\">{props.image.name}</span>\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.image.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.image.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.image.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.image)}>Delete</Button>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n\n};\n\nexport default ImageItem;\n","import React from 'react';\n\nimport ImageItem from '../../items/patient/ImageItem';\nimport './UserList.css';\n\nconst PatientImageList = props => {\n\n  const {...filter} = props.filter;\n  let images2 = props.images;\n  let propsImages = [];\n\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'image') {\n    propsImages = images2;\n  }\n\n  let count = 0;\n\n  const images = propsImages.map(image => {\n\n    count = propsImages.indexOf(image)+1;\n\n    return (\n      <ImageItem\n        key={count}\n        image={image}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"imageList\">{images}</ul>;\n};\n\nexport default PatientImageList;\n","import React from 'react';\n\nimport FileItem from '../../items/patient/FileItem';\nimport './UserList.css';\n\nconst UserFileList = props => {\n\n  const {...filter} = props.filter;\n  let files2 = props.files;\n  let propsFiles = [];\n\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'file') {\n    propsFiles = files2;\n  }\n\n  let count = 0;\n\n  const files = propsFiles.map(file => {\n\n    count = propsFiles.indexOf(file)+1;\n\n    return (\n      <FileItem\n        key={count}\n        file={file}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{files}</ul>;\n};\n\nexport default UserFileList;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst NoteItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Note: <span className=\"bold\">{props.note}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.note)}>Delete</Button>\n              )}\n            </Row>\n            )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\n\nimport NoteItem from '../../items/patient/NoteItem';\nimport './UserList.css';\n\nconst PatientNoteList = props => {\n\n  const {...filter} = props.filter;\n  let notes2 = props.notes;\n  let propsNotes = [];\n\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Ascending') {\n    propsNotes = notes2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Descending') {\n    propsNotes = notes2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'note') {\n    propsNotes = notes2;\n  }\n\n  let count = 0;\n\n  const notes = propsNotes.map(note => {\n\n    count = propsNotes.indexOf(note)+1;\n\n    return (\n      <NoteItem\n        key={count}\n        note={note}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{notes}</ul>;\n};\n\nexport default PatientNoteList;\n","import React, { useState } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst TagItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Tag: <span className=\"bold\">{props.tag}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.tag)}>Delete</Button>\n              )}\n            </Row>\n            )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default TagItem;\n","import React from 'react';\n\nimport TagItem from '../../items/patient/TagItem';\nimport './UserList.css';\n\nconst PatientTagList = props => {\n\n  const {...filter} = props.filter;\n  let tags2 = props.tags;\n  let propsTags = [];\n\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Ascending') {\n    propsTags = tags2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Descending') {\n    propsTags = tags2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'tag') {\n    propsTags = tags2;\n  }\n\n  let count = 0;\n\n  const tags = propsTags.map(tag => {\n\n    count = propsTags.indexOf(tag)+1;\n\n    return (\n      <TagItem\n        key={count}\n        tag={tag}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{tags}</ul>;\n};\n\nexport default PatientTagList;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './visitItem.css';\n\nconst VisitItem = props => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n  }\n\n  const [deleteState, setDeleteState] = useState(false);\n  const handleDeleteStateChange = () => {\n    if (deleteState === true) {\n      setDeleteState(false);\n    }\n    if (deleteState === false) {\n      setDeleteState(true);\n    }\n   }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Date: <span className=\"bold\">{moment.unix(props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Time: <span className=\"bold\">{props.visit.time}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.visit.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Id: <span className=\"bold\">{props.visit._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                type: <span className=\"bold\">{props.visit.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                subType: <span className=\"bold\">{props.visit.subType}</span>\n              </Card.Text>\n              </li>\n              {!props.patientPage && (\n                <li>\n                <Card.Text className=\"cardText\">\n                  Patient:\n                </Card.Text>\n                </li>\n              )}\n              {!props.patientPage && (\n                <li>\n                <Card.Text className=\"cardText\">\n                  Id: <span className=\"bold\">{props.visit.patient._id}</span>\n                </Card.Text>\n                </li>\n              )}\n              {!props.patientPage && (\n                <li>\n                <Card.Text className=\"cardText\">\n                  Name: <span className=\"bold\">{props.visit.patient.name}</span>\n                </Card.Text>\n                </li>\n              )}\n              {props.patientPage && (\n                <li>\n                <Link\n                  to={{\n                    pathname: \"/visits\",\n                    state: {visit: props.visit._id}\n                  }}\n                >Go!\n                </Link>\n                </li>\n              )}\n              {!props.patientPage && (\n                <li>\n                  <Button variant=\"outline-primary\" onClick={props.showDetails.bind(this, props.visit)}>Details</Button>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n          {deleteState === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.visit)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default VisitItem;\n","import React from 'react';\n\nimport VisitItem from '../../items/visit/VisitItem';\nimport './visitList.css';\n\nconst VisitList = props => {\n\n  const {...filter} = props.filter;\n  let visits2 = props.visits;\n  let propsVisits = [];\n\n  if (filter.field === 'visit' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'title' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'date' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'time' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.time > b.time) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'time' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.time < b.time) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'type' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'subType' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.subType > b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'subType' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.subType < b.subType) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'visit') {\n    propsVisits = visits2;\n  }\n\n  let count = 0;\n\n  const visits = propsVisits.map(visit => {\n\n    count = propsVisits.indexOf(visit)+1;\n\n    return (\n      <VisitItem\n        key={count}\n        visit={visit}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        patientPage={props.patientPage}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{visits}</ul>;\n};\n\nexport default VisitList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAllergyForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"allergy\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>type</option>\n          <option>title</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAllergyForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterMedicationForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"medication\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterMedicationForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterNextOfKinForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"nextOfKin\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>relation</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterNextOfKinForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterVisitForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"visit\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>title</option>\n          <option>type</option>\n          <option>subType</option>\n          <option>date</option>\n          <option>time</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterVisitForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterTagForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"tag\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>tag</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterTagForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst UpdatePatientSingleFieldForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Update Single Field</h4>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>field</Form.Label>\n        <Form.Control type=\"text\" value={props.field}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"query... date = YYY-MM-DD!!\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default UpdatePatientSingleFieldForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddTagForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Tags</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"tags\">\n        <Form.Label>tags</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"tag,tag,tag,tag\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddTagForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddNextOfKinForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Next of Kin</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"name\">\n        <Form.Label>name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"relation\">\n        <Form.Label>relation</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Mother</option>\n          <option>Father</option>\n          <option>Brother</option>\n          <option>Sister</option>\n          <option>Grandfather</option>\n          <option>Grandmother</option>\n          <option>Uncle</option>\n          <option>Aunt</option>\n          <option>Niece</option>\n          <option>Uncle</option>\n          <option>Cousin</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"email\">\n        <Form.Label>email</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"relation@nextOfKin.com\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"phone\">\n        <Form.Label>phone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+187600000\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"phone2\">\n        <Form.Label>phone2</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+187600000\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddNextOfKinForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddAllergyForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Allergy</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Food</option>\n          <option>Drug</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"attachment\">\n        <Form.Label>attachment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"attachment\"/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAllergyForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddMedicationForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Allergy</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"attachment\">\n        <Form.Label>attachment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"attachment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddMedicationForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddAttachmentForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Attachment</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"attachment\">\n        <Form.Label>attachment</Form.Label>\n        <Form.Control type=\"textarea\" placeholder=\"file link address\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAttachmentForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\nimport S3 from 'react-aws-s3';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport PatientAddressList from '../lists/patient/PatientAddressList';\nimport PatientNextOfKinList from '../lists/patient/PatientNextOfKinList'\nimport PatientAllergyList from '../lists/patient/PatientAllergyList'\nimport PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientImageList from '../lists/patient/PatientImageList'\nimport PatientFileList from '../lists/patient/PatientFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport PatientNoteList from '../lists/patient/PatientNoteList'\nimport PatientTagList from '../lists/patient/PatientTagList'\nimport VisitList from '../lists/visit/VisitList'\n\nimport FilterAddressForm from '../forms/filter/FilterAddressForm';\nimport FilterAllergyForm from '../forms/filter/FilterAllergyForm';\nimport FilterMedicationForm from '../forms/filter/FilterMedicationForm';\nimport FilterNextOfKinForm from '../forms/filter/FilterNextOfKinForm';\nimport FilterVisitForm from '../forms/filter/FilterVisitForm';\nimport FilterImageForm from '../forms/filter/FilterImageForm';\nimport FilterFileForm from '../forms/filter/FilterFileForm';\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../forms/filter/FilterNoteForm';\nimport FilterTagForm from '../forms/filter/FilterTagForm';\n\nimport UpdatePatientSingleFieldForm from '../forms/add/UpdatePatientSingleFieldForm';\nimport AddAddressForm from '../forms/add/AddAddressForm';\nimport AddAttendanceForm from '../forms/add/AddAttendanceForm';\nimport AddLeaveForm from '../forms/add/AddLeaveForm';\nimport AddNoteForm from '../forms/add/AddNoteForm';\nimport AddTagForm from '../forms/add/AddTagForm';\nimport AddImageForm from '../forms/add/AddImageForm';\nimport AddFileForm from '../forms/add/AddFileForm';\nimport AddNextOfKinForm from '../forms/add/AddNextOfKinForm';\nimport AddAllergyForm from '../forms/add/AddAllergyForm';\nimport AddMedicationForm from '../forms/add/AddMedicationForm';\nimport AddAttachmentForm from '../forms/add/AddAttachmentForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass PatientDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    selectedPatient: this.props.patient,\n    addAttachmentForm: false,\n    addAttachmentArgs: null,\n    calendarAppointments: null,\n    calendarVisits: null,\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.propsPatient = this.props.patient;\n  }\n\ncomponentDidMount () {\n  console.log('...patient details component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getPocketVars(seshStore);\n  }\n  this.setState({\n    selectedPatient: this.context.selectedPatient\n  })\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.parseForCalendar({\n    appointments: this.props.patient.appointments,\n    visits: this.props.patient.visits,\n  })\n\n}\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n    console.log('...retriving pocketVars..');\n    this.context.setUserAlert('...retriving pocketVars..')\n    const token = args.token;\n    const activityId = args.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")}\n          `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          this.setState({userAlert: resData.errors[0].message})\n        } else {\n          let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n          console.log('...retriving pocketVars success...');\n          this.context.setUserAlert('...retriving pocketVars success...')\n          this.setState({\n            pocketVars: pocketVarsParsed\n          });\n        }\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.context.setUserAlert(err);\n      });\n    }\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsubmitAddAddressForm = (event) => {\n  event.preventDefault();\n  console.log('...adding address...');\n  this.context.setUserAlert('...adding address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const number = event.target.number.value;\n  const street = event.target.street.value;\n  const town = event.target.town.value;\n  const city = event.target.city.value;\n  const parish = event.target.parish.value;\n  const country = event.target.country.value;\n  const postalCode = event.target.postalCode.value;\n\n  let requestBody = {\n    query: `\n      mutation {addPatientAddress(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          addressNumber:${number},\n          addressStreet:\"${street}\",\n          addressTown:\"${town}\",\n          addressCity:\"${city}\",\n          addressParish:\"${parish}\",\n          addressCountry:\"${country}\",\n          addressPostalCode:\"${postalCode}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientAddress);\n      let responseAlert = '...address add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientAddress)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientAddress,\n        activityA: `addPatientAddress?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAddress = (args) => {\n  console.log('...deleting address...');\n  this.context.setUserAlert('...deleting address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientAddress(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\",\n          addressPrimary:${args.primary}\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientAddress);\n      let responseAlert = '...address delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientAddress)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientAddress,\n        activityA: `deletePatientAddress?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsetAddressPrimary = (args) => {\n  console.log('...setting primary address...');\n  this.context.setUserAlert('...setting primary address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {setPatientAddressPrimary(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\"\n        })\n        {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.setPatientAddressPrimary);\n      let responseAlert = '...address set primary success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.setPatientAddressPrimary)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.setPatientAddressPrimary,\n        activityA: `setPatientAddressPrimary?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.setPatientAddressPrimary;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddNextOfKinForm = (event) => {\n  event.preventDefault();\n  console.log('...add next of kin...');\n  this.context.setUserAlert('...adding next of kin...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const name = event.target.name.value;\n  const relation = event.target.relation.value;\n  const email = event.target.email.value;\n  const phone = event.target.phone.value;\n  const phone2 = event.target.phone2.value;\n\n  let requestBody = {\n    query: `\n      mutation {addPatientNextOfKin(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          nextOfKinName:\"${name}\",\n          nextOfKinRelation:\"${relation}\",\n          nextOfKinContactEmail:\"${email}\",\n          nextOfKinContactPhone1:\"${phone}\",\n          nextOfKinContactPhone2:\"${phone2}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientNextOfKin);\n      let responseAlert = '...next of kin add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientNextOfKin)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientNextOfKin,\n        activityA: `addPatientNextOfKin?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientNextOfKin;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNextOfKin = (args) => {\n  console.log('...deleting next of kin...');\n  this.context.setUserAlert('...deleting next of kin....')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientNextOfKin(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          nextOfKinName:\"${args.name}\",\n          nextOfKinRelation:\"${args.relation}\",\n          nextOfKinContactEmail:\"${args.contact.email}\",\n          nextOfKinContactPhone1:\"${args.contact.phone1}\",\n          nextOfKinContactPhone2:\"${args.contact.phone2}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      console.log('...resData...',resData.data.deletePatientNextOfKin);\n      let responseAlert = '...next of kin delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientNextOfKin)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientNextOfKin,\n        activityA: `deletePatientNextOfKin?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientNextOfKin;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddAllergyForm = (event) => {\n  event.preventDefault();\n  console.log('...add allergy...');\n  this.context.setUserAlert('...adding allergy...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/allergy/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'allergy attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'allergy attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientAllergy(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          allergyType:\"${type}\",\n          allergyTitle:\"${title}\",\n          allergyDescription:\"${description}\",\n          allergyAttachment:\"${file2Path}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientAllergy);\n      let responseAlert = '...allergy add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientAllergy)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientAllergy,\n        activityA: `addPatientAllergy?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientAllergy;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAllergy = (args) => {\n  console.log('...deleting allergy...');\n  this.context.setUserAlert('...deleting allergy...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientAllergy(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          allergyType:\"${args.type}\",\n          allergyTitle:\"${args.title}\",\n          allergyDescription:\"${args.description}\",\n          allergyAttachments:\"${args.attachments}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientAllergy);\n      let responseAlert = '...allergy delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientAllergy)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientAllergy,\n        activityA: `deletePatientAllergy?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientAllergy;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'patient/'+patientId+'/allergy/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/patient/'+patientId+'/allergy/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `allergy attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddMedicationForm = (event) => {\n  event.preventDefault();\n  console.log('...add medication...');\n  this.context.setUserAlert('...adding medication...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      type.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/medication/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'medication attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'medication attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'medication attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'medication attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientMedication(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          medicationType:\"${type}\",\n          medicationTitle:\"${title}\",\n          medicationDescription:\"${description}\",\n          medicationAttachment:\"${file2Path}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientMedication);\n      let responseAlert = '...medication add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientMedication)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientMedication,\n        activityA: `addPatientMedication?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientMedication;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteMedication = (args) => {\n  console.log('...deleting medication...');\n  this.context.setUserAlert('...deleting medication...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientMedication(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          medicationType:\"${args.type}\",\n          medicationTitle:\"${args.title}\",\n          medicationDescription:\"${args.description}\",\n          medicationAttachments:\"${args.attachments}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientMedication);\n      let responseAlert = '...medication delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientMedication)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientMedication,\n        activityA: `deletePatientMedication?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientMedication;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'patient/'+patientId+'/medication/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/patient/'+patientId+'/medication/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `medication attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartAddAttachment = (args) => {\n  console.log('...start add attachment...');\n  this.setState({\n    addAttachmentForm: true,\n    addAttachmentArgs: args\n  })\n}\ncancelAddAttachment = () => {\n  this.setState({\n    addAttachmentForm: false\n  })\n}\naddAttachment = (event) => {\n  event.preventDefault();\n  console.log('...adding attachment...');\n  this.context.setUserAlert('...adding attachment...');\n  this.setState({\n    isLoading: true,\n    addAttachmentForm: false\n  })\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n  let args = this.state.addAttachmentArgs;\n  let field = args.field;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/'+field+'/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading allergy attachment ...\")\n    console.log('...s3 uploading allergy attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: `${field} attachment`,\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: `${field} attachment`,\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: `${field} attachment`,\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: `${field} attachment`,\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let allergyTitle;\n  let allergyType;\n  let allergyDescription;\n  let allergyAttachment;\n  let medicationTitle;\n  let medicationType;\n  let medicationDescription;\n  let medicationAttachment;\n\n  if (field === 'allergy') {\n    allergyTitle = args.data.title;\n    allergyType = args.data.type;\n    allergyDescription = args.data.description;\n    allergyAttachment = file2Path;\n  }\n  if (field === 'medication') {\n    medicationTitle = args.data.title;\n    medicationType = args.data.type;\n    medicationDescription = args.data.description;\n    medicationAttachment = file2Path;\n  }\n\n  let requestBody;\n  if (field === 'allergy') {\n    requestBody = {\n      query: `\n        mutation {addPatientAllergyAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            allergyType:\"${allergyType}\",\n            allergyTitle:\"${allergyTitle}\",\n            allergyDescription:\"${allergyDescription}\",\n            allergyAttachment:\"${file2Path}\"\n          })\n          {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (field === 'medication') {\n    requestBody = {\n      query: `\n        mutation {addPatientMedicationAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            medicationType:\"${medicationType}\",\n            medicationTitle:\"${medicationTitle}\",\n            medicationDescription:\"${medicationDescription}\",\n            medicationAttachment:\"${file2Path}\"\n          })\n          {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n\n\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'allergy') {\n        // console.log('...resData...',resData.data.addPatientAllergyAttachment);\n      }\n      if (field === 'medication') {\n        // console.log('...resData...',resData.data.addPatientMedicationAttachment);\n      }\n\n      let responseAlert = '...add attachment success!...';\n      let error = null;\n\n      if (field === 'allergy') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'medication') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'allergy') {\n        this.props.updatePatient(resData.data.addPatientAllergyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.addPatientAllergyAttachment,\n          activityA: `addPatientAllergyAttachmentRegex?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n      if (field === 'medication') {\n        this.props.updatePatient(resData.data.addPatientMedicationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.addPatientMedicationAttachment,\n          activityA: `addPatientMedicationAttachment?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ndeleteAttachment = (args) => {\n  console.log('...deleting attachment...');\n  this.context.setUserAlert('...adding attachment...');\n  this.setState({isLoading: true})\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n\n  const field = args.type;\n  const attachment = args.attachment;\n  const item = args.item;\n\n  let requestBody;\n\n  if (field === 'allergy') {\n    let allergyType = item.type;\n    let allergyTitle = item.title;\n    let allergyDescription = item.description;\n    let allergyAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deletePatientAllergyAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            allergyType:\"${allergyType}\",\n            allergyTitle:\"${allergyTitle}\",\n            allergyDescription:\"${allergyDescription}\",\n            allergyAttachment:\"${allergyAttachment}\"\n          })\n          {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (field === 'medication') {\n    let medicationType = item.type;\n    let medicationTitle = item.title;\n    let medicationDescription = item.description;\n    let medicationAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deletePatientMedicationAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            medicationType:\"${medicationType}\",\n            medicationTitle:\"${medicationTitle}\",\n            medicationDescription:\"${medicationDescription}\",\n            medicationAttachment:\"${medicationAttachment}\"\n          })\n          {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'allergy') {\n        // console.log('...resData...',resData.data.deletePatientAllergyAttachment);\n      }\n      if (field === 'medication') {\n        // console.log('...resData...',resData.data.deletePatientMedicationAttachment);\n      }\n\n      let responseAlert = '...delete attachment success!...';\n      let error = null;\n\n      if (field === 'allergy') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'medication') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'allergy') {\n        this.props.updatePatient(resData.data.deletePatientAllergyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.deletePatientAllergyAttachment,\n          activityA: `deletePatientAllergyAttachment?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n      if (field === 'medication') {\n        this.props.updatePatient(resData.data.deletePatientMedicationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.deletePatientMedicationAttachment,\n          activityA: `deletePatientMedicationAttachment?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'patient/'+patientId+'/'+field+'/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/patient/'+patientId+'/'+field+'/attachments/';\n      const filename = attachment;\n      const filename2 = filename.replace(filePath2,'');\n      console.log('1:',filePath);\n      console.log('2:',filename);\n      console.log('3:',filename2);\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachment..')\n      console.log('...s3 deleting attachment..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `${field} attachment`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: `${field} attachment`,\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename2, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding image...');\n  this.context.setUserAlert('...adding image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  const patientName = this.props.patient.name;\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/images';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientImage(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          imageName:\"${imageName}\",\n          imageType:\"${imageType}\",\n          imagePath:\"${imagePath}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientImage);\n      let responseAlert = '...image add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientImage)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientImage,\n        activityA: `addPatientImage?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n  console.log('...deleting image...');\n  this.context.setUserAlert('...deleting image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n\n  const filePath = 'patient/'+patientId+'/images';\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n    mutation {deletePatientImage(\n      activityId:\"${activityId}\",\n      patientId:\"${patientId}\",\n      patientInput:{\n        imageName:\"${args.name}\",\n        imageType:\"${args.type}\",\n        imagePath:\"${args.path}\"\n      })\n    {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientImage);\n      let responseAlert = '...image delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientImage)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientImage,\n        activityA: `deletePatientImage?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding file...');\n  this.context.setUserAlert('...adding file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  const patientName = this.props.patient.name;\n\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientFile(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          fileName:\"${file2Name}\",\n          fileType:\"${file2Type}\",\n          filePath:\"${file2Path}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientFile);\n      let responseAlert = '...file add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientFile)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientFile,\n        activityA: `addPatientFile?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n  console.log('...deleting file...');\n  this.context.setUserAlert('...deleting file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n\n  let requestBody = {\n    query: `\n    mutation {deletePatientFile(\n      activityId:\"${activityId}\",\n      patientId:\"${patientId}\",\n      patientInput:{\n        fileName:\"${args.name}\",\n        fileType:\"${args.type}\",\n        filePath:\"${args.path}\"\n      })\n    {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientFile);\n      let responseAlert = '...file delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientFile)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientFile,\n        activityA: `deletePatientFile?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'patient/'+patientId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding notes...');\n  this.context.setUserAlert('...adding notes...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const notes = event.target.notes.value;\n\n  let requestBody = {\n    query: `\n      mutation {addPatientNotes(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          notes:\"${notes}\",\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientNotes)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientNotes,\n        activityA: `addPatientNotes?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n  console.log('...deleting note...');\n  this.context.setUserAlert('...deleting note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientNote(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          note:\"${args}\"\n        })\n        {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientNote)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientNote,\n        activityA: `deletePatientNote?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddTagForm = (event) => {\n  event.preventDefault();\n  console.log('...adding tags...');\n  this.context.setUserAlert('...adding tags...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const tags = event.target.tags.value;\n\n  let requestBody = {\n    query: `\n      mutation {addPatientTags(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          tags:\"${tags}\",\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientTags);\n      let responseAlert = '...tags add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientTags)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientTags,\n        activityA: `addPatientTags?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientTags;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteTag = (args) => {\n  console.log('...deleting tag...');\n  this.context.setUserAlert('...deleting tag...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientTag(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          tag:\"${args}\"\n        })\n        {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientTag);\n      let responseAlert = '...tag delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientTag)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientTag,\n        activityA: `deletePatienTag?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientTag;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n    mutation {updatePatientSingleField(\n      activityId:\"${activityId}\",\n      patientId:\"${patientId}\",\n      field:\"${field}\",\n      query:\"${query}\"\n    )\n    {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updatePatientSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.updatePatientSingleField)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.updatePatientSingleField,\n        activityA: `updatePatientSingleField?activityId:${activityId},patientId:${patientId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.updatePatientSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing patient dates for calendar...');\n\n  let calendarAppointments = args.appointments.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n        field: 'appointments'\n      }\n    }))\n  let calendarVisits = args.visits.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        field: 'visits'\n      }\n    }))\n    this.setState({\n      calendarAppointments: calendarAppointments,\n      calendarVisits: calendarVisits,\n    })\n}\n\nviewCalendarEvent = (args) => {\n\n  let input = args.event.extendedProps.props;\n  let data;\n\n  if (input.field === 'appointments') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      location: input.location,\n      description: input.description,\n      important: input.important,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAppointment', data: data, goLink: true}\n    })\n  }\n  if (input.field === 'visits') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarVisit', data: data, goLink: true}\n    })\n  }\n\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {!this.props.patient && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={3} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'address')}>Addresses</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'nextOfKin')}>Next Of Kin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'allergy')}>Allergies</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'medication')}>Medication</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'image')}>Images</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'file')}>Files</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'appointment')}>Appointments</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"10\" onClick={this.menuSelect.bind(this, 'visit')}>Visits</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"11\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"12\" onClick={this.menuSelect.bind(this, 'tag')}>Tag</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"13\" onClick={this.menuSelect.bind(this, 'doc')}>Document</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'address' && (\n                  <FilterAddressForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'nextOfKin' && (\n                  <FilterNextOfKinForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'allergy' && (\n                  <FilterAllergyForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'medication' && (\n                  <FilterMedicationForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'image' && (\n                  <FilterImageForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'file' && (\n                  <FilterFileForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'appointment' && (\n                  <FilterAppointmentForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'visit' && (\n                  <FilterVisitForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'note' && (\n                  <FilterNoteForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'tag' && (\n                  <FilterTagForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n\n            )}\n          </Col>\n\n          {this.props.patient && (\n            <Col md={9} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdatePatientSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n                <Tab.Content className=\"tabContent\">\n                  <Tab.Pane eventKey=\"1\">\n                    Patient Basic:\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.title}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                        <p className=\"listGroupText\">Name:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.name}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'name')}>Edit</Button>\n                        <p className=\"listGroupText\">Username:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.username}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">DOB:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.dob.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                        <p className=\"listGroupText\">Age:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.age}</p>\n                        <p className=\"listGroupText\">Gender:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.gender}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Email:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.contact.email}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                        <p className=\"listGroupText\">Phone:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.contact.phone}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                        <p className=\"listGroupText\">Phone 2:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.contact.phone2}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Role:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.role}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'role')}>Edit</Button>\n                        <p className=\"listGroupText\">Registration:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.registration.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.registration.number}</p>\n                        <p className=\"listGroupText\">Expiry Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.expiryDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'expiryDate')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Referral:</p>\n                        <p className=\"listGroupText\">Date:</p>\n                        {this.props.patient.referral.date && (\n                          <p className=\"listGroupText bold\">{moment.unix(this.props.patient.referral.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        )}\n\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.date')}>Edit</Button>\n                        <p className=\"listGroupText\">Reason:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.reason}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.reason')}>Edit</Button>\n                        <p className=\"listGroupText\">Referral Physician:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.physician.name}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.name')}>Edit</Button>\n                        <p className=\"listGroupText\">Email:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.physician.email}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.email')}>Edit</Button>\n                        <p className=\"listGroupText\">Phone:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.physician.phone}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.phone')}>Edit</Button>\n                        <p className=\"listGroupText\">Attending Physician:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.attendingPhysician}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'attendingPhysician')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Occupation:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.occupation.role}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.role')}>Edit</Button>\n                        <p className=\"listGroupText\">Employer:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.name}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.name')}>Edit</Button>\n                        <p className=\"listGroupText\">Contact:</p>\n                        <p className=\"listGroupText\">Phone:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.phone}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.phone')}>Edit</Button>\n                        <p className=\"listGroupText\">Email:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.email}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.email')}>Edit</Button>\n                        <p className=\"listGroupText\">Address:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.address}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.address')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Insurance:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.insurance.company}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.company')}>Edit</Button>\n                        <p className=\"listGroupText bold\">{this.props.patient.insurance.policyNumber}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.policyNumber')}>Edit</Button>\n                        <p className=\"listGroupText bold\">{this.props.patient.insurance.description}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.description')}>Edit</Button>\n                        {this.props.patient.insurance.expiryDate && (\n                          <p className=\"listGroupText bold\">{moment.unix(this.props.patient.insurance.expiryDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        )}\n\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.expiryDate')}>Edit</Button>\n                        <p className=\"listGroupText\">Subscriber:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.insurance.subscriber.company}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.subscriber.company')}>Edit</Button>\n                        <p className=\"listGroupText bold\">{this.props.patient.insurance.subscriber.description}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.subscriber.description')}>Edit</Button>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"2\">\n                    Patient Admin\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Id:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient._id}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">LoggedIn:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.loggedIn.toString()}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">ClientConnected:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.clientConnected.toString()}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Verified:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.verification.verified.toString()}</p>\n                        <p className=\"listGroupText\">Type:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.verification.type}</p>\n                        <p className=\"listGroupText\">Code:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.verification.code}</p>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"3\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">User Address List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'address' && (\n                        <AddAddressForm\n                          onConfirm={this.submitAddAddressForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientAddressList\n                      filter={this.state.filter}\n                      addresses={this.props.patient.addresses}\n                      authId={this.context.activityId}\n                      onDelete={this.deleteAddress}\n                      canDelete={this.state.canDelete}\n                      makePrimary={this.setAddressPrimary}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"4\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Next of Kin List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'nextOfKin')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'nextOfKin' && (\n                        <AddNextOfKinForm\n                          onConfirm={this.submitAddNextOfKinForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientNextOfKinList\n                      filter={this.state.filter}\n                      nextOfKin={this.props.patient.nextOfKin}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteNextOfKin}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"5\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Allergies List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'allergy')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'allergy' && (\n                        <AddAllergyForm\n                          onConfirm={this.submitAddAllergyForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <PatientAllergyList\n                      filter={this.state.filter}\n                      allergies={this.props.patient.allergies}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteAllergy}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"6\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Medication List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'medication')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'medication' && (\n                        <AddMedicationForm\n                          onConfirm={this.submitAddMedicationForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <PatientMedicationList\n                      filter={this.state.filter}\n                      medication={this.props.patient.medication}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteMedication}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"7\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Image List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'image' && (\n                        <AddImageForm\n                          onConfirm={this.submitAddImageForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientImageList\n                      filter={this.state.filter}\n                      images={this.props.patient.images}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteImage}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"8\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient File List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'file' && (\n                        <AddFileForm\n                          onConfirm={this.submitAddFileForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientFileList\n                      filter={this.state.filter}\n                      files={this.props.patient.files}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteFile}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"9\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Appointment List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    </Row>\n                    <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                      <Tab eventKey=\"1\" title=\"list\">\n                      <UserAppointmentList\n                        filter={this.state.filter}\n                        appointments={this.props.patient.appointments}\n                        authId={this.context.activityId}\n                      />\n                      </Tab>\n                      <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                        <h3>Calendar</h3>\n                        <FullCalendar\n                          defaultView=\"dayGridMonth\"\n                          plugins={[dayGridPlugin]}\n                          events={this.state.calendarAppointments}\n                          eventClick={this.viewCalendarEvent}\n                        />\n                      </Tab>\n                    </Tabs>\n\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"10\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Visit List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    </Row>\n                    <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                      <Tab eventKey=\"1\" title=\"list\">\n                      <VisitList\n                        filter={this.state.filter}\n                        visits={this.props.patient.visits}\n                        authId={this.context.activityId}\n                        patientPage={true}\n                      />\n                      </Tab>\n                      <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                        <h3>Calendar</h3>\n                        <FullCalendar\n                          defaultView=\"dayGridMonth\"\n                          plugins={[dayGridPlugin]}\n                          events={this.state.calendarVisits}\n                          eventClick={this.viewCalendarEvent}\n                        />\n                      </Tab>\n                    </Tabs>\n\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"11\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Notes:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role === 'Admin' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'note' && (\n                        <AddNoteForm\n                          onConfirm={this.submitAddNoteForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientNoteList\n                      filter={this.state.filter}\n                      notes={this.props.patient.notes}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteNote}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"12\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Tags:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'tag')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'tag' && (\n                        <AddTagForm\n                          onConfirm={this.submitAddTagForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientTagList\n                      filter={this.state.filter}\n                      tags={this.props.patient.tags}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteTag}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"13\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Docu-Gen:</p>\n\n                    </Row>\n                  </Tab.Pane>\n                </Tab.Content>\n\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n}\n\n}\n\nexport default PatientDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterPatientForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"patient\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>active</option>\n          <option>name</option>\n          <option>username</option>\n          <option>title</option>\n          <option>role</option>\n          <option>dob</option>\n          <option>age</option>\n          <option>gender</option>\n          <option>registration.date</option>\n          <option>registration.number</option>\n          <option>contact.email</option>\n          <option>contact.phone</option>\n          <option>contact.phone2</option>\n          <option>addresses.number</option>\n          <option>addresses.street</option>\n          <option>addresses.town</option>\n          <option>addresses.city</option>\n          <option>addresses.parish</option>\n          <option>addresses.country</option>\n          <option>addresses.postalCode</option>\n          <option>addresses.primary</option>\n          <option>verification.verified</option>\n          <option>expiryDate</option>\n          <option>loggedIn</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterPatientForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst PatientSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>active</option>\n        <option>name</option>\n        <option>username</option>\n        <option>title</option>\n        <option>role</option>\n        <option>dob</option>\n        <option>age</option>\n        <option>gender</option>\n        <option>registration.date</option>\n        <option>registration.number</option>\n        <option>contact.email</option>\n        <option>contact.phone</option>\n        <option>contact.phone2</option>\n        <option>addresses.number</option>\n        <option>addresses.street</option>\n        <option>addresses.town</option>\n        <option>addresses.city</option>\n        <option>addresses.parish</option>\n        <option>addresses.country</option>\n        <option>addresses.postalCode</option>\n        <option>addresses.primary</option>\n        <option>verification.verified</option>\n        <option>expiryDate</option>\n        <option>referral.date</option>\n        <option>referral.reason</option>\n        <option>referral.physician.name</option>\n        <option>referral.physician.email</option>\n        <option>referral.physician.phone</option>\n        <option>attendingPhysician</option>\n        <option>occupation.role</option>\n        <option>occupation.employer.name</option>\n        <option>occupation.employer.phone</option>\n        <option>occupation.employer.email</option>\n        <option>insurance.company</option>\n        <option>insurance.policyNumber</option>\n        <option>insurance.description</option>\n        <option>insurance.expiryDate</option>\n        <option>insurance.subscriber.company</option>\n        <option>insurance.subscriber.description</option>\n        <option>nextOfKin.name</option>\n        <option>nextOfKin.relation</option>\n        <option>nextOfKin.contact.email</option>\n        <option>nextOfKin.contact.phone</option>\n        <option>nextOfKin.contact.phone2</option>\n        <option>allergies.type</option>\n        <option>allergies.title</option>\n        <option>allergies.description</option>\n        <option>allergies.attachments</option>\n        <option>medication.title</option>\n        <option>medication.type</option>\n        <option>medication.description</option>\n        <option>medication.attachments</option>\n        <option>images.name</option>\n        <option>images.type</option>\n        <option>images.path</option>\n        <option>files.name</option>\n        <option>files.type</option>\n        <option>files.path</option>\n        <option>notes</option>\n        <option>tags</option>\n        <option>loggedIn</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default PatientSearchForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport CreatePatientForm from '../../components/forms/create/CreatePatientForm';\nimport PatientList from '../../components/lists/patient/PatientList';\nimport SearchPatientList from '../../components/lists/patient/SearchPatientList';\nimport PatientDetail from '../../components/details/PatientDetail';\n\nimport FilterPatientForm from '../../components/forms/filter/FilterPatientForm';\nimport PatientSearchForm from '../../components/forms/search/PatientSearchForm';\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './patient.css';\n\nclass PatientPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    patients: null,\n    searchPatients: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    canDelete: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    selectedPatient: null,\n    creatingPatient: false,\n    newPatient: null,\n    fromGoLink: null,\n    goLinkId: null,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all patients component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    if (this.props.location.state) {\n      if (this.props.location.state.patient) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.patient\n        })\n      }\n    }\n    this.getAllPatients(seshStore);\n    if (this.props.selectedPatient) {\n      console.log('...found existing Patient selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedPatient: this.props.selectedPatient\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkPatient = resData.data.getAllPatients.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedPatient: goLinkPatient,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n        activityA: `getAllPatients?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchPatients = (event) => {\n  event.preventDefault();\n  console.log('...searching patients...');\n  this.context.setUserAlert('...searching patients...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.context.activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'active' ||\n      field === 'age' ||\n      field === 'dob' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'registration.date' ||\n      field === 'expiryDate' ||\n      field === 'referral.date' ||\n      field === 'insurance.expiryDate' ||\n      field === 'insurance.expiryDate'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getPatientsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getPatientsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getPatientsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getPatientsByField);\n      }\n\n      let responseAlert = '...patient search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchPatients: resData.data.getPatientsByFieldRegex,\n          activityA: `getPatientsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchPatients: resData.data.getPatientsByField,\n          activityA: `getPatientsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nonStartCreateNewPatient = () => {\n  this.setState({\n    creatingPatient: true\n  })\n}\ncancelCreateNewPatient = () => {\n  this.setState({\n    creatingPatient: false\n  })\n}\nsubmitCreateNewPatientForm = (event) => {\n  event.preventDefault();\n  console.log('...creating new patient...');\n  this.context.setUserAlert('...creating new patient...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n\n  const active = event.target.active.value;\n  const title = event.target.title.value;\n  const name = event.target.name.value;\n  const username = event.target.username.value;\n  const dob = event.target.dob.value;\n  const role = event.target.role.value;\n  const gender = event.target.gender.value;\n  const contactEmail = event.target.contactEmail.value;\n  const contactPhone = event.target.contactPhone.value;\n  const contactPhone2 = event.target.contactPhone2.value;\n  let addressNumber = event.target.addressNumber.value;\n  if (addressNumber === '') {\n    addressNumber = 0;\n  }\n  const addressStreet = event.target.addressStreet.value;\n  const addressTown = event.target.addressTown.value;\n  const addressCity = event.target.addressCity.value;\n  const addressParish = event.target.addressParish.value;\n  const addressCountry = event.target.addressCountry.value;\n  const addressPostalCode = event.target.addressPostalCode.value;\n  const referralDate = event.target.referralDate.value;\n  const referralReason = event.target.referralReason.value;\n  const referralPhysicianName = event.target.referralPhysicianName.value;\n  const referralPhysicianPhone = event.target.referralPhysicianPhone.value;\n  const referralPhysicianEmail = event.target.referralPhysicianEmail.value;\n  const referralPhysicianAddress = event.target.referralPhysicianAddress.value;\n  const attendingPhysician = event.target.attendingPhysician.value;\n  const occupationRole = event.target.occupationRole.value;\n  const occupationEmployerName = event.target.occupationEmployerName.value;\n  const occupationEmployerEmail = event.target.occupationEmployerEmail.value;\n  const occupationEmployerPhone = event.target.occupationEmployerPhone.value;\n  const occupationEmployerAddress = event.target.occupationEmployerAddress.value;\n  const insuranceCompany = event.target.insuranceCompany.value;\n  const insurancePolicyNumber = event.target.insurancePolicyNumber.value;\n  const insuranceDescription = event.target.insuranceDescription.value;\n  const insuranceExpiryDate = event.target.insuranceExpiryDate.value;\n  const insuranceSubscriberCompany = event.target.insuranceSubscriberCompany.value;\n  const insuranceSubscriberDescription = event.target.insuranceSubscriberDescription.value;\n\n  if (\n      active.trim().length === 0 ||\n      title.trim().length === 0 ||\n      name.trim().length === 0 ||\n      username.trim().length === 0 ||\n      dob.trim().length === 0 ||\n      role.trim().length === 0 ||\n      gender.trim().length === 0 ||\n      contactEmail.trim().length === 0 ||\n      contactPhone.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n\n  let requestBody = {\n    query: `\n      mutation {createPatient(\n        activityId:\"${activityId}\",\n        patientInput:{\n          active:${active},\n          username:\"${username}\",\n          dob:\"${dob}\",\n          title:\"${title}\",\n          name:\"${name}\",\n          role:\"${role}\",\n          gender:\"${gender}\",\n          contactEmail:\"${contactEmail}\",\n          contactPhone:\"${contactPhone}\",\n          contactPhone2:\"${contactPhone2}\",\n          addressNumber:${addressNumber},\n          addressStreet:\"${addressStreet}\",\n          addressTown:\"${addressTown}\",\n          addressCity:\"${addressCity}\",\n          addressParish:\"${addressParish}\",\n          addressCountry:\"${addressCountry}\",\n          addressPostalCode:\"${addressPostalCode}\",\n          referralDate:\"${referralDate}\",\n          referralReason:\"${referralReason}\",\n          referralPhysicianName:\"${referralPhysicianName}\",\n          referralPhysicianEmail:\"${referralPhysicianEmail}\",\n          referralPhysicianPhone:\"${referralPhysicianPhone}\",\n          attendingPhysician:\"${attendingPhysician}\",\n          occupationRole:\"${occupationRole}\",\n          occupationEmployerName:\"${occupationEmployerName}\",\n          occupationEmployerPhone:\"${occupationEmployerPhone}\",\n          occupationEmployerEmail:\"${occupationEmployerEmail}\",\n          occupationEmployerAddress:\"${occupationEmployerAddress}\",\n          insuranceCompany:\"${insuranceCompany}\",\n          insurancePolicyNumber:\"${insurancePolicyNumber}\",\n          insuranceDescription:\"${insuranceDescription}\",\n          insuranceExpiryDate:\"${insuranceExpiryDate}\",\n          insuranceSubscriberCompany:\"${insuranceSubscriberCompany}\",\n          insuranceSubscriberDescription:\"${insuranceSubscriberDescription}\"\n        })\n        {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createPatient);\n      let responseAlert = '...create patient success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        showDetails: true,\n        creatingPatient: false,\n        tabKey: 'detail',\n        selectedPatient: resData.data.createPatient,\n        newPatient: resData.data.createPatient,\n        activityA: `createPatient?activityId:${activityId},patientId:${resData.data.createPatient._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'))\n      this.getAllPatients(seshStore);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nshowDetails = (args) => {\n\n  this.setState({\n    showDetails: true,\n    selectedPatient: args,\n    tabKey: 'detail'\n  })\n  this.props.selectPatient(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nupdatePatient = (args) => {\n  console.log('...updating selected patient...');\n  this.setState({\n    selectedPatient: args\n  })\n  this.props.selectPatient(args)\n}\n\ndeletePatient = (args) => {\n  console.log('...deleteing patient...',args);\n  this.context.setUserAlert('...deleteing patient...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientById(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\"\n      )\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientById);\n      let responseAlert = '...delete patient success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deletePatientById?activityId:${activityId},patientId:${patientId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllPatients({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n          <h1>Patient List</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col lg={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterPatientForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.patients && (\n            <Col lg={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content>\n                <Tab.Pane eventKey=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                    <PatientList\n                      filter={this.state.filter}\n                      patients={this.state.patients}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      showDetails={this.showDetails}\n                      onDelete={this.deletePatient}\n                    />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Patient</h3>\n                  <Row className=\"userSearchRow\">\n                    <PatientSearchForm\n                      onConfirm={this.searchPatients}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchPatients && (\n                      <Button variant=\"outline-primary\" className=\"centered_btn\" onClick={this.toggleSideCol}>Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchPatients && (\n                      <SearchPatientList\n                        filter={this.state.filter}\n                        patients={this.state.searchPatients}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedPatient && (\n                  <PatientDetail\n                    patient={this.state.selectedPatient}\n                    updatePatient={this.updatePatient}\n                  />\n                )}\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"new\">\n                {this.state.creatingPatient === false && (\n                  <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={this.onStartCreateNewPatient}>Create New</Button>\n                )}\n                {this.state.creatingPatient === true && (\n                  <CreatePatientForm\n                    onConfirm={this.submitCreateNewPatientForm}\n                    onCancel={this.cancelCreateNewPatient}\n                  />\n                )}\n                {this.state.newPatient && (\n                  <Row>\n                    <h3>Review New Patient</h3>\n                    {this.state.newPatient.username}\n                  </Row>\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default PatientPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './createForms.css';\n\nconst CreateAppointmentForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Create Appointment Form</h1>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"patientId\">\n        <Form.Label>Patient: {props.patient.username}</Form.Label>\n        <Form.Control type=\"text\" value={props.patient._id}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"subType\">\n        <Form.Label>subType</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"subType\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"date\">\n        <Form.Label>date</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"time\">\n        <Form.Label>time</Form.Label>\n        <Form.Control type=\"time\" placeholder=\"time\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"location\">\n        <Form.Label>location</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"location\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"important\">\n        <Form.Label>important</Form.Label>\n        <Form.Control as=\"select\">\n          <option>false</option>\n          <option>true</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Create</Button>\n      <Button variant=\"outline-danger\" className=\"loginFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default CreateAppointmentForm;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './AppointmentItem.css';\n\nconst NoteItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Note: <span className=\"bold\">{props.note}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.note)}>Delete</Button>\n              )}\n            </Row>\n            )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\n\nimport NoteItem from '../../items/appointment/NoteItem';\nimport './AppointmentList.css';\n\nconst AppointmentNoteList = props => {\n\n  const {...filter} = props.filter;\n  let notes2 = props.notes;\n  let propsNotes = [];\n\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Ascending') {\n    propsNotes = notes2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Descending') {\n    propsNotes = notes2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'note') {\n    propsNotes = notes2;\n  }\n\n  let count = 0;\n\n  const notes = propsNotes.map(note => {\n\n    count = propsNotes.indexOf(note)+1;\n\n    return (\n      <NoteItem\n        key={count}\n        note={note}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{notes}</ul>;\n};\n\nexport default AppointmentNoteList;\n","import React, { useState } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './AppointmentItem.css';\n\nconst TagItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Tag: <span className=\"bold\">{props.tag}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.tag)}>Delete</Button>\n              )}\n            </Row>\n            )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default TagItem;\n","import React from 'react';\n\nimport TagItem from '../../items/appointment/TagItem';\nimport './AppointmentList.css';\n\nconst AppointmentTagList = props => {\n\n  const {...filter} = props.filter;\n  let tags2 = props.tags;\n  let propsTags = [];\n\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Ascending') {\n    propsTags = tags2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Descending') {\n    propsTags = tags2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'tag') {\n    propsTags = tags2;\n  }\n\n  let count = 0;\n\n  const tags = propsTags.map(tag => {\n\n    count = propsTags.indexOf(tag)+1;\n\n    return (\n      <TagItem\n        key={count}\n        tag={tag}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{tags}</ul>;\n};\n\nexport default AppointmentTagList;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport UserList from '../../lists/user/UserList';\nimport './addForms.css';\n\nconst AddUserForm = (props) => {\n\n  const [user, setUser] = useState(\"\");\n  const handleSetUser = (args) => {\n    setUser(args);\n   }\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Staff</h4>\n\n    <Form.Row>\n      <UserList\n        users={props.users}\n        selectUser={handleSetUser}\n        filter={props.filter}\n      />\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"user\">\n        <Form.Label>user</Form.Label>\n        <Form.Control type=\"text\" value={user._id}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddUserForm;\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport AddToCalendar from 'react-add-to-calendar';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport PatientAddressList from '../lists/patient/PatientAddressList';\nimport PatientNextOfKinList from '../lists/patient/PatientNextOfKinList'\nimport PatientAllergyList from '../lists/patient/PatientAllergyList'\nimport PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientImageList from '../lists/patient/PatientImageList'\nimport PatientFileList from '../lists/patient/PatientFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport AppointmentNoteList from '../lists/appointment/AppointmentNoteList'\nimport AppointmentTagList from '../lists/appointment/AppointmentTagList'\nimport UserList from '../lists/user/UserList'\n\n\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../forms/filter/FilterNoteForm';\nimport FilterTagForm from '../forms/filter/FilterTagForm';\nimport FilterUserForm from '../forms/filter/FilterUserForm';\n\nimport UpdatePatientSingleFieldForm from '../forms/add/UpdatePatientSingleFieldForm';\n\nimport AddUserForm from '../forms/add/AddUserForm';\nimport AddNoteForm from '../forms/add/AddNoteForm';\nimport AddTagForm from '../forms/add/AddTagForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass AppointmentDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: this.props.appointment,\n    addAttachmentForm: false,\n    addAttachmentArgs: null,\n    showAddConsultantForm: false,\n    users: null,\n    calEvent: {\n      title: this.props.appointment.title,\n      description: this.props.appointment.description,\n      location: this.props.appointment.location,\n      startTime: moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.appointment.time+':00-05:00',\n      endTime: moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.appointment.time+':00-05:00',\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.propsPatient = this.props.appointment;\n  }\n\ncomponentDidMount () {\n  console.log('...appointment details component mounted...');\n  // console.log(moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.appointment.time+':00-05:00');\n  let seshStore;\n  if (sessionStorage.getItem('logInfo')) {\n    seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n  }\n  this.setState({\n    selectedPatient: this.context.selectedPatient\n  })\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.getAllUsers(seshStore);\n}\ncomponentWillUnmount() {\n\n}\n\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n        activityA: `getAllUsers?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding notes...');\n  this.context.setUserAlert('...adding notes...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const notes = event.target.notes.value;\n\n  let requestBody = {\n    query: `\n      mutation {addAppointmentNotes(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          notes:\"${notes}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addAppointmentNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.addAppointmentNotes)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.addAppointmentNotes,\n        activityA: `addAppointmentNotes?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.addAppointmentNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n\n  console.log('...deleting notes...');\n  this.context.setUserAlert('...deleting notes...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const note = args;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentNote(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          note:\"${note}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.deleteAppointmentNote)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.deleteAppointmentNote,\n        activityA: `deleteAppointmentNote?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.deleteAppointmentNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddTagForm = (event) => {\n  event.preventDefault();\n  console.log('...adding tags...');\n  this.context.setUserAlert('...adding tags...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const tags = event.target.tags.value;\n\n  let requestBody = {\n    query: `\n      mutation {addAppointmentTags(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          tags:\"${tags}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addAppointmentTags);\n      let responseAlert = '...tags add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.addAppointmentTags)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.addAppointmentTags,\n        activityA: `addAppointmentTags?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.addAppointmentTags;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteTag = (args) => {\n\n  console.log('...deleting tags...');\n  this.context.setUserAlert('...deleting tags...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const tag = args;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentTag(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          tag:\"${tag}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentTag);\n      let responseAlert = '...tag delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.deleteAppointmentTag)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.deleteAppointmentTag,\n        activityA: `deleteAppointmentTag?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.deleteAppointmentTag;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddUserForm = (event) => {\n  event.preventDefault();\n  console.log('...adding consultant...');\n  this.context.setUserAlert('...adding consultant...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = event.target.user.value;\n  const appointmentId = this.props.appointment._id;\n\n  const userRole = this.state.users.filter(x => x._id === consultantId)[0].role;\n  if (userRole !== 'Doctor' && userRole !== 'Nurse') {\n    console.log('...please choose a Doctor or Nurse to add please...');\n    this.context.setUserAlert('...please choose a Doctor or Nurse to add please...')\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addAppointmentConsultant(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addAppointmentConsultant);\n      let responseAlert = '...add consultant success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.addAppointmentConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `addAppointmentConsultant?activityId:${activityId},appointmentId:${appointmentId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteConsultant = (args) => {\n  console.log('...deleting consultant...');\n  this.context.setUserAlert('...deleting consultant...')\n  this.setState({isLoading: true});\n  //\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = args._id;\n  const appointmentId = this.props.appointment._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentConsultant(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentConsultant);\n      let responseAlert = '...delete consultant success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.deleteAppointmentConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteAppointmentConsultant?activityId:${activityId},appointmentId:${appointmentId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdatePatient = () => {\n  console.log('show update patient select list');\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateAppointmentSingleField(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateAppointmentSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.updateAppointmentSingleField)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.updateAppointmentSingleField,\n        activityA: `updateAppointmentSingleField?activityId:${activityId},appointmentId:${appointmentId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.updateAppointmentSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {!this.props.appointment && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={3} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'consultant')}>Consultants</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'tag')}>Tags</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'consultant' && (\n                  <FilterUserForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'note' && (\n                  <FilterNoteForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'tag' && (\n                  <FilterTagForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n\n            )}\n          </Col>\n\n          {this.props.appointment && (\n            <Col md={9} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdatePatientSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n                <Tab.Content className=\"tabContent\">\n                  <Tab.Pane eventKey=\"1\">\n                    Appointment Basic:\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.title}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Type:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.type}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'type')}>Edit</Button>\n                        <p className=\"listGroupText\">subType:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.subType}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'subType')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <p className=\"listGroupText\">Time:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.time}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'time')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Location:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.location}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'location')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Description:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.description}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'description')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Important:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.important.toString()}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'important')}>Edit</Button>\n                        <p className=\"listGroupText\">In Progress:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.inProgress.toString()}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'inProgress')}>Edit</Button>\n                        <p className=\"listGroupText\">Attended:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.attended.toString()}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'attended')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Patient:</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Name:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.patient.title}</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.patient.name}</p>\n                        <Link\n                          to={{\n                            pathname: \"/patients\",\n                            state: {patient: this.props.appointment.patient._id}\n                          }}\n                        >Go!\n                        </Link>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.props.appointment.patient._id}</p>\n                      </ListGroup.Item>\n                      {this.props.appointment.visit && (\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">Visit:</p>\n                          <p className=\"listGroupText bold\">{this.props.appointment.visit._id}</p>\n                        </ListGroup.Item>\n                      )}\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Export:</p>\n                        <AddToCalendar event={this.state.calEvent} />\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"2\">\n                    Appointment Admin\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Id:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment._id}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Creator:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.creator._id}</p>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"3\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Appointment Consultant List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'consultant')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'consultant' &&\n                      this.state.users && (\n                        <AddUserForm\n                          onConfirm={this.submitAddUserForm}\n                          onCancel={this.cancelAdd}\n                          filter={this.state.filter}\n                          users={this.state.users}\n                        />\n                    )}\n                    <UserList\n                      filter={this.state.filter}\n                      authId={this.context.activityId}\n                      users={this.props.appointment.consultants}\n                      appointmentPage={true}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteConsultant}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"4\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Appointment Note List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'note' && (\n                        <AddNoteForm\n                          onConfirm={this.submitAddNoteForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <AppointmentNoteList\n                      filter={this.state.filter}\n                      notes={this.props.appointment.notes}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteNote}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"5\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Appointment Tag List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'tag')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'tag' && (\n                        <AddTagForm\n                          onConfirm={this.submitAddTagForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <AppointmentTagList\n                      filter={this.state.filter}\n                      tags={this.props.appointment.tags}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteTag}\n                    />\n                  </Tab.Pane>\n\n                </Tab.Content>\n\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n}\n\n}\n\nexport default AppointmentDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst AppointmentSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>type</option>\n        <option>subType</option>\n        <option>date</option>\n        <option>time</option>\n        <option>checkinTime</option>\n        <option>seenTime</option>\n        <option>location</option>\n        <option>description</option>\n        <option>inProgress</option>\n        <option>attended</option>\n        <option>important</option>\n        <option>notes</option>\n        <option>tags</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AppointmentSearchForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport CreateAppointmentForm from '../../components/forms/create/CreateAppointmentForm';\nimport AppointmentList from '../../components/lists/appointment/AppointmentList';\nimport PatientList from '../../components/lists/patient/PatientList';\n// import SearchAppointmentList from '../../components/lists/appointment/SearchAppointmentList';\nimport AppointmentDetail from '../../components/details/AppointmentDetail';\n\nimport FilterAppointmentForm from '../../components/forms/filter/FilterAppointmentForm';\nimport AppointmentSearchForm from '../../components/forms/search/AppointmentSearchForm';\nimport PatientSearchForm from '../../components/forms/search/PatientSearchForm';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './appointment.css';\n\nclass AppointmentPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    patients: null,\n    canDelete: false,\n    appointments: null,\n    searchAppointments: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    creatingAppointment: false,\n    newAppointment: null,\n    calendarAppointments: null,\n    fromGoLink: null,\n    goLinkId: null,\n    sublistSearch: false,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all appointments component mounted...');\n\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    this.getAllPatients(seshStore);\n    if (this.props.location.state) {\n      if (this.props.location.state.appointment) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.appointment\n        })\n      }\n    }\n    this.getAllAppointments(seshStore);\n    if (this.props.selectedAppointment) {\n      console.log('...found existing Appointment selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedAppointment: this.props.selectedAppointment\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllAppointments (args) {\n  console.log('...retrieving all appointments...');\n  this.context.setUserAlert('...retrieving all appointments...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllAppointments(\n        activityId:\"${activityId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllAppointments);\n      let responseAlert = '...all appointments retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkAppointment = resData.data.getAllAppointments.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedAppointment: goLinkAppointment,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        appointments: resData.data.getAllAppointments,\n        activityA: `getAllAppointments?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.parseForCalendar(resData.data.getAllAppointments)\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n        activityA: `getAllPatients?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchAppointments = (event) => {\n  event.preventDefault();\n  console.log('...searching appointments...');\n  this.context.setUserAlert('...searching appointments...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'date' ||\n      field === 'inProgress' ||\n      field === 'attended' ||\n      field === 'important' ||\n      field === 'important'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getAppointmentsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n      query {getAppointmentsByField(\n        activityId:\"${activityId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getAppointmentsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getAppointmentsByField);\n      }\n\n      let responseAlert = '...appointment search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchAppointments: resData.data.getAppointmentsByFieldRegex,\n          activityA: `getAppointmentsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchAppointments: resData.data.getAppointmentsByField,\n          activityA: `getAppointmentsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nonStartCreateNewAppointment = () => {\n  this.setState({\n    creatingAppointment: true\n  })\n}\ncancelCreateNewAppointment = () => {\n  this.setState({\n    creatingAppointment: false,\n    selectedPatient: null\n  })\n}\nsubmitCreateNewAppointmentForm = (event) => {\n  event.preventDefault();\n  console.log('...creating new appointment...');\n  this.context.setUserAlert('...creating new appointment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.state.selectedPatient._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const subType = event.target.subType.value;\n  const date = event.target.date.value;\n  const time = event.target.time.value;\n  const location = event.target.location.value;\n  const description = event.target.description.value;\n  const important = event.target.important.value;\n\n  if (\n      title.trim().length === 0 ||\n      date.trim().length === 0 ||\n      time.trim().length === 0 ||\n      location.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    return;\n  }\n  console.log('foo',date);\n\n  if (date < moment().format('YYYY-MM-DD')) {\n    console.log('...ummm no! Please pick a date today or in the future...');\n    this.context.setUserAlert('...ummm no! Please pick a date today or in the future...')\n    this.setState({isLoading:false})\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {createAppointment(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        appointmentInput:{\n          title:\"${title}\",\n          type:\"${type}\",\n          subType:\"${subType}\",\n          date:\"${date}\",\n          time:\"${time}\",\n          location:\"${location}\",\n          description:\"${description}\",\n          important:${important}\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createAppointment);\n      let responseAlert = '...create appointment success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        showDetails: true,\n        creatingAppointment: false,\n        selectedAppointment: resData.data.createAppointment,\n        newAppointment: resData.data.createAppointment,\n        tabKey: 'detail',\n        activityA: `createAppointment?activityId:${activityId},appointmentId:${resData.data.createAppointment._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'))\n      this.getAllAppointments(seshStore);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nshowDetails = (args) => {\n  this.setState({\n    showDetails: true,\n    selectedAppointment: args,\n    overlay: false,\n    tabKey: 'detail'\n  })\n  this.props.selectAppointment(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\nselectPatient = (args) => {\n  this.setState({\n    selectedPatient: args\n  })\n\n}\nupdateAppointment = (args) => {\n  console.log('...updating selected appointment...');\n  this.setState({\n    selectedAppointment: args\n  })\n  this.props.selectAppointment(args);\n}\n\ndeleteAppointment = (args) => {\n  console.log('...deleteing appointment...',args);\n  this.context.setUserAlert('...deleteing appointment...')\n\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentById(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentById);\n      let responseAlert = '...delete appointment success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteAppointmentById?activityId:${activityId},appointmentId:${appointmentId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllAppointments({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing appointments for calendar...');\n  let calendarAppointments = args.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n      }\n    }))\n    this.setState({\n      calendarAppointments: calendarAppointments\n    })\n\n}\n\nviewCalendarEvent = (args) => {\n  console.log('...viewing calendar appointment...',args.event.extendedProps.props);\n  const appointment = this.state.appointments.filter(x => x._id === args.event.extendedProps.props._id)[0];\n  this.setState({\n    overlay: true,\n    overlayStatus: {type: 'calendarAppointment', data: appointment}\n  })\n}\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\nstartSublistSearch = () => {\n  this.setState({\n    sublistSearch: true\n  })\n}\ncancelSublistSearch = () => {\n  this.setState({\n    sublistSearch: false,\n  })\n  this.getAllPatients({activityId: this.context.activityId,token: this.context.token});\n}\nsubmitSublistSearchForm = (event) => {\n  event.preventDefault()\n  console.log('...searching patient sublist...');\n  this.context.setUserAlert('...searching patient sublist...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'active' ||\n      field === 'age' ||\n      field === 'dob' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'registration.date' ||\n      field === 'expiryDate' ||\n      field === 'referral.date' ||\n      field === 'insurance.expiryDate' ||\n      field === 'insurance.expiryDate'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getPatientsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getPatientsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getPatientsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getPatientsByField);\n      }\n\n      let responseAlert = '...patient search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          patients: resData.data.getPatientsByFieldRegex,\n          activityA: `getPatientsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          patients: resData.data.getPatientsByField,\n          activityA: `getPatientsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        selectCalendarDetails={this.showDetails}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n          <h1 className=\"mainHeading\">Appointment List</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col md={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterAppointmentForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.appointments && (\n            <Col md={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content >\n                <Tab.Pane eventKey=\"list\" className=\"mainList\">\n\n                <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                  <Tab eventKey=\"1\" title=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                    <AppointmentList\n                      filter={this.state.filter}\n                      appointments={this.state.appointments}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      showDetails={this.showDetails}\n                      onDelete={this.deleteAppointment}\n                    />\n                  </Tab>\n                  <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                    <h3>Calendar</h3>\n                    <FullCalendar\n                      defaultView=\"dayGridMonth\"\n                      plugins={[dayGridPlugin]}\n                      events={this.state.calendarAppointments}\n                      eventClick={this.viewCalendarEvent}\n                    />\n                  </Tab>\n                </Tabs>\n\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Appointment</h3>\n                  <Row className=\"userSearchRow searchForm\">\n                    <AppointmentSearchForm\n                      onConfirm={this.searchAppointments}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchAppointments && (\n                      <Button variant=\"outline-primary\" className=\"centered_btn\" onClick={this.toggleSideCol}>Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchAppointments && (\n                      <AppointmentList\n                        filter={this.state.filter}\n                        appointments={this.state.searchAppointments}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedAppointment && (\n                  <AppointmentDetail\n                    appointment={this.state.selectedAppointment}\n                    updateAppointment={this.updateAppointment}\n                  />\n                )}\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"new\">\n                {this.state.creatingAppointment === false && (\n                  <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={this.onStartCreateNewAppointment}>Create New</Button>\n                )}\n                {this.state.creatingAppointment === true &&\n                  this.state.patients &&\n                  !this.state.selectedPatient && (\n                  <Col className=\"patientSubListCol\">\n                  <Row className=\"patientSubListRow\">\n                  <Button variant=\"outline-success\" className=\"patientSublistSearchBtn\" onClick={this.startSublistSearch}>Search</Button>\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  {this.state.sublistSearch === true && (\n                    <PatientSearchForm\n                      onCancel={this.cancelSublistSearch}\n                      onConfirm={this.submitSublistSearchForm}\n                    />\n                  )}\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  <PatientList\n                    filter={this.state.filter}\n                    patients={this.state.patients}\n                    authId={this.context.activityId}\n                    onSelect={this.selectPatient}\n                    appointmentPage={true}\n                  />\n                  </Row>\n\n                  </Col>\n                )}\n                {this.state.creatingAppointment === true &&\n                  this.state.selectedPatient && (\n                  <Row>\n                    <CreateAppointmentForm\n                      onConfirm={this.submitCreateNewAppointmentForm}\n                      onCancel={this.cancelCreateNewAppointment}\n                      patient={this.state.selectedPatient}\n                    />\n                  </Row>\n                )}\n                {this.state.newAppointment && (\n                  <Row>\n                    <h3>Review New Appointment {this.state.newAppointment._id}</h3>\n                  </Row>\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default AppointmentPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './createForms.css';\n\nconst CreateVisitForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Create Visit Form</h1>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"appointmentId\">\n        <Form.Label>Appointment: {props.appointment.title}</Form.Label>\n        <Form.Control type=\"text\" value={props.appointment._id}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"subType\">\n        <Form.Label>subType</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"subType\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Create</Button>\n      <Button variant=\"outline-danger\" className=\"loginFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default CreateVisitForm;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst ComplaintItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.complaint.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.complaint.title}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.complaint.description}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Anamnesis: <span className=\"bold\">{props.complaint.anamnesis}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Attachments:\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.complaint}\n                attachments={props.complaint.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"complaint\"\n              />\n              <Button variant=\"outline-primary\" onClick={props.onAddAttachment.bind(this, {field: 'complaint',data:props.complaint})}>Add Attachment</Button>\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.complaint)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default ComplaintItem;\n","import React from 'react';\n\nimport ComplaintItem from '../../items/visit/ComplaintItem';\nimport './visitList.css';\n\nconst VisitComplaintList = props => {\n\n  const {...filter} = props.filter;\n  let complaints2 = props.complaints;\n  let propsComplaints = [];\n\n  if (filter.field === 'complaint' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsComplaints = complaints2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'title' && filter.value === 'Descending') {\n    propsComplaints = complaints2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsComplaints = complaints2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'description' && filter.value === 'Descending') {\n    propsComplaints = complaints2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'anamnesis' && filter.value === 'Ascending') {\n    propsComplaints = complaints2.sort((a, b) => (a.anamnesis > b.anamnesis) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'anamnesis' && filter.value === 'Descending') {\n    propsComplaints = complaints2.sort((a, b) => (a.anamnesis < b.anamnesis) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'complaint') {\n    propsComplaints = complaints2;\n  }\n\n  let count = 0;\n\n  const complaints = propsComplaints.map(complaint => {\n\n    count = propsComplaints.indexOf(complaint)+1;\n\n    return (\n      <ComplaintItem\n        key={count}\n        complaint={complaint}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{complaints}</ul>;\n};\n\nexport default VisitComplaintList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst SurveyItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.survey.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.survey.title}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.survey.description}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Attachments: \n              </Card.Text>\n              <PatientAttachmentList\n                item={props.survey}\n                attachments={props.survey.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"survey\"\n              />\n              <Button variant=\"outline-primary\" onClick={props.onAddAttachment.bind(this, {field: 'survey',data:props.survey})}>Add Attachment</Button>\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.survey)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default SurveyItem;\n","import React from 'react';\n\nimport SurveyItem from '../../items/visit/SurveyItem';\nimport './visitList.css';\n\nconst VisitSurveyList = props => {\n\n  const {...filter} = props.filter;\n  let surveys2 = props.surveys;\n  let propsSurveys = [];\n\n  if (filter.field === 'survey' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsSurveys = surveys2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'survey' && filter.key === 'title' && filter.value === 'Descending') {\n    propsSurveys = surveys2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'survey' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsSurveys = surveys2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'survey' && filter.key === 'description' && filter.value === 'Descending') {\n    propsSurveys = surveys2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'survey') {\n    propsSurveys = surveys2;\n  }\n\n  let count = 0;\n\n  const surveys = propsSurveys.map(survey => {\n\n    count = propsSurveys.indexOf(survey)+1;\n\n    return (\n      <SurveyItem\n        key={count}\n        survey={survey}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{surveys}</ul>;\n};\n\nexport default VisitSurveyList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst SystematicInquiryItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.systematicInquiry.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.systematicInquiry.title}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.systematicInquiry.description}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Attachments: \n              </Card.Text>\n              <PatientAttachmentList\n                item={props.systematicInquiry}\n                attachments={props.systematicInquiry.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"systematicInquiry\"\n              />\n              <Button variant=\"outline-primary\" onClick={props.onAddAttachment.bind(this, {field: 'systematicInquiry',data:props.systematicInquiry})}>Add Attachment</Button>\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.systematicInquiry)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default SystematicInquiryItem;\n","import React from 'react';\n\nimport SystematicInquiryItem from '../../items/visit/SystematicInquiryItem';\nimport './visitList.css';\n\nconst VisitSystematicInquiryList = props => {\n\n  const {...filter} = props.filter;\n  let systematicInquirys2 = props.systematicInquiry;\n  let propsSystematicInquirys = [];\n\n  if (filter.field === 'systematicInquiry' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'systematicInquiry' && filter.key === 'title' && filter.value === 'Descending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'systematicInquiry' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'systematicInquiry' && filter.key === 'description' && filter.value === 'Descending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'systematicInquiry') {\n    propsSystematicInquirys = systematicInquirys2;\n  }\n\n  let count = 0;\n\n  const systematicInquirys = propsSystematicInquirys.map(systematicInquiry => {\n\n    count = propsSystematicInquirys.indexOf(systematicInquiry)+1;\n\n    return (\n      <SystematicInquiryItem\n        key={count}\n        systematicInquiry={systematicInquiry}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{systematicInquirys}</ul>;\n};\n\nexport default VisitSystematicInquiryList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst VitalsItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Pulse Rate: <span className=\"bold\">{props.vitals.pr}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Respiratory Rate: <span className=\"bold\">{props.vitals.rr}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              <Card.Text className=\"cardText\">\n                Pulse Rate: <span className=\"bold\">{props.vitals.pr}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Respiratory Rate: <span className=\"bold\">{props.vitals.rr}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Blood Pressure : <span className=\"bold\">{props.vitals.bp1}</span> / <span className=\"bold\">{props.vitals.bp2}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Temperature: <span className=\"bold\">{props.vitals.temp}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                PS02: <span className=\"bold\">{props.vitals.ps02}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Height : <span className=\"bold\">{props.vitals.heightValue}</span>  <span className=\"bold\">{props.vitals.heightUnit}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Weight : <span className=\"bold\">{props.vitals.weightValue}</span>  <span className=\"bold\">{props.vitals.weightUnit}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                BMI : <span className=\"bold\">{props.vitals.bmi}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Urine\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.vitals.urine.type}</span> Value: <span className=\"bold\">{props.vitals.urine.value}</span>\n              </Card.Text>\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.vitals)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default VitalsItem;\n","import React from 'react';\n\nimport VitalsItem from '../../items/visit/VitalsItem';\nimport './visitList.css';\n\nconst VisitVitalsList = props => {\n\n  const {...filter} = props.filter;\n  let vitals2 = props.vitals;\n  let propsVitals = [];\n\n  if (filter.field === 'vitals' && filter.key === 'pr' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.pr > b.pr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'pr' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.pr < b.pr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp1' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp1 > b.bp1) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp1' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp1 < b.bp1) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp2' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp2 > b.bp2) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp2' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp2 < b.bp2) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'rr' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.rr > b.rr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'rr' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.rr < b.rr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'temp' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.temp > b.temp) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'temp' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.temp < b.temp) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'ps02' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.ps02 > b.ps02) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'ps02' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.ps02 < b.ps02) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'heightValue' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.heightValue > b.heightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'heightValue' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.heightValue < b.heightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'weightValue' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.weightValue > b.weightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'weightValue' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.weightValue < b.weightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bmi' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.bmi > b.bmi) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bmi' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.bmi < b.bmi) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.type' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.type > b.urine.type) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.type' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.type < b.urine.type) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.value' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.value > b.urine.value) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.value' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.value < b.urine.value) ? 1 : -1);\n  }\n  // if (filter.field === 'vitals' && filter.key === 'role') {\n  //   propsVitals = vitals2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'vitals') {\n    propsVitals = vitals2;\n  }\n\n  let count = 0;\n\n  const vitals = propsVitals.map(vitalsItem => {\n\n    count = propsVitals.indexOf(vitalsItem)+1;\n\n    return (\n      <VitalsItem\n        key={count}\n        vitals={vitalsItem}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{vitals}</ul>;\n};\n\nexport default VisitVitalsList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst ExaminationItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            General: <span className=\"bold\">{props.examination.general}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Area: <span className=\"bold\">{props.examination.area}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              <Card.Text className=\"cardText\">\n                General: <span className=\"bold\">{props.examination.general}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Area: <span className=\"bold\">{props.examination.area}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                type: <span className=\"bold\">{props.examination.type}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                measure: <span className=\"bold\">{props.examination.measure}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                value: <span className=\"bold\">{props.examination.value}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                description: <span className=\"bold\">{props.examination.description}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                followUp: <span className=\"bold\">{props.examination.followUp.toString()}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Attachments:\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.examination}\n                attachments={props.examination.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"examination\"\n              />\n              <Button variant=\"outline-primary\" onClick={props.onAddAttachment.bind(this, {field: 'examination',data:props.examination})}>Add Attachment</Button>\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.examination)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default ExaminationItem;\n","import React from 'react';\n\nimport ExaminationItem from '../../items/visit/ExaminationItem';\nimport './visitList.css';\n\nconst VisitExaminationList = props => {\n\n  const {...filter} = props.filter;\n  let examinations2 = props.examination;\n  let propsExaminations = [];\n\n  if (filter.field === 'examination' && filter.key === 'general' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.general > b.general) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'general' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.general < b.general) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'area' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.area > b.area) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'area' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.area < b.area) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'type' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'measure' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.measure > b.measure) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'measure' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.measure < b.measure) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'value' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.value > b.value) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'value' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.value < b.value) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'description' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'followUp') {\n    propsExaminations = examinations2.filter(x => x.followUp === filter.value);\n  }\n  if (filter.field !== 'examination') {\n    propsExaminations = examinations2;\n  }\n\n  let count = 0;\n\n  const examinations = propsExaminations.map(examination => {\n\n    count = propsExaminations.indexOf(examination)+1;\n\n    return (\n      <ExaminationItem\n        key={count}\n        examination={examination}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{examinations}</ul>;\n};\n\nexport default VisitExaminationList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst InvestigationItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.investigation.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.investigation.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.investigation.title}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.investigation.type}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.investigation.description}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Attachments\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.investigation}\n                attachments={props.investigation.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"investigation\"\n              />\n              <Button variant=\"outline-primary\" onClick={props.onAddAttachment.bind(this, {field: 'investigation',data:props.investigation})}>Add Attachment</Button>\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.investigation)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default InvestigationItem;\n","import React from 'react';\n\nimport InvestigationItem from '../../items/visit/InvestigationItem';\nimport './visitList.css';\n\nconst VisitInvestigationList = props => {\n\n  const {...filter} = props.filter;\n  let investigations2 = props.investigation;\n  let propsInvestigations = [];\n\n  if (filter.field === 'investigation' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'investigation' && filter.key === 'title' && filter.value === 'Descending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'investigation' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'investigation' && filter.key === 'description' && filter.value === 'Descending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'investigation') {\n    propsInvestigations = investigations2;\n  }\n\n  let count = 0;\n\n  const investigations = propsInvestigations.map(investigation => {\n\n    count = propsInvestigations.indexOf(investigation)+1;\n\n    return (\n      <InvestigationItem\n        key={count}\n        investigation={investigation}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{investigations}</ul>;\n};\n\nexport default VisitInvestigationList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst DiagnosisItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.diagnosis.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.diagnosis.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.diagnosis.title}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.diagnosis.type}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.diagnosis.description}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Attachments:\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.diagnosis}\n                attachments={props.diagnosis.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"diagnosis\"\n              />\n              <Button variant=\"outline-primary\" onClick={props.onAddAttachment.bind(this, {field: 'diagnosis',data:props.diagnosis})}>Add Attachment</Button>\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.diagnosis)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default DiagnosisItem;\n","import React from 'react';\n\nimport DiagnosisItem from '../../items/visit/DiagnosisItem';\nimport './visitList.css';\n\nconst VisitDiagnosisList = props => {\n\n  const {...filter} = props.filter;\n  let diagnosis2 = props.diagnosis;\n  let propsDiagnosis = [];\n\n  if (filter.field === 'diagnosis' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'title' && filter.value === 'Descending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'type' && filter.value === 'Descending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'description' && filter.value === 'Descending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'diagnosis') {\n    propsDiagnosis = diagnosis2;\n  }\n\n  let count = 0;\n\n  const diagnoses = propsDiagnosis.map(diagnosis => {\n\n    count = propsDiagnosis.indexOf(diagnosis)+1;\n\n    return (\n      <DiagnosisItem\n        key={count}\n        diagnosis={diagnosis}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{diagnoses}</ul>;\n};\n\nexport default VisitDiagnosisList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst TreatmentItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.treatment.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.treatment.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.treatment.title}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.treatment.type}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.treatment.description}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Dose: <span className=\"bold\">{props.treatment.dose}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Frequency: <span className=\"bold\">{props.treatment.frequency}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Attachments:\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.treatment}\n                attachments={props.treatment.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"treatment\"\n              />\n              <Button variant=\"outline-primary\" onClick={props.onAddAttachment.bind(this, {field: 'treatment',data:props.treatment})}>Add Attachment</Button>\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.treatment)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default TreatmentItem;\n","import React from 'react';\n\nimport TreatmentItem from '../../items/visit/TreatmentItem';\nimport './visitList.css';\n\nconst VisitTreatmentList = props => {\n\n  const {...filter} = props.filter;\n  let treatment2 = props.treatment;\n  let propsTreatment = [];\n\n  if (filter.field === 'treatment' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'title' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'type' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'dose' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.dose > b.dose) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'dose' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.dose < b.dose) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'frequency' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.frequency > b.frequency) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'frequency' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.frequency < b.frequency) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'description' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'treatment') {\n    propsTreatment = treatment2;\n  }\n\n  let count = 0;\n\n  const treatments = propsTreatment.map(treatment => {\n\n    count = propsTreatment.indexOf(treatment)+1;\n\n    return (\n      <TreatmentItem\n        key={count}\n        treatment={treatment}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{treatments}</ul>;\n};\n\nexport default VisitTreatmentList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst BillingItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.billing.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.billing.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.billing.title}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.billing.type}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.billing.description}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Notes: <span className=\"bold\">{props.billing.notes}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Amount: <span className=\"bold\">{props.billing.amount}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Paid: <span className=\"bold\">{props.billing.paid.toString()}</span>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.billing}\n                attachments={props.billing.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"billing\"\n              />\n              <Button variant=\"outline-primary\" onClick={props.onAddAttachment.bind(this, {field: 'billing',data:props.billing})}>Add Attachment</Button>\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.billing)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default BillingItem;\n","import React from 'react';\n\nimport BillingItem from '../../items/visit/BillingItem';\nimport './visitList.css';\n\nconst VisitBillingList = props => {\n\n  const {...filter} = props.filter;\n  let billing2 = props.billing;\n  let propsBilling = [];\n\n  if (filter.field === 'billing' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'title' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'type' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'amount' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.amount > b.amount) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'amount' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.amount < b.amount) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'description' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'notes' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.notes > b.notes) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'notes' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.notes < b.notes) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'paid') {\n    propsBilling = billing2.filter(x => x.paid === filter.value);\n  }\n  if (filter.field !== 'billing') {\n    propsBilling = billing2;\n  }\n\n  let count = 0;\n\n  const billings = propsBilling.map(billing => {\n\n    count = propsBilling.indexOf(billing)+1;\n\n    return (\n      <BillingItem\n        key={count}\n        billing={billing}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{billings}</ul>;\n};\n\nexport default VisitBillingList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst VigilanceItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            number: <span className=\"bold\">{props.key}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              <h3>chronicIllness:</h3>\n              <p>Diabetes</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.diabetes.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.diabetes.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.diabetes.comment}</span>\n              </Card.Text>\n\n              <p>High BloodPressure</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.hbp.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.hbp.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.hbp.comment}</span>\n              </Card.Text>\n\n              <p>Dyslipidemia</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.dyslipidemia.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.dyslipidemia.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.dyslipidemia.comment}</span>\n              </Card.Text>\n\n              <p>Cad</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.cad.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.cad.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.cad.comment}</span>\n              </Card.Text>\n\n              <h3>lifestyle</h3>\n              <p>Weight</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.weight.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.weight.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.weight.comment}</span>\n              </Card.Text>\n\n              <p>Diet</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.diet.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.diet.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.diet.comment}</span>\n              </Card.Text>\n\n              <p>Smoking</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.smoking.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.smoking.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.smoking.comment}</span>\n              </Card.Text>\n\n              <p>SubstanceAbuse</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.substanceAbuse.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.substanceAbuse.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.substanceAbuse.comment}</span>\n              </Card.Text>\n\n              <p>exercise</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.exercise.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.exercise.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.exercise.comment}</span>\n              </Card.Text>\n\n              <p>allergies</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.allergies.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.allergies.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.allergies.comment}</span>\n              </Card.Text>\n\n              <p>asthma</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.asthma.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.asthma.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.asthma.comment}</span>\n              </Card.Text>\n\n              <h3>Screening</h3>\n              <p>breast</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.breast.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.breast.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.breast.comment}</span>\n              </Card.Text>\n\n              <p>prostate</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.prostate.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.prostate.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.prostate.comment}</span>\n              </Card.Text>\n\n              <p>cervix</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.cervix.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.cervix.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.cervix.comment}</span>\n              </Card.Text>\n\n              <p>colon</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.colon.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.colon.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.colon.comment}</span>\n              </Card.Text>\n\n              <p>dental</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.dental.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.dental.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.dental.comment}</span>\n              </Card.Text>\n\n              <h3>Vaccines</h3>\n              <p>Influenza</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.influenza.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.influenza.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.influenza.comment}</span>\n              </Card.Text>\n\n              <p>varicella</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.varicella.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.varicella.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.varicella.comment}</span>\n              </Card.Text>\n\n              <p>hpv</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.hpv.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.hpv.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.hpv.comment}</span>\n              </Card.Text>\n\n              <p>mmr</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.mmr.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.mmr.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.mmr.comment}</span>\n              </Card.Text>\n\n              <p>tetanus</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.tetanus.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.tetanus.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.tetanus.comment}</span>\n              </Card.Text>\n\n              <p>pneumovax</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.pneumovax.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.pneumovax.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.pneumovax.comment}</span>\n              </Card.Text>\n\n              <p>other</p>\n              <Card.Text className=\"cardText\">\n                Other: <span className=\"bold\">{props.vigilance.vaccines.other.name}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.other.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.other.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.other.comment}</span>\n              </Card.Text>\n\n\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.vigilance)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default VigilanceItem;\n","import React from 'react';\n\nimport VigilanceItem from '../../items/visit/VigilanceItem';\nimport './visitList.css';\n\nconst VisitVigilanceList = props => {\n\n  const {...filter} = props.filter;\n  let vigilance2 = props.vigilance;\n  let propsVigilance = [];\n\n  if (filter.field === 'vigilance' && filter.key === 'chronicIllness.diabetes.medication') {\n    propsVigilance = vigilance2.filter(x => x.chronicIllness.diabetes.medication === filter.value)\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'vigilance') {\n    propsVigilance = vigilance2;\n  }\n\n  let count = 0;\n\n  const vigilances = propsVigilance.map(vigilance => {\n\n    count = propsVigilance.indexOf(vigilance)+1;\n\n    return (\n      <VigilanceItem\n        key={count}\n        vigilance={vigilance}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{vigilances}</ul>;\n};\n\nexport default VisitVigilanceList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst ImageItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Name: <span className=\"bold\">{props.image.name}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.image.type}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Link: <span className=\"bold\">{props.image.path}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.image)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n\n};\n\nexport default ImageItem;\n","import React from 'react';\n\nimport ImageItem from '../../items/visit/ImageItem';\nimport './visitList.css';\n\nconst VisitImageList = props => {\n\n  const {...filter} = props.filter;\n  let images2 = props.images;\n  let propsImages = [];\n\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'image') {\n    propsImages = images2;\n  }\n\n  let count = 0;\n\n  const images = propsImages.map(image => {\n\n    count = propsImages.indexOf(image)+1;\n\n    return (\n      <ImageItem\n        key={count}\n        image={image}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"imageList\">{images}</ul>;\n};\n\nexport default VisitImageList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst FileItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Name: <span className=\"bold\">{props.file.name}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.file.type}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Link: <span className=\"bold\">{props.file.path}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.file)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default FileItem;\n","import React from 'react';\n\nimport FileItem from '../../items/visit/FileItem';\nimport './visitList.css';\n\nconst VisitFileList = props => {\n\n  const {...filter} = props.filter;\n  let files2 = props.files;\n  let propsFiles = [];\n\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'file') {\n    propsFiles = files2;\n  }\n\n  let count = 0;\n\n  const files = propsFiles.map(file => {\n\n    count = propsFiles.indexOf(file)+1;\n\n    return (\n      <FileItem\n        key={count}\n        file={file}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{files}</ul>;\n};\n\nexport default VisitFileList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterComplaintForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"complaint\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>description</option>\n        <option>anamnesis</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterComplaintForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterSurveyForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"survey\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterSurveyForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterSystematicInquiryForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"systematicInquiry\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterSystematicInquiryForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterDiagnosisForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"diagnosis\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterDiagnosisForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterVitalsForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"vitals\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>pr</option>\n        <option>bp1</option>\n        <option>bp2</option>\n        <option>rr</option>\n        <option>temp</option>\n        <option>ps02</option>\n        <option>heightUnit</option>\n        <option>heightValue</option>\n        <option>weightUnit</option>\n        <option>weightValue</option>\n        <option>bmi</option>\n        <option>urine.type</option>\n        <option>urine.value</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterVitalsForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterExaminationForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"examination\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>general</option>\n        <option>area</option>\n        <option>type</option>\n        <option>measure</option>\n        <option>value</option>\n        <option>description</option>\n        <option>followUp</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterExaminationForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterInvestigationForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"investigation\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterInvestigationForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterTreatmentForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"treatment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        <option>dose</option>\n        <option>frequency</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterTreatmentForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterBillingForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"billing\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        <option>amount</option>\n        <option>paid</option>\n        <option>notes</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterBillingForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddComplaintForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Complaint</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"anamnesis\">\n        <Form.Label>anamnesis</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"anamnesis\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"attachment\">\n        <Form.Label>attachment</Form.Label>\n        <Form.Control path=\"text\" placeholder=\"attachment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddComplaintForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddSurveyForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Survey</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"attachment\">\n        <Form.Label>attachment</Form.Label>\n        <Form.Control path=\"text\" placeholder=\"attachment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddSurveyForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddSystematicInquiryForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add SystematicInquiry</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"attachment\">\n        <Form.Label>attachment</Form.Label>\n        <Form.Control path=\"text\" placeholder=\"attachment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddSystematicInquiryForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddVitalsForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Vitals</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"pr\">\n        <Form.Label>Pulse Rate</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"pr\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"bp1\">\n        <Form.Label>Blood Pressure (top)</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"bp1\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"bp2\">\n        <Form.Label>Blood Pressure (bottom)</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"bp2\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"rr\">\n        <Form.Label>Respiratory Rate</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"rr\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"temp\">\n        <Form.Label>Temperature</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"temp\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"ps02\">\n        <Form.Label>PS-02</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"ps02\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"heightUnit\">\n        <Form.Label>Height: Unit</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ft</option>\n          <option>M</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"heightValue\">\n        <Form.Label>Height: Value</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"heightValue\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"weightUnit\">\n        <Form.Label>Weight: Unit</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Kg</option>\n          <option>Lbs</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"weightValue\">\n        <Form.Label>Weight: Value</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"weightValue\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"bmi\">\n        <Form.Label>BMI</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"bmi\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"urineType\">\n        <Form.Label>Urine: type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"urineType\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"urineValue\">\n        <Form.Label>Urine: value</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"urineValue\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddVitalsForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddExaminationForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Examination</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"general\">\n        <Form.Label>General</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"general\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"area\">\n        <Form.Label>Area</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"area\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>Type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"measure\">\n        <Form.Label>Measure</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"measure\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Value</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"value\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"followUp\">\n        <Form.Label>FollowUp ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"attachment\">\n        <Form.Label>Attachment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"attachment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddExaminationForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddInvestigationForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Investigation</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"attachment\">\n        <Form.Label>attachment</Form.Label>\n        <Form.Control path=\"text\" placeholder=\"attachment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddInvestigationForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddDiagnosisForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Diagnosis</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"attachment\">\n        <Form.Label>attachment</Form.Label>\n        <Form.Control path=\"text\" placeholder=\"attachment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddDiagnosisForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddTreatmentForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Treatment</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"dose\">\n        <Form.Label>dose</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"dose\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"frequency\">\n        <Form.Label>frequency</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"frequency\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"attachment\">\n        <Form.Label>attachment</Form.Label>\n        <Form.Control path=\"text\" placeholder=\"attachment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddTreatmentForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddBillingForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Billing</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"amount\">\n        <Form.Label>amount</Form.Label>\n        <Form.Control type=\"number\" step=\"0.001\" placeholder=\"amount\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"paid\">\n        <Form.Label>Paid ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"attachment\">\n        <Form.Label>attachment</Form.Label>\n        <Form.Control path=\"text\" placeholder=\"attachment\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"notes\">\n        <Form.Label>notes</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"notes\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddBillingForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddVigilanceForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Vigilance</h4>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>Diabetes</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDiabetesMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDiabetesTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDiabetesComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>HBP</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessHbpMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessHbpTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessHbpComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>Dyslipidemia</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDyslipidemiaMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDyslipidemiaTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDyslipidemiaComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>Cad</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessCadMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessCadTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessCadComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Lifestyle:</h4>\n    <p>Weight</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleWeightMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleWeightTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleWeightComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Diet</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleDietMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleDietTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleDietComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Smoking</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSmokingMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSmokingTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSmokingComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>SubstanceAbuse</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSubstanceAbuseMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSubstanceAbuseTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSubstanceAbuseComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Exercise</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleExerciseMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleExerciseTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleExerciseComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Allergies</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAllergiesMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAllergiesTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAllergiesComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Asthma</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAsthmaMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAsthmaTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAsthmaComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Screening:</h4>\n    <p>Breast</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningBreastMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningBreastTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningBreastComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Prostate</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningProstateMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningProstateTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningProstateComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Cervix</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningCervixMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningCervixTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningCervixComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Colon</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningColonMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningColonTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningColonComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Dental</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningDentalMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningDentalTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningDentalComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Vaccines</h4>\n    <p>Influenza</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesInfluenzaMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesInfluenzaTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesInfluenzaComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Varicella</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesVaricellaMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesVaricellaTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesVaricellaComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Hpv</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesHpvMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesHpvTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesHpvComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Mmr</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesMmrMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesMmrTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesMmrComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Tetanus</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesTetanusMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesTetanusTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesTetanusComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Pneumovax</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesPneumovaxMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesPneumovaxTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesPneumovaxComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Other</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherName\">\n        <Form.Label>name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddVigilanceForm;\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport AddToCalendar from 'react-add-to-calendar';\nimport S3 from 'react-aws-s3';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport PatientAddressList from '../lists/patient/PatientAddressList';\nimport PatientNextOfKinList from '../lists/patient/PatientNextOfKinList'\nimport PatientAllergyList from '../lists/patient/PatientAllergyList'\nimport PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientImageList from '../lists/patient/PatientImageList'\nimport PatientFileList from '../lists/patient/PatientFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport AppointmentNoteList from '../lists/appointment/AppointmentNoteList'\nimport VisitComplaintList from '../lists/visit/VisitComplaintList'\nimport VisitSurveyList from '../lists/visit/VisitSurveyList'\nimport VisitSystematicInquiryList from '../lists/visit/VisitSystematicInquiryList'\nimport VisitVitalsList from '../lists/visit/VisitVitalsList'\nimport VisitExaminationList from '../lists/visit/VisitExaminationList'\nimport VisitInvestigationList from '../lists/visit/VisitInvestigationList'\nimport VisitDiagnosisList from '../lists/visit/VisitDiagnosisList'\nimport VisitTreatmentList from '../lists/visit/VisitTreatmentList'\nimport VisitBillingList from '../lists/visit/VisitBillingList'\nimport VisitVigilanceList from '../lists/visit/VisitVigilanceList'\nimport VisitImageList from '../lists/visit/VisitImageList'\nimport VisitFileList from '../lists/visit/VisitFileList'\nimport UserList from '../lists/user/UserList'\n\n\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterComplaintForm from '../forms/filter/FilterComplaintForm';\nimport FilterSurveyForm from '../forms/filter/FilterSurveyForm';\nimport FilterSystematicInquiryForm from '../forms/filter/FilterSystematicInquiryForm';\nimport FilterDiagnosisForm from '../forms/filter/FilterDiagnosisForm';\nimport FilterVitalsForm from '../forms/filter/FilterVitalsForm';\nimport FilterExaminationForm from '../forms/filter/FilterExaminationForm';\nimport FilterInvestigationForm from '../forms/filter/FilterInvestigationForm';\nimport FilterTreatmentForm from '../forms/filter/FilterTreatmentForm';\nimport FilterBillingForm from '../forms/filter/FilterBillingForm';\nimport FilterImageForm from '../forms/filter/FilterImageForm';\nimport FilterFileForm from '../forms/filter/FilterFileForm';\nimport FilterUserForm from '../forms/filter/FilterUserForm';\n\nimport UpdatePatientSingleFieldForm from '../forms/add/UpdatePatientSingleFieldForm';\n\nimport AddUserForm from '../forms/add/AddUserForm';\nimport AddAttachmentForm from '../forms/add/AddAttachmentForm';\nimport AddImageForm from '../forms/add/AddImageForm';\nimport AddFileForm from '../forms/add/AddFileForm';\nimport AddComplaintForm from '../forms/add/AddComplaintForm';\nimport AddSurveyForm from '../forms/add/AddSurveyForm';\nimport AddSystematicInquiryForm from '../forms/add/AddSystematicInquiryForm';\nimport AddVitalsForm from '../forms/add/AddVitalsForm';\nimport AddExaminationForm from '../forms/add/AddExaminationForm';\nimport AddInvestigationForm from '../forms/add/AddInvestigationForm';\nimport AddDiagnosisForm from '../forms/add/AddDiagnosisForm';\nimport AddTreatmentForm from '../forms/add/AddTreatmentForm';\nimport AddBillingForm from '../forms/add/AddBillingForm';\nimport AddVigilanceForm from '../forms/add/AddVigilanceForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass VisitDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    selectedPatient: null,\n    selectedVisit: null,\n    selectedAppointment: null,\n    addAttachmentForm: false,\n    addAttachmentArgs: null,\n    showAddConsultantForm: false,\n    users: null,\n    calEvent: {\n      title: this.props.visit.title,\n      description: this.props.visit.appointment.description,\n      location: this.props.visit.appointment.location,\n      startTime: moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.visit.time+':00-05:00',\n      endTime: moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.visit.time+':00-05:00',\n    },\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.propsVisit = this.props.visit;\n  }\n\ncomponentDidMount () {\n  console.log('...visit details component mounted...');\n  let seshStore;\n  if (sessionStorage.getItem('logInfo')) {\n    seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getPocketVars(seshStore);\n  }\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.getAllUsers(seshStore);\n}\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n  console.log('...retriving pocketVars..');\n  this.context.setUserAlert('...retriving pocketVars..')\n  const token = args.token;\n  const activityId = args.activityId;\n  const requestBody = {\n        query:`\n          query {getPocketVars(\n            activityId:\"${activityId}\")}\n        `};\n\n  fetch('http://localhost:8088/graphql', {\n    method: 'POST',\n    body: JSON.stringify(requestBody),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + token\n    }\n  })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (resData.errors) {\n        this.setState({userAlert: resData.errors[0].message})\n      } else {\n        let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n        console.log('...retriving pocketVars success...');\n        this.context.setUserAlert('...retriving pocketVars success...')\n        this.setState({\n          pocketVars: pocketVarsParsed\n        });\n      }\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n    });\n  }\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n        activityA: `getAllUsers?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nsubmitAddComplaintForm = (event) => {\n  event.preventDefault();\n  console.log('...adding complaint...');\n  this.context.setUserAlert('...adding complaint...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = event.target.title.value;\n  const description = event.target.description.value;\n  const anamnesis = event.target.anamnesis.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0 ||\n      anamnesis.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/complaint/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'complaint attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'complaint attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'complaint attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'complaint attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitComplaint(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${title}\",\n            complaintDescription:\"${description}\",\n            complaintAnamnesis:\"${anamnesis}\",\n            complaintAttachment:\"${file2Path}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitComplaint);\n      let responseAlert = '...complaint add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitComplaint)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitComplaint,\n        activityA: `addVisitComplaint?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitComplaint;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteComplaint = (args) => {\n\n  console.log('...deleting complaint...');\n  this.context.setUserAlert('...deleting complaint...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = args.title;\n  const description = args.description;\n  const anamnesis = args.anamnesis;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitComplaint(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${title}\",\n            complaintDescription:\"${description}\",\n            complaintAnamnesis:\"${anamnesis}\",\n            complaintAttachments:\"${attachments}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitComplaint);\n      let responseAlert = '...complaint delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitComplaint)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitComplaint,\n        activityA: `deleteVisitComplaint?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitComplaint;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/complaint/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/complaint/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `complaint attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddSurveyForm = (event) => {\n  event.preventDefault();\n  console.log('...adding survey...');\n  this.context.setUserAlert('...adding survey...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/survey/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'survey attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'survey attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'survey attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'survey attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitSurvey(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          surveyTitle:\"${title}\",\n          surveyDescription:\"${description}\",\n          surveyAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitSurvey);\n      let responseAlert = '...survey add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitSurvey)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitSurvey,\n        activityA: `addVisitSurvey?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitSurvey;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteSurvey = (args) => {\n\n  console.log('...deleting survey...');\n  this.context.setUserAlert('...deleting survey...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = args.title;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitSurvey(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          surveyTitle:\"${title}\",\n          surveyDescription:\"${description}\",\n          surveyAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitSurvey);\n      let responseAlert = '...survey delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitSurvey)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitSurvey,\n        activityA: `deleteVisitSurvey?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitSurvey;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/survey/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/survey/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `survey attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddSystematicInquiryForm = (event) => {\n  event.preventDefault();\n  console.log('...adding systematicInquiry...');\n  this.context.setUserAlert('...adding systematicInquiry...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/systematicInquiry/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'systematicInquiry attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'systematicInquiry attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'systematicInquiry attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'systematicInquiry attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitSysInquiry(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          systematicInquiryTitle:\"${title}\",\n          systematicInquiryDescription:\"${description}\",\n          systematicInquiryAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitSysInquiry);\n      let responseAlert = '...systematicInquiry add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitSysInquiry)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitSysInquiry,\n        activityA: `addVisitSysInquiry?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitSysInquiry;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteSystematicInquiry = (args) => {\n\n  console.log('...deleting systematicInquiry...');\n  this.context.setUserAlert('...deleting systematicInquiry...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = args.title;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitSysInquiry(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          systematicInquiryTitle:\"${title}\",\n          systematicInquiryDescription:\"${description}\",\n          systematicInquiryAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitSysInquiry);\n      let responseAlert = '...sys inquiry delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitSysInquiry)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitSysInquiry,\n        activityA: `deleteVisitSysInquiry?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitSysInquiry;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/systematicInquiry/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/systematicInquiry/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `systematicInquiry attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddVitalsForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Vitals...');\n  this.context.setUserAlert('...adding Vitals...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const pr = event.target.pr.value;\n  const bp1 = event.target.bp1.value;\n  const bp2 = event.target.bp2.value;\n  const rr = event.target.rr.value;\n  const temp = event.target.temp.value;\n  const ps02 = event.target.ps02.value;\n  const heightUnit = event.target.heightUnit.value;\n  const heightValue = event.target.heightValue.value;\n  const weightUnit = event.target.weightUnit.value;\n  const weightValue = event.target.weightValue.value;\n  const bmi = event.target.bmi.value;\n  const urineType = event.target.urineType.value;\n  const urineValue = event.target.urineValue.value;\n\n  let requestBody = {\n    query: `\n      mutation {addVisitVitals(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          vitalsPr:${pr},\n          vitalsBp1:${bp1},\n          vitalsBp2:${bp2},\n          vitalsRr:${rr},\n          vitalsTemp:${temp},\n          vitalsPs02:${ps02},\n          vitalsHeightUnit:\"${heightUnit}\",\n          vitalsHeightValue:${heightValue},\n          vitalsWeightUnit:\"${weightUnit}\",\n          vitalsWeightValue:${weightValue},\n          vitalsBmi:${bmi},\n          vitalsUrineType:\"${urineType}\",\n          vitalsUrineValue:\"${urineValue}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitVitals);\n      let responseAlert = '...Vitals add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitVitals)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitVitals,\n        activityA: `addVisitVitals?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitVitals;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteVitals = (args) => {\n\n  console.log('...deleting Vitals...');\n  this.context.setUserAlert('...deleting Vitals...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const pr = args.pr;\n  const bp1 = args.bp1;\n  const bp2 = args.bp2;\n  const rr = args.rr;\n  const temp = args.temp;\n  const ps02 = args.ps02;\n  const heightUnit = args.heightUnit;\n  const heightValue = args.heightValue;\n  const weightUnit = args.weightUnit;\n  const weightValue = args.weightValue;\n  const bmi = args.bmi;\n  const urineType = args.urine.type;\n  const urineValue = args.urine.value;\n\n  let requestBody = {\n    query: `\n    mutation {deleteVisitVitals(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        vitalsPr:${pr},\n        vitalsBp1:${bp1},\n        vitalsBp2:${bp2},\n        vitalsRr:${rr},\n        vitalsTemp:${temp},\n        vitalsPs02:${ps02},\n        vitalsHeightUnit:\"${heightUnit}\",\n        vitalsHeightValue:${heightValue},\n        vitalsWeightUnit:\"${weightUnit}\",\n        vitalsWeightValue:${weightValue},\n        vitalsBmi:${bmi},\n        vitalsUrineType:\"${urineType}\",\n        vitalsUrineValue:\"${urineValue}\"\n      })\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitVitals);\n      let responseAlert = '...vitals delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitVitals)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitVitals,\n        activityA: `deleteVisitVitals?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitVitals;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddExaminationForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Examination...');\n  this.context.setUserAlert('...adding Examination...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const general = event.target.general.value;\n  const area = event.target.area.value;\n  const type = event.target.type.value;\n  const measure = event.target.measure.value;\n  const value = event.target.value.value;\n  const description = event.target.description.value;\n  const followUp = event.target.followUp.checked;\n  const attachment = event.target.attachment.value;\n\n  if (\n      general.trim().length === 0 ||\n      area.trim().length === 0 ||\n      type.trim().length === 0 ||\n      measure.trim().length === 0 ||\n      value.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/examination/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'examination attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'examination attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'examination attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'examination attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitExamination(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          examinationGeneral:\"${general}\",\n          examinationArea:\"${area}\",\n          examinationType:\"${type}\",\n          examinationMeasure:\"${measure}\",\n          examinationValue:\"${value}\",\n          examinationDescription:\"${description}\",\n          examinationFollowUp:${followUp},\n          examinationAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitExamination);\n      let responseAlert = '...Examination add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitExamination)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitExamination,\n        activityA: `addVisitExamination?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitExamination;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteExamination = (args) => {\n\n  console.log('...deleting Examination...');\n  this.context.setUserAlert('...deleting Examination...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const general = args.general;\n  const area = args.area;\n  const type = args.type;\n  const measure = args.measure;\n  const value = args.value;\n  const description = args.description;\n  const followUp = args.followUp;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitExamination(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          examinationGeneral:\"${general}\",\n          examinationArea:\"${area}\",\n          examinationType:\"${type}\",\n          examinationMeasure:\"${measure}\",\n          examinationValue:\"${value}\",\n          examinationDescription:\"${description}\",\n          examinationFollowUp:${followUp},\n          examinationAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitExamination);\n      let responseAlert = '...Examination delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitExamination)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitExamination,\n        activityA: `deleteVisitExamination?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitExamination;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/examination/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/examination/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `examination attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddInvestigationForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Investigation...');\n  this.context.setUserAlert('...adding Investigation...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/investigation/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'investigation attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'investigation attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'investigation attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'investigation attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitInvestigation(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          investigationTitle:\"${title}\",\n          investigationType:\"${type}\",\n          investigationDescription:\"${description}\",\n          investigationAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitInvestigation);\n      let responseAlert = '...Investigation add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitInvestigation)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitInvestigation,\n        activityA: `addVisitInvestigation?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitInvestigation;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteInvestigation = (args) => {\n\n  console.log('...deleting Investigation...');\n  this.context.setUserAlert('...deleting Investigation...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitInvestigation(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          investigationTitle:\"${title}\",\n          investigationType:\"${type}\",\n          investigationDescription:\"${description}\",\n          investigationAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitInvestigation);\n      let responseAlert = '...Investigation delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitInvestigation)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitInvestigation,\n        activityA: `deleteVisitInvestigation?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitInvestigation;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/investigation/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/investigation/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `investigation attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddDiagnosisForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Diagnosis...');\n  this.context.setUserAlert('...adding Diagnosis...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/diagnosis/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'diagnosis attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'diagnosis attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'diagnosis attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'diagnosis attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitDiagnosis(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          diagnosisTitle:\"${title}\",\n          diagnosisType:\"${type}\",\n          diagnosisDescription:\"${description}\",\n          diagnosisAttachment:\"${file2Path}\"\n        })\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitDiagnosis);\n      let responseAlert = '...Diagnosis add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitDiagnosis)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitDiagnosis,\n        activityA: `addVisitDiagnosis?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitDiagnosis;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteDiagnosis = (args) => {\n\n  console.log('...deleting Diagnosis...');\n  this.context.setUserAlert('...deleting Diagnosis...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitDiagnosis(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          diagnosisTitle:\"${title}\",\n          diagnosisType:\"${type}\",\n          diagnosisDescription:\"${description}\",\n          diagnosisAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitDiagnosis);\n      let responseAlert = '...Diagnosis delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitDiagnosis)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitDiagnosis,\n        activityA: `deleteVisitDiagnosis?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitDiagnosis;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/diagnosis/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/diagnosis/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `diagnosis attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddTreatmentForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Treatment...');\n  this.context.setUserAlert('...adding Treatment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const dose = event.target.dose.value;\n  const frequency = event.target.frequency.value;\n  const attachment = event.target.attachment.value;\n\n\n  if (\n      title.trim().length === 0 ||\n      type.trim().length === 0 ||\n      description.trim().length === 0 ||\n      dose.trim().length === 0 ||\n      frequency.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/treatment/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'treatment attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'treatment attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'treatment attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'treatment attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n        mutation {addVisitTreatment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${type}\",\n            treatmentTitle:\"${title}\",\n            treatmentDescription:\"${description}\",\n            treatmentDose:\"${dose}\",\n            treatmentFrequency:\"${frequency}\",\n            treatmentAttachment:\"${file2Path}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitTreatment);\n      let responseAlert = '...Treatment add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitTreatment)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitTreatment,\n        activityA: `addVisitTreatment?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitTreatment;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteTreatment = (args) => {\n\n  console.log('...deleting Treatment...');\n  this.context.setUserAlert('...deleting Treatment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const dose = args.dose;\n  const frequency = args.frequency;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n        mutation {deleteVisitTreatment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${type}\",\n            treatmentTitle:\"${title}\",\n            treatmentDescription:\"${description}\",\n            treatmentDose:\"${dose}\",\n            treatmentFrequency:\"${frequency}\",\n            treatmentAttachments:\"${attachments}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitTreatment);\n      let responseAlert = '...Treatment delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitTreatment)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitTreatment,\n        activityA: `deleteVisitTreatment?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitTreatment;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/treatment/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/treatment/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `treatment attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddBillingForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Billing...');\n  this.context.setUserAlert('...adding Billing...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const amount = event.target.amount.value;\n  const paid = event.target.paid.checked;\n  const notes = event.target.notes.value;\n  const attachment = event.target.attachment.value;\n\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0 ||\n      amount <= 0 ||\n      notes.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/billing/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'billing attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'billing attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'billing attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'billing attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n        mutation {addVisitBilling(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${title}\",\n            billingType:\"${type}\",\n            billingDescription:\"${description}\",\n            billingAmount:${amount},\n            billingPaid:${paid},\n            billingAttachment:\"${file2Path}\",\n            billingNotes:\"${notes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitBilling);\n      let responseAlert = '...Billing add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitBilling)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitBilling,\n        activityA: `addVisitBilling?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitBilling;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteBilling = (args) => {\n\n  console.log('...deleting Billing...',args);\n  this.context.setUserAlert('...deleting Billing...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const amount = args.amount;\n  const paid = args.paid;\n  const notes = args.notes;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n        mutation {deleteVisitBilling(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${title}\",\n            billingType:\"${type}\",\n            billingDescription:\"${description}\",\n            billingAmount:${amount},\n            billingPaid:${paid},\n            billingAttachments:\"${attachments}\",\n            billingNotes:\"${notes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitBilling);\n      let responseAlert = '...Billing delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitBilling)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitBilling,\n        activityA: `deleteVisitBilling?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitBilling;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/billing/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/billing/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `billing attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Image...');\n  this.context.setUserAlert('...adding Image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/images';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n        mutation {addVisitImage(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            imageName:\"${imageName}\",\n            imageType:\"${imageType}\",\n            imagePath:\"${imagePath}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitImage);\n      let responseAlert = '...Image add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitImage)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitImage,\n        activityA: `addVisitImage?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n\n  console.log('...deleting Image...',args);\n  this.context.setUserAlert('...deleting Image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const name = args.name;\n  const type = args.type;\n  const path = args.path;\n\n  let requestBody = {\n    query: `\n    mutation {deleteVisitImage(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        imageName:\"${name}\",\n        imageType:\"${type}\",\n        imagePath:\"${path}\"\n      })\n    {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitImage);\n      let responseAlert = '...Image delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitImage)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitImage,\n        activityA: `deleteVisitImage?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'visit/'+visitId+'/images';\n      const filename = args.name;\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding File...');\n  this.context.setUserAlert('...adding File...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n        mutation {addVisitFile(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            fileName:\"${file2Name}\",\n            fileType:\"${file2Type}\",\n            filePath:\"${file2Path}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitFile);\n      let responseAlert = '...File add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitFile)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitFile,\n        activityA: `addVisitFile?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n\n  console.log('...deleting File...',args);\n  this.context.setUserAlert('...deleting File...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const name = args.name;\n  const type = args.type;\n  const path = args.path;\n\n  let requestBody = {\n    query: `\n    mutation {deleteVisitFile(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        fileName:\"${name}\",\n        fileType:\"${type}\",\n        filePath:\"${path}\"\n      })\n    {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitFile);\n      let responseAlert = '...File delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitFile)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitFile,\n        activityA: `deleteVisitFile?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'visit/'+visitId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddVigilanceForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Vigilance...');\n  this.context.setUserAlert('...adding Vigilance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n    mutation {addVisitVigilance(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        vigilanceChronicIllnessDiabetesMedication:${event.target.vigilanceChronicIllnessDiabetesMedication.checked},\n        vigilanceChronicIllnessDiabetesTesting:${event.target.vigilanceChronicIllnessDiabetesTesting.checked},\n        vigilanceChronicIllnessDiabetesComment:\"${event.target.vigilanceChronicIllnessDiabetesComment.value}\",\n        vigilanceChronicIllnessHbpMedication:${event.target.vigilanceChronicIllnessHbpMedication.checked},\n        vigilanceChronicIllnessHbpTesting:${event.target.vigilanceChronicIllnessHbpTesting.checked},\n        vigilanceChronicIllnessHbpComment:\"${event.target.vigilanceChronicIllnessHbpComment.value}\",\n        vigilanceChronicIllnessDyslipidemiaMedication:${event.target.vigilanceChronicIllnessDyslipidemiaMedication.checked},\n        vigilanceChronicIllnessDyslipidemiaTesting:${event.target.vigilanceChronicIllnessDyslipidemiaTesting.checked},\n        vigilanceChronicIllnessDyslipidemiaComment:\"${event.target.vigilanceChronicIllnessDyslipidemiaComment.value}\",\n        vigilanceChronicIllnessCadMedication:${event.target.vigilanceChronicIllnessCadMedication.checked},\n        vigilanceChronicIllnessCadTesting:${event.target.vigilanceChronicIllnessCadTesting.checked},\n        vigilanceChronicIllnessCadComment:\"${event.target.vigilanceChronicIllnessCadComment.value}\",\n        vigilanceLifestyleWeightMedication:${event.target.vigilanceLifestyleWeightMedication.checked},\n        vigilanceLifestyleWeightTesting:${event.target.vigilanceLifestyleWeightTesting.checked},\n        vigilanceLifestyleWeightComment:\"${event.target.vigilanceLifestyleWeightComment.value}\",\n        vigilanceLifestyleDietMedication:${event.target.vigilanceLifestyleDietMedication.checked},\n        vigilanceLifestyleDietTesting:${event.target.vigilanceLifestyleDietTesting.checked},\n        vigilanceLifestyleDietComment:\"${event.target.vigilanceLifestyleDietComment.value}\",\n        vigilanceLifestyleSmokingMedication:${event.target.vigilanceLifestyleSmokingMedication.checked},\n        vigilanceLifestyleSmokingTesting:${event.target.vigilanceLifestyleSmokingTesting.checked},\n        vigilanceLifestyleSmokingComment:\"${event.target.vigilanceLifestyleSmokingComment.value}\",\n        vigilanceLifestyleSubstanceAbuseMedication:${event.target.vigilanceLifestyleSubstanceAbuseMedication.checked},\n        vigilanceLifestyleSubstanceAbuseTesting:${event.target.vigilanceLifestyleSubstanceAbuseTesting.checked},\n        vigilanceLifestyleSubstanceAbuseComment:\"${event.target.vigilanceLifestyleSubstanceAbuseComment.value}\",\n        vigilanceLifestyleExerciseMedication:${event.target.vigilanceLifestyleExerciseMedication.checked},\n        vigilanceLifestyleExerciseTesting:${event.target.vigilanceLifestyleExerciseTesting.checked},\n        vigilanceLifestyleExerciseComment:\"${event.target.vigilanceLifestyleExerciseComment.value}\",\n        vigilanceLifestyleAllergiesMedication:${event.target.vigilanceLifestyleAllergiesMedication.checked},\n        vigilanceLifestyleAllergiesTesting:${event.target.vigilanceLifestyleAllergiesTesting.checked},\n        vigilanceLifestyleAllergiesComment:\"${event.target.vigilanceLifestyleAllergiesComment.value}\",\n        vigilanceLifestyleAsthmaMedication:${event.target.vigilanceLifestyleAsthmaMedication.checked},\n        vigilanceLifestyleAsthmaTesting:${event.target.vigilanceLifestyleAsthmaTesting.checked},\n        vigilanceLifestyleAsthmaComment:\"${event.target.vigilanceLifestyleAsthmaComment.value}\",\n        vigilanceScreeningBreastMedication:${event.target.vigilanceScreeningBreastMedication.checked},\n        vigilanceScreeningBreastTesting:${event.target.vigilanceScreeningBreastTesting.checked},\n        vigilanceScreeningBreastComment:\"${event.target.vigilanceScreeningBreastComment.value}\",\n        vigilanceScreeningProstateMedication:${event.target.vigilanceScreeningProstateMedication.checked},\n        vigilanceScreeningProstateTesting:${event.target.vigilanceScreeningProstateTesting.checked},\n        vigilanceScreeningProstateComment:\"${event.target.vigilanceScreeningProstateComment.value}\",\n        vigilanceScreeningCervixMedication:${event.target.vigilanceScreeningCervixMedication.checked},\n        vigilanceScreeningCervixTesting:${event.target.vigilanceScreeningCervixTesting.checked},\n        vigilanceScreeningCervixComment:\"${event.target.vigilanceScreeningCervixComment.value}\",\n        vigilanceScreeningColonMedication:${event.target.vigilanceScreeningColonMedication.checked},\n        vigilanceScreeningColonTesting:${event.target.vigilanceScreeningColonTesting.checked},\n        vigilanceScreeningColonComment:\"${event.target.vigilanceScreeningColonComment.value}\",\n        vigilanceScreeningDentalMedication:${event.target.vigilanceScreeningDentalMedication.checked},\n        vigilanceScreeningDentalTesting:${event.target.vigilanceScreeningDentalTesting.checked},\n        vigilanceScreeningDentalComment:\"${event.target.vigilanceScreeningDentalComment.value}\",\n        vigilanceVaccinesInfluenzaMedication:${event.target.vigilanceVaccinesInfluenzaMedication.checked},\n        vigilanceVaccinesInfluenzaTesting:${event.target.vigilanceVaccinesInfluenzaTesting.checked},\n        vigilanceVaccinesInfluenzaComment:\"${event.target.vigilanceVaccinesInfluenzaComment.value}\",\n        vigilanceVaccinesVaricellaMedication:${event.target.vigilanceVaccinesVaricellaMedication.checked},\n        vigilanceVaccinesVaricellaTesting:${event.target.vigilanceVaccinesVaricellaTesting.checked},\n        vigilanceVaccinesVaricellaComment:\"${event.target.vigilanceVaccinesVaricellaComment.value}\",\n        vigilanceVaccinesHpvMedication:${event.target.vigilanceVaccinesHpvMedication.checked},\n        vigilanceVaccinesHpvTesting:${event.target.vigilanceVaccinesHpvTesting.checked},\n        vigilanceVaccinesHpvComment:\"${event.target.vigilanceVaccinesHpvComment.value}\",\n        vigilanceVaccinesMmrMedication:${event.target.vigilanceVaccinesMmrMedication.checked},\n        vigilanceVaccinesMmrTesting:${event.target.vigilanceVaccinesMmrTesting.checked},\n        vigilanceVaccinesMmrComment:\"${event.target.vigilanceVaccinesMmrComment.value}\",\n        vigilanceVaccinesTetanusMedication:${event.target.vigilanceVaccinesTetanusMedication.checked},\n        vigilanceVaccinesTetanusTesting:${event.target.vigilanceVaccinesTetanusTesting.checked},\n        vigilanceVaccinesTetanusComment:\"${event.target.vigilanceVaccinesTetanusComment.value}\",\n        vigilanceVaccinesPneumovaxMedication:${event.target.vigilanceVaccinesPneumovaxMedication.checked},\n        vigilanceVaccinesPneumovaxTesting:${event.target.vigilanceVaccinesPneumovaxTesting.checked},\n        vigilanceVaccinesPneumovaxComment:\"${event.target.vigilanceVaccinesPneumovaxComment.value}\",\n        vigilanceVaccinesOtherName:\"${event.target.vigilanceVaccinesOtherName.value}\",\n        vigilanceVaccinesOtherMedication:${event.target.vigilanceVaccinesOtherMedication.checked},\n        vigilanceVaccinesOtherTesting:${event.target.vigilanceVaccinesOtherTesting.checked},\n        vigilanceVaccinesOtherComment:\"${event.target.vigilanceVaccinesOtherComment.value}\"\n      })\n    {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitVigilance);\n      let responseAlert = '...Vigilance add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitVigilance)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitVigilance,\n        activityA: `addVisitVigilance?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitVigilance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteVigilance = (args) => {\n\n  console.log('...deleting Vigilance...');\n  this.context.setUserAlert('...deleting Vigilance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n        mutation {deleteVisitVigilance(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            vigilanceChronicIllnessDiabetesMedication:${args.chronicIllness.diabetes.medication},\n            vigilanceChronicIllnessDiabetesTesting:${args.chronicIllness.diabetes.testing},\n            vigilanceChronicIllnessDiabetesComment:\"${args.chronicIllness.diabetes.comment}\",\n            vigilanceChronicIllnessHbpMedication:${args.chronicIllness.hbp.medication},\n            vigilanceChronicIllnessHbpTesting:${args.chronicIllness.hbp.testing},\n            vigilanceChronicIllnessHbpComment:\"${args.chronicIllness.hbp.comment}\",\n            vigilanceChronicIllnessDyslipidemiaMedication:${args.chronicIllness.dyslipidemia.medication},\n            vigilanceChronicIllnessDyslipidemiaTesting:${args.chronicIllness.dyslipidemia.testing},\n            vigilanceChronicIllnessDyslipidemiaComment:\"${args.chronicIllness.dyslipidemia.comment}\",\n            vigilanceChronicIllnessCadMedication:${args.chronicIllness.cad.medication},\n            vigilanceChronicIllnessCadTesting:${args.chronicIllness.cad.testing},\n            vigilanceChronicIllnessCadComment:\"${args.chronicIllness.cad.comment}\",\n            vigilanceLifestyleWeightMedication:${args.lifestyle.weight.medication},\n            vigilanceLifestyleWeightTesting:${args.lifestyle.weight.testing},\n            vigilanceLifestyleWeightComment:\"${args.lifestyle.weight.comment}\",\n            vigilanceLifestyleDietMedication:${args.lifestyle.diet.medication},\n            vigilanceLifestyleDietTesting:${args.lifestyle.diet.testing},\n            vigilanceLifestyleDietComment:\"${args.lifestyle.diet.comment}\",\n            vigilanceLifestyleSmokingMedication:${args.lifestyle.smoking.medication},\n            vigilanceLifestyleSmokingTesting:${args.lifestyle.smoking.testing},\n            vigilanceLifestyleSmokingComment:\"${args.lifestyle.smoking.comment}\",\n            vigilanceLifestyleSubstanceAbuseMedication:${args.lifestyle.substanceAbuse.medication},\n            vigilanceLifestyleSubstanceAbuseTesting:${args.lifestyle.substanceAbuse.testing},\n            vigilanceLifestyleSubstanceAbuseComment:\"${args.lifestyle.substanceAbuse.comment}\",\n            vigilanceLifestyleExerciseMedication:${args.lifestyle.exercise.medication},\n            vigilanceLifestyleExerciseTesting:${args.lifestyle.exercise.testing},\n            vigilanceLifestyleExerciseComment:\"${args.lifestyle.exercise.comment}\",\n            vigilanceLifestyleAllergiesMedication:${args.lifestyle.allergies.medication},\n            vigilanceLifestyleAllergiesTesting:${args.lifestyle.allergies.testing},\n            vigilanceLifestyleAllergiesComment:\"${args.lifestyle.allergies.comment}\",\n            vigilanceLifestyleAsthmaMedication:${args.lifestyle.asthma.medication},\n            vigilanceLifestyleAsthmaTesting:${args.lifestyle.asthma.testing},\n            vigilanceLifestyleAsthmaComment:\"${args.lifestyle.asthma.comment}\",\n            vigilanceScreeningBreastMedication:${args.screening.breast.medication},\n            vigilanceScreeningBreastTesting:${args.screening.breast.testing},\n            vigilanceScreeningBreastComment:\"${args.screening.breast.comment}\",\n            vigilanceScreeningProstateMedication:${args.screening.prostate.medication},\n            vigilanceScreeningProstateTesting:${args.screening.prostate.testing},\n            vigilanceScreeningProstateComment:\"${args.screening.prostate.comment}\",\n            vigilanceScreeningCervixMedication:${args.screening.cervix.medication},\n            vigilanceScreeningCervixTesting:${args.screening.cervix.testing},\n            vigilanceScreeningCervixComment:\"${args.screening.cervix.comment}\",\n            vigilanceScreeningColonMedication:${args.screening.colon.medication},\n            vigilanceScreeningColonTesting:${args.screening.colon.testing},\n            vigilanceScreeningColonComment:\"${args.screening.colon.comment}\",\n            vigilanceScreeningDentalMedication:${args.screening.dental.medication},\n            vigilanceScreeningDentalTesting:${args.screening.dental.testing},\n            vigilanceScreeningDentalComment:\"${args.screening.dental.comment}\",\n            vigilanceVaccinesInfluenzaMedication:${args.vaccines.influenza.medication},\n            vigilanceVaccinesInfluenzaTesting:${args.vaccines.influenza.testing},\n            vigilanceVaccinesInfluenzaComment:\"${args.vaccines.influenza.comment}\",\n            vigilanceVaccinesVaricellaMedication:${args.vaccines.varicella.medication},\n            vigilanceVaccinesVaricellaTesting:${args.vaccines.varicella.testing},\n            vigilanceVaccinesVaricellaComment:\"${args.vaccines.varicella.comment}\",\n            vigilanceVaccinesHpvMedication:${args.vaccines.hpv.medication},\n            vigilanceVaccinesHpvTesting:${args.vaccines.hpv.testing},\n            vigilanceVaccinesHpvComment:\"${args.vaccines.hpv.comment}\",\n            vigilanceVaccinesMmrMedication:${args.vaccines.mmr.medication},\n            vigilanceVaccinesMmrTesting:${args.vaccines.mmr.testing},\n            vigilanceVaccinesMmrComment:\"${args.vaccines.mmr.comment}\",\n            vigilanceVaccinesTetanusMedication:${args.vaccines.tetanus.medication},\n            vigilanceVaccinesTetanusTesting:${args.vaccines.tetanus.testing},\n            vigilanceVaccinesTetanusComment:\"${args.vaccines.tetanus.comment}\",\n            vigilanceVaccinesPneumovaxMedication:${args.vaccines.pneumovax.medication},\n            vigilanceVaccinesPneumovaxTesting:${args.vaccines.pneumovax.testing},\n            vigilanceVaccinesPneumovaxComment:\"${args.vaccines.pneumovax.comment}\",\n            vigilanceVaccinesOtherName:\"${args.vaccines.other.name}\",\n            vigilanceVaccinesOtherMedication:${args.vaccines.other.medication},\n            vigilanceVaccinesOtherTesting:${args.vaccines.other.testing},\n            vigilanceVaccinesOtherComment:\"${args.vaccines.other.comment}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitVigilance);\n      let responseAlert = '...Vigilance delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitVigilance)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitVigilance,\n        activityA: `deleteVisitFile?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitVigilance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddUserForm = (event) => {\n  event.preventDefault();\n  console.log('...adding consultant...');\n  this.context.setUserAlert('...adding consultant...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = event.target.user.value;\n  const visitId = this.props.visit._id;\n\n  const userRole = this.state.users.filter(x => x._id === consultantId)[0].role;\n  if (userRole !== 'Doctor' && userRole !== 'Nurse') {\n    console.log('...please choose a Doctor or Nurse to add please...');\n    this.context.setUserAlert('...please choose a Doctor or Nurse to add please...')\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitConsultant(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitConsultant);\n      let responseAlert = '...add consultant success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `addVisitConsultant?activityId:${activityId},visitId:${visitId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteConsultant = (args) => {\n  console.log('...deleting consultant...');\n  this.context.setUserAlert('...deleting consultant...')\n  this.setState({isLoading: true});\n  //\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = args._id;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitConsultant(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitConsultant);\n      let responseAlert = '...delete consultant success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteVisitConsultant?activityId:${activityId},visitId:${visitId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartAddAttachment = (args) => {\n  console.log('...start add attachment...');\n  this.setState({\n    addAttachmentForm: true,\n    addAttachmentArgs: args\n  })\n}\ncancelAddAttachment = () => {\n  this.setState({\n    addAttachmentForm: false\n  })\n}\naddAttachment = (event) => {\n  event.preventDefault();\n  console.log('...adding attachment...');\n  this.context.setUserAlert('...adding attachment...');\n  this.setState({\n    isLoading: true,\n    addAttachmentForm: false\n  })\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  let args = this.state.addAttachmentArgs;\n  let field = args.field;\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/'+field+'/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading allergy attachment ...\")\n    console.log('...s3 uploading allergy attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: `${field} attachment`,\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: `${field} attachment`,\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody;\n\n  if (field === 'complaint') {\n    let complaintTitle = args.data.title;\n    let complaintDescription = args.data.description;\n    let complaintAnamnesis = args.data.anamnesis;\n    let complaintAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitComplaintAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${complaintTitle}\",\n            complaintDescription:\"${complaintDescription}\",\n            complaintAnamnesis:\"${complaintAnamnesis}\",\n            complaintAttachment:\"${complaintAttachment}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'survey') {\n    let surveyTitle = args.data.title;\n    let surveyDescription = args.data.description;\n    let surveyAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitSurveyAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            surveyTitle:\"${surveyTitle}\",\n            surveyDescription:\"${surveyDescription}\",\n            surveyAttachment:\"${surveyAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'systematicInquiry') {\n    let systematicInquiryTitle = args.data.title;\n    let systematicInquiryDescription = args.data.description;\n    let systematicInquiryAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitSysInquiryAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            systematicInquiryTitle:\"${systematicInquiryTitle}\",\n            systematicInquiryDescription:\"${systematicInquiryDescription}\",\n            systematicInquiryAttachment:\"${systematicInquiryAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'examination') {\n    let examinationGeneral = args.data.general;\n    let examinationArea = args.data.area;\n    let examinationType = args.data.type;\n    let examinationMeasure = args.data.measure;\n    let examinationValue = args.data.value;\n    let examinationDescription = args.data.description;\n    let examinationFollowUp = args.data.followUp;\n    let examinationAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitExaminationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            examinationGeneral:\"${examinationGeneral}\",\n            examinationArea:\"${examinationArea}\",\n            examinationType:\"${examinationType}\",\n            examinationMeasure:\"${examinationMeasure}\",\n            examinationValue:\"${examinationValue}\",\n            examinationDescription:\"${examinationDescription}\",\n            examinationFollowUp:${examinationFollowUp},\n            examinationAttachment:\"${examinationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'investigation') {\n    let investigationTitle = args.data.title;\n    let investigationType = args.data.type;\n    let investigationDescription = args.data.description;\n    let investigationAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitInvestigationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            investigationTitle:\"${investigationTitle}\",\n            investigationType:\"${investigationType}\",\n            investigationDescription:\"${investigationDescription}\",\n            investigationAttachment:\"${investigationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'diagnosis') {\n    let diagnosisTitle = args.data.title;\n    let diagnosisType = args.data.type;\n    let diagnosisDescription = args.data.description;\n    let diagnosisAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitDiagnosisAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            diagnosisTitle:\"${diagnosisTitle}\",\n            diagnosisType:\"${diagnosisType}\",\n            diagnosisDescription:\"${diagnosisDescription}\",\n            diagnosisAttachment:\"${diagnosisAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'treatment') {\n    let treatmentType = args.data.type;\n    let treatmentTitle = args.data.title;\n    let treatmentDescription = args.data.description;\n    let treatmentDose = args.data.dose;\n    let treatmentFrequency = args.data.frequency;\n    let treatmentAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitTreatmentAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${treatmentType}\",\n            treatmentTitle:\"${treatmentTitle}\",\n            treatmentDescription:\"${treatmentDescription}\",\n            treatmentDose:\"${treatmentDose}\",\n            treatmentFrequency:\"${treatmentFrequency}\",\n            treatmentAttachment:\"${treatmentAttachment}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'billing') {\n    let billingAmount = args.data.amount;\n    let billingPaid = args.data.paid;\n    let billingTitle = args.data.title;\n    let billingType = args.data.type;\n    let billingDescription = args.data.description;\n    let billingNotes = args.data.notes;\n    let billingAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitBillingAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${billingTitle}\",\n            billingType:\"${billingType}\",\n            billingDescription:\"${billingDescription}\",\n            billingAmount:${billingAmount},\n            billingPaid:${billingPaid},\n            billingAttachment:\"${billingAttachment}\",\n            billingNotes:\"${billingNotes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'complaint') {\n        // console.log('...resData...',resData.data.addVisitComplaintAttachment);\n      }\n      if (field === 'survey') {\n        // console.log('...resData...',resData.data.addVisitSurveyAttachment);\n      }\n      if (field === 'systematicInquiry') {\n        // console.log('...resData...',resData.data.addVisitSysInquiryAttachment);\n      }\n      if (field === 'examination') {\n        // console.log('...resData...',resData.data.addVisitExaminationAttachment);\n      }\n      if (field === 'investigation') {\n        // console.log('...resData...',resData.data.addVisitInvestigationAttachment);\n      }\n      if (field === 'diagnosis') {\n        // console.log('...resData...',resData.data.addVisitDiagnosisAttachment);\n      }\n      if (field === 'treatment') {\n        // console.log('...resData...',resData.data.addVisitTreatmentAttachment);\n      }\n      if (field === 'billing') {\n        // console.log('...resData...',resData.data.addVisitBillingAttachment);\n      }\n\n      let responseAlert = '...add attachment success!...';\n      let error = null;\n\n      if (field === 'complaint') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'survey') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'systematicInquiry') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'examination') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'investigation') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'diagnosis') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'treatment') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'billing') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'complaint') {\n        this.props.updateVisit(resData.data.addVisitComplaintAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitComplaintAttachment,\n          activityA: `addVisitComplaintAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'survey') {\n        this.props.updateVisit(resData.data.addVisitSurveyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitSurveyAttachment,\n          activityA: `addVisitSurveyAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'systematicInquiry') {\n        this.props.updateVisit(resData.data.addVisitSysInquiryAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitSysInquiryAttachment,\n          activityA: `addVisitSysInquiryAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'examination') {\n        this.props.updateVisit(resData.data.addVisitExaminationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitExaminationAttachment,\n          activityA: `addVisitExaminationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'investigation') {\n        this.props.updateVisit(resData.data.addVisitInvestigationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitInvestigationAttachment,\n          activityA: `addVisitInvestigationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'diagnosis') {\n        this.props.updateVisit(resData.data.addVisitDiagnosisAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitDiagnosisAttachment,\n          activityA: `addVisitDiagnosisAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'treatment') {\n        this.props.updateVisit(resData.data.addVisitTreatmentAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitTreatmentAttachment,\n          activityA: `addVisitTreatmentAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'billing') {\n        this.props.updateVisit(resData.data.addVisitBillingAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitBillingAttachment,\n          activityA: `addVisitBillingAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ndeleteAttachment = (args) => {\n  console.log('...deleting attachment...', args.type);\n  this.context.setUserAlert('...adding attachment...');\n  // this.setState({isLoading: true})\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const field = args.type;\n  const attachment = args.attachment;\n  const item = args.item;\n\n  let requestBody;\n\n  if (field === 'complaint') {\n    let complaintTitle = item.title;\n    let complaintDescription = item.description;\n    let complaintAnamnesis = item.anamnesis;\n    let complaintAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitComplaintAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${complaintTitle}\",\n            complaintDescription:\"${complaintDescription}\",\n            complaintAnamnesis:\"${complaintAnamnesis}\",\n            complaintAttachment:\"${complaintAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'survey') {\n    let surveyTitle = item.title;\n    let surveyDescription = item.description;\n    let surveyAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitSurveyAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            surveyTitle:\"${surveyTitle}\",\n            surveyDescription:\"${surveyDescription}\",\n            surveyAttachment:\"${surveyAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'systematicInquiry') {\n    let systematicInquiryTitle = item.title;\n    let systematicInquiryDescription = item.description;\n    let systematicInquiryAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitSysInquiryAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            systematicInquiryTitle:\"${systematicInquiryTitle}\",\n            systematicInquiryDescription:\"${systematicInquiryDescription}\",\n            systematicInquiryAttachment:\"${systematicInquiryAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'examination') {\n    let examinationGeneral = item.general;\n    let examinationArea = item.area;\n    let examinationType = item.type;\n    let examinationMeasure = item.measure;\n    let examinationValue = item.value;\n    let examinationDescription = item.description;\n    let examinationFollowUp = item.followUp;\n    let examinationAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitExaminationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            examinationGeneral:\"${examinationGeneral}\",\n            examinationArea:\"${examinationArea}\",\n            examinationType:\"${examinationType}\",\n            examinationMeasure:\"${examinationMeasure}\",\n            examinationValue:\"${examinationValue}\",\n            examinationDescription:\"${examinationDescription}\",\n            examinationFollowUp:${examinationFollowUp},\n            examinationAttachment:\"${examinationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'investigation') {\n    let investigationTitle = item.title;\n    let investigationType = item.type;\n    let investigationDescription = item.description;\n    let investigationAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitInvestigationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            investigationTitle:\"${investigationTitle}\",\n            investigationType:\"${investigationType}\",\n            investigationDescription:\"${investigationDescription}\",\n            investigationAttachment:\"${investigationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'diagnosis') {\n    let diagnosisTitle = item.title;\n    let diagnosisType = item.type;\n    let diagnosisDescription = item.description;\n    let diagnosisAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitDiagnosisAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            diagnosisTitle:\"${diagnosisTitle}\",\n            diagnosisType:\"${diagnosisType}\",\n            diagnosisDescription:\"${diagnosisDescription}\",\n            diagnosisAttachment:\"${diagnosisAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'treatment') {\n\n    let treatmentType = item.type;\n    let treatmentTitle = item.title;\n    let treatmentDescription = item.description;\n    let treatmentDose = item.dose;\n    let treatmentFrequency = item.frequency;\n    let treatmentAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitTreatmentAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${treatmentType}\",\n            treatmentTitle:\"${treatmentTitle}\",\n            treatmentDescription:\"${treatmentDescription}\",\n            treatmentDose:\"${treatmentDose}\",\n            treatmentFrequency:\"${treatmentFrequency}\",\n            treatmentAttachment:\"${treatmentAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'billing') {\n\n    let billingTitle = item.title;\n    let billingType = item.type;\n    let billingDescription = item.description;\n    let billingAmount = item.amount;\n    let billingPaid = item.paid;\n    let billingAttachment = attachment;\n    let billingNotes = item.notes;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitBillingAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${billingTitle}\",\n            billingType:\"${billingType}\",\n            billingDescription:\"${billingDescription}\",\n            billingAmount:${billingAmount},\n            billingPaid:${billingPaid},\n            billingAttachment:\"${billingAttachment}\",\n            billingNotes:\"${billingNotes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'complaint') {\n        // console.log('...resData...',resData.data.deleteVisitComplaintAttachment);\n      }\n      if (field === 'survey') {\n        // console.log('...resData...',resData.data.deleteVisitSurveyAttachment);\n      }\n      if (field === 'systematicInquiry') {\n        // console.log('...resData...',resData.data.deleteVisitSysInquiryAttachment);\n      }\n      if (field === 'examination') {\n        // console.log('...resData...',resData.data.deleteVisitExaminationAttachment);\n      }\n      if (field === 'investigation') {\n        // console.log('...resData...',resData.data.deleteVisitInvestigationAttachment);\n      }\n      if (field === 'diagnosis') {\n        // console.log('...resData...',resData.data.deleteVisitDiagnosisAttachment);\n      }\n      if (field === 'treatment') {\n        // console.log('...resData...',resData.data.deleteVisitTreatmentAttachment);\n      }\n      if (field === 'billing') {\n        // console.log('...resData...',resData.data.deleteVisitBillingAttachment);\n      }\n\n      let responseAlert = '...delete attachment success!...';\n      let error = null;\n\n      if (field === 'complaint') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'survey') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'systematicInquiry') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'examination') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'investigation') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'diagnosis') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'treatment') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'billing') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'complaint') {\n        this.props.updateVisit(resData.data.deleteVisitComplaintAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitComplaintAttachment,\n          activityA: `deleteVisitComplaintAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'survey') {\n        this.props.updateVisit(resData.data.deleteVisitSurveyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitSurveyAttachment,\n          activityA: `deleteVisitSurveyAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'systematicInquiry') {\n        this.props.updateVisit(resData.data.deleteVisitSysInquiryAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitSysInquiryAttachment,\n          activityA: `deleteVisitSysInquiryAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'examination') {\n        this.props.updateVisit(resData.data.deleteVisitExaminationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitExaminationAttachment,\n          activityA: `deleteVisitExaminationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'investigation') {\n        this.props.updateVisit(resData.data.deleteVisitInvestigationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitInvestigationAttachment,\n          activityA: `deleteVisitInvestigationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'diagnosis') {\n        this.props.updateVisit(resData.data.deleteVisitDiagnosisAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitDiagnosisAttachment,\n          activityA: `deleteVisitDiagnosisAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'treatment') {\n        this.props.updateVisit(resData.data.deleteVisitTreatmentAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitTreatmentAttachment,\n          activityA: `deleteVisitTreatmentAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'billing') {\n        this.props.updateVisit(resData.data.deleteVisitBillingAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitBillingAttachment,\n          activityA: `deleteVisitBillingAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'visit/'+visitId+'/'+field+'/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/'+field+'/attachments/';\n      const filename = attachment;\n      const filename2 = filename.replace(filePath2,'');\n      console.log('1:',filePath);\n      console.log('2:',filename);\n      console.log('3:',filename2);\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachment..')\n      console.log('...s3 deleting attachment..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `${field} attachment`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: `${field} attachment`,\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename2, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateVisitSingleField(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateVisitSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.updateVisitSingleField)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.updateVisitSingleField,\n        activityA: `updateVisitSingleField?activityId:${activityId},visitId:${visitId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.updateVisitSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ncompleteVisit = () => {\n  console.log('...completing visit...');\n  this.context.setUserAlert('...completing visit...')\n  this.setState({isLoading: true})\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n      mutation {completeVisitById(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\"\n      )\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.completeVisitById);\n      let responseAlert = '...visit completed!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.completeVisitById)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.completeVisitById,\n        activityA: `completeVisitById?activityId:${activityId},visitId:${visitId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.completeVisitById;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {!this.props.visit && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={3} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'consultant')}>Consultants</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'complaint')}>Complaints</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'survey')}>Survey</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'systematicInquiry')}>Systematic Inquiry</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'vitals')}>Vitals</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'examination')}>Examination</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'investigation')}>investigation</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"10\" onClick={this.menuSelect.bind(this, 'diagnosis')}>diagnosis</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"11\" onClick={this.menuSelect.bind(this, 'treatment')}>treatment</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"12\" onClick={this.menuSelect.bind(this, 'billing')}>billing</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"13\" onClick={this.menuSelect.bind(this, 'vigilance')}>vigilance</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"14\" onClick={this.menuSelect.bind(this, 'image')}>images</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"15\" onClick={this.menuSelect.bind(this, 'file')}>files</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'consultant' && (\n                  <FilterUserForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'complaint' && (\n                  <FilterComplaintForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'survey' && (\n                  <FilterSurveyForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'systematicInquiry' && (\n                  <FilterSystematicInquiryForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'vitals' && (\n                  <FilterVitalsForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'examination' && (\n                  <FilterExaminationForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'investigation' && (\n                  <FilterInvestigationForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'diagnosis' && (\n                  <FilterDiagnosisForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'treatment' && (\n                  <FilterTreatmentForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'billing' && (\n                  <FilterBillingForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'vigilance' && (\n                  <h3>Filter vigilance form</h3>\n                )}\n                {this.state.menuSelect === 'image' && (\n                  <FilterImageForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'file' && (\n                  <FilterFileForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n            )}\n          </Col>\n\n          {this.props.visit && (\n            <Col md={9} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdatePatientSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n                <Tab.Content className=\"tabContent\">\n                  <Tab.Pane eventKey=\"1\">\n                    Visit Basic:\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.title}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Type:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.type}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'type')}>Edit</Button>\n                        <p className=\"listGroupText\">subType:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.subType}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'subType')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <p className=\"listGroupText\">Time:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.time}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'time')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Patient:</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Name:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.patient.title}</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.patient.name}</p>\n                        <Link\n                          to={{\n                            pathname: \"/patients\",\n                            state: {patient: this.props.visit.patient._id}\n                          }}\n                        >Go!</Link>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.props.visit.patient._id}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Appointment:</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.appointment.title}</p>\n                        <Link\n                          to={{\n                            pathname: \"/appointments\",\n                            state: {appointment: this.props.visit.appointment._id}\n                          }}\n                        >Go!</Link>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.props.visit.appointment._id}</p>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"2\">\n                    Visit Admin\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Id:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit._id}</p>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"3\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Consultant List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'consultant')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'consultant' &&\n                      this.state.users && (\n                        <AddUserForm\n                          onConfirm={this.submitAddUserForm}\n                          onCancel={this.cancelAdd}\n                          filter={this.state.filter}\n                          users={this.state.users}\n                        />\n                    )}\n                    <UserList\n                      filter={this.state.filter}\n                      authId={this.context.activityId}\n                      users={this.props.visit.consultants}\n                      visitPage={true}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteConsultant}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"4\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Complaint List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'complaint')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'complaint' && (\n                        <AddComplaintForm\n                          onConfirm={this.submitAddComplaintForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitComplaintList\n                      filter={this.state.filter}\n                      complaints={this.props.visit.complaints}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteComplaint}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"5\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Survey List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'survey')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'survey' && (\n                        <AddSurveyForm\n                          onConfirm={this.submitAddSurveyForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitSurveyList\n                      filter={this.state.filter}\n                      surveys={this.props.visit.surveys}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteSurvey}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"6\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit SystematicInquiry List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'systematicInquiry')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'systematicInquiry' && (\n                        <AddSystematicInquiryForm\n                          onConfirm={this.submitAddSystematicInquiryForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitSystematicInquiryList\n                      filter={this.state.filter}\n                      systematicInquiry={this.props.visit.systematicInquiry}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteSystematicInquiry}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"7\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Vitals List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'vitals')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'vitals' && (\n                        <AddVitalsForm\n                          onConfirm={this.submitAddVitalsForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitVitalsList\n                      filter={this.state.filter}\n                      vitals={this.props.visit.vitals}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteVitals}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"8\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Examination List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'examination')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'examination' && (\n                        <AddExaminationForm\n                          onConfirm={this.submitAddExaminationForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitExaminationList\n                      filter={this.state.filter}\n                      examination={this.props.visit.examination}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteExamination}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"9\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Investigation List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'investigation')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'investigation' && (\n                        <AddInvestigationForm\n                          onConfirm={this.submitAddInvestigationForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitInvestigationList\n                      filter={this.state.filter}\n                      investigation={this.props.visit.investigation}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteInvestigation}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"10\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Diagnosis List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'diagnosis')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'diagnosis' && (\n                        <AddDiagnosisForm\n                          onConfirm={this.submitAddDiagnosisForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitDiagnosisList\n                      filter={this.state.filter}\n                      diagnosis={this.props.visit.diagnosis}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteDiagnosis}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"11\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Treatment List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'treatment')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'treatment' && (\n                        <AddTreatmentForm\n                          onConfirm={this.submitAddTreatmentForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitTreatmentList\n                      filter={this.state.filter}\n                      treatment={this.props.visit.treatment}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteTreatment}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"12\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Billing List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'billing')}>Add</Button>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.completeVisit}>Complete Visit</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'billing' && (\n                        <AddBillingForm\n                          onConfirm={this.submitAddBillingForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitBillingList\n                      filter={this.state.filter}\n                      billing={this.props.visit.billing}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteBilling}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"13\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Vigilance List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'vigilance')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'vigilance' && (\n                        <AddVigilanceForm\n                          onConfirm={this.submitAddVigilanceForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitVigilanceList\n                      filter={this.state.filter}\n                      vigilance={this.props.visit.vigilance}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteVigilance}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"14\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Image List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'image' && (\n                        <AddImageForm\n                          onConfirm={this.submitAddImageForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitImageList\n                      filter={this.state.filter}\n                      images={this.props.visit.images}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteImage}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"15\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit File List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'file' && (\n                        <AddFileForm\n                          onConfirm={this.submitAddFileForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitFileList\n                      filter={this.state.filter}\n                      files={this.props.visit.files}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteFile}\n                    />\n                  </Tab.Pane>\n\n                </Tab.Content>\n\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n}\n\n}\n\nexport default VisitDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst VisitSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>date</option>\n        <option>time</option>\n        <option>title</option>\n        <option>type</option>\n        <option>subType</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default VisitSearchForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport CreateVisitForm from '../../components/forms/create/CreateVisitForm';\nimport VisitList from '../../components/lists/visit/VisitList';\nimport PatientList from '../../components/lists/patient/PatientList';\nimport AppointmentList from '../../components/lists/appointment/AppointmentList';\n// import SearchAppointmentList from '../../components/lists/appointment/SearchAppointmentList';\nimport VisitDetail from '../../components/details/VisitDetail';\n\nimport FilterVisitForm from '../../components/forms/filter/FilterVisitForm';\nimport VisitSearchForm from '../../components/forms/search/VisitSearchForm';\nimport AppointmentSearchForm from '../../components/forms/search/AppointmentSearchForm';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './visit.css';\n\nclass VisitPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    patients: null,\n    appointments: null,\n    canDelete: false,\n    visits: null,\n    searchVisits: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    selectedVisit: null,\n    creatingVisit: false,\n    newVisit: null,\n    calendarVisits: null,\n    fromGoLink: null,\n    goLinkId: null,\n    sublistSearch: false,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all visits component mounted...');\n\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    if (this.props.location.state) {\n      if (this.props.location.state.visit) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.visit\n        })\n      }\n    }\n    this.getAllVisits(seshStore);\n    this.getAllAppointments(seshStore);\n    // this.getAllPatients(seshStore);\n    if (this.props.selectedVisit) {\n      console.log('...found existing visit selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedVisit: this.props.selectedVisit\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllVisits (args) {\n  console.log('...retrieving all visits...');\n  this.context.setUserAlert('...retrieving all visits...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllVisits(\n        activityId:\"${activityId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllVisits);\n      let responseAlert = '...all visits retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkVisit = resData.data.getAllVisits.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedVisit: goLinkVisit,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        visits: resData.data.getAllVisits,\n        activityA: `getAllVisits?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.parseForCalendar(resData.data.getAllVisits)\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\ngetAllAppointments (args) {\n  console.log('...retrieving all appointments...');\n  this.context.setUserAlert('...retrieving all appointments...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllAppointments(\n        activityId:\"${activityId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllAppointments);\n      let responseAlert = '...all appointments retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        appointments: resData.data.getAllAppointments,\n        activityA: `getAllAppointments?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n        activityA: `getAllPatients?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchVisits = (event) => {\n  event.preventDefault();\n  console.log('...searching visits...');\n  this.context.setUserAlert('...searching visits...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'date') {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n      query {getVisitsByFieldRegex(\n        activityId:\"${activityId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getVisitsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getVisitsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getVisitsByField);\n      }\n\n      let responseAlert = '...visit search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchVisits: resData.data.getVisitsByFieldRegex,\n          activityA: `getVisitsByFieldRegex?activityId:${activityId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchVisits: resData.data.getVisitsByField,\n          activityA: `getVisitsByField?activityId:${activityId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nonStartCreateNewVisit = () => {\n  this.setState({\n    creatingVisit: true\n  })\n}\ncancelCreateNewVisit = () => {\n  this.setState({\n    creatingVisit: false,\n    selectedAppointment: null\n  })\n}\nsubmitCreateNewVisitForm = (event) => {\n  event.preventDefault();\n  console.log('...creating new visit...');\n  this.context.setUserAlert('...creating new visit...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.state.selectedAppointment._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const subType = event.target.subType.value;\n\n  if (\n      title.trim().length === 0 ||\n      type.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    return;\n  }\n\n  const tooEarly = moment().format('YYYY-MM-DD') < moment.unix(this.state.selectedAppointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD');\n  const tooLate = moment().format('YYYY-MM-DD') > moment.unix(this.state.selectedAppointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD');\n\n  if (tooEarly === true) {\n    console.log('...appointment for this visit is in the future...please wait or create a new appointment...');\n    this.context.setUserAlert('...appointment for this visit is in the future...please wait or create a new appointment...')\n    this.setState({isLoading: false})\n    return\n  }\n  if (tooLate === true) {\n    console.log('...appointment for this visit has already gone... please create a new appointment...');\n    this.context.setUserAlert('...appointment for this visit has already gone... please create a new appointment...')\n    this.setState({isLoading: false})\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {createVisit(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        visitInput:{\n          title:\"${title}\",\n          type:\"${type}\",\n          subType:\"${subType}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      console.log('...resData...',resData.data.createVisit);\n      let responseAlert = '...create visit success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        showDetails: true,\n        creatingVisit: false,\n        selectedVisit: resData.data.createVisit,\n        newVisit: resData.data.createVisit,\n        tabKey: 'detail',\n        activityA: `createAppointment?activityId:${activityId},visitId:${resData.data.createVisit._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'))\n      this.getAllVisits(seshStore);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nselectAppointment = (args) => {\n  this.setState({\n    selectedAppointment: args\n  })\n}\n\nshowDetails = (args) => {\n  this.setState({\n    showDetails: true,\n    selectedVisit: args,\n    overlay: false,\n    tabKey: 'detail'\n  })\n  this.props.selectVisit(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\nupdateVisit = (args) => {\n  console.log('...updating selected visit...');\n  this.setState({\n    selectedVisit: args\n  })\n  this.props.selectVisit(args);\n}\n\ndeleteVisit = (args) => {\n  console.log('...deleteing visit...');\n  this.context.setUserAlert('...deleteing visit...')\n\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitById(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitById);\n      let responseAlert = '...delete visit success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteVisitById?activityId:${activityId},visitId:${visitId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllVisits({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing visits for calendar...');\n  let calendarVisits = args.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        title: x.title,\n        type: x.type,\n        date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n        time: x.time,\n        subType: x.subType,\n      }\n    }))\n    this.setState({\n      calendarVisits: calendarVisits\n    })\n}\n\nviewCalendarEvent = (args) => {\n  console.log('...viewing calendar visit...');\n  const visit = this.state.visits.filter(x => x._id === args.event.extendedProps.props._id)[0];\n  this.setState({\n    overlay: true,\n    overlayStatus: {type: 'calendarVisit', data: visit}\n  })\n}\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\nstartSublistSearch = () => {\n  this.setState({\n    sublistSearch: true\n  })\n}\ncancelSublistSearch = () => {\n  this.setState({\n    sublistSearch: false,\n  })\n  this.getAllAppointments({activityId: this.context.activityId,token: this.context.token});\n}\nsubmitSublistSearchForm = (event) => {\n  event.preventDefault();\n  console.log('...searching appointments...');\n  this.context.setUserAlert('...searching appointments...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'date' ||\n      field === 'inProgress' ||\n      field === 'attended' ||\n      field === 'important' ||\n      field === 'important'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getAppointmentsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n      query {getAppointmentsByField(\n        activityId:\"${activityId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getAppointmentsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getAppointmentsByField);\n      }\n\n      let responseAlert = '...appointment search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          appointments: resData.data.getAppointmentsByFieldRegex,\n          activityA: `getAppointmentsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          appointments: resData.data.getAppointmentsByField,\n          activityA: `getAppointmentsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        selectCalendarDetails={this.showDetails}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n          <h1>Visit List</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col md={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n                {this.context.role === 'Nurse' && (\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                  </Nav.Item>\n                )}\n                {this.context.role === 'Doctor' && (\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                  </Nav.Item>\n                )}\n\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterVisitForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.visits && (\n            <Col md={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content>\n                <Tab.Pane eventKey=\"list\">\n\n                <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                  <Tab eventKey=\"1\" title=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                    <VisitList\n                      filter={this.state.filter}\n                      visits={this.state.visits}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      showDetails={this.showDetails}\n                      onDelete={this.deleteVisit}\n                    />\n                  </Tab>\n                  <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                    <h3>Calendar</h3>\n                    <FullCalendar\n                      intitialView=\"dayGridMonth\"\n                      plugins={[dayGridPlugin]}\n                      events={this.state.calendarVisits}\n                      eventClick={this.viewCalendarEvent}\n                    />\n                  </Tab>\n                </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Visit</h3>\n                  <Row className=\"userSearchRow\">\n                    <VisitSearchForm\n                      onConfirm={this.searchVisits}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchVisits && (\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol} className=\"centered_btn\">Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchVisits && (\n                      <VisitList\n                        filter={this.state.filter}\n                        visits={this.state.searchVisits}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedVisit && (\n                    <VisitDetail\n                      visit={this.state.selectedVisit}\n                      updateVisit={this.updateVisit}\n                    />\n                )}\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"new\">\n                {this.state.creatingVisit === false && (\n                  <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={this.onStartCreateNewVisit}>Create New</Button>\n                )}\n                {this.state.creatingVisit === true &&\n                  this.state.appointments &&\n                  !this.state.selectedAppointment && (\n                  <Col className=\"patientSubListCol\">\n                  <Row className=\"patientSubListRow\">\n                  <Button variant=\"outline-secondary\" className=\"patientSublistSearchBtn\" onClick={this.startSublistSearch}>Search</Button>\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  {this.state.sublistSearch === true && (\n                    <AppointmentSearchForm\n                      onCancel={this.cancelSublistSearch}\n                      onConfirm={this.submitSublistSearchForm}\n                    />\n                  )}\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  <AppointmentList\n                    filter={this.state.filter}\n                    appointments={this.state.appointments}\n                    authId={this.context.activityId}\n                    onSelect={this.selectAppointment}\n                    visitPage={true}\n                  />\n                  </Row>\n\n                  </Col>\n                )}\n                {this.state.creatingVisit === true &&\n                  this.state.selectedAppointment && (\n                  <Row>\n                    <CreateVisitForm\n                      onConfirm={this.submitCreateNewVisitForm}\n                      onCancel={this.cancelCreateNewVisit}\n                      appointment={this.state.selectedAppointment}\n                    />\n                  </Row>\n                )}\n                {this.state.newVisit && (\n                  <Row>\n                    <h3>Review New Visit {this.state.newVisit._id}</h3>\n                  </Row>\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default VisitPage;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport AlertBox from './components/alertBox/AlertBox';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport LandingPage from './pages/landing/Landing';\nimport HomePage from './pages/landing/Home';\nimport MyProfilePage from './pages/profile/Profile';\nimport LoginPage from './pages/auth/Login';\nimport SignupPage from './pages/auth/Signup';\nimport PasswordResetPage from './pages/auth/PasswordReset';\nimport StaffPage from './pages/staff/Staff';\nimport PatientPage from './pages/patient/Patients';\nimport AppointmentPage from './pages/appointment/Appointment';\nimport VisitPage from './pages/visit/Visit';\n\nimport AuthContext from './context/auth-context';\nimport io from 'socket.io-client';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    activityId: null,\n    role: null,\n    context: this.context,\n    sessionStorageAuth: JSON.parse(sessionStorage.getItem('logInfo')),\n    sessionCookiePresent: false,\n    passwordResetState: 'incomplete',\n    passwordResetMessage: '...',\n    userAlert: null,\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    selectedVisit: null,\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.sessionStorageAuth = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.socket = io('http://localhost:9099');\n  }\n\n  login = (token, activityId, role, tokenExpiration) => {\n    console.log('...context login...');\n    this.setState({\n      token: token,\n      activityId: activityId,\n      role: role,\n      sessionStorageAuth: {\n        token: token,\n        activityId: activityId,\n        role: role,\n        tokenExpiration: tokenExpiration\n      }\n    });\n    this.sessionStorageAuth = {\n      token: token,\n      activityId: activityId,\n      role: role,\n      tokenExpiration: tokenExpiration\n    }\n    this.context.token = token;\n    this.context.activityId = activityId;\n    this.context.role = role;\n    this.userOnline();\n  };\n\n  logout = () => {\n      this.logout2();\n  };\n\n  componentDidMount() {\n    console.log('...app component mounted...');\n    if (sessionStorage.getItem('logInfo') && this.state.token === null) {\n      console.log('...sessionStorageFound...');\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n      this.login(\n        seshStore.token,\n        seshStore.activityId,\n        seshStore.role,\n        seshStore.tokenExpiration,\n      )\n    }\n    if (!this.sessionStorageAuth) {\n      console.log('...noSessionStorageFound...');\n    }\n    this.socket.emit('unauthorizedClientConnect');\n    console.log(\"socket listening....\");\n    // this.userOnline();\n    this.socket.on('test', function(data) {\n      console.log(\"testing...\",data);\n    });\n  }\n\n  componentWillUnmount() {\n    console.log('...app component un-mounting...');\n  }\n\n  logout2 () {\n    console.log('...logging you out...');\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n        query{logout(\n          activityId:\"${activityId}\")\n        {_id,loggedIn}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        this.setState({\n           token: null,\n           activityId: null,\n           role: null,\n           sessionCookiePresent: null,\n           sessionStorageAuth: null,\n        });\n        this.sessionStorageAuth = null;\n        sessionStorage.clear();\n        this.context = {\n          token: null,\n          activityId: null,\n          activityA: null,\n          activityUser: null,\n          role: null,\n          userId: null,\n          user: {},\n          users:[],\n          selectedUser: null,\n          selectedPatient: null,\n          selectedAppointment: null,\n          selectedVisit: null,\n          sender: null,\n          receiver: null,\n          userAlert: \"...\",\n          file: null,\n          fancyDate: null,\n          login: this.login,\n          logout: this.logout,\n          setUserAlert: this.setUserAlert,\n          userOnline: this.userOnline,\n        };\n        this.setState({userAlert: '...logout success...'});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  userOnline = () => {\n    console.log('...domesticating socket client...');\n    this.socket.emit('msg_subscribe', {user: this.context.activityId, room:'msg'+this.context.activityId});\n  }\n\n  passwordReset = (event) => {\n    event.preventDefault();\n    console.log('...reset password submission...');\n      const params = event.target.formGridParams.value.split('@');\n      const verificationCode = params[1];\n      const userId = params[0];\n      const password = event.target.formGridPassword.value;\n      // console.log('params',params);\n\n      const requestBody = {\n        query:`\n          mutation {resetUserPassword(\n            userId:\"${userId}\",\n            verification:\"${verificationCode}\",\n            userInput:{\n              password:\"${password}\"\n            })\n            {_id,password,verification{verified}}}\n        `};\n\n      fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log('passwordReset',resData);\n          if (resData.errors) {\n            this.setState({passwordResetState: 'error', passwordResetMessage: resData.errors[0].message+'..if not, try making a new reset request..' })\n          } else {\n            this.setState({passwordResetState: 'complete' })\n          }\n\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({passwordResetState: 'error', passwordResetMessage: err })\n        });\n  }\n  cancelPasswordReset = () => {\n    this.setState({passwordResetState: 'cancelled'})\n  }\n\n  setUserAlert = (args) => {\n    // console.log('...setUserAlert...',args);\n    this.setState({userAlert: args})\n  }\n\n  selectUser = (args) => {\n    console.log('...updating top-level selected user...');\n    this.setState({\n      selectedUser: args\n    })\n  }\n  selectPatient = (args) => {\n    console.log('...updating top-level selected patient...');\n    this.setState({\n      selectedPatient: args\n    })\n  }\n  selectAppointment = (args) => {\n    console.log('...updating top-level selected appointment...');\n    this.setState({\n      selectedAppointment: args\n    })\n  }\n  selectVisit = (args) => {\n    console.log('...updating top-level selected visit...');\n    this.setState({\n      selectedVisit: args\n    })\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              activityId: this.state.activityId,\n              activityA: null,\n              activityUser: null,\n              role: this.state.role,\n              userId: null,\n              user: {},\n              users:[],\n              selectedUser: null,\n              selectedPatient: null,\n              selectedAppointment: null,\n              selectedVisit: null,\n              sender: null,\n              receiver: null,\n              userAlert: \"...\",\n              file: null,\n              fancyDate: null,\n              login: this.login,\n              logout: this.logout,\n              setUserAlert: this.setUserAlert,\n              userOnline: this.userOnline,\n            }}\n          >\n            <MainNavigation\n              role={this.state.role}\n            />\n            <AlertBox\n              authId={this.context.activityId}\n              alert={this.state.userAlert}\n            />\n            <main className=\"main-content\">\n              <Switch>\n\n              {this.state.sessionStorageAuth && (\n                <Redirect from=\"/login\" to=\"/home\" exact />\n              )}\n\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/home\" render={(props) => <HomePage {...props}\n                  title=\"home\"\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/profile\" render={(props) => <MyProfilePage {...props}\n                  title=\"profile\"\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/staff\" render={(props) => <StaffPage {...props}\n                  title=\"staff\"\n                  selectedUser={this.state.selectedUser}\n                  selectUser={this.selectUser}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/patients\" render={(props) => <PatientPage {...props}\n                  title=\"patients\"\n                  selectedPatient={this.state.selectedPatient}\n                  selectPatient={this.selectPatient}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/appointments\" render={(props) => <AppointmentPage {...props}\n                  title=\"appointments\"\n                  selectedAppointment={this.state.selectedAppointment}\n                  selectAppointment={this.selectAppointment}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/visits\" render={(props) => <VisitPage {...props}\n                  title=\"visits\"\n                  selectedVisit={this.state.selectedVisit}\n                  selectVisit={this.selectVisit}\n                />}/>\n              )}\n\n              {this.state.sessionStorageAuth && (\n                <Redirect from=\"/\" to=\"/home\" exact />\n              )}\n              {this.state.sessionStorageAuth && (\n                <Redirect from=\"*\" to=\"/home\" exact />\n              )}\n\n\n\n              {!this.state.sessionStorageAuth && (\n                <Route path=\"/landing\" render={(props) => <LandingPage {...props}\n                  title=\"landing\"\n                />}/>\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Route path=\"/login\" render={(props) => <LoginPage {...props}\n                  title=\"login\"\n                />}/>\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Route path=\"/signup\" render={(props) => <SignupPage {...props}\n                  title=\"signup\"\n                  setUserAlert={this.setUserAlert}\n                />}/>\n              )}\n\n              <Route path=\"/passwordReset/:params\" render={(props) => <PasswordResetPage {...props}\n                passwordReset={this.passwordReset}\n                cancelPasswordReset={this.cancelPasswordReset}\n                resetState={this.state.passwordResetState}\n                message={this.state.passwordResetMessage}\n                />}\n              />\n\n              {!this.state.sessionStorageAuth && (\n                <Redirect from=\"/home\" to=\"/landing\" exact />\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Redirect from=\"/\" to=\"/landing\" exact />\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Redirect from=\"*\" to=\"/landing\" exact />\n              )}\n\n              </Switch>\n            </main>\n\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loading.8631702d.gif\";"],"sourceRoot":""}