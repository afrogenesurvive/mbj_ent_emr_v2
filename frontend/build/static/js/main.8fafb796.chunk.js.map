{"version":3,"sources":["logo.svg","components/alertBox/AlertBox.js","context/auth-context.js","components/Navigation/MainNavigation.js","components/overlay/LoadingOverlay.js","pages/landing/Landing.js","components/items/patient/PatientItem.js","components/lists/patient/PatientList.js","components/items/appointment/AppointmentItem.js","components/lists/appointment/AppointmentList.js","pages/landing/Home.js","components/items/user/AddressItem.js","components/lists/user/UserAddressList.js","components/items/user/AttendanceItem.js","components/lists/user/UserAttendanceList.js","components/items/user/LeaveItem.js","components/lists/user/UserLeaveList.js","components/items/user/ImageItem.js","components/lists/user/UserImageList.js","components/items/patient/FileItem.js","components/lists/user/UserFileList.js","components/items/user/AppointmentItem.js","components/lists/user/UserAppointmentList.js","components/items/user/NoteItem.js","components/lists/user/UserNoteList.js","components/forms/filter/FilterAddressForm.js","components/forms/filter/FilterAttendanceForm.js","components/forms/filter/FilterLeaveForm.js","components/forms/filter/FilterImageForm.js","components/forms/filter/FilterFileForm.js","components/forms/filter/FilterAppointmentForm.js","components/forms/filter/FilterNoteForm.js","components/forms/add/UpdateUserSingleFieldForm.js","components/forms/add/AddAddressForm.js","components/forms/add/AddAttendanceForm.js","components/forms/add/AddLeaveForm.js","components/forms/add/AddNoteForm.js","components/forms/add/AddImageForm.js","components/forms/add/AddFileForm.js","pages/profile/Profile.js","components/forms/auth/LoginForm.js","components/forms/auth/VerifyUserForm.js","components/forms/auth/ForgotPasswordForm.js","pages/auth/Login.js","components/forms/auth/SignupForm.js","pages/auth/Signup.js","components/forms/auth/ResetPasswordForm.js","pages/auth/PasswordReset.js","components/items/user/UserItem.js","components/lists/user/UserList.js","components/lists/user/SearchUserList.js","components/details/UserDetail.js","components/forms/filter/FilterUserForm.js","components/forms/search/UserSearchForm.js","pages/staff/Staff.js","components/forms/create/CreatePatientForm.js","components/lists/patient/SearchPatientList.js","components/lists/patient/PatientAddressList.js","components/items/patient/NextOfKinItem.js","components/lists/patient/PatientNextOfKinList.js","components/items/patient/AttachmentItem.js","components/lists/patient/PatientAttachmentList.js","components/items/patient/AllergyItem.js","components/lists/patient/PatientAllergyList.js","components/items/patient/MedicationItem.js","components/lists/patient/PatientMedicationList.js","components/items/patient/ImageItem.js","components/lists/patient/PatientImageList.js","components/lists/patient/PatientFileList.js","components/items/patient/NoteItem.js","components/lists/patient/PatientNoteList.js","components/items/patient/TagItem.js","components/lists/patient/PatientTagList.js","components/items/visit/VisitItem.js","components/lists/visit/VisitList.js","components/forms/filter/FilterAllergyForm.js","components/forms/filter/FilterMedicationForm.js","components/forms/filter/FilterNextOfKinForm.js","components/forms/filter/FilterVisitForm.js","components/forms/filter/FilterTagForm.js","components/forms/add/UpdatePatientSingleFieldForm.js","components/forms/add/AddTagForm.js","components/forms/add/AddNextOfKinForm.js","components/forms/add/AddAllergyForm.js","components/forms/add/AddMedicationForm.js","components/forms/add/AddAttachmentForm.js","components/details/PatientDetail.js","components/forms/filter/FilterPatientForm.js","components/forms/search/PatientSearchForm.js","pages/patient/Patients.js","components/forms/create/CreateAppointmentForm.js","components/items/appointment/NoteItem.js","components/lists/appointment/AppointmentNoteList.js","components/items/appointment/TagItem.js","components/lists/appointment/AppointmentTagList.js","components/forms/add/AddUserForm.js","components/details/AppointmentDetail.js","components/forms/search/AppointmentSearchForm.js","pages/appointment/Appointment.js","components/forms/create/CreateVisitForm.js","components/items/visit/ComplaintItem.js","components/lists/visit/VisitComplaintList.js","components/items/visit/SurveyItem.js","components/lists/visit/VisitSurveyList.js","components/items/visit/SystematicInquiryItem.js","components/lists/visit/VisitSystematicInquiryList.js","components/items/visit/VitalsItem.js","components/lists/visit/VisitVitalsList.js","components/items/visit/ExaminationItem.js","components/lists/visit/VisitExaminationList.js","components/items/visit/InvestigationItem.js","components/lists/visit/VisitInvestigationList.js","components/items/visit/DiagnosisItem.js","components/lists/visit/VisitDiagnosisList.js","components/items/visit/TreatmentItem.js","components/lists/visit/VisitTreatmentList.js","components/items/visit/BillingItem.js","components/lists/visit/VisitBillingList.js","components/items/visit/VigilanceItem.js","components/lists/visit/VisitVigilanceList.js","components/items/visit/ImageItem.js","components/lists/visit/VisitImageList.js","components/items/visit/FileItem.js","components/lists/visit/VisitFileList.js","components/forms/filter/FilterComplaintForm.js","components/forms/filter/FilterSurveyForm.js","components/forms/filter/FilterSystematicInquiryForm.js","components/forms/filter/FilterDiagnosisForm.js","components/forms/filter/FilterVitalsForm.js","components/forms/filter/FilterExaminationForm.js","components/forms/filter/FilterInvestigationForm.js","components/forms/filter/FilterTreatmentForm.js","components/forms/filter/FilterBillingForm.js","components/forms/add/AddComplaintForm.js","components/forms/add/AddSurveyForm.js","components/forms/add/AddSystematicInquiryForm.js","components/forms/add/AddVitalsForm.js","components/forms/add/AddExaminationForm.js","components/forms/add/AddInvestigationForm.js","components/forms/add/AddDiagnosisForm.js","components/forms/add/AddTreatmentForm.js","components/forms/add/AddBillingForm.js","components/forms/add/AddVigilanceForm.js","components/details/VisitDetail.js","components/forms/search/VisitSearchForm.js","pages/visit/Visit.js","App.js","serviceWorker.js","index.js","assets/loading.gif"],"names":["module","exports","AlertBox","props","alert","className","Alert","variant","React","createContext","token","activityId","activityA","activityUser","role","userId","user","users","selectedUser","selectedPatient","selectedAppointment","selectedVisit","userAlert","file","fancyDate","login","tokenExpiration","logout","setUserAlert","args","userOnline","mainNavigation","Consumer","context","Fragment","to","onClick","LoadingOverlay","Row","toggleOverlay","status","type","Button","Container","ListGroup","Item","moment","unix","data","date","substr","add","format","title","subType","time","location","important","icon","faCheckSquare","faBan","description","selectCalendarDetails","faExternalLinkAlt","bind","goLink","pathname","state","appointment","_id","visit","startDate","endDate","Image","src","loadingGif","fluid","action","target","LandingPage","overlay","overlayStatus","isGuest","this","Col","Component","PatientItem","useState","setState","deleteState","setDeleteState","key","Card","Body","Text","patient","username","faEye","canDelete","faTrashAlt","name","dob","age","gender","appointmentPage","onSelect","showDetails","homePage","onDelete","PatientList","filter","patients2","patients","propsPatients","field","value","sort","a","b","registration","x","loggedIn","active","count","map","indexOf","AppointmentItem","checkinTime","seenTime","inProgress","toString","attended","visitPage","AppointmentList","appointments2","appointments","propsAppointments","HomePage","isLoading","seshStore","todayAppointments","queue","weekImportantAppointments","recentPatients","loadHome","getAppointmentsToday","getAppointmentsImportantWeek","getRecentPatients","console","log","requestBody","query","fetch","method","body","JSON","stringify","headers","Authorization","then","res","Error","json","resData","responseAlert","error","catch","err","getAppointmentsImportantNextWeek","sessionStorage","getItem","parse","size","md","authId","contextType","AuthContext","AddressItem","address","town","country","number","street","city","parish","primary","faBatteryThreeQuarters","faBatteryEmpty","makePrimary","UserAddressList","addresses2","addresses","propsAddresses","postalCode","AttendanceItem","attendance","UserAttendanceList","attendance2","propsAttendance","attendanceItem","LeaveItem","leave","UserLeaveList","leave2","propsLeave","leaveItem","ImageItem","image","path","UserImageList","images2","images","propsImages","FileItem","PatientFileList","files2","files","propsFiles","UserAppointmentList","NoteItem","note","UserNoteList","notes2","notes","propsNotes","FilterAddressForm","Form","onSubmit","onConfirm","Group","as","controlId","Control","hidden","Label","onCancel","FilterLeaveForm","FilterImageForm","FilterFileForm","FilterAppointmentForm","FilterNoteForm","UpdateUserSingleFieldForm","placeholder","AddAddressForm","AddAttendanceForm","Date","rows","AddLeaveForm","AddNoteForm","AddImageForm","id","onChange","e","_currentValue","AddFileForm","MyProfilePage","profileLoaded","sideCol","menuSelected","adding","updateSingleField","calendarAttendance","calendarLeave","calendarAppointments","pocketVars","s3State","submitAddAddressForm","event","preventDefault","addUserAddress","logUserActivity","deleteAddress","deleteUserAddress","setAddressPrimary","setUserAddressPrimary","submitAddAttendanceForm","attendanceDate","attendanceStatus","attendanceDescription","addUserAttendance","parseForCalendar","deleteAttendance","deleteUserAttendance","submitAddLeaveForm","addUserLeave","deleteLeave","deleteUserLeave","addUseLeavce","submitAddImageForm","imageName","imageType","imagePath","fileInput","fileName","filePath","fileType","split","config","bucketName","dirName","region","accessKeyId","s3","secretAccessKey","s3Url","ReactS3Client","S3","uploadFile","statusText","addUserImage","deleteImage","deleteUserImage","filename","deleteFile","response","message","submitAddFileForm","file2Name","file2Type","file2Path","addUserFile","deleteUserFile","submitAddNoteForm","addUserNotes","deleteNote","deleteUserNote","submitUpdateSingleFieldForm","updateUserSingleField","startUpdateSingleField","cancelUpdateSingleField","toggleSideCol","menuSelect","submitFilterForm","startAdd","cancelAdd","end","viewCalendarEvent","input","extendedProps","getThisUser","getPocketVars","errors","pocketVarsParsed","getUserById","request","activityDate","addUserActivity","Tab","defaultActiveKey","Nav","Link","eventKey","FilterAttendanceForm","Content","Pane","contact","email","phone","phone2","registrationNumber","clientConnected","verification","verified","code","Tabs","defaultView","plugins","dayGridPlugin","events","eventClick","showListDetails","LoginForm","onStartVerification","onStartForgotPassword","verifyUserForm","canCancel","canConfirm","ForgotPasswordForm","LoginPage","verifying","activeTab","userSeshStore","requestingPasswordReset","showForm","submitLoginForm","password","trim","length","sessionObject","setItem","verifyUser","toggleVerification","toggleForgotPassword","requestPasswordReset","VerifyUserForm","SignupForm","SignUpPage","signupStatus","invited","submitSignupForm","addressNumber","addressStreet","addressTown","addressCity","addressParish","addressCountry","addressPostalCode","createUser","submitInviteForm","challenge","inviteCode","verifyInvitation","ResetPasswordForm","verf","PasswordResetPage","passwordResetStatus","verfCode","submitResetPasswordForm","verificationCode","resetUserPassword","UserItem","selectUser","UserList","users2","propsUsers","SearchUserList","UserDetail","updateUser","FilterUserForm","UserSearchForm","StaffPage","searchUsers","fromGoLink","goLinkId","tabKey","regex","getUsersByFieldRegex","getUsersByField","deleteUser","getAllUsers","resetFilter","goLinkUser","activeKey","CreatePatientForm","today","SearchPatientList","PatientAddressList","NextOfKinItem","nextOfKin","relation","PatientNextOfKinList","nextOfKin2","propsNextOfKin","nextOfKinItem","AttachmentItem","attachment","faEraser","item","PatientAttachmentList","attachments","AllergyItem","allergy","faPlusSquare","onAddAttachment","deleteAttachment","PatientAllergyList","allergies2","allergies","propsAllergies","MedicationItem","medication","PatientMedicationList","medication2","propsMedication","medicationItem","PatientImageList","UserFileList","PatientNoteList","TagItem","tag","PatientTagList","tags2","tags","propsTags","VisitItem","patientPage","VisitList","visits2","visits","propsVisits","FilterAllergyForm","FilterMedicationForm","FilterNextOfKinForm","FilterVisitForm","FilterTagForm","UpdatePatientSingleFieldForm","AddTagForm","AddNextOfKinForm","AddAllergyForm","AddMedicationForm","AddAttachmentForm","PatientDetail","addAttachmentForm","addAttachmentArgs","calendarVisits","patientId","updatePatient","addPatientAddress","deletePatientAddress","setPatientAddressPrimary","submitAddNextOfKinForm","addPatientNextOfKin","deleteNextOfKin","phone1","deletePatientNextOfKin","submitAddAllergyForm","addPatientAllergy","deleteAllergy","deletePatientAllergy","preAttachments","filePath2","index","preAttachment","filename2","replace","submitAddMedicationForm","addPatientMedication","deleteMedication","deletePatientMedication","startAddAttachment","cancelAddAttachment","addAttachment","allergyTitle","allergyType","allergyDescription","medicationTitle","medicationType","medicationDescription","addPatientAllergyAttachment","addPatientMedicationAttachment","allergyAttachment","medicationAttachment","deletePatientAllergyAttachment","deletePatientMedicationAttachment","addPatientImage","deletePatientImage","addPatientFile","deletePatientFile","addPatientNotes","deletePatientNote","submitAddTagForm","addPatientTags","deleteTag","deletePatientTag","updatePatientSingleField","propsPatient","expiryDate","referral","reason","physician","attendingPhysician","occupation","employer","insurance","company","policyNumber","subscriber","FilterPatientForm","PatientSearchForm","PatientPage","searchPatients","creatingPatient","newPatient","getPatientsByFieldRegex","getPatientsByField","onStartCreateNewPatient","cancelCreateNewPatient","submitCreateNewPatientForm","contactEmail","contactPhone","contactPhone2","referralDate","referralReason","referralPhysicianName","referralPhysicianPhone","referralPhysicianEmail","referralPhysicianAddress","occupationRole","occupationEmployerName","occupationEmployerEmail","occupationEmployerPhone","occupationEmployerAddress","insuranceCompany","insurancePolicyNumber","insuranceDescription","insuranceExpiryDate","insuranceSubscriberCompany","insuranceSubscriberDescription","createPatient","getAllPatients","selectPatient","deletePatient","goLinkPatient","lg","CreateAppointmentForm","AppointmentNoteList","AppointmentTagList","AddUserForm","setUser","AppointmentDetail","showAddConsultantForm","calEvent","startTime","endTime","appointmentId","updateAppointment","addAppointmentNotes","deleteAppointmentNote","addAppointmentTags","deleteAppointmentTag","submitAddUserForm","consultantId","userRole","addAppointmentConsultant","deleteConsultant","deleteAppointmentConsultant","startUpdatePatient","updateAppointmentSingleField","creator","consultants","AppointmentSearchForm","AppointmentPage","searchAppointments","creatingAppointment","newAppointment","sublistSearch","getAppointmentsByFieldRegex","getAppointmentsByField","onStartCreateNewAppointment","cancelCreateNewAppointment","submitCreateNewAppointmentForm","createAppointment","getAllAppointments","selectAppointment","deleteAppointment","startSublistSearch","cancelSublistSearch","submitSublistSearchForm","goLinkAppointment","CreateVisitForm","ComplaintItem","complaint","anamnesis","VisitComplaintList","complaints2","complaints","propsComplaints","SurveyItem","survey","VisitSurveyList","surveys2","surveys","propsSurveys","SystematicInquiryItem","systematicInquiry","VisitSystematicInquiryList","systematicInquirys2","propsSystematicInquirys","systematicInquirys","VitalsItem","vitals","pr","rr","bp1","bp2","temp","ps02","heightValue","heightUnit","weightValue","weightUnit","bmi","urine","VisitVitalsList","vitals2","propsVitals","vitalsItem","ExaminationItem","examination","general","area","measure","followUp","VisitExaminationList","examinations2","propsExaminations","examinations","InvestigationItem","investigation","VisitInvestigationList","investigations2","propsInvestigations","investigations","DiagnosisItem","diagnosis","VisitDiagnosisList","diagnosis2","propsDiagnosis","diagnoses","TreatmentItem","treatment","dose","frequency","VisitTreatmentList","treatment2","propsTreatment","treatments","BillingItem","billing","amount","paid","VisitBillingList","billing2","propsBilling","billings","VigilanceItem","vigilance","chronicIllness","diabetes","testing","comment","hbp","dyslipidemia","cad","lifestyle","weight","diet","smoking","substanceAbuse","exercise","asthma","screening","breast","prostate","cervix","colon","dental","vaccines","influenza","varicella","hpv","mmr","tetanus","pneumovax","other","VisitVigilanceList","vigilance2","propsVigilance","vigilances","VisitImageList","VisitFileList","FilterComplaintForm","FilterSurveyForm","FilterSystematicInquiryForm","FilterDiagnosisForm","FilterVitalsForm","FilterExaminationForm","FilterInvestigationForm","FilterTreatmentForm","FilterBillingForm","AddComplaintForm","AddSurveyForm","AddSystematicInquiryForm","AddVitalsForm","step","AddExaminationForm","checked","AddInvestigationForm","AddDiagnosisForm","AddTreatmentForm","AddBillingForm","AddVigilanceForm","VisitDetail","submitAddComplaintForm","visitId","updateVisit","addVisitComplaint","deleteComplaint","deleteVisitComplaint","submitAddSurveyForm","addVisitSurvey","deleteSurvey","deleteVisitSurvey","submitAddSystematicInquiryForm","addVisitSysInquiry","deleteSystematicInquiry","deleteVisitSysInquiry","submitAddVitalsForm","urineType","urineValue","addVisitVitals","deleteVitals","deleteVisitVitals","submitAddExaminationForm","addVisitExamination","deleteExamination","deleteVisitExamination","submitAddInvestigationForm","addVisitInvestigation","deleteInvestigation","deleteVisitInvestigation","submitAddDiagnosisForm","addVisitDiagnosis","deleteDiagnosis","deleteVisitDiagnosis","submitAddTreatmentForm","addVisitTreatment","deleteTreatment","deleteVisitTreatment","submitAddBillingForm","addVisitBilling","deleteBilling","deleteVisitBilling","addVisitImage","deleteVisitImage","addVisitFile","deleteVisitFile","submitAddVigilanceForm","vigilanceChronicIllnessDiabetesMedication","vigilanceChronicIllnessDiabetesTesting","vigilanceChronicIllnessDiabetesComment","vigilanceChronicIllnessHbpMedication","vigilanceChronicIllnessHbpTesting","vigilanceChronicIllnessHbpComment","vigilanceChronicIllnessDyslipidemiaMedication","vigilanceChronicIllnessDyslipidemiaTesting","vigilanceChronicIllnessDyslipidemiaComment","vigilanceChronicIllnessCadMedication","vigilanceChronicIllnessCadTesting","vigilanceChronicIllnessCadComment","vigilanceLifestyleWeightMedication","vigilanceLifestyleWeightTesting","vigilanceLifestyleWeightComment","vigilanceLifestyleDietMedication","vigilanceLifestyleDietTesting","vigilanceLifestyleDietComment","vigilanceLifestyleSmokingMedication","vigilanceLifestyleSmokingTesting","vigilanceLifestyleSmokingComment","vigilanceLifestyleSubstanceAbuseMedication","vigilanceLifestyleSubstanceAbuseTesting","vigilanceLifestyleSubstanceAbuseComment","vigilanceLifestyleExerciseMedication","vigilanceLifestyleExerciseTesting","vigilanceLifestyleExerciseComment","vigilanceLifestyleAllergiesMedication","vigilanceLifestyleAllergiesTesting","vigilanceLifestyleAllergiesComment","vigilanceLifestyleAsthmaMedication","vigilanceLifestyleAsthmaTesting","vigilanceLifestyleAsthmaComment","vigilanceScreeningBreastMedication","vigilanceScreeningBreastTesting","vigilanceScreeningBreastComment","vigilanceScreeningProstateMedication","vigilanceScreeningProstateTesting","vigilanceScreeningProstateComment","vigilanceScreeningCervixMedication","vigilanceScreeningCervixTesting","vigilanceScreeningCervixComment","vigilanceScreeningColonMedication","vigilanceScreeningColonTesting","vigilanceScreeningColonComment","vigilanceScreeningDentalMedication","vigilanceScreeningDentalTesting","vigilanceScreeningDentalComment","vigilanceVaccinesInfluenzaMedication","vigilanceVaccinesInfluenzaTesting","vigilanceVaccinesInfluenzaComment","vigilanceVaccinesVaricellaMedication","vigilanceVaccinesVaricellaTesting","vigilanceVaccinesVaricellaComment","vigilanceVaccinesHpvMedication","vigilanceVaccinesHpvTesting","vigilanceVaccinesHpvComment","vigilanceVaccinesMmrMedication","vigilanceVaccinesMmrTesting","vigilanceVaccinesMmrComment","vigilanceVaccinesTetanusMedication","vigilanceVaccinesTetanusTesting","vigilanceVaccinesTetanusComment","vigilanceVaccinesPneumovaxMedication","vigilanceVaccinesPneumovaxTesting","vigilanceVaccinesPneumovaxComment","vigilanceVaccinesOtherName","vigilanceVaccinesOtherMedication","vigilanceVaccinesOtherTesting","vigilanceVaccinesOtherComment","addVisitVigilance","deleteVigilance","deleteVisitVigilance","addVisitConsultant","deleteVisitConsultant","complaintTitle","complaintDescription","complaintAnamnesis","complaintAttachment","surveyTitle","surveyDescription","surveyAttachment","systematicInquiryTitle","systematicInquiryDescription","systematicInquiryAttachment","examinationGeneral","examinationArea","examinationType","examinationMeasure","examinationValue","examinationDescription","examinationFollowUp","examinationAttachment","investigationTitle","investigationType","investigationDescription","investigationAttachment","diagnosisTitle","diagnosisType","diagnosisDescription","diagnosisAttachment","treatmentType","treatmentTitle","treatmentDescription","treatmentDose","treatmentFrequency","treatmentAttachment","billingAmount","billingPaid","billingTitle","billingType","billingDescription","billingNotes","billingAttachment","addVisitComplaintAttachment","addVisitSurveyAttachment","addVisitSysInquiryAttachment","addVisitExaminationAttachment","addVisitInvestigationAttachment","addVisitDiagnosisAttachment","addVisitTreatmentAttachment","addVisitBillingAttachment","deleteVisitComplaintAttachment","deleteVisitSurveyAttachment","deleteVisitSysInquiryAttachment","deleteVisitExaminationAttachment","deleteVisitInvestigationAttachment","deleteVisitDiagnosisAttachment","deleteVisitTreatmentAttachment","deleteVisitBillingAttachment","updateVisitSingleField","completeVisit","completeVisitById","propsVisit","VisitSearchForm","VisitPage","searchVisits","creatingVisit","newVisit","getVisitsByFieldRegex","getVisitsByField","onStartCreateNewVisit","cancelCreateNewVisit","submitCreateNewVisitForm","tooEarly","tooLate","createVisit","getAllVisits","selectVisit","deleteVisit","goLinkVisit","intitialView","App","sessionStorageAuth","sessionCookiePresent","passwordResetState","passwordResetMessage","logout2","socket","emit","room","passwordReset","params","formGridParams","formGridPassword","cancelPasswordReset","io","on","clear","sender","receiver","Provider","from","exact","render","Home","Staff","Appointment","Visit","Landing","Login","Signup","PasswordReset","resetState","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.8fafb796.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nimport React from 'react';\nimport Alert from 'react-bootstrap/Alert'\n\nimport './alertBox.css'\n\nconst AlertBox = (props) => {\n  let alert = \"Alerts shown here\";\n\n  if (props.alert !== null) {\n    alert = '\"'+props.alert+'\"';\n  }\n\nreturn (\n  <div className=\"alertBox\">\n  <Alert variant=\"warning\">\n  <p className=\"alertBoxText\">{alert}</p>\n  </Alert>\n  </div>\n)\n\n}\n\nexport default AlertBox;\n","import React from 'react';\n\nexport default React.createContext({\n    token: null,\n    activityId: null,\n    activityA: null,\n    activityUser: null,\n    role: null,\n    userId: null,\n    user: {},\n    users:[],\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    selectedVisit: null,\n    userAlert: \"...\",\n    file: null,\n    fancyDate: null,\n    login: (token, activityId, role, tokenExpiration) => {},\n    logout: () => {},\n    setUserAlert: (args) => {},\n    userOnline: () => {},\n});\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n// import Button from 'react-bootstrap/Button';\n\nimport AuthContext from '../../context/auth-context';\nimport './MainNavigation.css';\n\n\nconst mainNavigation = props => (\n  <AuthContext.Consumer>\n    {context => {\n      return (\n        <header className=\"main-navigation\">\n          <div className=\"main-navigation__logo\">\n            <h1>MBJ ENT EMR V2.0.1</h1>\n          </div>\n          <nav className=\"main-navigation__items\">\n            <ul>\n              {!context.token && (\n                <React.Fragment>\n                <li>\n                  <NavLink to=\"/landing\">Landing</NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/login\">Login</NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/signup\">Signup</NavLink>\n                </li>\n                </React.Fragment>\n              )}\n              {context.token && (\n                <React.Fragment>\n                  <li>\n                    <NavLink to=\"/home\">Home</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/profile\">Profile</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/staff\">Staff</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/patients\">Patients</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/appointments\">Appointments</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/visits\">Visits</NavLink>\n                  </li>\n                  <li>\n                    <button onClick={context.logout}>Logout</button>\n                  </li>\n                </React.Fragment>\n              )}\n              {\n                // !context.token && (\n                //   <React.Fragment>\n                //     <li>\n                //       <NavLink to=\"/landing\">.</NavLink>\n                //     </li>\n                //   </React.Fragment>\n                // )\n              }\n            </ul>\n          </nav>\n        </header>\n      );\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default mainNavigation;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport loadingGif from '../../assets/loading.gif';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport \"./loadingOverlay.css\"\n\nconst LoadingOverlay = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"loadingOverlay\">\n    <Row className=\"overlayCloseRow\">\n    {props.toggleOverlay &&\n      props.status.type !== 's3' && (\n      <Button className=\"sidebarButton\" variant=\"warning\" onClick={props.toggleOverlay}>X</Button>\n    )}\n    </Row>\n\n    {props.status && (\n      <h5 className=\"attachmentViewerTitle\">... {props.status.type} ...</h5>\n    )}\n\n\n      <Container className=\"overlayContainer\">\n        {props.status.type === 'calendarAppointment' && (\n          <React.Fragment>\n            <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Date: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Title: <span className=\"bold\">{props.status.data.title}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>type: <span className=\"bold\">{props.status.data.type}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>subType: <span className=\"bold\">{props.status.data.subType}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Time: <span className=\"bold\">{props.status.data.time}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Location: <span className=\"bold\">{props.status.data.location}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>important: <span className=\"bold\">{props.status.data.important === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>description: <span className=\"bold\">{props.status.data.description}</span></p>\n              </ListGroup.Item>\n            </ListGroup>\n\n            </Row>\n\n\n            {props.selectCalendarDetails && (\n              <Row className=\"overlayRow\">\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon centered_btn\"  onClick={props.selectCalendarDetails.bind(this, props.status.data)}/>\n              </Row>\n            )}\n            {props.status.goLink && (\n              <Row className=\"overlayRow\">\n              <Link className=\"centered_btn\"\n                to={{\n                  pathname: \"/appointments\",\n                  state: {appointment: props.status.data._id}\n                }}\n              >\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon centered_btn\"/>\n              </Link>\n              </Row>\n            )}\n          </React.Fragment>\n        )}\n\n        {props.status.type === 'calendarVisit' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n          <ListGroup className=\"overlayListGroup\">\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            <p>ID: <span className=\"bold\">{props.status.data._id}</span></p>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            <p>Date: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            <p>Title: <span className=\"bold\">{props.status.data.title}</span></p>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            <p>type: <span className=\"bold\">{props.status.data.type}</span></p>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            <p>subType: <span className=\"bold\">{props.status.data.subType}</span></p>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"overlayListGroupItem\">\n            <p>Time: <span className=\"bold\">{props.status.data.time}</span></p>\n            </ListGroup.Item>\n          </ListGroup>\n          </Row>\n            {props.selectCalendarDetails && (\n              <Row className=\"overlayRow\">\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon centered_btn\" onClick={props.selectCalendarDetails.bind(this, props.status.data)}/>\n              </Row>\n            )}\n            {props.status.goLink && (\n              <Row className=\"overlayRow\">\n              <Link className=\"centered_btn\"\n                to={{\n                  pathname: \"/visits\",\n                  state: {visit: props.status.data._id}\n                }}\n              >\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n              </Link>\n              </Row>\n            )}\n\n          </React.Fragment>\n        )}\n\n        {props.status.type === 'calendarAttendance' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Date: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Status: <span className=\"bold\">{props.status.data.status}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Description: <span className=\"bold\">{props.status.data.description}</span></p>\n              </ListGroup.Item>\n            </ListGroup>\n          </Row>\n          </React.Fragment>\n        )}\n        {props.status.type === 'calendarLeave' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Type: <span className=\"bold\">{moment.unix(props.status.data.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>startDate: <span className=\"bold\">{moment.unix(props.status.data.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>endDate: <span className=\"bold\">{moment.unix(props.status.data.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span></p>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n              <p>Description: <span className=\"bold\">{props.status.data.description}</span></p>\n              </ListGroup.Item>\n            </ListGroup>\n          </Row>\n          </React.Fragment>\n        )}\n        {props.status.type === 's3' && (\n          <React.Fragment>\n          <Row className=\"overlayRow\">\n            <ListGroup className=\"overlayListGroup\">\n              <ListGroup.Item className=\"overlayListGroupItem\">\n                <Image src={loadingGif} className=\"loadingGif\" fluid />\n              </ListGroup.Item>\n              <ListGroup.Item className=\"overlayListGroupItem\">\n                <p>{props.status.data.action} -ing {props.status.data.target}...</p>\n              </ListGroup.Item>\n            </ListGroup>\n          </Row>\n          <Row className=\"overlayRow\">\n\n          </Row>\n          </React.Fragment>\n        )}\n\n\n      </Container>\n\n    </div>\n  </div>\n)\n\n}\n\nexport default LoadingOverlay;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { NavLink } from 'react-router-dom';\n\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport './landing.css';\n\nclass LandingPage extends Component {\n  state = {\n    role: null,\n    userAlert: \"landing page\",\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n  };\n\ncomponentDidMount () {\n}\n\n  render() {\n\n    return (\n      <React.Fragment>\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n      <Container className=\"landingPageContainer\">\n\n      <Row className=\"landingPageRow\">\n      <Col className=\"landingPageCol\">\n        <h1> Welcome to MBJ ENT EMR</h1>\n      </Col>\n      </Row>\n\n\n          {\n            // this.state.isGuest === true && (\n            //   <NavLink to=\"/login\">Login</NavLink>\n            // )\n          }\n          {\n            // this.state.isGuest === true && (\n            //   <NavLink to=\"/signup\">Signup</NavLink>\n            // )\n          }\n\n      </Container>\n\n      </React.Fragment>\n    );\n\n  }\n\n\n}\n\nexport default LandingPage;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './PatientItem.css';\n\nconst PatientItem = (props) => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Username: <span className=\"bold\">{props.patient.username}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            role: <span className=\"bold\">{props.patient.role}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.patient._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                name: <span className=\"bold\">{props.patient.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                username: <span className=\"bold\">{props.patient.username}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                title: <span className=\"bold\">{props.patient.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                role: <span className=\"bold\">{props.patient.role}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                dob: <span className=\"bold\">{moment.unix(props.patient.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                age: <span className=\"bold\">{props.patient.age}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                gender: <span className=\"bold\">{props.patient.gender}</span>\n              </Card.Text>\n              </li>\n              {props.appointmentPage === true && (\n                <li>\n                <Button variant=\"outline-primary\" onClick={props.onSelect.bind(this, props.patient)}>Select</Button>\n                </li>\n              )}\n              {props.appointmentPage !== true &&\n                props.showDetails && (\n                <li>\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.patient)}/>\n                </li>\n              )}\n              {props.homePage && (\n                <Link\n                  to={{\n                    pathname: \"/patients\",\n                    state: {patient: props.patient._id}\n                  }}\n                >\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                </Link>\n              )}\n\n            </ul>\n            </Row>\n          )}\n          {deleteState === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.patient)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default PatientItem;\n","import React from 'react';\n\nimport PatientItem from '../../items/patient/PatientItem';\nimport './UserList.css';\n\nconst PatientList = props => {\n\n  const {...filter} = props.filter;\n  let patients2 = props.patients;\n  let propsPatients = [];\n\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'registration.date' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.registration.date > b.registration.date) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'registration.date' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.registration.date < b.registration.date) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'loggedIn') {\n    propsPatients = patients2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field === 'patient' && filter.key === 'active') {\n    propsPatients = patients2.filter(x => x.active === filter.value);\n  }\n\n  if (filter.field !== 'patient') {\n    propsPatients = patients2;\n  }\n\n  let count = 0;\n\n  const patients = propsPatients.map(patient => {\n\n    count = propsPatients.indexOf(patient)+1;\n\n    return (\n      <PatientItem\n        key={count}\n        patient={patient}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        appointmentPage={props.appointmentPage}\n        homePage={props.homePage}\n        onSelect={props.onSelect}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{patients}</ul>;\n};\n\nexport default PatientList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './AppointmentItem.css';\n\nconst AppointmentItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.appointment.title}</span>\n          </Card.Text>\n          {!props.homePage && (\n            <Card.Text className=\"cardText\">\n              Type: <span className=\"bold\">{props.appointment.type}</span>\n            </Card.Text>\n          )}\n          {!props.homePage && (\n            <Card.Text className=\"cardText\">\n              Date: <span className=\"bold\">{moment.unix(props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n            </Card.Text>\n          )}\n          {\n            props.homePage && (\n\n            <Card.Text className=\"cardText\">\n              Patient: <span className=\"bold\">{props.appointment.patient._id}</span>\n            </Card.Text>\n\n          )\n        }\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.appointment._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.appointment.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.appointment.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Date: <span className=\"bold\">{moment.unix(props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                time: <span className=\"bold\">{props.appointment.time}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Patient: <span className=\"bold\">{props.appointment.patient.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                checkinTime: <span className=\"bold\">{props.appointment.checkinTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                seenTime: <span className=\"bold\">{props.appointment.seenTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                location: <span className=\"bold\">{props.appointment.location}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                description: <span className=\"bold\">{props.appointment.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                inProgress: <span className=\"bold\">{props.appointment.inProgress.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                attended: <span className=\"bold\">{props.appointment.attended.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                important: <span className=\"bold\">{props.appointment.important.toString()}</span>\n              </Card.Text>\n              </li>\n              {props.visitPage !== true &&\n                props.showDetails && (\n                <li>\n                <Button variant=\"outline-primary\" onClick={props.showDetails.bind(this, props.appointment)}>Details</Button>\n                </li>\n              )}\n              {props.visitPage === true && (\n                <li>\n                <Button variant=\"outline-primary\" onClick={props.onSelect.bind(this, props.appointment)}>Select</Button>\n                </li>\n              )}\n              {props.homePage && (\n                <Link\n                  to={{\n                    pathname: \"/appointments\",\n                    state: {appointment: props.appointment._id}\n                  }}\n                >\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                </Link>\n              )}\n\n            </ul>\n            </Row>\n          )}\n          {deleteState === true && (\n            <Row>\n              {props.canDelete && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.appointment)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AppointmentItem;\n","import React from 'react';\nimport AppointmentItem from '../../items/appointment/AppointmentItem';\nimport './AppointmentList.css'\n\nconst AppointmentList = props => {\n\n  const {...filter} = props.filter;\n  let appointments2 = props.appointments;\n  let propsAppointments = [];\n\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType > b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType < b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time > b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time < b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location > b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location < b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'important') {\n    propsAppointments = appointments2.filter(x => x.important === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'inProgress') {\n    propsAppointments = appointments2.filter(x => x.inProgress === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'attended') {\n    propsAppointments = appointments2.filter(x => x.attended === filter.value);\n  }\n\n  if (filter.field !== 'appointment') {\n    propsAppointments = appointments2;\n  }\n\n  let count = 0;\n\n  const appointments = propsAppointments.map(appointment=> {\n\n    count = propsAppointments.indexOf(appointment+1);\n\n    return (\n      <AppointmentItem\n        key={count}\n        appointment={appointment}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        visitPage={props.visitPage}\n        homePage={props.homePage}\n        onSelect={props.onSelect}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{appointments}</ul>;\n};\n\nexport default AppointmentList;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { NavLink } from 'react-router-dom';\nimport Image from 'react-bootstrap/Image';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport PatientList from '../../components/lists/patient/PatientList';\nimport AppointmentList from '../../components/lists/appointment/AppointmentList';\nimport loadingGif from '../../assets/loading.gif';\nimport './landing.css';\n\nclass HomePage extends Component {\n  state = {\n    role: null,\n    userAlert: \"landing\",\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    isLoading: false,\n    seshStore: null,\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    todayAppointments: null,\n    queue: null,\n    weekImportantAppointments: null,\n    recentPatients: null,\n  };\n  static contextType = AuthContext;\n\n\ncomponentDidMount () {\n  console.log('...home component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n\n    this.getAppointmentsToday(seshStore);\n    this.getAppointmentsImportantWeek(seshStore);\n    this.getRecentPatients(seshStore);\n\n  }\n}\n\nloadHome = () => {\n  const args = {\n    token: this.context.token,\n    activityId: this.context.activityId\n  }\n\n  this.getAppointmentsToday(args);\n  this.getAppointmentsImportantWeek(args);\n  this.getRecentPatients(args);\n\n}\n\ngetAppointmentsToday = (args) => {\n  console.log('...retrieving todays appointments...');\n  this.context.setUserAlert('...retrieving todays appointments...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAppointmentsToday(\n        activityId:\"${activityId}\")\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAppointmentsToday);\n      console.log('...get todays appointments success!...');\n      let responseAlert = '...get todays appointments success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        todayAppointments: resData.data.getAppointmentsToday,\n      });\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\ngetAppointmentsImportantWeek = (args) => {\n  console.log('...retrieving important appointments for week...');\n  this.context.setUserAlert('...retrieving important appointments for week...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAppointmentsImportantNextWeek(\n        activityId:\"${activityId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAppointmentsImportantNextWeek);\n      console.log('...get week important appointments success!...');\n      let responseAlert = '...get week important appointments success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        weekImportantAppointments: resData.data.getAppointmentsImportantNextWeek,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\ngetRecentPatients = (args) => {\n  console.log('...retrieving recent patients...');\n  this.context.setUserAlert('...retrieving recent patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getRecentPatients(\n        activityId:\"${activityId}\",\n        amount:7\n      )\n        {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getRecentPatients);\n      console.log('...retrieve recent patients success!...');\n      let responseAlert = '...retrieve recent patients success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        recentPatients: resData.data.getRecentPatients,\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\n  render() {\n\n    return (\n      <React.Fragment>\n\n      {\n        this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )\n    }\n      <Container className=\"landingPageContainer\">\n\n      <Row className=\"landingPageTopRow\">\n\n        <Button variant=\"outline-secondary\" size=\"md\" onClick={this.loadHome}>Home</Button>\n        {this.state.isLoading ? (\n          <Image src={loadingGif} className=\"loadingGif\" fluid />\n        ):(\n          <p>.</p>\n        )}\n\n      </Row>\n\n      <Row className=\"landingPageRow\">\n      <Col md={6} className=\"landingPageCol\">\n        <h3>Todays appts</h3>\n        {this.state.todayAppointments && (\n          <AppointmentList\n            filter={this.state.filter}\n            appointments={this.state.todayAppointments}\n            authId={this.context.activityId}\n            homePage={true}\n          />\n        )}\n      </Col>\n      <Col md={6} className=\"landingPageCol\">\n        <h3>Queue</h3>\n        {this.state.queue && (\n          <h3>Queue list</h3>\n        )}\n      </Col>\n      </Row>\n\n      <Row className=\"landingPageRow\">\n      <Col md={5}className=\"landingPageCol\">\n        <h3>Weeks important</h3>\n        {this.state.weekImportantAppointments && (\n          <AppointmentList\n            filter={this.state.filter}\n            appointments={this.state.weekImportantAppointments}\n            authId={this.context.activityId}\n            homePage={true}\n          />\n        )}\n      </Col>\n      <Col md={4}className=\"landingPageCol\">\n        <h3>Recent patients</h3>\n        {this.state.recentPatients && (\n          <PatientList\n            filter={this.state.filter}\n            patients={this.state.recentPatients}\n            authId={this.context.activityId}\n            homePage={true}\n          />\n        )}\n      </Col>\n      <Col md={3}className=\"landingPageCol\">\n        <h3>more stats</h3>\n      </Col>\n      </Row>\n\n      </Container>\n\n      </React.Fragment>\n    );\n\n  }\n\n\n}\n\nexport default HomePage;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './UserItem.css';\n\nconst AddressItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Town: <span className=\"bold\">{props.address.town}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Country: <span className=\"bold\">{props.address.country}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                No: <span className=\"bold\">{props.address.number}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Street: <span className=\"bold\">{props.address.street}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Town: <span className=\"bold\">{props.address.town}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                City: <span className=\"bold\">{props.address.city}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Parish: <span className=\"bold\">{props.address.parish}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Country: <span className=\"bold\">{props.address.country}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Primary: <span className=\"bold\"> {props.address.primary === true && (<FontAwesomeIcon icon={faBatteryThreeQuarters} className=\"listIcon\"/>)} {props.address.primary === false && (<FontAwesomeIcon icon={faBatteryEmpty} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n              {props.makePrimary && (\n                <li>\n                <Button variant=\"outline-primary\" onClick={props.makePrimary.bind(this, props.address)}>Set Primary</Button>\n                </li>\n              )}\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.address)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AddressItem;\n","import React from 'react';\n\nimport AddressItem from '../../items/user/AddressItem';\nimport './UserList.css';\n\nconst UserAddressList = props => {\n\n  const {...filter} = props.filter;\n  let addresses2 = props.addresses;\n  let propsAddresses = [];\n\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number > b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number < b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street > b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street < b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town > b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town < b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city > b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city < b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish > b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish < b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country > b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country < b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode > b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode < b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'primary') {\n    propsAddresses = addresses2.filter(x => x.primary === filter.value);\n  }\n  if (filter.field !== 'address') {\n    propsAddresses = addresses2;\n  }\n\n  let count = 0;\n\n  const addresses = propsAddresses.map(address => {\n\n    count = propsAddresses.indexOf(address)+1;\n\n    return (\n      <AddressItem\n        key={count}\n        address={address}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        makePrimary={props.makePrimary}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{addresses}</ul>;\n};\n\nexport default UserAddressList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst AttendanceItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Date: <span className=\"bold\">{moment.unix(props.attendance.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Date: <span className=\"bold\">{moment.unix(props.attendance.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Status: <span className=\"bold\">{props.attendance.status}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.attendance.description}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.attendance)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default AttendanceItem;\n","import React from 'react';\n\nimport AttendanceItem from '../../items/user/AttendanceItem';\nimport './UserList.css';\n\nconst UserAttendanceList = props => {\n\n  const {...filter} = props.filter;\n  let attendance2 = props.attendance;\n  let propsAttendance = [];\n\n  if (filter.field === 'attendance' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsAttendance = attendance2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'attendance' && filter.key === 'status' && filter.value === 'Descending') {\n    propsAttendance = attendance2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'attendance' && filter.key === 'status' && filter.value === 'Ascending') {\n    propsAttendance = attendance2.sort((a, b) => (a.status > b.status) ? 1 : -1);\n  }\n  if (filter.field === 'attendance' && filter.key === 'status' && filter.value === 'Descending') {\n    propsAttendance = attendance2.sort((a, b) => (a.status < b.status) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'attendance') {\n    propsAttendance = attendance2;\n  }\n\n  let count = 0;\n\n  const attendance = propsAttendance.map(attendanceItem => {\n\n    count = propsAttendance.indexOf(attendanceItem)+1;\n\n    return (\n      <AttendanceItem\n        key={count}\n        attendance={attendanceItem}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"attendanceList\">{attendance}</ul>;\n};\n\nexport default UserAttendanceList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst LeaveItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Start: <span className=\"bold\">{moment.unix(props.leave.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.leave.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Start: <span className=\"bold\">{moment.unix(props.leave.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                End: <span className=\"bold\">{moment.unix(props.leave.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.leave.description}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.leave)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default LeaveItem;\n","import React from 'react';\n\nimport LeaveItem from '../../items/user/LeaveItem';\nimport './UserList.css';\n\nconst UserLeaveList = props => {\n\n  const {...filter} = props.filter;\n  let leave2 = props.leave;\n  let propsLeave = [];\n\n  if (filter.field === 'leave' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsLeave = leave2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'type' && filter.value === 'Descending') {\n    propsLeave = leave2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'startDate' && filter.value === 'Ascending') {\n    propsLeave = leave2.sort((a, b) => (a.startDate > b.startDate) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'startDate' && filter.value === 'Descending') {\n    propsLeave = leave2.sort((a, b) => (a.startDate < b.startDate) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'endDate' && filter.value === 'Ascending') {\n    propsLeave = leave2.sort((a, b) => (a.endDate > b.endDate) ? 1 : -1);\n  }\n  if (filter.field === 'leave' && filter.key === 'endDate' && filter.value === 'Descending') {\n    propsLeave = leave2.sort((a, b) => (a.endDate < b.endDate) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'leave') {\n    propsLeave = leave2;\n  }\n\n  let count = 0;\n\n  const leave = propsLeave.map(leaveItem => {\n\n    count = propsLeave.indexOf(leaveItem)+1;\n\n    return (\n      <LeaveItem\n        key={count}\n        leave={leaveItem}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"leaveList\">{leave}</ul>;\n};\n\nexport default UserLeaveList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './UserItem.css';\n\nconst ImageItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Link: <span className=\"bold\">{props.image.path}</span>\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.image.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.image.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.image.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.image)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n\n};\n\nexport default ImageItem;\n","import React from 'react';\n\nimport ImageItem from '../../items/user/ImageItem';\nimport './UserList.css';\n\nconst UserImageList = props => {\n\n  const {...filter} = props.filter;\n  let images2 = props.images;\n  let propsImages = [];\n\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'image') {\n    propsImages = images2;\n  }\n\n  let count = 0;\n\n  const images = propsImages.map(image => {\n\n    count = propsImages.indexOf(image)+1;\n\n    return (\n      <ImageItem\n        key={count}\n        image={image}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"imageList\">{images}</ul>;\n};\n\nexport default UserImageList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst FileItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Link: <span className=\"bold\">{props.file.path}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.file.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.file.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.file.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.file)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default FileItem;\n","import React from 'react';\n\nimport FileItem from '../../items/patient/FileItem';\nimport './UserList.css';\n\nconst PatientFileList = props => {\n\n  const {...filter} = props.filter;\n  let files2 = props.files;\n  let propsFiles = [];\n\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'file') {\n    propsFiles = files2;\n  }\n\n  let count = 0;\n\n  const files = propsFiles.map(file => {\n\n    count = propsFiles.indexOf(file)+1;\n\n    return (\n      <FileItem\n        key={count}\n        file={file}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{files}</ul>;\n};\n\nexport default PatientFileList;\n","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst AppointmentItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.appointment.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.appointment.type}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Date: <span className=\"bold\">{moment.unix(props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.appointment._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                time: <span className=\"bold\">{props.appointment.time}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                checkinTime: <span className=\"bold\">{props.appointment.checkinTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                seenTime: <span className=\"bold\">{props.appointment.seenTime}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                location: <span className=\"bold\">{props.appointment.location}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                description: <span className=\"bold\">{props.appointment.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                inProgress: <span className=\"bold\">{props.appointment.inProgress.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                attended: <span className=\"bold\">{props.appointment.attended.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                important: <span className=\"bold\">{props.appointment.important.toString()}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Link\n                to={{\n                  pathname: \"/appointments\",\n                  state: {appointment: props.appointment._id}\n                }}\n              >\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n              </Link>\n              </li>\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AppointmentItem;\n","import React from 'react';\n\nimport AppointmentItem from '../../items/user/AppointmentItem';\nimport './UserList.css';\n\nconst UserAppointmentList = props => {\n\n  const {...filter} = props.filter;\n  let appointments2 = props.appointments;\n  let propsAppointments = [];\n\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'title' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'type' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType > b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'subType' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.subType < b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'date' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time > b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'time' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.time < b.time) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Ascending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location > b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'location' && filter.value === 'Descending') {\n    propsAppointments = appointments2.sort((a, b) => (a.location < b.location) ? 1 : -1);\n  }\n  if (filter.field === 'appointment' && filter.key === 'important') {\n    propsAppointments = appointments2.filter(x => x.important === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'inProgress') {\n    propsAppointments = appointments2.filter(x => x.inProgress === filter.value);\n  }\n  if (filter.field === 'appointment' && filter.key === 'attended') {\n    propsAppointments = appointments2.filter(x => x.attended === filter.value);\n  }\n  if (filter.field !== 'appointment') {\n    propsAppointments = appointments2;\n  }\n\n  let count = 0;\n\n  const appointments = propsAppointments.map(appointment => {\n\n    count = propsAppointments.indexOf(appointment)+1;\n\n    return (\n      <AppointmentItem\n        key={count}\n        appointment={appointment}\n      />\n    );\n  });\n\n  return <ul className=\"appointmentList\">{appointments}</ul>;\n};\n\nexport default UserAppointmentList;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './UserItem.css';\n\nconst NoteItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Note: <span className=\"bold\">{props.note}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.note)}>Delete</Button>\n              )}\n            </Row>\n            )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\n\nimport NoteItem from '../../items/user/NoteItem';\nimport './UserList.css';\n\nconst UserNoteList = props => {\n\n  const {...filter} = props.filter;\n  let notes2 = props.notes;\n  let propsNotes = [];\n\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Ascending') {\n    propsNotes = notes2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Descending') {\n    propsNotes = notes2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'note') {\n    propsNotes = notes2;\n  }\n\n  let count = 0;\n\n  const notes = propsNotes.map(note => {\n\n    count = propsNotes.indexOf(note)+1;\n\n    return (\n      <NoteItem\n        key={count}\n        note={note}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{notes}</ul>;\n};\n\nexport default UserNoteList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAddressForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"address\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>number</option>\n          <option>street</option>\n          <option>town</option>\n          <option>city</option>\n          <option>parish</option>\n          <option>country</option>\n          <option>postalCode</option>\n          <option>primary</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAddressForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAddressForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"attendance\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>status</option>\n          <option>date</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAddressForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterLeaveForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"leave\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>type</option>\n          <option>startDate</option>\n          <option>endDate</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterLeaveForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterImageForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"image\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>type</option>\n          <option>link</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterImageForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterFileForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"file\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>type</option>\n          <option>link</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterFileForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAppointmentForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"appointment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>title</option>\n          <option>type</option>\n          <option>subType</option>\n          <option>date</option>\n          <option>time</option>\n          <option>location</option>\n          <option>important</option>\n          <option>inProgress</option>\n          <option>attended</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAppointmentForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterNoteForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"note\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>note</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterNoteForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst UpdateUserSingleFieldForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Update Single Field</h4>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>field</Form.Label>\n        <Form.Control type=\"text\" value={props.field}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"query... date = YYY-MM-DD!!\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default UpdateUserSingleFieldForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './addForms.css';\n\nconst AddAddressForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Address</h4>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"number\">\n        <Form.Label>addressNumber</Form.Label>\n        <Form.Control type=\"number\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"street\">\n        <Form.Label>addressStreet</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row>\n\n      <Form.Group as={Col} controlId=\"town\">\n        <Form.Label>addressTown</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"city\">\n        <Form.Label>addressCity</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"parish\">\n        <Form.Label>addressParish</Form.Label>\n        <Form.Control as=\"select\">\n          <option>none</option>\n          <option>Hanover</option>\n          <option>St. Elizabeth</option>\n          <option>St. James</option>\n          <option>Trelawny</option>\n          <option>Westmoreland</option>\n          <option>Clarendon</option>\n          <option>Manchester</option>\n          <option>St. Ann</option>\n          <option>St. Catherine</option>\n          <option>St. Mary</option>\n          <option>Kingston</option>\n          <option>St. Andrew</option>\n          <option>Portland</option>\n          <option>St. Thomas</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"country\">\n        <Form.Label>addressCountry</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"postalCode\">\n        <Form.Label>addressPostalCode</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAddressForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddAttendanceForm = (props) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const handleChangeStartDate = startDate => {\n    setStartDate(startDate);\n    console.log(`startDate ${startDate}`);\n   }\n   const [endDate, setEndDate] = useState(new Date());\n   const handleChangeEndDate = endDate => {\n     setEndDate(endDate);\n     console.log(`endDate ${endDate}`);\n    }\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Attendance</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"date\">\n        <Form.Label>date</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"date\"/>\n      </Form.Group>\n      {\n        // <Form.Group as={Col} controlId=\"\">\n        //   <Form.Label>startDate</Form.Label>\n        //   <DatePicker className=\"\" id=\"startDate\"\n        //     selected={startDate}\n        //     onChange={handleChangeStartDate}\n        //   />\n        // </Form.Group>\n        // <Form.Group as={Col} controlId=\"\">\n        //   <Form.Label>startDate</Form.Label>\n        //   <DatePicker className=\"\" id=\"endDate\"\n        //     selected={endDate}\n        //     onChange={handleChangeEndDate}\n        //   />\n        // </Form.Group>\n      }\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"status\">\n        <Form.Label>status</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"status\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAttendanceForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddLeaveForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Leave</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"startDate\">\n        <Form.Label>startDate</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"startDate\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"endDate\">\n        <Form.Label>endDate</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"endDate\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddLeaveForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddNoteForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Notes</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"notes\">\n        <Form.Label>notes</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"note,note,note,note\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddNoteForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddImageForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Image</h4>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n  <Form.Row className=\"formBtnRow\">\n    <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n    <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddImageForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddFileForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add File</h4>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddFileForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\nimport S3 from 'react-aws-s3';\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport UserAddressList from '../../components/lists/user/UserAddressList'\nimport UserAttendanceList from '../../components/lists/user/UserAttendanceList'\nimport UserLeaveList from '../../components/lists/user/UserLeaveList'\nimport UserImageList from '../../components/lists/user/UserImageList'\nimport UserFileList from '../../components/lists/user/UserFileList'\nimport UserAppointmentList from '../../components/lists/user/UserAppointmentList'\nimport UserNoteList from '../../components/lists/user/UserNoteList'\n\nimport FilterAddressForm from '../../components/forms/filter/FilterAddressForm';\nimport FilterAttendanceForm from '../../components/forms/filter/FilterAttendanceForm';\nimport FilterLeaveForm from '../../components/forms/filter/FilterLeaveForm';\nimport FilterImageForm from '../../components/forms/filter/FilterImageForm';\nimport FilterFileForm from '../../components/forms/filter/FilterFileForm';\nimport FilterAppointmentForm from '../../components/forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../../components/forms/filter/FilterNoteForm';\n\nimport UpdateUserSingleFieldForm from '../../components/forms/add/UpdateUserSingleFieldForm';\nimport AddAddressForm from '../../components/forms/add/AddAddressForm';\nimport AddAttendanceForm from '../../components/forms/add/AddAttendanceForm';\nimport AddLeaveForm from '../../components/forms/add/AddLeaveForm';\nimport AddNoteForm from '../../components/forms/add/AddNoteForm';\nimport AddImageForm from '../../components/forms/add/AddImageForm';\nimport AddFileForm from '../../components/forms/add/AddFileForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './profile.css';\n\nclass MyProfilePage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    calendarAttendance: null,\n    calendarLeave: null,\n    calendarAppointments: null,\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...MyProfile component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getThisUser(seshStore);\n    this.getPocketVars(seshStore);\n\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n    console.log('...retriving pocketVars..');\n    this.context.setUserAlert('...retriving pocketVars..')\n    const token = args.token;\n    const activityId = args.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")}\n          `};\n          // fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          this.setState({userAlert: resData.errors[0].message})\n        } else {\n          let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n          console.log('...retriving pocketVars success...');\n          this.context.setUserAlert('...retriving pocketVars success...')\n          this.setState({\n            pocketVars: pocketVarsParsed\n          });\n        }\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.context.setUserAlert(err);\n      });\n    }\ngetThisUser (args) {\n  console.log('...retrieving your profile info...');\n  this.context.setUserAlert('...retrieving your profile info...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getUserById(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\"\n      )\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getUserById);\n      let responseAlert = '...profile retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.getUserById,\n        activityA: `getUserById?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.getUserById;\n\n      if (resData.data.getUserById.role === 'Admin') {\n        this.setState({\n          canDelete: true\n        })\n      }\n      this.parseForCalendar({\n        attendance: resData.data.getUserById.attendance,\n        leave: resData.data.getUserById.leave,\n        appointments: resData.data.getUserById.appointments,\n      })\n      this.logUserActivity(args);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsubmitAddAddressForm = (event) => {\n  event.preventDefault();\n  console.log('...adding address...');\n  this.context.setUserAlert('...adding address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const number = event.target.number.value;\n  const street = event.target.street.value;\n  const town = event.target.town.value;\n  const city = event.target.city.value;\n  const parish = event.target.parish.value;\n  const country = event.target.country.value;\n  const postalCode = event.target.postalCode.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${number},\n          addressStreet:\"${street}\",\n          addressTown:\"${town}\",\n          addressCity:\"${city}\",\n          addressParish:\"${parish}\",\n          addressCountry:\"${country}\",\n          addressPostalCode:\"${postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAddress);\n      let responseAlert = '...address add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserAddress,\n        activityA: `addUserAddress?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAddress = (args) => {\n  console.log('...deleting address...');\n  this.context.setUserAlert('...deleting address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      mutation {deleteUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\",\n          addressPrimary: ${args.primary}\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAddress);\n      let responseAlert = '...address delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserAddress,\n        activityA: `deleteUserAddress?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.deleteUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsetAddressPrimary = (args) => {\n  console.log('...setting primary address...');\n  this.context.setUserAlert('...setting primary address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      mutation {setUserAddressPrimary(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.setUserAddressPrimary);\n      let responseAlert = '...address set primary success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.setUserAddressPrimary,\n        activityA: `setUserAddressPrimary?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.setUserAddressPrimary;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddAttendanceForm = (event) => {\n  event.preventDefault();\n  console.log('...adding attendance...');\n  this.context.setUserAlert('...attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const attendanceDate = event.target.date.value;\n  const attendanceStatus = event.target.status.value;\n  const attendanceDescription = event.target.description.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAttendance(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          attendanceDate:\"${attendanceDate}\",\n          attendanceStatus:\"${attendanceStatus}\",\n          attendanceDescription:\"${attendanceDescription}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAttendance);\n      let responseAlert = '...attendance add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserAttendance,\n        activityA: `addUserAttendance?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: resData.data.addUserAttendance.attendance,\n        leave: resData.data.addUserAttendance.leave,\n        appointments: resData.data.addUserAttendance.appointments,\n      })\n      this.context.activityUser = resData.data.addUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAttendance = (args) => {\n  console.log('...deleting attendance...');\n  this.context.setUserAlert('...deleting attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserAttendance(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            attendanceDate:\"${args.date}\",\n            attendanceStatus:\"${args.status}\",\n            attendanceDescription:\"${args.description}\"\n          }){_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAttendance);\n      let responseAlert = '...attendance delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserAttendance,\n        activityA: `deleteUserAttendance?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: resData.data.deleteUserAttendance.attendance,\n        leave: resData.data.deleteUserAttendance.leave,\n        appointments: resData.data.deleteUserAttendance.appointments,\n      })\n      this.context.activityUser = resData.data.deleteUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddLeaveForm = (event) => {\n  event.preventDefault();\n  console.log('...adding leave...');\n  this.context.setUserAlert('...leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const startDate = event.target.startDate.value;\n  const endDate = event.target.endDate.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserLeave(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          leaveType:\"${type}\",\n          leaveStartDate:\"${startDate}\",\n          leaveEndDate:\"${endDate}\",\n          leaveDescription:\"${description}\"\n        }){_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserLeave);\n      let responseAlert = '...leave add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserLeave,\n        activityA: `addUserLeave?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: resData.data.addUserLeave.attendance,\n        leave: resData.data.addUserLeave.leave,\n        appointments: resData.data.addUserLeave.appointments,\n      })\n      this.context.activityUser = resData.data.addUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteLeave = (args) => {\n  console.log('...deleting leave...');\n  this.context.setUserAlert('...deleting leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserLeave(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            leaveType:\"${args.type}\",\n            leaveStartDate:\"${args.startDate}\",\n            leaveEndDate:\"${args.endDate}\",\n            leaveDescription:\"${args.description}\"\n          })\n          {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserLeave);\n      let responseAlert = '...leave delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserLeave,\n        activityA: `deleteUserLeave?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: resData.data.addUserLeave.attendance,\n        leave: resData.data.addUserLeave.leave,\n        appointments: resData.data.addUseLeavce.appointments,\n      })\n      this.context.activityUser = resData.data.deleteUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding image...');\n  this.context.setUserAlert('...image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  const username = this.state.activityUser.username;\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+activityId+'/images';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addUserImage(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          imageName:\"${imageName}\",\n          imageType:\"${imageType}\",\n          imagePath:\"${imagePath}\"\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserImage);\n      let responseAlert = '...image add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserImage,\n        activityA: `addUserImage?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n  console.log('...deleting image...');\n  this.context.setUserAlert('...deleting image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const username = this.state.activityUser.username;\n\n  const filePath = 'staff/'+username+'/images';\n  const filename = args.name;\n  // console.log('foo',filename);\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            imageName:\"${args.name}\",\n            imageType:\"${args.type}\",\n            imagePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserImage);\n      let responseAlert = '...image delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserImage,\n        activityA: `deleteUserImage?activityId:${activityId},userId:${userId}`,\n      });\n      this.context.activityUser = resData.data.deleteUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'staff/'+activityId+'/images';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding file...');\n  this.context.setUserAlert('...file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n\n  const username = this.state.activityUser.username;\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+activityId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addUserFile(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          fileName:\"${file2Name}\",\n          fileType:\"${file2Type}\",\n          filePath:\"${file2Path}\"\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserFile);\n      let responseAlert = '...file add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserFile,\n        activityA: `addUserFile?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n  console.log('...deleting file...');\n  this.context.setUserAlert('...deleting file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const username = this.state.activityUser.username;\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserFile(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            fileName:\"${args.name}\",\n            fileType:\"${args.type}\",\n            filePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserFile);\n      let responseAlert = '...file delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserFile,\n        activityA: `deleteUserFile?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.deleteUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'staff/'+activityId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding note...');\n  this.context.setUserAlert('...note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const note = event.target.note.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserNotes(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          notes:\"${note}\"\n        }){_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.addUserNotes,\n        activityA: `addUserNotes?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.addUserNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n  console.log('...deleting note...');\n  this.context.setUserAlert('...deleting note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  let requestBody = {\n    query: `\n        mutation {deleteUserNote(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            note: \"${args}\"\n          })\n          {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.deleteUserNote,\n        activityA: `deleteUserNote?activityId:${activityId},userId:${userId}`\n      });\n      this.context.activityUser = resData.data.deleteUserNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.state.activityUser._id;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateUserSingleField(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateUserSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityUser: resData.data.updateUserSingleField,\n        activityA: `updateUserSingleField?activityId:${activityId},userId:${userId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.activityUser = resData.data.updateUserSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing profile dates for calendar...');\n  let calendarAttendance = args.attendance.map(x => ({\n      title: x.status,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        status: x.status,\n        description: x.description,\n        field: 'attendance'\n      }\n    }))\n  let calendarLeave = args.leave.map(x => ({\n      title: x.type,\n      date: moment.unix(x.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      end: moment.unix(x.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        type: x.type,\n        startDate: x.startDate,\n        endDate: x.endDate,\n        description: x.description,\n        field: 'leave'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave\n    })\n  let calendarAppointments = args.appointments.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n        field: 'appointments'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave,\n      calendarAppointments: calendarAppointments,\n    })\n}\n\nviewCalendarEvent = (args) => {\n\n  let input = args.event.extendedProps.props;\n  let data;\n  if (input.field === 'attendance') {\n    data = {\n      date: input.date,\n      status: input.status,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAttendance', data: data}\n    })\n  }\n  if (input.field === 'leave') {\n    data = {\n      type: input.type,\n      startDate: input.startDate,\n      endDate: input.endDate,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarLeave', data: data}\n    })\n  }\n  if (input.field === 'appointments') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      location: input.location,\n      description: input.description,\n      important: input.important,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAppointment', data: data, goLink: true}\n    })\n  }\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"profilePageContainer\">\n      <Row className=\"profilePageContainerRow headRow\">\n        <Col md={9} className=\"profilePageContainerCol\">\n          <h1 className=\"profileHeading\">Profile</h1>\n        </Col>\n        <Col md={3} className=\"profilePageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Row className=\"profilePageContainerRow mainRow\">\n        <Col md={2} className=\"profilePageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"profilePageContainerCol\">\n          {!this.state.activityUser && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"profilePageContainerRow mainRow2\">\n          <Col md={3} className=\"profilePageContainerCol specialCol1\">\n\n          {this.state.sideCol === 'menu' && (\n            <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n              <Nav.Item>\n                <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'address')}>Addresses</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'attendance')}>Attendance</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'leave')}>Leave</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'image')}>Images</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'file')}>Files</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'appointment')}>Appointments</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n              </Nav.Item>\n            </Nav>\n          )}\n          {this.state.sideCol === 'filter' && (\n            <Col>\n              {this.state.menuSelect === 'address' && (\n                <FilterAddressForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'attendance' && (\n                <FilterAttendanceForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'leave' && (\n                <FilterLeaveForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'image' && (\n                <FilterImageForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'file' && (\n                <FilterFileForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'appointment' && (\n                <FilterAppointmentForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n              {this.state.menuSelect === 'note' && (\n                <FilterNoteForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              )}\n            </Col>\n\n          )}\n          </Col>\n\n          {this.state.activityUser && (\n            <Col md={9} className=\"profilePageContainerCol specialCol2\">\n\n              {this.state.updateSingleField.state === true && (\n                <UpdateUserSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n\n              <Tab.Content className=\"tabContent\" >\n                <Tab.Pane eventKey=\"1\">\n                  <p className=\"displayPaneTitle\">Basic:</p>\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Title:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.title}</p>\n                      <p className=\"listGroupText\">Name:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.name}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Username:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.username}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                      <p className=\"listGroupText\">Role:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.role}</p>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">DOB:</p>\n                      <p className=\"listGroupText bold\">{moment.unix(this.state.activityUser.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                      <p className=\"listGroupText\">Age:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.age}</p>\n                      <p className=\"listGroupText\">Gender:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.gender}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                    <p className=\"listGroupText\">Email:</p>\n                    <p className=\"listGroupText bold\">{this.state.activityUser.contact.email}</p>\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                    <p className=\"listGroupText\">Phone:</p>\n                    <p className=\"listGroupText bold\">{this.state.activityUser.contact.phone}</p>\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                    <p className=\"listGroupText\">Phone 2:</p>\n                    <p className=\"listGroupText bold\">{this.state.activityUser.contact.phone2}</p>\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"2\">\n                  <p className=\"displayPaneTitle\">Admin:</p>\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Reg No:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.registrationNumber}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser._id}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">LoggedIn:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.loggedIn.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">ClientConnected:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.clientConnected.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Verified:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.verification.verified.toString()}</p>\n                      <p className=\"listGroupText\">Type:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.verification.type}</p>\n                      <p className=\"listGroupText\">Code:</p>\n                      <p className=\"listGroupText bold\">{this.state.activityUser.verification.code}</p>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"3\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Addresses:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'address' && (\n                      <AddAddressForm\n                        onConfirm={this.submitAddAddressForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserAddressList\n                    filter={this.state.filter}\n                    addresses={this.state.activityUser.addresses}\n                    authId={this.state.activityUser._id}\n                    onDelete={this.deleteAddress}\n                    canDelete={this.state.canDelete}\n                    makePrimary={this.setAddressPrimary}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"4\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Attendance:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'attendance')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'attendance' && (\n                      <AddAttendanceForm\n                        onConfirm={this.submitAddAttendanceForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAttendanceList\n                      filter={this.state.filter}\n                      attendance={this.state.activityUser.attendance}\n                      authId={this.state.activityUser._id}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteAttendance}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAttendance}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"5\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Leave:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'leave')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'leave' && (\n                      <AddLeaveForm\n                        onConfirm={this.submitAddLeaveForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserLeaveList\n                      filter={this.state.filter}\n                      leave={this.state.activityUser.leave}\n                      authId={this.state.activityUser._id}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteLeave}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarLeave}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"6\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Images:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'image' && (\n                      <AddImageForm\n                        onConfirm={this.submitAddImageForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserImageList\n                    filter={this.state.filter}\n                    images={this.state.activityUser.images}\n                    authId={this.state.activityUser._id}showListDetails={this.showListDetails}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteImage}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"7\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Files:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'file' && (\n                      <AddFileForm\n                        onConfirm={this.submitAddFileForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserFileList\n                    filter={this.state.filter}\n                    files={this.state.activityUser.files}\n                    authId={this.state.activityUser._id}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteFile}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"8\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Appointments:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                  </Row>\n                  <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAppointmentList\n                      filter={this.state.filter}\n                      appointments={this.state.activityUser.appointments}\n                      authId={this.state.activityUser._id}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAppointments}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"9\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">Notes:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'note' && (\n                      <AddNoteForm\n                        onConfirm={this.submitAddNoteForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserNoteList\n                    filter={this.state.filter}\n                    notes={this.state.activityUser.notes}\n                    authId={this.state.activityUser._id}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteNote}\n                  />\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default MyProfilePage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './authForms.css';\n\nconst LoginForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Login</h1>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"email\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"password\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\" />\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Login</Button>\n      <Button variant=\"outline-primary\" onClick={props.onStartVerification}>Verify</Button>\n      <Button variant=\"outline-secondary\" className=\"loginFormBtn\" onClick={props.onStartForgotPassword}>ForgotPassword</Button>\n      <Button variant=\"outline-warning\" className=\"loginFormBtn\">\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default LoginForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst verifyUserForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n  <h1>Verify</h1>\n  <Form.Row>\n    <Form.Group className=\"searchInput\" controlId=\"type\">\n      <Form.Label>type</Form.Label>\n      <Form.Control as=\"select\">\n        <option>email</option>\n      </Form.Control>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"username\">\n      <Form.Label>username</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"username\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"email\">\n      <Form.Label>email</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"email\"/>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"code\">\n      <Form.Label>code</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"verification code\"/>\n    </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n    Verify\n    </Button>\n  )}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default verifyUserForm;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './ForgotPasswordForm.css';\n\nconst ForgotPasswordForm = (props) => {\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n  <h1>Forgot Password</h1>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"username\">\n      <Form.Label>Username</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"username\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"email\">\n      <Form.Label>email</Form.Label>\n      <Form.Control type=\"email\" placeholder=\"email\"/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">Request New Password</Button>\n  </Form.Row>\n</Form>\n</div>\n\n)};\n\nexport default ForgotPasswordForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from 'moment';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport LoginForm from '../../components/forms/auth/LoginForm';\nimport VerifyUserForm from '../../components/forms/auth/VerifyUserForm';\nimport ForgotPasswordForm from '../../components/forms/auth/ForgotPasswordForm';\n\nclass LoginPage extends Component {\n  state = {\n    verifying: false,\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    userSeshStore: false,\n    user: {},\n    activityA: null,\n    requestingPasswordReset: false,\n    showForm: 'login',\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...login component mounted...');;\n  }\n\n  submitLoginForm = (event) => {\n    event.preventDefault();\n    this.context.setUserAlert(\"...submitLoginForm...\")\n    console.log(\"...submitLoginForm...\");\n\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      this.context.setUserAlert(\"...blank fields!!!...\")\n      return;\n    }\n    let requestBody = {\n        query: `\n          {login(email:\"${email}\",password:\"${password}\")\n          {activityId,role,token,tokenExpiration,error}}`\n        };\n\n    fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.login);\n      let responseAlert = '...login success!...';\n      let error = null;\n      if (resData.data.login.error) {\n        error = resData.data.login.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      if (resData.data.login.token !== \"\") {\n        this.context.login(\n          resData.data.login.token,\n          resData.data.login.activityId,\n          resData.data.login.role,\n          resData.data.login.tokenExpiration\n        );\n        const sessionObject = {\n          token: resData.data.login.token,\n          activityId: resData.data.login.activityId,\n          role: resData.data.login.role,\n          tokenExpiration: resData.data.login.tokenExpiration\n        }\n        this.context.setUserAlert(responseAlert)\n       sessionStorage.setItem('logInfo', JSON.stringify(sessionObject));\n       this.setState({ activityA: `login?${sessionObject.activityId}`})\n       this.logUserActivity();\n      }\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n  };\n\n  logUserActivity() {\n    console.log('...logUserActivity...');\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    const activityId = seshStore.activityId;\n    const token = seshStore.token;\n    const userId = activityId;\n    const request = this.state.activityA;\n    const activityDate = moment().format('YYYY-MM-DD');\n    let requestBody = {\n      query: `\n        mutation {addUserActivity(\n          activityId:\"${activityId}\",userId:\"${userId}\",\n          userInput:{\n            activityDate:\"${activityDate}\",\n            activityRequest:\"${request}\"\n          })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n      `};\n    fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log('...resData...',resData.data.addUserActivity);\n        if (resData.data.addUserActivity.error) {\n          console.log('...resDataError...',resData.data.addUserActivity.error);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  verifyUser = (event) => {\n    event.preventDefault();\n    console.log('...verify user...');\n    const email = event.target.email.value;\n    const type = event.target.type.value;\n    const code = event.target.code.value;\n    const username = event.target.username.value;\n\n    const requestBody = {\n      query: `\n        mutation {verifyUser(\n          userInput:{\n            username:\"${username}\",\n            contactEmail:\"${email}\",\n            verificationType:\"${type}\",\n            verificationCode:\"${code}\"\n          }\n        )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n        `};\n\n    fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log('...resData...',resData.data.verifyUser);\n        this.context.setUserAlert('Verified...Please try loggin in again..')\n      })\n      .catch(err => {\n        this.context.setUserAlert(err)\n      });\n  }\n\n  toggleVerification = () => {\n    if (this.state.showForm === 'verify') {\n      this.setState({\n        showForm: 'login'\n      })\n    } else {\n      this.setState({\n        showForm: 'verify'\n      })\n    }\n\n  };\n  toggleForgotPassword = () => {\n    if (this.state.showForm === 'forgotPassword') {\n      this.setState({\n        showForm: 'login'\n      })\n    } else {\n      this.setState({\n        showForm: 'forgotPassword'\n      })\n    }\n\n  }\n\n  requestPasswordReset = (event) => {\n    event.preventDefault();\n    console.log('...requesting password reset...');\n    this.setState({isLoading: true})\n\n    const username = event.target.username.value;\n    const email = event.target.email.value;\n    const requestBody = {\n      query: `\n         mutation {requestPasswordReset(\n           userInput:{\n             username:\"${username}\",\n             contactEmail:\"${email}\"\n           })\n           {_id,username,contact{email}verification{verified,type,code}}}\n        `};\n\n    fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log('...resData...',resData.data.requestPasswordReset)\n        if (resData.errors) {\n          this.context.setUserAlert(resData.errors[0].message);\n        } else {\n          this.context.setUserAlert('...password reset request sent...');\n          this.setState({isLoading: false, requestingPasswordReset: false});\n          this.toggleForgotPassword();\n        }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  render() {\n    return (\n      <Container className=\"authPageContainer\">\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n      {this.state.showForm === 'login' && (\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n            <LoginForm\n              onConfirm={this.submitLoginForm}\n              onStartForgotPassword={this.toggleForgotPassword}\n              onStartVerification={this.toggleVerification}\n            />\n          </Col>\n        </Row>\n      )}\n\n      {this.state.showForm === 'verify' && (\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n            <VerifyUserForm\n              canCancel\n              canConfirm\n              onCancel={this.toggleVerification}\n              onConfirm={this.verifyUser}\n            />\n          </Col>\n        </Row>\n      )}\n\n\n      {this.state.showForm === 'forgotPassword' && (\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n            <ForgotPasswordForm\n              onCancel={this.toggleForgotPassword}\n              onConfirm={this.requestPasswordReset}\n            />\n          </Col>\n        </Row>\n      )}\n\n      </Container>\n\n    );\n  }\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './authForms.css';\n\nconst SignupForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Signup</h1>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"email\">\n        <Form.Label>email Address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"password\">\n        <Form.Label>password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"password\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"role\">\n        <Form.Label>role</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Admin</option>\n          <option>Staff</option>\n          <option>Nurse</option>\n          <option>Doctor</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Mr</option>\n          <option>Mrs</option>\n          <option>Ms</option>\n          <option>Dr</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"name\">\n        <Form.Label>name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"username\">\n        <Form.Label>username</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"username\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"dob\">\n        <Form.Label>dob</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"gender\">\n        <Form.Label>gender</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Female</option>\n          <option>Male</option>\n          <option>Prefer Not to Say</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"phone\">\n        <Form.Label>phone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760001234\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"phone2\">\n        <Form.Label>phone2</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760005678\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressNumber\">\n        <Form.Label>addressNumber</Form.Label>\n        <Form.Control type=\"number\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressStreet\">\n        <Form.Label>addressStreet</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressTown\">\n        <Form.Label>addressTown</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressCity\">\n        <Form.Label>addressCity</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressParish\">\n        <Form.Label>addressParish</Form.Label>\n        <Form.Control as=\"select\">\n          <option>none</option>\n          <option>Hanover</option>\n          <option>St. Elizabeth</option>\n          <option>St. James</option>\n          <option>Trelawny</option>\n          <option>Westmoreland</option>\n          <option>Clarendon</option>\n          <option>Manchester</option>\n          <option>St. Ann</option>\n          <option>St. Catherine</option>\n          <option>St. Mary</option>\n          <option>Kingston</option>\n          <option>St. Andrew</option>\n          <option>Portland</option>\n          <option>St. Thomas</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressCountry\">\n        <Form.Label>addressCountry</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressPostalCode\">\n        <Form.Label>addressPostalCode</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Signup</Button>\n    </Form.Row>\n    <Form.Row>\n      <Button variant=\"outline-warning\" className=\"loginFormBtn\">\n        <NavLink to=\"/login\">Login</NavLink>\n      </Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default SignupForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from 'moment';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport SignupForm from '../../components/forms/auth/SignupForm';\n\nclass SignUpPage extends Component {\n  state = {\n    verifying: false,\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    userSeshStore: false,\n    user: {},\n    activityA: null,\n    requestingPasswordReset: false,\n    signupStatus: null,\n    invited: false,\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...signup component mounted...');\n    // this.context.setUserAlert('...signup component mounted...')\n  }\n\n\n  submitSignupForm = (event) => {\n    event.preventDefault();\n    this.context.setUserAlert(\"...submitSignupForm...\")\n    console.log(\"...submitSignupForm...\");\n\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n    const role = event.target.role.value;\n    const name = event.target.name.value;\n    const title = event.target.title.value;\n    const username = event.target.username.value;\n    const dob = event.target.dob.value;\n    const gender = event.target.gender.value;\n    const phone = event.target.phone.value;\n    const phone2 = event.target.phone2.value;\n    const addressNumber = event.target.addressNumber.value;\n    const addressStreet = event.target.addressStreet.value;\n    const addressTown = event.target.addressTown.value;\n    const addressCity = event.target.addressCity.value;\n    const addressParish = event.target.addressParish.value;\n    const addressCountry = event.target.addressCountry.value;\n    const addressPostalCode = event.target.addressPostalCode.value;\n\n    if (email.trim().length === 0 ||\n        password.trim().length === 0 ||\n        role.trim().length === 0 ||\n        name.trim().length === 0 ||\n        username.trim().length === 0 ||\n        dob.trim().length === 0 ||\n        gender.trim().length === 0 ||\n        phone.trim().length === 0 ||\n        phone2.trim().length === 0 ||\n        addressNumber.trim().length === 0 ||\n        addressStreet.trim().length === 0 ||\n        addressTown.trim().length === 0 ||\n        addressCity.trim().length === 0 ||\n        addressParish.trim().length === 0 ||\n        addressCountry.trim().length === 0 ||\n        addressPostalCode.trim().length === 0\n        ) {\n      this.context.setUserAlert(\"...blank fields!!!...\");\n      return;\n    }\n    let requestBody = {\n        query: `\n            mutation {createUser(\n              userInput:{\n                password:\"${password}\",\n                title:\"${title}\",\n                name:\"${name}\",\n                role:\"${role}\",\n                username:\"${username}\",\n                dob:\"${dob}\",\n                gender:\"${gender}\",\n                contactPhone:\"${phone}\",\n                contactPhone2:\"${phone2}\",\n                contactEmail:\"${email}\",\n                addressNumber:${addressNumber},\n                addressStreet:\"${addressStreet}\",\n                addressTown:\"${addressTown}\",\n                addressCity:\"${addressCity}\",\n                addressParish:\"${addressParish}\",\n                addressCountry:\"${addressCountry}\",\n                addressPostalCode:\"${addressPostalCode}\"\n              }\n            )\n            {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n          `};\n    fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createUser);\n      let responseAlert = '...Signup success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      responseAlert = '...verificationCode: '+resData.data.createUser.verification.code+'';\n      this.context.setUserAlert(responseAlert);\n      this.setState({signupStatus: 'success'})\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n  };\n\n  submitInviteForm = (event) => {\n    event.preventDefault()\n    console.log('...checking inviteCode...');\n    this.context.setUserAlert('...checking inviteCode...')\n\n    const challenge = event.target.inviteCode.value;\n\n    let requestBody = {\n        query: `\n            query {verifyInvitation(challenge:\"${challenge}\")}\n          `};\n    fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data);\n      const result = resData.data.verifyInvitation;\n      if (result === 'matched') {\n        this.setState({invited: true})\n        this.context.setUserAlert('...invite code accepted...');\n      } else {\n        this.context.setUserAlert('...invite code rejected. Check & try again...');\n      }\n\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n\n\n  }\n\n\n  render() {\n    return (\n      <Container className=\"authPageContainer\">\n        {this.state.overlay === true && (\n          <LoadingOverlay\n            status={this.state.overlayStatus}\n          />\n        )}\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n          {this.state.invited !== true && (\n            <React.Fragment>\n            <Form onSubmit={this.submitInviteForm}>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"inviteCode\">\n                  <Form.Label>inviteCode</Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"inviteCode\"/>\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row className=\"formBtnRow\">\n                <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Submit</Button>\n              </Form.Row>\n            </Form>\n            </React.Fragment>\n          )}\n\n          {this.state.signupStatus !== 'success' &&\n          this.state.invited === true && (\n            <SignupForm\n              onConfirm={this.submitSignupForm}\n            />\n          )}\n          {this.state.signupStatus === 'success' && (\n            <React.Fragment>\n              <h1>SignUp Success...Proceed to Login</h1>\n              <Button variant=\"outline-warning\" className=\"loginFormBtn\">\n                <NavLink to=\"/login\">Login</NavLink>\n              </Button>\n            </React.Fragment>\n          )}\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default SignUpPage;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { NavLink } from 'react-router-dom';\nimport './CreateUserForm.css';\n\nconst ResetPasswordForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n\n<Form onSubmit={props.onConfirm}>\n  <h1>Reset Password</h1>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"verificationCode\">\n      <Form.Label>verificationCode</Form.Label>\n      <Form.Control type=\"text\" value={props.verf}/>\n    </Form.Group>\n  </Form.Row>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"password\">\n    <Form.Label>password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"password\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n    Reset\n    </Button>\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>\n      <NavLink to=\"/landing\">Cancel</NavLink>\n    </Button>\n  </Form.Row>\n</Form>\n\n</div>\n\n)};\n\nexport default ResetPasswordForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { useParams, NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from 'moment';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\nimport ResetPasswordForm from '../../components/forms/auth/ResetPasswordForm';\n\nclass PasswordResetPage extends Component {\n  state = {\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    passwordResetStatus: null,\n    user: {},\n    activityA: null,\n    activityId: null,\n    verfCode: null,\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...password component mounted...');\n    console.log();\n    this.setState({\n      activityId: this.props.location.pathname.split('@')[0].split('/')[2],\n      verfCode: this.props.location.pathname.split('@')[1]\n    })\n  }\n\n\n  submitResetPasswordForm = (event) => {\n    event.preventDefault();\n    this.context.setUserAlert(\"...submitSignupForm...\")\n    console.log(\"...submitSignupForm...\");\n\n    const password = event.target.password.value;\n    const verificationCode = this.state.verfCode;\n    const userId = this.state.activityId;\n    if (password.trim().length === 0 ||\n        verificationCode.trim().length === 0\n        ) {\n      this.context.setUserAlert(\"...blank fields!!!...\");\n      return;\n    }\n    let requestBody = {\n        query: `\n            mutation {resetUserPassword(\n              userId:\"${userId}\",\n              userInput:{\n                verificationCode:\"${verificationCode}\",\n                password:\"${password}\"\n              })\n            {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n          `};\n    fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      console.log('...resData...',resData.data.resetUserPassword);\n      let responseAlert = '...Password Reset Success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert);\n      this.setState({passwordResetStatus: 'success'})\n    })\n    .catch(err => {\n      this.context.setUserAlert(err);\n    });\n  };\n\n\n  render() {\n    return (\n      <Container className=\"authPageContainer\">\n        {this.state.overlay === true && (\n          <LoadingOverlay\n            status={this.state.overlayStatus}\n          />\n        )}\n        <Row className=\"authPageContainerRow\">\n          <Col className=\"authPageContainerCol\">\n          {this.state.passwordResetStatus !== 'success' && (\n            <ResetPasswordForm\n              onConfirm={this.submitResetPasswordForm}\n              verf={this.state.verfCode}\n            />\n          )}\n          {this.state.passwordResetStatus === 'success' && (\n            <React.Fragment>\n              <h1>Reset Success...Proceed to Login</h1>\n              <Button variant=\"outline-warning\" className=\"loginFormBtn\">\n                <NavLink to=\"/login\">Login</NavLink>\n              </Button>\n            </React.Fragment>\n          )}\n\n\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default PasswordResetPage;\n","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './UserItem.css';\n\nconst UserItem = (props) => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n  const [deleteState, setDeleteState] = useState(false);\n  const handleDeleteStateChange = () => {\n    if (deleteState === true) {\n      setDeleteState(false);\n    }\n    if (deleteState === false) {\n      setDeleteState(true);\n    }\n   }\n\n  return (\n    <li key={props.key} className=\"userItemLi\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Username: <span className=\"bold\">{props.user.username}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            role: <span className=\"bold\">{props.user.role}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                id: <span className=\"bold\">{props.user._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                name: <span className=\"bold\">{props.user.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                username: <span className=\"bold\">{props.user.username}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                title: <span className=\"bold\">{props.user.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                role: <span className=\"bold\">{props.user.role}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                dob: <span className=\"bold\">{moment.unix(props.user.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                age: <span className=\"bold\">{props.user.age}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                gender: <span className=\"bold\">{props.user.gender}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                loggedIn: <span className=\"bold\">{props.user.loggedIn === true && (<FontAwesomeIcon icon={faBatteryThreeQuarters} className=\"listIcon\"/>)} {props.user.loggedIn === false && (<FontAwesomeIcon icon={faBatteryEmpty} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n              {!props.appointmentPage &&\n                !props.visitPage &&\n                props.showDetails && (\n                  <li>\n                  <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.user)}/>\n                  </li>\n              )}\n              {props.appointmentPage && (\n                <li>\n                <Link\n                  to={{\n                    pathname: \"/staff\",\n                    state: {user: props.user._id}\n                  }}\n                >\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                </Link>\n                </li>\n              )}\n              {props.visitPage && (\n                <li>\n                <Link\n                  to={{\n                    pathname: \"/staff\",\n                    state: {user: props.user._id}\n                  }}\n                >\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                </Link>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n          {props.selectUser && (\n            <Button variant=\"outline-primary\" onClick={props.selectUser.bind(this, props.user)}>Add</Button>\n          )}\n          {deleteState === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.user)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from '../../items/user/UserItem';\nimport './UserList.css';\n\nconst UserList = props => {\n\n  const {...filter} = props.filter;\n  let users2 = props.users;\n  let propsUsers = [];\n\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'loggedIn') {\n    propsUsers = users2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field !== 'staff') {\n    propsUsers = users2;\n  }\n\n  let count = 0;\n\n  const users = propsUsers.map(user => {\n\n    count = propsUsers.indexOf(user)+1;\n\n    return (\n      <UserItem\n        key={count}\n        user={user}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        appointmentPage={props.appointmentPage}\n        visitPage={props.visitPage}\n        selectUser={props.selectUser}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{users}</ul>;\n};\n\nexport default UserList;\n","import React from 'react';\n\nimport UserItem from '../../items/user/UserItem';\nimport './UserList.css';\n\nconst SearchUserList = props => {\n\n  const {...filter} = props.filter;\n  let users2 = props.users;\n  let propsUsers = [];\n\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'name' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'username' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'title' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'role' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'age' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsUsers = users2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsUsers = users2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'staff' && filter.key === 'loggedIn') {\n    propsUsers = users2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field !== 'staff') {\n    propsUsers = users2;\n  }\n\n  let count = 0;\n\n  const users = propsUsers.map(user => {\n\n    count = propsUsers.indexOf(user)+1;\n\n    return (\n      <UserItem\n        key={count}\n        user={user}\n        canDelete={props.canDelete}\n        showDetails={props.showDetails}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{users}</ul>;\n};\n\nexport default SearchUserList;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\nimport S3 from 'react-aws-s3';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport UserAddressList from '../lists/user/UserAddressList'\nimport UserAttendanceList from '../lists/user/UserAttendanceList'\nimport UserLeaveList from '../lists/user/UserLeaveList'\nimport UserImageList from '../lists/user/UserImageList'\nimport UserFileList from '../lists/user/UserFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport UserNoteList from '../lists/user/UserNoteList'\n\nimport FilterAddressForm from '../forms/filter/FilterAddressForm';\nimport FilterAttendanceForm from '../forms/filter/FilterAttendanceForm';\nimport FilterLeaveForm from '../forms/filter/FilterLeaveForm';\nimport FilterImageForm from '../forms/filter/FilterImageForm';\nimport FilterFileForm from '../forms/filter/FilterFileForm';\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../forms/filter/FilterNoteForm';\n\nimport UpdateUserSingleFieldForm from '../forms/add/UpdateUserSingleFieldForm';\nimport AddAddressForm from '../forms/add/AddAddressForm';\nimport AddAttendanceForm from '../forms/add/AddAttendanceForm';\nimport AddLeaveForm from '../forms/add/AddLeaveForm';\nimport AddNoteForm from '../forms/add/AddNoteForm';\nimport AddImageForm from '../forms/add/AddImageForm';\nimport AddFileForm from '../forms/add/AddFileForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass UserDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    calendarAttendance: null,\n    calendarLeave: null,\n    calendarAppointments: null,\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    // this.props2 = this.props;\n  }\n\ncomponentDidMount () {\n  console.log('...staff details component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getPocketVars(seshStore);\n  }\n  this.setState({\n    selectedUser: this.context.selectedUser\n  })\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.parseForCalendar({\n    attendance: this.props.user.attendance,\n    leave: this.props.user.leave,\n    appointments: this.props.user.appointments,\n  })\n}\n// componentDidUpdate () {\n//   console.log('foo',this.props.user.appointments);\n// }\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n    console.log('...retriving pocketVars..');\n    this.context.setUserAlert('...retriving pocketVars..')\n    const token = args.token;\n    const activityId = args.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")}\n          `};\n\n    fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          this.setState({userAlert: resData.errors[0].message})\n        } else {\n          let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n          console.log('...retriving pocketVars success...');\n          this.context.setUserAlert('...retriving pocketVars success...')\n          this.setState({\n            pocketVars: pocketVarsParsed\n          });\n        }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n    }\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\n\nsubmitAddAddressForm = (event) => {\n  event.preventDefault();\n  console.log('...adding address...');\n  this.context.setUserAlert('...adding address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const number = event.target.number.value;\n  const street = event.target.street.value;\n  const town = event.target.town.value;\n  const city = event.target.city.value;\n  const parish = event.target.parish.value;\n  const country = event.target.country.value;\n  const postalCode = event.target.postalCode.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${number},\n          addressStreet:\"${street}\",\n          addressTown:\"${town}\",\n          addressCity:\"${city}\",\n          addressParish:\"${parish}\",\n          addressCountry:\"${country}\",\n          addressPostalCode:\"${postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAddress);\n      let responseAlert = '...address add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserAddress)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserAddress,\n        activityA: `addUserAddress?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAddress = (args) => {\n  console.log('...deleting address...');\n  this.context.setUserAlert('...deleting address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteUserAddress(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\",\n          addressPrimary: ${args.primary}\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAddress);\n      let responseAlert = '...address delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserAddress)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserAddress,\n        activityA: `deleteUserAddress?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsetAddressPrimary = (args) => {\n  console.log('...setting primary address...');\n  this.context.setUserAlert('...setting primary address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n      mutation {setUserAddressPrimary(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\"\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.setUserAddressPrimary);\n      let responseAlert = '...address set primary success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.setUserAddressPrimary)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.setUserAddressPrimary,\n        activityA: `setUserAddressPrimary?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.setUserAddressPrimary;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddAttendanceForm = (event) => {\n  event.preventDefault();\n  console.log('...adding attendance...');\n  this.context.setUserAlert('...attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const attendanceDate = event.target.date.value;\n  const attendanceStatus = event.target.status.value;\n  const attendanceDescription = event.target.description.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserAttendance(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          attendanceDate:\"${attendanceDate}\",\n          attendanceStatus:\"${attendanceStatus}\",\n          attendanceDescription:\"${attendanceDescription}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserAttendance);\n      let responseAlert = '...attendance add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserAttendance)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserAttendance,\n        activityA: `addUserAttendance?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.addUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAttendance = (args) => {\n  console.log('...deleting attendance...');\n  this.context.setUserAlert('...deleting attendance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserAttendance(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            attendanceDate:\"${args.date}\",\n            attendanceStatus:\"${args.status}\",\n            attendanceDescription:\"${args.description}\"\n          }){_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserAttendance);\n      let responseAlert = '...attendance delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserAttendance)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserAttendance,\n        activityA: `deleteUserAttendance?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.deleteUserAttendance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddLeaveForm = (event) => {\n  event.preventDefault();\n  console.log('...adding leave...');\n  this.context.setUserAlert('...leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const startDate = event.target.startDate.value;\n  const endDate = event.target.endDate.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserLeave(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          leaveType:\"${type}\",\n          leaveStartDate:\"${startDate}\",\n          leaveEndDate:\"${endDate}\",\n          leaveDescription:\"${description}\"\n        }){_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserLeave);\n      let responseAlert = '...leave add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserLeave)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserLeave,\n        activityA: `addUserLeave?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.addUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteLeave = (args) => {\n  console.log('...deleting leave...');\n  this.context.setUserAlert('...deleting leave...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserLeave(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            leaveType:\"${args.type}\",\n            leaveStartDate:\"${args.startDate}\",\n            leaveEndDate:\"${args.endDate}\",\n            leaveDescription:\"${args.description}\"\n          })\n          {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserLeave);\n      let responseAlert = '...leave delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserLeave)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserLeave,\n        activityA: `deleteUserLeave?activityId:${activityId},userId:${userId}`\n      });\n      this.parseForCalendar({\n        attendance: this.props.user.attendance,\n        leave: this.props.user.leave,\n        appointments: this.props.user.appointments,\n      })\n      this.context.selectedUser = resData.data.deleteUserLeave;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding image...');\n  this.context.setUserAlert('...image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const username = this.props.user.username;\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+userId+'/images';\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addUserImage(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          imageName:\"${imageName}\",\n          imageType:\"${imageType}\",\n          imagePath:\"${imagePath}\"\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserImage);\n      let responseAlert = '...image add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserImage)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserImage,\n        activityA: `addUserImage?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n  console.log('...deleting image...');\n  this.context.setUserAlert('...deleting image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const username = this.props.user.username;\n\n  const filePath = 'staff/'+username+'/images';\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            imageName:\"${args.name}\",\n            imageType:\"${args.type}\",\n            imagePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserImage);\n      let responseAlert = '...image delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserImage)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserImage,\n        activityA: `deleteUserImage?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'staff/'+userId+'/images';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding file...');\n  this.context.setUserAlert('...file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n\n  const username = this.props.user.username;\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'staff/'+userId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n      mutation {addUserFile(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          fileName:\"${file2Name}\",\n          fileType:\"${file2Type}\",\n          filePath:\"${file2Path}\"\n        })\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserFile);\n      let responseAlert = '...file add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserFile)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserFile,\n        activityA: `addUserFile?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n  console.log('...deleting file...');\n  this.context.setUserAlert('...deleting file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const username = this.props.user.username;\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n        mutation {deleteUserFile(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            fileName:\"${args.name}\",\n            fileType:\"${args.type}\",\n            filePath:\"${args.path}\"\n          })\n          {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserFile);\n      let responseAlert = '...file delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserFile)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserFile,\n        activityA: `deleteUserFile?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'staff/'+userId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding note...');\n  this.context.setUserAlert('...note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const note = event.target.note.value;\n\n  let requestBody = {\n    query: `\n      mutation {addUserNotes(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          notes:\"${note}\"\n        }){_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.addUserNotes)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.addUserNotes,\n        activityA: `addUserNotes?activityId:${activityId},userId:${userId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.addUserNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n  console.log('...deleting note...');\n  this.context.setUserAlert('...deleting note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  let requestBody = {\n    query: `\n        mutation {deleteUserNote(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            note: \"${args}\"\n          })\n          {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.deleteUserNote)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.deleteUserNote,\n        activityA: `deleteUserNote?activityId:${activityId},userId:${userId}`\n      });\n      this.context.selectedUser = resData.data.deleteUserNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.props.user._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateUserSingleField(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateUserSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateUser(resData.data.updateUserSingleField)\n      this.setState({\n        isLoading: false,\n        selectedUser: resData.data.updateUserSingleField,\n        activityA: `updateUserSingleField?activityId:${activityId},userId:${userId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedUser = resData.data.updateUserSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing staff dates for calendar...');\n  let calendarAttendance = args.attendance.map(x => ({\n      title: x.status,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        status: x.status,\n        description: x.description,\n        field: 'attendance'\n      }\n    }))\n  let calendarLeave = args.leave.map(x => ({\n      title: x.type,\n      date: moment.unix(x.startDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      end: moment.unix(x.endDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        date: x.date,\n        type: x.type,\n        startDate: x.startDate,\n        endDate: x.endDate,\n        description: x.description,\n        field: 'leave'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave\n    })\n  let calendarAppointments = args.appointments.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n        field: 'appointments'\n      }\n    }))\n    this.setState({\n      calendarAttendance: calendarAttendance,\n      calendarLeave: calendarLeave,\n      calendarAppointments: calendarAppointments,\n    })\n}\n\nviewCalendarEvent = (args) => {\n\n  let input = args.event.extendedProps.props;\n  let data;\n  if (input.field === 'attendance') {\n    data = {\n      date: input.date,\n      status: input.status,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAttendance', data: data}\n    })\n  }\n  if (input.field === 'leave') {\n    data = {\n      type: input.type,\n      startDate: input.startDate,\n      endDate: input.endDate,\n      description: input.description,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarLeave', data: data}\n    })\n  }\n  if (input.field === 'appointments') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      location: input.location,\n      description: input.description,\n      important: input.important,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAppointment', data: data, goLink: true}\n    })\n  }\n\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {\n            !this.props.user && (\n              <h3>...</h3>\n            )\n          }\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={2} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'address')}>Addresses</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'attendance')}>Attendance</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'leave')}>Leave</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'image')}>Images</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'file')}>Files</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'appointment')}>Appointments</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'address' && (\n                  <FilterAddressForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'attendance' && (\n                  <FilterAttendanceForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'leave' && (\n                  <FilterLeaveForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'image' && (\n                  <FilterImageForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'file' && (\n                  <FilterFileForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'appointment' && (\n                  <FilterAppointmentForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'note' && (\n                  <FilterNoteForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n\n            )}\n          </Col>\n\n          {this.props.user && (\n            <Col md={10} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdateUserSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n              <Tab.Content className=\"tabContent\">\n                <Tab.Pane eventKey=\"1\">\n                  User Basic:\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Title:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.title}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                      <p className=\"listGroupText\">Name:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.name}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'name')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Username:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.username}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                      <p className=\"listGroupText\">Role:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.role}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">DOB:</p>\n                      <p className=\"listGroupText bold\">{moment.unix(this.props.user.dob.substr(0,9)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                      <p className=\"listGroupText\">Age:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.age}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Gender:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.gender}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Email:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.contact.email}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Phone:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.contact.phone}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                      <p className=\"listGroupText\">Phone 2:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.contact.phone2}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p></p>\n                      <p></p>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"2\">\n                  User Admin\n                  <ListGroup className=\"profileBasicListGroup\">\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Reg No:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.registrationNumber}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.props.user._id}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">LoggedIn:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.loggedIn.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">ClientConnected:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.clientConnected.toString()}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <p className=\"listGroupText\">Verified:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.verification.verified.toString()}</p>\n                      <p className=\"listGroupText\">Type:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.verification.type}</p>\n                      <p className=\"listGroupText\">Code:</p>\n                      <p className=\"listGroupText bold\">{this.props.user.verification.code}</p>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"3\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Address List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.context.role === 'Admin' && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'address' && (\n                      <AddAddressForm\n                        onConfirm={this.submitAddAddressForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserAddressList\n                    filter={this.state.filter}\n                    addresses={this.props.user.addresses}\n                    authId={this.context.activityId}\n                    onDelete={this.deleteAddress}\n                    canDelete={this.state.canDelete}\n                    makePrimary={this.setAddressPrimary}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"4\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Attendance List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.context.role === 'Admin' && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'attendance')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'attendance' && (\n                      <AddAttendanceForm\n                        onConfirm={this.submitAddAttendanceForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAttendanceList\n                      filter={this.state.filter}\n                      attendance={this.props.user.attendance}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteAttendance}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAttendance}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"5\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Leave List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.context.role === 'Admin' && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'leave')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'leave' && (\n                      <AddLeaveForm\n                        onConfirm={this.submitAddLeaveForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserLeaveList\n                      filter={this.state.filter}\n                      leave={this.props.user.leave}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteLeave}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarLeave}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"6\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Image List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.context.role === 'Admin' && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'image' && (\n                      <AddImageForm\n                        onConfirm={this.submitAddImageForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserImageList\n                    filter={this.state.filter}\n                    images={this.props.user.images}\n                    authId={this.context.activityId}\n                    showListDetails={this.showListDetails}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteImage}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"7\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User File List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.context.role === 'Admin' && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'file' && (\n                      <AddFileForm\n                        onConfirm={this.submitAddFileForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserFileList\n                    filter={this.state.filter}\n                    files={this.props.user.files}\n                    authId={this.context.activityId}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteFile}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"8\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Appointment List:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                  </Row>\n                  <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"1\" title=\"list\">\n                    <UserAppointmentList\n                      filter={this.state.filter}\n                      appointments={this.props.user.appointments}\n                      authId={this.context.activityId}\n                    />\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                      <h3>Calendar</h3>\n                      <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin]}\n                        events={this.state.calendarAppointments}\n                        eventClick={this.viewCalendarEvent}\n                      />\n                    </Tab>\n                  </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"9\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <p className=\"displayPaneTitle\">User Notes:</p>\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    {this.context.role === 'Admin' && (\n                      <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                    )}\n                  </Row>\n                  {this.state.adding.state === true &&\n                    this.state.adding.field === 'note' && (\n                      <AddNoteForm\n                        onConfirm={this.submitAddNoteForm}\n                        onCancel={this.cancelAdd}\n                      />\n                  )}\n                  <UserNoteList\n                    filter={this.state.filter}\n                    notes={this.props.user.notes}\n                    authId={this.context.activityId}\n                    canDelete={this.state.canDelete}\n                    onDelete={this.deleteNote}\n                  />\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default UserDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterUserForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"staff\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>username</option>\n          <option>title</option>\n          <option>role</option>\n          <option>dob</option>\n          <option>age</option>\n          <option>gender</option>\n          <option>loggedIn</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterUserForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst UserSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>title</option>\n          <option>name</option>\n          <option>username</option>\n          <option>registrationNumber</option>\n          <option>dob</option>\n          <option>age</option>\n          <option>gender</option>\n          <option>contact.email</option>\n          <option>contact.phone</option>\n          <option>contact.phone2</option>\n          <option>addresses.number</option>\n          <option>addresses.street</option>\n          <option>addresses.town</option>\n          <option>addresses.city</option>\n          <option>addresses.parish</option>\n          <option>addresses.country</option>\n          <option>addresses.postalCode</option>\n          <option>addresses.primary</option>\n          <option>loggedIn</option>\n          <option>clientConnected</option>\n          <option>verification.verified</option>\n          <option>attendance.date</option>\n          <option>attendance.status</option>\n          <option>attendance.description</option>\n          <option>leave.type</option>\n          <option>leave.startDate</option>\n          <option>leave.endDate</option>\n          <option>leave.description</option>\n          <option>images.name</option>\n          <option>images.type</option>\n          <option>images.path</option>\n          <option>files.name</option>\n          <option>files.type</option>\n          <option>files.path</option>\n          <option>notes</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default UserSearchForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport UserList from '../../components/lists/user/UserList';\nimport SearchUserList from '../../components/lists/user/SearchUserList';\nimport UserDetail from '../../components/details/UserDetail';\n\nimport FilterUserForm from '../../components/forms/filter/FilterUserForm';\nimport UserSearchForm from '../../components/forms/search/UserSearchForm';\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './staff.css';\n\nclass StaffPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    searchUsers: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    canDelete: false,\n    fromGoLink: null,\n    goLinkId: null,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all users component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    if (this.props.location.state) {\n      if (this.props.location.state.user) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.user\n        })\n      }\n    }\n    this.getAllUsers(seshStore);\n    if (this.props.selectedUser) {\n      console.log('...found existing user selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedUser: this.props.selectedUser\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      console.log('...all users retrieval success!...');\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkUser = resData.data.getAllUsers.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedUser: goLinkUser,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n        activityA: `getAllUsers?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchUsers = (event) => {\n  event.preventDefault();\n  console.log('...searching users...');\n  this.context.setUserAlert('...searching users...')\n  // this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'age' ||\n      field === 'dob' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'attendance.date' ||\n      field === 'leave.startDate' ||\n      field === 'leave.endDate'\n    ) {\n      regex = false;\n  }\n  console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getUsersByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getUsersByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getUsersByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getUsersByField);\n      }\n\n      let responseAlert = '...staff search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchUsers: resData.data.getUsersByFieldRegex,\n          activityA: `getUsersByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n        this.context.activityUser = resData.data.getUsersByFieldRegex;\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchUsers: resData.data.getUsersByField,\n          activityA: `getUsersByField?activityId:${activityId},userId:${userId}`\n        });\n        this.context.activityUser = resData.data.getUsersByField;\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nshowDetails = (args) => {\n  this.setState({\n    showDetails: true,\n    selectedUser: args,\n    tabKey: 'detail'\n  })\n  this.props.selectUser(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nupdateUser = (args) => {\n  console.log('...updating user...');\n  this.setState({\n    selectedUser: args\n  })\n  this.props.selectUser(args);\n}\n\ndeleteUser = (args) => {\n  console.log('...deleteing user...',args);\n  this.context.setUserAlert('...deleteing user...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteUserById(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\"\n      )\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteUserById);\n      let responseAlert = '...delete user success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteUserById?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllUsers({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n        <h1>Staff: {this.state.showDetails === true &&\n                      this.state.selectedUser &&\n                      this.state.tabKey === 'detail' && (\n                            this.state.selectedUser.name\n                          )}</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col md={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterUserForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.users && (\n            <Col md={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content>\n                <Tab.Pane eventKey=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                  <UserList\n                    filter={this.state.filter}\n                    users={this.state.users}\n                    authId={this.context.activityId}\n                    canDelete={this.state.canDelete}\n                    showDetails={this.showDetails}\n                    onDelete={this.deleteUser}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Staff</h3>\n                  <Row className=\"userSearchRow\">\n                    <UserSearchForm\n                      onConfirm={this.searchUsers}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchUsers && (\n                      <Button variant=\"outline-primary\" className=\"centered_btn\" onClick={this.toggleSideCol}>Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchUsers && (\n                      <SearchUserList\n                        filter={this.state.filter}\n                        users={this.state.searchUsers}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedUser && (\n                  <UserDetail\n                    user={this.state.selectedUser}\n                    updateUser={this.updateUser}\n                  />\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default StaffPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './createForms.css';\nimport moment from 'moment';\n\nconst CreatePatientForm = (props) => {\n  const today = moment().format('YYYY-MM-DD')\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Create Patient Form</h1>\n    <p> \"*\" denotes required fields...</p>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"active\">\n        <Form.Label>Active</Form.Label>\n        <Form.Control as=\"select\">\n          <option>false</option>\n          <option>true</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>Title *</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Mr</option>\n          <option>Mrs</option>\n          <option>Ms</option>\n          <option>Dr</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"name\">\n        <Form.Label>name *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"username\">\n        <Form.Label>username *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"username\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"dob\">\n        <Form.Label>dob *</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"gender\">\n        <Form.Label>gender *</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Female</option>\n          <option>Male</option>\n          <option>Prefer Not to Say</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"role\">\n        <Form.Label>role </Form.Label>\n        <Form.Control type=\"text\" value=\"standard patient\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"contactEmail\">\n        <Form.Label>email *</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"contactPhone\">\n        <Form.Label>phone *</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760001234\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"contactPhone2\">\n        <Form.Label>phone2</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+18760005678\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressNumber\">\n        <Form.Label>addressNumber</Form.Label>\n        <Form.Control type=\"number\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressStreet\">\n        <Form.Label>addressStreet</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressTown\">\n        <Form.Label>addressTown</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"addressCity\">\n        <Form.Label>addressCity</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressParish\">\n        <Form.Label>addressParish</Form.Label>\n        <Form.Control as=\"select\">\n          <option>none</option>\n          <option>Hanover</option>\n          <option>St. Elizabeth</option>\n          <option>St. James</option>\n          <option>Trelawny</option>\n          <option>Westmoreland</option>\n          <option>Clarendon</option>\n          <option>Manchester</option>\n          <option>St. Ann</option>\n          <option>St. Catherine</option>\n          <option>St. Mary</option>\n          <option>Kingston</option>\n          <option>St. Andrew</option>\n          <option>Portland</option>\n          <option>St. Thomas</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressCountry\">\n        <Form.Label>addressCountry</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"addressPostalCode\">\n        <Form.Label>addressPostalCode</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"referralDate\">\n        <Form.Label>referralDate: YYYY-MM-DD</Form.Label>\n        <Form.Control type=\"date\" placeholder={today}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"referralReason\">\n        <Form.Label>referralReason</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"referralReason\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"referralPhysicianName\">\n        <Form.Label>referralPhysicianName</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"referralPhysicianName\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"referralPhysicianPhone\">\n        <Form.Label>referralPhysicianPhone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"referralPhysicianPhone\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"referralPhysicianEmail\">\n        <Form.Label>referralPhysicianEmail</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"referralPhysicianAddress\">\n        <Form.Label>referralPhysicianAddress</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"referralPhysicianAddress\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"attendingPhysician\">\n        <Form.Label>attendingPhysician</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"attendingPhysician\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"occupationRole\">\n        <Form.Label>occupationRole</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"occupationRole\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"occupationEmployerName\">\n        <Form.Label>occupationEmployerName</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"occupationEmployerName\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"occupationEmployerEmail\">\n        <Form.Label>occupationEmployerEmail</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"alpha@beta.omega\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"occupationEmployerPhone\">\n        <Form.Label>occupationEmployerPhone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"occupationEmployerPhone\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"occupationEmployerAddress\">\n        <Form.Label>occupationEmployerAddress</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"occupationEmployerAddress\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"occupationEmployerAddress\">\n        <Form.Label>occupationEmployerAddress</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"occupationEmployerAddress\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"insuranceCompany\">\n        <Form.Label>insuranceCompany</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"insuranceCompany\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"insurancePolicyNumber\">\n        <Form.Label>insurancePolicyNumber</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"insurancePolicyNumber\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"insuranceExpiryDate\">\n        <Form.Label>insuranceExpiryDate</Form.Label>\n        <Form.Control type=\"date\" placeholder={today}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"insuranceDescription\">\n        <Form.Label>insuranceDescription</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"insuranceDescription\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"insuranceSubscriberCompany\">\n        <Form.Label>insuranceSubscriberCompany</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"insuranceSubscriberCompany\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"insuranceSubscriberDescription\">\n        <Form.Label>insuranceSubscriberDescription</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"insuranceSubscriberDescription\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Create</Button>\n      <Button variant=\"outline-danger\" className=\"loginFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default CreatePatientForm;\n","import React from 'react';\n\nimport PatientItem from '../../items/patient/PatientItem';\nimport './UserList.css';\n\nconst SearchPatientList = props => {\n\n  const {...filter} = props.filter;\n  let patients2 = props.patients;\n  let propsPatients = [];\n\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'name' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.username > b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'username' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.username < b.username) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'title' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.role > b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'role' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.role < b.role) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'dob' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.dob < b.dob) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.age > b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'age' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.age < b.age) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Ascending') {\n    propsPatients = patients2.sort((a, b) => (a.gender > b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'gender' && filter.value === 'Descending') {\n    propsPatients = patients2.sort((a, b) => (a.gender < b.gender) ? 1 : -1);\n  }\n  if (filter.field === 'patient' && filter.key === 'loggedIn') {\n    propsPatients = patients2.filter(x => x.loggedIn === filter.value);\n  }\n  if (filter.field === 'patient' && filter.key === 'active') {\n    propsPatients = patients2.filter(x => x.active === filter.value);\n  }\n\n  if (filter.field !== 'patient') {\n    propsPatients = patients2;\n  }\n\n  let count = 0;\n\n  const patients = propsPatients.map(patient => {\n\n    count = propsPatients.indexOf(patient)+1;\n\n    return (\n      <PatientItem\n        key={count}\n        patient={patient}\n        canDelete={props.canDelete}\n        showDetails={props.showDetails}\n      />\n    );\n  });\n\n  return <ul className=\"userList\">{patients}</ul>;\n};\n\nexport default SearchPatientList;\n","import React from 'react';\n\nimport AddressItem from '../../items/user/AddressItem';\nimport './UserList.css';\n\nconst PatientAddressList = props => {\n\n  const {...filter} = props.filter;\n  let addresses2 = props.addresses;\n  let propsAddresses = [];\n\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number > b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'number' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.number < b.number) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street > b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'street' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.street < b.street) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town > b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'town' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.town < b.town) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city > b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'city' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.city < b.city) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish > b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'parish' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.parish < b.parish) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country > b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'country' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.country < b.country) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Ascending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode > b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'postalCode' && filter.value === 'Descending') {\n    propsAddresses = addresses2.sort((a, b) => (a.postalCode < b.postalCode) ? 1 : -1);\n  }\n  if (filter.field === 'address' && filter.key === 'primary') {\n    propsAddresses = addresses2.filter(x => x.primary === filter.value);\n  }\n  if (filter.field !== 'address') {\n    propsAddresses = addresses2;\n  }\n\n  let count = 0;\n\n  const addresses = propsAddresses.map(address => {\n\n    count = propsAddresses.indexOf(address)+1;\n\n    return (\n      <AddressItem\n        key={count}\n        address={address}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        makePrimary={props.makePrimary}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{addresses}</ul>;\n};\n\nexport default PatientAddressList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst NextOfKinItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Name: <span className=\"bold\">{props.nextOfKin.name}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Relation: <span className=\"bold\">{props.nextOfKin.relation}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.nextOfKin.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Relation: <span className=\"bold\">{props.nextOfKin.relation}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Email: <span className=\"bold\">{props.nextOfKin.contact.email}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Phone: <span className=\"bold\">{props.nextOfKin.contact.phone}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Phone2: <span className=\"bold\">{props.nextOfKin.contact.phone2}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.nextOfKin)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default NextOfKinItem;\n","import React from 'react';\n\nimport NextOfKinItem from '../../items/patient/NextOfKinItem';\nimport './UserList.css';\n\nconst PatientNextOfKinList = props => {\n\n  const {...filter} = props.filter;\n  let nextOfKin2 = props.nextOfKin;\n  let propsNextOfKin = [];\n\n  if (filter.field === 'nextOfKin' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'nextOfKin' && filter.key === 'name' && filter.value === 'Descending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'nextOfKin' && filter.key === 'relation' && filter.value === 'Ascending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.relation > b.relation) ? 1 : -1);\n  }\n  if (filter.field === 'nextOfKin' && filter.key === 'relation' && filter.value === 'Descending') {\n    propsNextOfKin = nextOfKin2.sort((a, b) => (a.relation < b.relation) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'nextOfKin') {\n    propsNextOfKin = nextOfKin2;\n  }\n\n  let count = 0;\n\n  const nextOfKin = propsNextOfKin.map(nextOfKinItem => {\n    // console.log('nok',nextOfKinItem);\n    count = propsNextOfKin.indexOf(nextOfKinItem)+1;\n\n    return (\n      <NextOfKinItem\n        key={count}\n        nextOfKin={nextOfKinItem}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        makePrimary={props.makePrimary}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{nextOfKin}</ul>;\n};\n\nexport default PatientNextOfKinList;\n","import React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst AttachmentItem = props => {\n\n  const [deleteState, setDeleteState] = useState(false);\n  const handleDeleteStateChange = () => {\n    if (deleteState === true) {\n      setDeleteState(false);\n    }\n    if (deleteState === false) {\n      setDeleteState(true);\n    }\n   }\n\n  return (\n    <li key={props.key} className=\"\">\n\n        <Row>\n          <p>\n            <span className=\"bold\">{props.attachment}</span>\n          </p>\n          {props.canDelete === true && (\n            <FontAwesomeIcon icon={faEraser} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n\n          {props.canDelete === true &&\n             deleteState === true && (\n            <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, {\n              type: props.type,\n              attachment: props.attachment,\n              item: props.item\n            })}>Delete</Button>\n          )}\n        </Row>\n\n    </li>\n  )\n}\n\nexport default AttachmentItem;\n","import React from 'react';\n\nimport AttachmentItem from '../../items/patient/AttachmentItem';\nimport './UserList.css';\n\nconst PatientAttachmentList = props => {\n\n  let count = 0;\n\n  const attachments = props.attachments.map(attachment => {\n    count = props.attachments.indexOf(attachment)+1;\n\n    return (\n      <AttachmentItem\n        key={count}\n        item={props.item}\n        attachment={attachment}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        type={props.type}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{attachments}</ul>;\n};\n\nexport default PatientAttachmentList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './PatientItem.css';\n\nconst AllergyItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.allergy.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.allergy.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.allergy.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.allergy.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'allergy',data:props.allergy})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.allergy}\n                attachments={props.allergy.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"allergy\"\n              />\n              </li>\n              <li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              </li>\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.allergy)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default AllergyItem;\n","import React from 'react';\n\nimport AllergyItem from '../../items/patient/AllergyItem';\nimport './UserList.css';\n\nconst PatientAllergyList = props => {\n\n  const {...filter} = props.filter;\n  let allergies2 = props.allergies;\n  let propsAllergies = [];\n\n  if (filter.field === 'allergy' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsAllergies = allergies2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'allergy' && filter.key === 'title' && filter.value === 'Descending') {\n    propsAllergies = allergies2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'allergy' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsAllergies = allergies2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'allergy' && filter.key === 'type' && filter.value === 'Descending') {\n    propsAllergies = allergies2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'allergy') {\n    propsAllergies = allergies2;\n  }\n\n  let count = 0;\n\n  const allergies = propsAllergies.map(allergy => {\n    count = propsAllergies.indexOf(allergy)+1;\n\n    return (\n      <AllergyItem\n        key={count}\n        allergy={allergy}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{allergies}</ul>;\n};\n\nexport default PatientAllergyList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './PatientItem.css';\n\nconst MedicationItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.medication.title}</span>\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.medication.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.medication.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.medication.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'medication',data:props.medication})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.medication}\n                attachments={props.medication.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"medication\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.medication)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default MedicationItem;\n","import React from 'react';\n\nimport MedicationItem from '../../items/patient/MedicationItem';\nimport './UserList.css';\n\nconst PatientMedicationList = props => {\n\n  const {...filter} = props.filter;\n  let medication2 = props.medication;\n  let propsMedication = [];\n\n  if (filter.field === 'medication' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsMedication = medication2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'medication' && filter.key === 'title' && filter.value === 'Descending') {\n    propsMedication = medication2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'medication' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsMedication = medication2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'medication' && filter.key === 'type' && filter.value === 'Descending') {\n    propsMedication = medication2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  // if (filter.field === 'nextOfKin' && filter.key === 'primary') {\n  //   propsNextOfKin = nextOfKin2.filter(x => x.primary === filter.value);\n  // }\n  if (filter.field !== 'medication') {\n    propsMedication = medication2;\n  }\n\n  let count = 0;\n\n  const medication = propsMedication.map(medicationItem => {\n    count = propsMedication.indexOf(medicationItem)+1;\n\n    return (\n      <MedicationItem\n        key={count}\n        medication={medicationItem}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"addressList\">{medication}</ul>;\n};\n\nexport default PatientMedicationList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst ImageItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Link: <span className=\"bold\">{props.image.path}</span>\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.image.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.image.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.image.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.image)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n\n};\n\nexport default ImageItem;\n","import React from 'react';\n\nimport ImageItem from '../../items/patient/ImageItem';\nimport './UserList.css';\n\nconst PatientImageList = props => {\n\n  const {...filter} = props.filter;\n  let images2 = props.images;\n  let propsImages = [];\n\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'image') {\n    propsImages = images2;\n  }\n\n  let count = 0;\n\n  const images = propsImages.map(image => {\n\n    count = propsImages.indexOf(image)+1;\n\n    return (\n      <ImageItem\n        key={count}\n        image={image}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"imageList\">{images}</ul>;\n};\n\nexport default PatientImageList;\n","import React from 'react';\n\nimport FileItem from '../../items/patient/FileItem';\nimport './UserList.css';\n\nconst UserFileList = props => {\n\n  const {...filter} = props.filter;\n  let files2 = props.files;\n  let propsFiles = [];\n\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'file') {\n    propsFiles = files2;\n  }\n\n  let count = 0;\n\n  const files = propsFiles.map(file => {\n\n    count = propsFiles.indexOf(file)+1;\n\n    return (\n      <FileItem\n        key={count}\n        file={file}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{files}</ul>;\n};\n\nexport default UserFileList;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst NoteItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Note: <span className=\"bold\">{props.note}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.note)}>Delete</Button>\n              )}\n            </Row>\n            )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\n\nimport NoteItem from '../../items/patient/NoteItem';\nimport './UserList.css';\n\nconst PatientNoteList = props => {\n\n  const {...filter} = props.filter;\n  let notes2 = props.notes;\n  let propsNotes = [];\n\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Ascending') {\n    propsNotes = notes2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Descending') {\n    propsNotes = notes2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'note') {\n    propsNotes = notes2;\n  }\n\n  let count = 0;\n\n  const notes = propsNotes.map(note => {\n\n    count = propsNotes.indexOf(note)+1;\n\n    return (\n      <NoteItem\n        key={count}\n        note={note}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{notes}</ul>;\n};\n\nexport default PatientNoteList;\n","import React, { useState } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './PatientItem.css';\n\nconst TagItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Tag: <span className=\"bold\">{props.tag}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.tag)}>Delete</Button>\n              )}\n            </Row>\n            )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default TagItem;\n","import React from 'react';\n\nimport TagItem from '../../items/patient/TagItem';\nimport './UserList.css';\n\nconst PatientTagList = props => {\n\n  const {...filter} = props.filter;\n  let tags2 = props.tags;\n  let propsTags = [];\n\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Ascending') {\n    propsTags = tags2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Descending') {\n    propsTags = tags2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'tag') {\n    propsTags = tags2;\n  }\n\n  let count = 0;\n\n  const tags = propsTags.map(tag => {\n\n    count = propsTags.indexOf(tag)+1;\n\n    return (\n      <TagItem\n        key={count}\n        tag={tag}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{tags}</ul>;\n};\n\nexport default PatientTagList;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nimport './visitItem.css';\n\nconst VisitItem = props => {\n\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n  }\n\n  const [deleteState, setDeleteState] = useState(false);\n  const handleDeleteStateChange = () => {\n    if (deleteState === true) {\n      setDeleteState(false);\n    }\n    if (deleteState === false) {\n      setDeleteState(true);\n    }\n   }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Date: <span className=\"bold\">{moment.unix(props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Time: <span className=\"bold\">{props.visit.time}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.visit.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {props.canDelete && (\n            <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n          )}\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Id: <span className=\"bold\">{props.visit._id}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                type: <span className=\"bold\">{props.visit.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                subType: <span className=\"bold\">{props.visit.subType}</span>\n              </Card.Text>\n              </li>\n              {!props.patientPage && (\n                <li>\n                <Card.Text className=\"cardText\">\n                  Patient:\n                </Card.Text>\n                </li>\n              )}\n              {!props.patientPage && (\n                <li>\n                <Card.Text className=\"cardText\">\n                  Id: <span className=\"bold\">{props.visit.patient._id}</span>\n                </Card.Text>\n                </li>\n              )}\n              {!props.patientPage && (\n                <li>\n                <Card.Text className=\"cardText\">\n                  Name: <span className=\"bold\">{props.visit.patient.name}</span>\n                </Card.Text>\n                </li>\n              )}\n              {props.patientPage && (\n                <li>\n                <Link\n                  to={{\n                    pathname: \"/visits\",\n                    state: {visit: props.visit._id}\n                  }}\n                >\n                <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\"/>\n                </Link>\n                </li>\n              )}\n              {!props.patientPage && (\n                <li>\n                  <FontAwesomeIcon icon={faExternalLinkAlt} className=\"listIcon\" onClick={props.showDetails.bind(this, props.visit)}/>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n          {deleteState === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.visit)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default VisitItem;\n","import React from 'react';\n\nimport VisitItem from '../../items/visit/VisitItem';\nimport './visitList.css';\n\nconst VisitList = props => {\n\n  const {...filter} = props.filter;\n  let visits2 = props.visits;\n  let propsVisits = [];\n\n  if (filter.field === 'visit' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'title' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'date' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.date > b.date) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'date' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.date < b.date) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'time' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.time > b.time) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'time' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.time < b.time) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'type' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'subType' && filter.value === 'Ascending') {\n    propsVisits = visits2.sort((a, b) => (a.subType > b.subType) ? 1 : -1);\n  }\n  if (filter.field === 'visit' && filter.key === 'subType' && filter.value === 'Descending') {\n    propsVisits = visits2.sort((a, b) => (a.subType < b.subType) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'visit') {\n    propsVisits = visits2;\n  }\n\n  let count = 0;\n\n  const visits = propsVisits.map(visit => {\n\n    count = propsVisits.indexOf(visit)+1;\n\n    return (\n      <VisitItem\n        key={count}\n        visit={visit}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        showDetails={props.showDetails}\n        patientPage={props.patientPage}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{visits}</ul>;\n};\n\nexport default VisitList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterAllergyForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"allergy\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>type</option>\n          <option>title</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterAllergyForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterMedicationForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"medication\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterMedicationForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterNextOfKinForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"nextOfKin\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>name</option>\n          <option>relation</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterNextOfKinForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterVisitForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"visit\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>title</option>\n          <option>type</option>\n          <option>subType</option>\n          <option>date</option>\n          <option>time</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterVisitForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterTagForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"tag\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>tag</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterTagForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst UpdatePatientSingleFieldForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Update Single Field</h4>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>field</Form.Label>\n        <Form.Control type=\"text\" value={props.field}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"query... date = YYY-MM-DD!!\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default UpdatePatientSingleFieldForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddTagForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Tags</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"tags\">\n        <Form.Label>tags</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"tag,tag,tag,tag\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddTagForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddNextOfKinForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Next of Kin</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"name\">\n        <Form.Label>name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"relation\">\n        <Form.Label>relation</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Mother</option>\n          <option>Father</option>\n          <option>Brother</option>\n          <option>Sister</option>\n          <option>Grandfather</option>\n          <option>Grandmother</option>\n          <option>Uncle</option>\n          <option>Aunt</option>\n          <option>Niece</option>\n          <option>Uncle</option>\n          <option>Cousin</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n\n    <Form.Row>\n    <Form.Group as={Col} controlId=\"email\">\n      <Form.Label>email</Form.Label>\n      <Form.Control type=\"email\" placeholder=\"relation@nextOfKin.com\"/>\n    </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"phone\">\n        <Form.Label>phone</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+187600000\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"phone2\">\n        <Form.Label>phone2</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"+187600000\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddNextOfKinForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddAllergyForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Allergy</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Food</option>\n          <option>Drug</option>\n        </Form.Control>\n      </Form.Group>\n\n    </Form.Row>\n\n    <Form.Row>\n    <Form.Group as={Col} controlId=\"description\">\n      <Form.Label>description</Form.Label>\n      <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n    </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAllergyForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddMedicationForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Medication</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddMedicationForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddAttachmentForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Attachment</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"attachment\">\n        <Form.Label>attachment</Form.Label>\n        <Form.Control type=\"textarea\" placeholder=\"file link address\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddAttachmentForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\nimport S3 from 'react-aws-s3';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport PatientAddressList from '../lists/patient/PatientAddressList';\nimport PatientNextOfKinList from '../lists/patient/PatientNextOfKinList'\nimport PatientAllergyList from '../lists/patient/PatientAllergyList'\nimport PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientImageList from '../lists/patient/PatientImageList'\nimport PatientFileList from '../lists/patient/PatientFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport PatientNoteList from '../lists/patient/PatientNoteList'\nimport PatientTagList from '../lists/patient/PatientTagList'\nimport VisitList from '../lists/visit/VisitList'\n\nimport FilterAddressForm from '../forms/filter/FilterAddressForm';\nimport FilterAllergyForm from '../forms/filter/FilterAllergyForm';\nimport FilterMedicationForm from '../forms/filter/FilterMedicationForm';\nimport FilterNextOfKinForm from '../forms/filter/FilterNextOfKinForm';\nimport FilterVisitForm from '../forms/filter/FilterVisitForm';\nimport FilterImageForm from '../forms/filter/FilterImageForm';\nimport FilterFileForm from '../forms/filter/FilterFileForm';\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../forms/filter/FilterNoteForm';\nimport FilterTagForm from '../forms/filter/FilterTagForm';\n\nimport UpdatePatientSingleFieldForm from '../forms/add/UpdatePatientSingleFieldForm';\nimport AddAddressForm from '../forms/add/AddAddressForm';\nimport AddAttendanceForm from '../forms/add/AddAttendanceForm';\nimport AddLeaveForm from '../forms/add/AddLeaveForm';\nimport AddNoteForm from '../forms/add/AddNoteForm';\nimport AddTagForm from '../forms/add/AddTagForm';\nimport AddImageForm from '../forms/add/AddImageForm';\nimport AddFileForm from '../forms/add/AddFileForm';\nimport AddNextOfKinForm from '../forms/add/AddNextOfKinForm';\nimport AddAllergyForm from '../forms/add/AddAllergyForm';\nimport AddMedicationForm from '../forms/add/AddMedicationForm';\nimport AddAttachmentForm from '../forms/add/AddAttachmentForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass PatientDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    selectedPatient: this.props.patient,\n    addAttachmentForm: false,\n    addAttachmentArgs: null,\n    calendarAppointments: null,\n    calendarVisits: null,\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.propsPatient = this.props.patient;\n  }\n\ncomponentDidMount () {\n  console.log('...patient details component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getPocketVars(seshStore);\n  }\n  this.setState({\n    selectedPatient: this.context.selectedPatient\n  })\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.parseForCalendar({\n    appointments: this.props.patient.appointments,\n    visits: this.props.patient.visits,\n  })\n\n}\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n    console.log('...retriving pocketVars..');\n    this.context.setUserAlert('...retriving pocketVars..')\n    const token = args.token;\n    const activityId = args.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")}\n          `};\n\n    fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          this.setState({userAlert: resData.errors[0].message})\n        } else {\n          let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n          console.log('...retriving pocketVars success...');\n          this.context.setUserAlert('...retriving pocketVars success...')\n          this.setState({\n            pocketVars: pocketVarsParsed\n          });\n        }\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.context.setUserAlert(err);\n      });\n    }\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsubmitAddAddressForm = (event) => {\n  event.preventDefault();\n  console.log('...adding address...');\n  this.context.setUserAlert('...adding address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const number = event.target.number.value;\n  const street = event.target.street.value;\n  const town = event.target.town.value;\n  const city = event.target.city.value;\n  const parish = event.target.parish.value;\n  const country = event.target.country.value;\n  const postalCode = event.target.postalCode.value;\n\n  let requestBody = {\n    query: `\n      mutation {addPatientAddress(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          addressNumber:${number},\n          addressStreet:\"${street}\",\n          addressTown:\"${town}\",\n          addressCity:\"${city}\",\n          addressParish:\"${parish}\",\n          addressCountry:\"${country}\",\n          addressPostalCode:\"${postalCode}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientAddress);\n      let responseAlert = '...address add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientAddress)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientAddress,\n        activityA: `addPatientAddress?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAddress = (args) => {\n  console.log('...deleting address...');\n  this.context.setUserAlert('...deleting address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientAddress(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\",\n          addressPrimary:${args.primary}\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientAddress);\n      let responseAlert = '...address delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientAddress)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientAddress,\n        activityA: `deletePatientAddress?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientAddress;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsetAddressPrimary = (args) => {\n  console.log('...setting primary address...');\n  this.context.setUserAlert('...setting primary address...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {setPatientAddressPrimary(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          addressNumber:${args.number},\n          addressStreet:\"${args.street}\",\n          addressTown:\"${args.town}\",\n          addressCity:\"${args.city}\",\n          addressParish:\"${args.parish}\",\n          addressCountry:\"${args.country}\",\n          addressPostalCode:\"${args.postalCode}\"\n        })\n        {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.setPatientAddressPrimary);\n      let responseAlert = '...address set primary success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.setPatientAddressPrimary)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.setPatientAddressPrimary,\n        activityA: `setPatientAddressPrimary?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.setPatientAddressPrimary;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddNextOfKinForm = (event) => {\n  event.preventDefault();\n  console.log('...add next of kin...');\n  this.context.setUserAlert('...adding next of kin...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const name = event.target.name.value;\n  const relation = event.target.relation.value;\n  const email = event.target.email.value;\n  const phone = event.target.phone.value;\n  const phone2 = event.target.phone2.value;\n\n  let requestBody = {\n    query: `\n      mutation {addPatientNextOfKin(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          nextOfKinName:\"${name}\",\n          nextOfKinRelation:\"${relation}\",\n          nextOfKinContactEmail:\"${email}\",\n          nextOfKinContactPhone1:\"${phone}\",\n          nextOfKinContactPhone2:\"${phone2}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientNextOfKin);\n      let responseAlert = '...next of kin add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientNextOfKin)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientNextOfKin,\n        activityA: `addPatientNextOfKin?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientNextOfKin;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNextOfKin = (args) => {\n  console.log('...deleting next of kin...');\n  this.context.setUserAlert('...deleting next of kin....')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientNextOfKin(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          nextOfKinName:\"${args.name}\",\n          nextOfKinRelation:\"${args.relation}\",\n          nextOfKinContactEmail:\"${args.contact.email}\",\n          nextOfKinContactPhone1:\"${args.contact.phone1}\",\n          nextOfKinContactPhone2:\"${args.contact.phone2}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      console.log('...resData...',resData.data.deletePatientNextOfKin);\n      let responseAlert = '...next of kin delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientNextOfKin)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientNextOfKin,\n        activityA: `deletePatientNextOfKin?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientNextOfKin;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddAllergyForm = (event) => {\n  event.preventDefault();\n  console.log('...add allergy...');\n  this.context.setUserAlert('...adding allergy...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/allergy/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'allergy attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'allergy attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientAllergy(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          allergyType:\"${type}\",\n          allergyTitle:\"${title}\",\n          allergyDescription:\"${description}\",\n          allergyAttachment:\"${file2Path}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientAllergy);\n      let responseAlert = '...allergy add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientAllergy)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientAllergy,\n        activityA: `addPatientAllergy?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientAllergy;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteAllergy = (args) => {\n  console.log('...deleting allergy...');\n  this.context.setUserAlert('...deleting allergy...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientAllergy(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          allergyType:\"${args.type}\",\n          allergyTitle:\"${args.title}\",\n          allergyDescription:\"${args.description}\",\n          allergyAttachments:\"${args.attachments}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientAllergy);\n      let responseAlert = '...allergy delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientAllergy)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientAllergy,\n        activityA: `deletePatientAllergy?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientAllergy;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'patient/'+patientId+'/allergy/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/patient/'+patientId+'/allergy/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `allergy attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddMedicationForm = (event) => {\n  event.preventDefault();\n  console.log('...add medication...');\n  this.context.setUserAlert('...adding medication...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      type.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/medication/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'medication attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'medication attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'medication attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'medication attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientMedication(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          medicationType:\"${type}\",\n          medicationTitle:\"${title}\",\n          medicationDescription:\"${description}\",\n          medicationAttachment:\"${file2Path}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientMedication);\n      let responseAlert = '...medication add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientMedication)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientMedication,\n        activityA: `addPatientMedication?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientMedication;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteMedication = (args) => {\n  console.log('...deleting medication...');\n  this.context.setUserAlert('...deleting medication...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientMedication(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          medicationType:\"${args.type}\",\n          medicationTitle:\"${args.title}\",\n          medicationDescription:\"${args.description}\",\n          medicationAttachments:\"${args.attachments}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientMedication);\n      let responseAlert = '...medication delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientMedication)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientMedication,\n        activityA: `deletePatientMedication?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.deletePatientMedication;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'patient/'+patientId+'/medication/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/patient/'+patientId+'/medication/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `medication attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartAddAttachment = (args) => {\n  console.log('...start add attachment...');\n  this.setState({\n    addAttachmentForm: true,\n    addAttachmentArgs: args\n  })\n}\ncancelAddAttachment = () => {\n  this.setState({\n    addAttachmentForm: false\n  })\n}\naddAttachment = (event) => {\n  event.preventDefault();\n  console.log('...adding attachment...');\n  this.context.setUserAlert('...adding attachment...');\n  this.setState({\n    isLoading: true,\n    addAttachmentForm: false\n  })\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n  let args = this.state.addAttachmentArgs;\n  let field = args.field;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/'+field+'/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading allergy attachment ...\")\n    console.log('...s3 uploading allergy attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: `${field} attachment`,\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: `${field} attachment`,\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: `${field} attachment`,\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: `${field} attachment`,\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let allergyTitle;\n  let allergyType;\n  let allergyDescription;\n  let allergyAttachment;\n  let medicationTitle;\n  let medicationType;\n  let medicationDescription;\n  let medicationAttachment;\n\n  if (field === 'allergy') {\n    allergyTitle = args.data.title;\n    allergyType = args.data.type;\n    allergyDescription = args.data.description;\n    allergyAttachment = file2Path;\n  }\n  if (field === 'medication') {\n    medicationTitle = args.data.title;\n    medicationType = args.data.type;\n    medicationDescription = args.data.description;\n    medicationAttachment = file2Path;\n  }\n\n  let requestBody;\n  if (field === 'allergy') {\n    requestBody = {\n      query: `\n        mutation {addPatientAllergyAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            allergyType:\"${allergyType}\",\n            allergyTitle:\"${allergyTitle}\",\n            allergyDescription:\"${allergyDescription}\",\n            allergyAttachment:\"${file2Path}\"\n          })\n          {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (field === 'medication') {\n    requestBody = {\n      query: `\n        mutation {addPatientMedicationAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            medicationType:\"${medicationType}\",\n            medicationTitle:\"${medicationTitle}\",\n            medicationDescription:\"${medicationDescription}\",\n            medicationAttachment:\"${file2Path}\"\n          })\n          {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n\n\n\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'allergy') {\n        // console.log('...resData...',resData.data.addPatientAllergyAttachment);\n      }\n      if (field === 'medication') {\n        // console.log('...resData...',resData.data.addPatientMedicationAttachment);\n      }\n\n      let responseAlert = '...add attachment success!...';\n      let error = null;\n\n      if (field === 'allergy') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'medication') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'allergy') {\n        this.props.updatePatient(resData.data.addPatientAllergyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.addPatientAllergyAttachment,\n          activityA: `addPatientAllergyAttachmentRegex?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n      if (field === 'medication') {\n        this.props.updatePatient(resData.data.addPatientMedicationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.addPatientMedicationAttachment,\n          activityA: `addPatientMedicationAttachment?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ndeleteAttachment = (args) => {\n  console.log('...deleting attachment...');\n  this.context.setUserAlert('...adding attachment...');\n  this.setState({isLoading: true})\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n\n  const field = args.type;\n  const attachment = args.attachment;\n  const item = args.item;\n\n  let requestBody;\n\n  if (field === 'allergy') {\n    let allergyType = item.type;\n    let allergyTitle = item.title;\n    let allergyDescription = item.description;\n    let allergyAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deletePatientAllergyAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            allergyType:\"${allergyType}\",\n            allergyTitle:\"${allergyTitle}\",\n            allergyDescription:\"${allergyDescription}\",\n            allergyAttachment:\"${allergyAttachment}\"\n          })\n          {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (field === 'medication') {\n    let medicationType = item.type;\n    let medicationTitle = item.title;\n    let medicationDescription = item.description;\n    let medicationAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deletePatientMedicationAttachment(\n          activityId:\"${activityId}\",\n          patientId:\"${patientId}\",\n          patientInput:{\n            medicationType:\"${medicationType}\",\n            medicationTitle:\"${medicationTitle}\",\n            medicationDescription:\"${medicationDescription}\",\n            medicationAttachment:\"${medicationAttachment}\"\n          })\n          {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'allergy') {\n        // console.log('...resData...',resData.data.deletePatientAllergyAttachment);\n      }\n      if (field === 'medication') {\n        // console.log('...resData...',resData.data.deletePatientMedicationAttachment);\n      }\n\n      let responseAlert = '...delete attachment success!...';\n      let error = null;\n\n      if (field === 'allergy') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'medication') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'allergy') {\n        this.props.updatePatient(resData.data.deletePatientAllergyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.deletePatientAllergyAttachment,\n          activityA: `deletePatientAllergyAttachment?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n      if (field === 'medication') {\n        this.props.updatePatient(resData.data.deletePatientMedicationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedPatient: resData.data.deletePatientMedicationAttachment,\n          activityA: `deletePatientMedicationAttachment?activityId:${activityId},patientId:${patientId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'patient/'+patientId+'/'+field+'/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/patient/'+patientId+'/'+field+'/attachments/';\n      const filename = attachment;\n      const filename2 = filename.replace(filePath2,'');\n      console.log('1:',filePath);\n      console.log('2:',filename);\n      console.log('3:',filename2);\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachment..')\n      console.log('...s3 deleting attachment..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `${field} attachment`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: `${field} attachment`,\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename2, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding image...');\n  this.context.setUserAlert('...adding image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  const patientName = this.props.patient.name;\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/images';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientImage(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          imageName:\"${imageName}\",\n          imageType:\"${imageType}\",\n          imagePath:\"${imagePath}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientImage);\n      let responseAlert = '...image add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientImage)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientImage,\n        activityA: `addPatientImage?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n  console.log('...deleting image...');\n  this.context.setUserAlert('...deleting image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n\n  const filePath = 'patient/'+patientId+'/images';\n  const filename = args.name;\n\n  let requestBody = {\n    query: `\n    mutation {deletePatientImage(\n      activityId:\"${activityId}\",\n      patientId:\"${patientId}\",\n      patientInput:{\n        imageName:\"${args.name}\",\n        imageType:\"${args.type}\",\n        imagePath:\"${args.path}\"\n      })\n    {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientImage);\n      let responseAlert = '...image delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientImage)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientImage,\n        activityA: `deletePatientImage?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding file...');\n  this.context.setUserAlert('...adding file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  const patientName = this.props.patient.name;\n\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'patient/'+patientId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addPatientFile(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          fileName:\"${file2Name}\",\n          fileType:\"${file2Type}\",\n          filePath:\"${file2Path}\"\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientFile);\n      let responseAlert = '...file add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientFile)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientFile,\n        activityA: `addPatientFile?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n  console.log('...deleting file...');\n  this.context.setUserAlert('...deleting file...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const patientName = this.props.patient.name;\n\n  let requestBody = {\n    query: `\n    mutation {deletePatientFile(\n      activityId:\"${activityId}\",\n      patientId:\"${patientId}\",\n      patientInput:{\n        fileName:\"${args.name}\",\n        fileType:\"${args.type}\",\n        filePath:\"${args.path}\"\n      })\n    {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientFile);\n      let responseAlert = '...file delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientFile)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientFile,\n        activityA: `deletePatientFile?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'patient/'+patientId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding notes...');\n  this.context.setUserAlert('...adding notes...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const notes = event.target.notes.value;\n\n  let requestBody = {\n    query: `\n      mutation {addPatientNotes(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          notes:\"${notes}\",\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientNotes)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientNotes,\n        activityA: `addPatientNotes?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n  console.log('...deleting note...');\n  this.context.setUserAlert('...deleting note...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientNote(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          note:\"${args}\"\n        })\n        {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientNote)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientNote,\n        activityA: `deletePatientNote?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddTagForm = (event) => {\n  event.preventDefault();\n  console.log('...adding tags...');\n  this.context.setUserAlert('...adding tags...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const tags = event.target.tags.value;\n\n  let requestBody = {\n    query: `\n      mutation {addPatientTags(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          tags:\"${tags}\",\n        })\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addPatientTags);\n      let responseAlert = '...tags add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.addPatientTags)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.addPatientTags,\n        activityA: `addPatientTags?activityId:${activityId},patientId:${patientId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.addPatientTags;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteTag = (args) => {\n  console.log('...deleting tag...');\n  this.context.setUserAlert('...deleting tag...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientTag(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        patientInput:{\n          tag:\"${args}\"\n        })\n        {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientTag);\n      let responseAlert = '...tag delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.deletePatientTag)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.deletePatientTag,\n        activityA: `deletePatienTag?activityId:${activityId},patientId:${patientId}`\n      });\n      this.context.selectedPatient = resData.data.deletePatientTag;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.props.patient._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n    mutation {updatePatientSingleField(\n      activityId:\"${activityId}\",\n      patientId:\"${patientId}\",\n      field:\"${field}\",\n      query:\"${query}\"\n    )\n    {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updatePatientSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updatePatient(resData.data.updatePatientSingleField)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.updatePatientSingleField,\n        activityA: `updatePatientSingleField?activityId:${activityId},patientId:${patientId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.updatePatientSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing patient dates for calendar...');\n\n  let calendarAppointments = args.appointments.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n        field: 'appointments'\n      }\n    }))\n  let calendarVisits = args.visits.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        field: 'visits'\n      }\n    }))\n    this.setState({\n      calendarAppointments: calendarAppointments,\n      calendarVisits: calendarVisits,\n    })\n}\n\nviewCalendarEvent = (args) => {\n\n  let input = args.event.extendedProps.props;\n  let data;\n\n  if (input.field === 'appointments') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n      location: input.location,\n      description: input.description,\n      important: input.important,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarAppointment', data: data, goLink: true}\n    })\n  }\n  if (input.field === 'visits') {\n    data = {\n      _id: input._id,\n      date: input.date,\n      title: input.title,\n      type: input.type,\n      subType: input.subType,\n      time: input.time,\n    }\n    this.setState({\n      overlay: true,\n      overlayStatus: {type: 'calendarVisit', data: data, goLink: true}\n    })\n  }\n\n}\n\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {!this.props.patient && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={3} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'address')}>Addresses</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'nextOfKin')}>Next Of Kin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'allergy')}>Allergies</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'medication')}>Medication</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'image')}>Images</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'file')}>Files</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'appointment')}>Appointments</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"10\" onClick={this.menuSelect.bind(this, 'visit')}>Visits</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"11\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"12\" onClick={this.menuSelect.bind(this, 'tag')}>Tag</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"13\" onClick={this.menuSelect.bind(this, 'doc')}>Document</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'address' && (\n                  <FilterAddressForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'nextOfKin' && (\n                  <FilterNextOfKinForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'allergy' && (\n                  <FilterAllergyForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'medication' && (\n                  <FilterMedicationForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'image' && (\n                  <FilterImageForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'file' && (\n                  <FilterFileForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'appointment' && (\n                  <FilterAppointmentForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'visit' && (\n                  <FilterVisitForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'note' && (\n                  <FilterNoteForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'tag' && (\n                  <FilterTagForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n\n            )}\n          </Col>\n\n          {this.props.patient && (\n            <Col md={9} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdatePatientSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n                <Tab.Content className=\"tabContent\">\n                  <Tab.Pane eventKey=\"1\">\n                    Patient Basic:\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.title}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                        <p className=\"listGroupText\">Name:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.name}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'name')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText\">Username:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.username}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'username')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">DOB:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.dob.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'dob')}>Edit</Button>\n                        <p className=\"listGroupText\">Age:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.age}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">DOB:</p>\n                        <p className=\"listGroupText\">Gender:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.gender}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'gender')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Email:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.contact.email}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.email')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Phone:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.contact.phone}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone')}>Edit</Button>\n                        <p className=\"listGroupText\">Phone 2:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.contact.phone2}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'contact.phone2')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Role:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.role}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'role')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Registration:</p>\n                        <p className=\"listGroupText\">Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.registration.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <p className=\"listGroupText\">Number:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.registration.number}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Expiry Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.expiryDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'expiryDate')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Referral:</p>\n                        <p className=\"listGroupText\">Date:</p>\n                        {this.props.patient.referral.date && (\n                          <p className=\"listGroupText bold\">{moment.unix(this.props.patient.referral.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        )}\n\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.date')}>Edit</Button>\n                        <p className=\"listGroupText\">Reason:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.reason}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.reason')}>Edit</Button>\n                        <p className=\"listGroupText\">Referral Physician:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.physician.name}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.name')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Referral Physician:</p>\n                        <p className=\"listGroupText\">Email:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.physician.email}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.email')}>Edit</Button>\n                        <p className=\"listGroupText\">Phone:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.referral.physician.phone}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'referral.physician.phone')}>Edit</Button>\n                      </ListGroup.Item>\n\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Attending Physician:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.attendingPhysician}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'attendingPhysician')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Occupation:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.occupation.role}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.role')}>Edit</Button>\n                      <p className=\"listGroupText\">Employer:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.name}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.name')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Contact:</p>\n                        <p className=\"listGroupText\">Phone:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.phone}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.phone')}>Edit</Button>\n                        <p className=\"listGroupText\">Email:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.email}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.email')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Address:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.occupation.employer.address}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'occupation.employer.address')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Insurance:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.insurance.company}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.company')}>Edit</Button>\n                        <p className=\"listGroupText bold\">{this.props.patient.insurance.policyNumber}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.policyNumber')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText bold\">{this.props.patient.insurance.description}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.description')}>Edit</Button>\n                      {this.props.patient.insurance.expiryDate && (\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.patient.insurance.expiryDate.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                      )}\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.expiryDate')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Subscriber:</p>\n                      <p className=\"listGroupText bold\">{this.props.patient.insurance.subscriber.company}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.subscriber.company')}>Edit</Button>\n                      <p className=\"listGroupText bold\">{this.props.patient.insurance.subscriber.description}</p>\n                      <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'insurance.subscriber.description')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"2\">\n                    Patient Admin\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Id:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient._id}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">LoggedIn:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.loggedIn.toString()}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">ClientConnected:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.clientConnected.toString()}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Verified:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.verification.verified.toString()}</p>\n                        <p className=\"listGroupText\">Type:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.verification.type}</p>\n                        <p className=\"listGroupText\">Code:</p>\n                        <p className=\"listGroupText bold\">{this.props.patient.verification.code}</p>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"3\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">User Address List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'address')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'address' && (\n                        <AddAddressForm\n                          onConfirm={this.submitAddAddressForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientAddressList\n                      filter={this.state.filter}\n                      addresses={this.props.patient.addresses}\n                      authId={this.context.activityId}\n                      onDelete={this.deleteAddress}\n                      canDelete={this.state.canDelete}\n                      makePrimary={this.setAddressPrimary}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"4\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Next of Kin List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'nextOfKin')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'nextOfKin' && (\n                        <AddNextOfKinForm\n                          onConfirm={this.submitAddNextOfKinForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientNextOfKinList\n                      filter={this.state.filter}\n                      nextOfKin={this.props.patient.nextOfKin}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteNextOfKin}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"5\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Allergies List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'allergy')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'allergy' && (\n                        <AddAllergyForm\n                          onConfirm={this.submitAddAllergyForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <PatientAllergyList\n                      filter={this.state.filter}\n                      allergies={this.props.patient.allergies}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteAllergy}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"6\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Medication List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'medication')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'medication' && (\n                        <AddMedicationForm\n                          onConfirm={this.submitAddMedicationForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <PatientMedicationList\n                      filter={this.state.filter}\n                      medication={this.props.patient.medication}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteMedication}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"7\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Image List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'image' && (\n                        <AddImageForm\n                          onConfirm={this.submitAddImageForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientImageList\n                      filter={this.state.filter}\n                      images={this.props.patient.images}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteImage}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"8\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient File List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'file' && (\n                        <AddFileForm\n                          onConfirm={this.submitAddFileForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientFileList\n                      filter={this.state.filter}\n                      files={this.props.patient.files}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteFile}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"9\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Appointment List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    </Row>\n                    <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                      <Tab eventKey=\"1\" title=\"list\">\n                      <UserAppointmentList\n                        filter={this.state.filter}\n                        appointments={this.props.patient.appointments}\n                        authId={this.context.activityId}\n                      />\n                      </Tab>\n                      <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                        <h3>Calendar</h3>\n                        <FullCalendar\n                          defaultView=\"dayGridMonth\"\n                          plugins={[dayGridPlugin]}\n                          events={this.state.calendarAppointments}\n                          eventClick={this.viewCalendarEvent}\n                        />\n                      </Tab>\n                    </Tabs>\n\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"10\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Visit List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    </Row>\n                    <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\n                      <Tab eventKey=\"1\" title=\"list\">\n                      <VisitList\n                        filter={this.state.filter}\n                        visits={this.props.patient.visits}\n                        authId={this.context.activityId}\n                        patientPage={true}\n                      />\n                      </Tab>\n                      <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                        <h3>Calendar</h3>\n                        <FullCalendar\n                          defaultView=\"dayGridMonth\"\n                          plugins={[dayGridPlugin]}\n                          events={this.state.calendarVisits}\n                          eventClick={this.viewCalendarEvent}\n                        />\n                      </Tab>\n                    </Tabs>\n\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"11\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Notes:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role === 'Admin' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'note' && (\n                        <AddNoteForm\n                          onConfirm={this.submitAddNoteForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientNoteList\n                      filter={this.state.filter}\n                      notes={this.props.patient.notes}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteNote}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"12\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Patient Tags:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'tag')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'tag' && (\n                        <AddTagForm\n                          onConfirm={this.submitAddTagForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <PatientTagList\n                      filter={this.state.filter}\n                      tags={this.props.patient.tags}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteTag}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"13\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Docu-Gen:</p>\n\n                    </Row>\n                  </Tab.Pane>\n                </Tab.Content>\n\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n}\n\n}\n\nexport default PatientDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterPatientForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"patient\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n          <option>active</option>\n          <option>name</option>\n          <option>username</option>\n          <option>title</option>\n          <option>role</option>\n          <option>dob</option>\n          <option>age</option>\n          <option>gender</option>\n          <option>registration.date</option>\n          <option>registration.number</option>\n          <option>contact.email</option>\n          <option>contact.phone</option>\n          <option>contact.phone2</option>\n          <option>addresses.number</option>\n          <option>addresses.street</option>\n          <option>addresses.town</option>\n          <option>addresses.city</option>\n          <option>addresses.parish</option>\n          <option>addresses.country</option>\n          <option>addresses.postalCode</option>\n          <option>addresses.primary</option>\n          <option>verification.verified</option>\n          <option>expiryDate</option>\n          <option>loggedIn</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterPatientForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst PatientSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>active</option>\n        <option>name</option>\n        <option>username</option>\n        <option>title</option>\n        <option>role</option>\n        <option>dob</option>\n        <option>age</option>\n        <option>gender</option>\n        <option>registration.date</option>\n        <option>registration.number</option>\n        <option>contact.email</option>\n        <option>contact.phone</option>\n        <option>contact.phone2</option>\n        <option>addresses.number</option>\n        <option>addresses.street</option>\n        <option>addresses.town</option>\n        <option>addresses.city</option>\n        <option>addresses.parish</option>\n        <option>addresses.country</option>\n        <option>addresses.postalCode</option>\n        <option>addresses.primary</option>\n        <option>verification.verified</option>\n        <option>expiryDate</option>\n        <option>referral.date</option>\n        <option>referral.reason</option>\n        <option>referral.physician.name</option>\n        <option>referral.physician.email</option>\n        <option>referral.physician.phone</option>\n        <option>attendingPhysician</option>\n        <option>occupation.role</option>\n        <option>occupation.employer.name</option>\n        <option>occupation.employer.phone</option>\n        <option>occupation.employer.email</option>\n        <option>insurance.company</option>\n        <option>insurance.policyNumber</option>\n        <option>insurance.description</option>\n        <option>insurance.expiryDate</option>\n        <option>insurance.subscriber.company</option>\n        <option>insurance.subscriber.description</option>\n        <option>nextOfKin.name</option>\n        <option>nextOfKin.relation</option>\n        <option>nextOfKin.contact.email</option>\n        <option>nextOfKin.contact.phone</option>\n        <option>nextOfKin.contact.phone2</option>\n        <option>allergies.type</option>\n        <option>allergies.title</option>\n        <option>allergies.description</option>\n        <option>allergies.attachments</option>\n        <option>medication.title</option>\n        <option>medication.type</option>\n        <option>medication.description</option>\n        <option>medication.attachments</option>\n        <option>images.name</option>\n        <option>images.type</option>\n        <option>images.path</option>\n        <option>files.name</option>\n        <option>files.type</option>\n        <option>files.path</option>\n        <option>notes</option>\n        <option>tags</option>\n        <option>loggedIn</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default PatientSearchForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport CreatePatientForm from '../../components/forms/create/CreatePatientForm';\nimport PatientList from '../../components/lists/patient/PatientList';\nimport SearchPatientList from '../../components/lists/patient/SearchPatientList';\nimport PatientDetail from '../../components/details/PatientDetail';\n\nimport FilterPatientForm from '../../components/forms/filter/FilterPatientForm';\nimport PatientSearchForm from '../../components/forms/search/PatientSearchForm';\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './patient.css';\n\nclass PatientPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    patients: null,\n    searchPatients: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    canDelete: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    selectedPatient: null,\n    creatingPatient: false,\n    newPatient: null,\n    fromGoLink: null,\n    goLinkId: null,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all patients component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    if (this.props.location.state) {\n      if (this.props.location.state.patient) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.patient\n        })\n      }\n    }\n    this.getAllPatients(seshStore);\n    if (this.props.selectedPatient) {\n      console.log('...found existing Patient selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedPatient: this.props.selectedPatient\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkPatient = resData.data.getAllPatients.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedPatient: goLinkPatient,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n        activityA: `getAllPatients?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchPatients = (event) => {\n  event.preventDefault();\n  console.log('...searching patients...');\n  this.context.setUserAlert('...searching patients...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = this.context.activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'active' ||\n      field === 'age' ||\n      field === 'dob' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'registration.date' ||\n      field === 'expiryDate' ||\n      field === 'referral.date' ||\n      field === 'insurance.expiryDate' ||\n      field === 'insurance.expiryDate'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getPatientsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getPatientsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getPatientsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getPatientsByField);\n      }\n\n      let responseAlert = '...patient search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchPatients: resData.data.getPatientsByFieldRegex,\n          activityA: `getPatientsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchPatients: resData.data.getPatientsByField,\n          activityA: `getPatientsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nonStartCreateNewPatient = () => {\n  this.setState({\n    creatingPatient: true\n  })\n}\ncancelCreateNewPatient = () => {\n  this.setState({\n    creatingPatient: false\n  })\n}\nsubmitCreateNewPatientForm = (event) => {\n  event.preventDefault();\n  console.log('...creating new patient...');\n  this.context.setUserAlert('...creating new patient...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n\n  const active = event.target.active.value;\n  const title = event.target.title.value;\n  const name = event.target.name.value;\n  const username = event.target.username.value;\n  const dob = event.target.dob.value;\n  const role = event.target.role.value;\n  const gender = event.target.gender.value;\n  const contactEmail = event.target.contactEmail.value;\n  const contactPhone = event.target.contactPhone.value;\n  const contactPhone2 = event.target.contactPhone2.value;\n  let addressNumber = event.target.addressNumber.value;\n  if (addressNumber === '') {\n    addressNumber = 0;\n  }\n  const addressStreet = event.target.addressStreet.value;\n  const addressTown = event.target.addressTown.value;\n  const addressCity = event.target.addressCity.value;\n  const addressParish = event.target.addressParish.value;\n  const addressCountry = event.target.addressCountry.value;\n  const addressPostalCode = event.target.addressPostalCode.value;\n  const referralDate = event.target.referralDate.value;\n  const referralReason = event.target.referralReason.value;\n  const referralPhysicianName = event.target.referralPhysicianName.value;\n  const referralPhysicianPhone = event.target.referralPhysicianPhone.value;\n  const referralPhysicianEmail = event.target.referralPhysicianEmail.value;\n  const referralPhysicianAddress = event.target.referralPhysicianAddress.value;\n  const attendingPhysician = event.target.attendingPhysician.value;\n  const occupationRole = event.target.occupationRole.value;\n  const occupationEmployerName = event.target.occupationEmployerName.value;\n  const occupationEmployerEmail = event.target.occupationEmployerEmail.value;\n  const occupationEmployerPhone = event.target.occupationEmployerPhone.value;\n  const occupationEmployerAddress = event.target.occupationEmployerAddress.value;\n  const insuranceCompany = event.target.insuranceCompany.value;\n  const insurancePolicyNumber = event.target.insurancePolicyNumber.value;\n  const insuranceDescription = event.target.insuranceDescription.value;\n  const insuranceExpiryDate = event.target.insuranceExpiryDate.value;\n  const insuranceSubscriberCompany = event.target.insuranceSubscriberCompany.value;\n  const insuranceSubscriberDescription = event.target.insuranceSubscriberDescription.value;\n\n  if (\n      active.trim().length === 0 ||\n      title.trim().length === 0 ||\n      name.trim().length === 0 ||\n      username.trim().length === 0 ||\n      dob.trim().length === 0 ||\n      role.trim().length === 0 ||\n      gender.trim().length === 0 ||\n      contactEmail.trim().length === 0 ||\n      contactPhone.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n\n  let requestBody = {\n    query: `\n      mutation {createPatient(\n        activityId:\"${activityId}\",\n        patientInput:{\n          active:${active},\n          username:\"${username}\",\n          dob:\"${dob}\",\n          title:\"${title}\",\n          name:\"${name}\",\n          role:\"${role}\",\n          gender:\"${gender}\",\n          contactEmail:\"${contactEmail}\",\n          contactPhone:\"${contactPhone}\",\n          contactPhone2:\"${contactPhone2}\",\n          addressNumber:${addressNumber},\n          addressStreet:\"${addressStreet}\",\n          addressTown:\"${addressTown}\",\n          addressCity:\"${addressCity}\",\n          addressParish:\"${addressParish}\",\n          addressCountry:\"${addressCountry}\",\n          addressPostalCode:\"${addressPostalCode}\",\n          referralDate:\"${referralDate}\",\n          referralReason:\"${referralReason}\",\n          referralPhysicianName:\"${referralPhysicianName}\",\n          referralPhysicianEmail:\"${referralPhysicianEmail}\",\n          referralPhysicianPhone:\"${referralPhysicianPhone}\",\n          attendingPhysician:\"${attendingPhysician}\",\n          occupationRole:\"${occupationRole}\",\n          occupationEmployerName:\"${occupationEmployerName}\",\n          occupationEmployerPhone:\"${occupationEmployerPhone}\",\n          occupationEmployerEmail:\"${occupationEmployerEmail}\",\n          occupationEmployerAddress:\"${occupationEmployerAddress}\",\n          insuranceCompany:\"${insuranceCompany}\",\n          insurancePolicyNumber:\"${insurancePolicyNumber}\",\n          insuranceDescription:\"${insuranceDescription}\",\n          insuranceExpiryDate:\"${insuranceExpiryDate}\",\n          insuranceSubscriberCompany:\"${insuranceSubscriberCompany}\",\n          insuranceSubscriberDescription:\"${insuranceSubscriberDescription}\"\n        })\n        {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createPatient);\n      let responseAlert = '...create patient success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        showDetails: true,\n        creatingPatient: false,\n        tabKey: 'detail',\n        selectedPatient: resData.data.createPatient,\n        newPatient: resData.data.createPatient,\n        activityA: `createPatient?activityId:${activityId},patientId:${resData.data.createPatient._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'))\n      this.getAllPatients(seshStore);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nshowDetails = (args) => {\n\n  this.setState({\n    showDetails: true,\n    selectedPatient: args,\n    tabKey: 'detail'\n  })\n  this.props.selectPatient(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nupdatePatient = (args) => {\n  console.log('...updating selected patient...');\n  this.setState({\n    selectedPatient: args\n  })\n  this.props.selectPatient(args)\n}\n\ndeletePatient = (args) => {\n  console.log('...deleteing patient...',args);\n  this.context.setUserAlert('...deleteing patient...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deletePatientById(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\"\n      )\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deletePatientById);\n      let responseAlert = '...delete patient success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deletePatientById?activityId:${activityId},patientId:${patientId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllPatients({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n        <h1>Patients: {this.state.showDetails === true &&\n                      this.state.selectedPatient &&\n                      this.state.tabKey === 'detail' && (\n                            this.state.selectedPatient.name\n                          )}</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col lg={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterPatientForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.patients && (\n            <Col lg={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content>\n                <Tab.Pane eventKey=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                    <PatientList\n                      filter={this.state.filter}\n                      patients={this.state.patients}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      showDetails={this.showDetails}\n                      onDelete={this.deletePatient}\n                    />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Patient</h3>\n                  <Row className=\"userSearchRow\">\n                    <PatientSearchForm\n                      onConfirm={this.searchPatients}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchPatients && (\n                      <Button variant=\"outline-primary\" className=\"centered_btn\" onClick={this.toggleSideCol}>Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchPatients && (\n                      <SearchPatientList\n                        filter={this.state.filter}\n                        patients={this.state.searchPatients}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedPatient && (\n                  <PatientDetail\n                    patient={this.state.selectedPatient}\n                    updatePatient={this.updatePatient}\n                  />\n                )}\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"new\">\n                {this.state.creatingPatient === false && (\n                  <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={this.onStartCreateNewPatient}>Create New</Button>\n                )}\n                {this.state.creatingPatient === true && (\n                  <CreatePatientForm\n                    onConfirm={this.submitCreateNewPatientForm}\n                    onCancel={this.cancelCreateNewPatient}\n                  />\n                )}\n                {this.state.newPatient && (\n                  <Row>\n                    <h3>Review New Patient</h3>\n                    {this.state.newPatient.username}\n                  </Row>\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default PatientPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './createForms.css';\n\nconst CreateAppointmentForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Create Appointment Form</h1>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"patientId\">\n        <Form.Label>Patient: {props.patient.username}</Form.Label>\n        <Form.Control type=\"text\" value={props.patient._id}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"subType\">\n        <Form.Label>subType</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"subType\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"date\">\n        <Form.Label>date</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"YYYY-MM-DD\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"time\">\n        <Form.Label>time</Form.Label>\n        <Form.Control type=\"time\" placeholder=\"time\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"location\">\n        <Form.Label>location</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"location\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"important\">\n        <Form.Label>important</Form.Label>\n        <Form.Control as=\"select\">\n          <option>false</option>\n          <option>true</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Create</Button>\n      <Button variant=\"outline-danger\" className=\"loginFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default CreateAppointmentForm;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './AppointmentItem.css';\n\nconst NoteItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Note: <span className=\"bold\">{props.note}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.note)}>Delete</Button>\n              )}\n            </Row>\n            )}\n\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\n\nimport NoteItem from '../../items/appointment/NoteItem';\nimport './AppointmentList.css';\n\nconst AppointmentNoteList = props => {\n\n  const {...filter} = props.filter;\n  let notes2 = props.notes;\n  let propsNotes = [];\n\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Ascending') {\n    propsNotes = notes2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'note' && filter.key === 'note' && filter.value === 'Descending') {\n    propsNotes = notes2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'note') {\n    propsNotes = notes2;\n  }\n\n  let count = 0;\n\n  const notes = propsNotes.map(note => {\n\n    count = propsNotes.indexOf(note)+1;\n\n    return (\n      <NoteItem\n        key={count}\n        note={note}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{notes}</ul>;\n};\n\nexport default AppointmentNoteList;\n","import React, { useState } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './AppointmentItem.css';\n\nconst TagItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Tag: <span className=\"bold\">{props.tag}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.tag)}>Delete</Button>\n              )}\n            </Row>\n            )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n}\n\nexport default TagItem;\n","import React from 'react';\n\nimport TagItem from '../../items/appointment/TagItem';\nimport './AppointmentList.css';\n\nconst AppointmentTagList = props => {\n\n  const {...filter} = props.filter;\n  let tags2 = props.tags;\n  let propsTags = [];\n\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Ascending') {\n    propsTags = tags2.sort((a, b) => (a > b) ? 1 : -1);\n  }\n  if (filter.field === 'tag' && filter.key === 'tag' && filter.value === 'Descending') {\n    propsTags = tags2.sort((a, b) => (a < b) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'tag') {\n    propsTags = tags2;\n  }\n\n  let count = 0;\n\n  const tags = propsTags.map(tag => {\n\n    count = propsTags.indexOf(tag)+1;\n\n    return (\n      <TagItem\n        key={count}\n        tag={tag}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"noteList\">{tags}</ul>;\n};\n\nexport default AppointmentTagList;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport UserList from '../../lists/user/UserList';\nimport './addForms.css';\n\nconst AddUserForm = (props) => {\n\n  const [user, setUser] = useState(\"\");\n  const handleSetUser = (args) => {\n    setUser(args);\n   }\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Staff</h4>\n\n    <Form.Row>\n      <UserList\n        users={props.users}\n        selectUser={handleSetUser}\n        filter={props.filter}\n      />\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"user\">\n        <Form.Label>user</Form.Label>\n        <Form.Control type=\"text\" value={user._id}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddUserForm;\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport AddToCalendar from 'react-add-to-calendar';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport PatientAddressList from '../lists/patient/PatientAddressList';\nimport PatientNextOfKinList from '../lists/patient/PatientNextOfKinList'\nimport PatientAllergyList from '../lists/patient/PatientAllergyList'\nimport PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientImageList from '../lists/patient/PatientImageList'\nimport PatientFileList from '../lists/patient/PatientFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport AppointmentNoteList from '../lists/appointment/AppointmentNoteList'\nimport AppointmentTagList from '../lists/appointment/AppointmentTagList'\nimport UserList from '../lists/user/UserList'\n\n\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterNoteForm from '../forms/filter/FilterNoteForm';\nimport FilterTagForm from '../forms/filter/FilterTagForm';\nimport FilterUserForm from '../forms/filter/FilterUserForm';\n\nimport UpdatePatientSingleFieldForm from '../forms/add/UpdatePatientSingleFieldForm';\n\nimport AddUserForm from '../forms/add/AddUserForm';\nimport AddNoteForm from '../forms/add/AddNoteForm';\nimport AddTagForm from '../forms/add/AddTagForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass AppointmentDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: this.props.appointment,\n    addAttachmentForm: false,\n    addAttachmentArgs: null,\n    showAddConsultantForm: false,\n    users: null,\n    calEvent: {\n      title: this.props.appointment.title,\n      description: this.props.appointment.description,\n      location: this.props.appointment.location,\n      startTime: moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.appointment.time+':00-05:00',\n      endTime: moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.appointment.time+':00-05:00',\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.propsPatient = this.props.appointment;\n  }\n\ncomponentDidMount () {\n  console.log('...appointment details component mounted...');\n  // console.log(moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.appointment.time+':00-05:00');\n  let seshStore;\n  if (sessionStorage.getItem('logInfo')) {\n    seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n  }\n  this.setState({\n    selectedPatient: this.context.selectedPatient\n  })\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.getAllUsers(seshStore);\n}\ncomponentWillUnmount() {\n\n}\n\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n        activityA: `getAllUsers?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nsubmitAddNoteForm = (event) => {\n  event.preventDefault();\n  console.log('...adding notes...');\n  this.context.setUserAlert('...adding notes...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const notes = event.target.notes.value;\n\n  let requestBody = {\n    query: `\n      mutation {addAppointmentNotes(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          notes:\"${notes}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addAppointmentNotes);\n      let responseAlert = '...notes add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.addAppointmentNotes)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.addAppointmentNotes,\n        activityA: `addAppointmentNotes?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.addAppointmentNotes;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteNote = (args) => {\n\n  console.log('...deleting notes...');\n  this.context.setUserAlert('...deleting notes...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const note = args;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentNote(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          note:\"${note}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentNote);\n      let responseAlert = '...note delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.deleteAppointmentNote)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.deleteAppointmentNote,\n        activityA: `deleteAppointmentNote?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.deleteAppointmentNote;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nsubmitAddTagForm = (event) => {\n  event.preventDefault();\n  console.log('...adding tags...');\n  this.context.setUserAlert('...adding tags...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const tags = event.target.tags.value;\n\n  let requestBody = {\n    query: `\n      mutation {addAppointmentTags(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          tags:\"${tags}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addAppointmentTags);\n      let responseAlert = '...tags add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.addAppointmentTags)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.addAppointmentTags,\n        activityA: `addAppointmentTags?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.addAppointmentTags;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteTag = (args) => {\n\n  console.log('...deleting tags...');\n  this.context.setUserAlert('...deleting tags...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const tag = args;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentTag(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        appointmentInput:{\n          tag:\"${tag}\"\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentTag);\n      let responseAlert = '...tag delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.deleteAppointmentTag)\n      this.setState({\n        isLoading: false,\n        selectedAppointment: resData.data.deleteAppointmentTag,\n        activityA: `deleteAppointmentTag?activityId:${activityId},appointmentId:${appointmentId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedAppointment = resData.data.deleteAppointmentTag;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddUserForm = (event) => {\n  event.preventDefault();\n  console.log('...adding consultant...');\n  this.context.setUserAlert('...adding consultant...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = event.target.user.value;\n  const appointmentId = this.props.appointment._id;\n\n  const userRole = this.state.users.filter(x => x._id === consultantId)[0].role;\n  if (userRole !== 'Doctor' && userRole !== 'Nurse') {\n    console.log('...please choose a Doctor or Nurse to add please...');\n    this.context.setUserAlert('...please choose a Doctor or Nurse to add please...')\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addAppointmentConsultant(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addAppointmentConsultant);\n      let responseAlert = '...add consultant success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.addAppointmentConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `addAppointmentConsultant?activityId:${activityId},appointmentId:${appointmentId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteConsultant = (args) => {\n  console.log('...deleting consultant...');\n  this.context.setUserAlert('...deleting consultant...')\n  this.setState({isLoading: true});\n  //\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = args._id;\n  const appointmentId = this.props.appointment._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentConsultant(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentConsultant);\n      let responseAlert = '...delete consultant success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.deleteAppointmentConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteAppointmentConsultant?activityId:${activityId},appointmentId:${appointmentId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdatePatient = () => {\n  console.log('show update patient select list');\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.props.appointment._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateAppointmentSingleField(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateAppointmentSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateAppointment(resData.data.updateAppointmentSingleField)\n      this.setState({\n        isLoading: false,\n        selectedPatient: resData.data.updateAppointmentSingleField,\n        activityA: `updateAppointmentSingleField?activityId:${activityId},appointmentId:${appointmentId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedPatient = resData.data.updateAppointmentSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {!this.props.appointment && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={3} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'consultant')}>Consultants</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'note')}>Notes</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'tag')}>Tags</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'consultant' && (\n                  <FilterUserForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'note' && (\n                  <FilterNoteForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'tag' && (\n                  <FilterTagForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n\n            )}\n          </Col>\n\n          {this.props.appointment && (\n            <Col md={9} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdatePatientSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n                <Tab.Content className=\"tabContent\">\n                  <Tab.Pane eventKey=\"1\">\n                    Appointment Basic:\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.title}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Type:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.type}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'type')}>Edit</Button>\n                        <p className=\"listGroupText\">subType:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.subType}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'subType')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.appointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <p className=\"listGroupText\">Time:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.time}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'time')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Location:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.location}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'location')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Description:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.description}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'description')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Important:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.important.toString()}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'important')}>Edit</Button>\n                        <p className=\"listGroupText\">In Progress:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.inProgress.toString()}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'inProgress')}>Edit</Button>\n                        <p className=\"listGroupText\">Attended:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.attended.toString()}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'attended')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Patient:</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Name:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.patient.title}</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.patient.name}</p>\n                        <Link\n                          to={{\n                            pathname: \"/patients\",\n                            state: {patient: this.props.appointment.patient._id}\n                          }}\n                        >Go!\n                        </Link>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.props.appointment.patient._id}</p>\n                      </ListGroup.Item>\n                      {this.props.appointment.visit && (\n                        <ListGroup.Item>\n                          <p className=\"listGroupText\">Visit:</p>\n                          <p className=\"listGroupText bold\">{this.props.appointment.visit._id}</p>\n                        </ListGroup.Item>\n                      )}\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Export:</p>\n                        <AddToCalendar event={this.state.calEvent} />\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"2\">\n                    Appointment Admin\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Id:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment._id}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Creator:</p>\n                        <p className=\"listGroupText bold\">{this.props.appointment.creator._id}</p>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"3\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Appointment Consultant List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'consultant')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'consultant' &&\n                      this.state.users && (\n                        <AddUserForm\n                          onConfirm={this.submitAddUserForm}\n                          onCancel={this.cancelAdd}\n                          filter={this.state.filter}\n                          users={this.state.users}\n                        />\n                    )}\n                    <UserList\n                      filter={this.state.filter}\n                      authId={this.context.activityId}\n                      users={this.props.appointment.consultants}\n                      appointmentPage={true}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteConsultant}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"4\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Appointment Note List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'note')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'note' && (\n                        <AddNoteForm\n                          onConfirm={this.submitAddNoteForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <AppointmentNoteList\n                      filter={this.state.filter}\n                      notes={this.props.appointment.notes}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteNote}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"5\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Appointment Tag List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'tag')}>Add</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'tag' && (\n                        <AddTagForm\n                          onConfirm={this.submitAddTagForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <AppointmentTagList\n                      filter={this.state.filter}\n                      tags={this.props.appointment.tags}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteTag}\n                    />\n                  </Tab.Pane>\n\n                </Tab.Content>\n\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n}\n\n}\n\nexport default AppointmentDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst AppointmentSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>type</option>\n        <option>subType</option>\n        <option>date</option>\n        <option>time</option>\n        <option>checkinTime</option>\n        <option>seenTime</option>\n        <option>location</option>\n        <option>description</option>\n        <option>inProgress</option>\n        <option>attended</option>\n        <option>important</option>\n        <option>notes</option>\n        <option>tags</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AppointmentSearchForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport CreateAppointmentForm from '../../components/forms/create/CreateAppointmentForm';\nimport AppointmentList from '../../components/lists/appointment/AppointmentList';\nimport PatientList from '../../components/lists/patient/PatientList';\n// import SearchAppointmentList from '../../components/lists/appointment/SearchAppointmentList';\nimport AppointmentDetail from '../../components/details/AppointmentDetail';\n\nimport FilterAppointmentForm from '../../components/forms/filter/FilterAppointmentForm';\nimport AppointmentSearchForm from '../../components/forms/search/AppointmentSearchForm';\nimport PatientSearchForm from '../../components/forms/search/PatientSearchForm';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './appointment.css';\n\nclass AppointmentPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    patients: null,\n    canDelete: false,\n    appointments: null,\n    searchAppointments: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    creatingAppointment: false,\n    newAppointment: null,\n    calendarAppointments: null,\n    fromGoLink: null,\n    goLinkId: null,\n    sublistSearch: false,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all appointments component mounted...');\n\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    this.getAllPatients(seshStore);\n    if (this.props.location.state) {\n      if (this.props.location.state.appointment) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.appointment\n        })\n      }\n    }\n    this.getAllAppointments(seshStore);\n    if (this.props.selectedAppointment) {\n      console.log('...found existing Appointment selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedAppointment: this.props.selectedAppointment\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\n\ngetAllAppointments (args) {\n  console.log('...retrieving all appointments...');\n  this.context.setUserAlert('...retrieving all appointments...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllAppointments(\n        activityId:\"${activityId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllAppointments);\n      let responseAlert = '...all appointments retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkAppointment = resData.data.getAllAppointments.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedAppointment: goLinkAppointment,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        appointments: resData.data.getAllAppointments,\n        activityA: `getAllAppointments?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.parseForCalendar(resData.data.getAllAppointments)\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n        activityA: `getAllPatients?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchAppointments = (event) => {\n  event.preventDefault();\n  console.log('...searching appointments...');\n  this.context.setUserAlert('...searching appointments...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'date' ||\n      field === 'inProgress' ||\n      field === 'attended' ||\n      field === 'important' ||\n      field === 'important'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getAppointmentsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n      query {getAppointmentsByField(\n        activityId:\"${activityId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getAppointmentsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getAppointmentsByField);\n      }\n\n      let responseAlert = '...appointment search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchAppointments: resData.data.getAppointmentsByFieldRegex,\n          activityA: `getAppointmentsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchAppointments: resData.data.getAppointmentsByField,\n          activityA: `getAppointmentsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nonStartCreateNewAppointment = () => {\n  this.setState({\n    creatingAppointment: true\n  })\n}\ncancelCreateNewAppointment = () => {\n  this.setState({\n    creatingAppointment: false,\n    selectedPatient: null\n  })\n}\nsubmitCreateNewAppointmentForm = (event) => {\n  event.preventDefault();\n  console.log('...creating new appointment...');\n  this.context.setUserAlert('...creating new appointment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const patientId = this.state.selectedPatient._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const subType = event.target.subType.value;\n  const date = event.target.date.value;\n  const time = event.target.time.value;\n  const location = event.target.location.value;\n  const description = event.target.description.value;\n  const important = event.target.important.value;\n\n  if (\n      title.trim().length === 0 ||\n      date.trim().length === 0 ||\n      time.trim().length === 0 ||\n      location.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    return;\n  }\n  console.log('foo',date);\n\n  if (date < moment().format('YYYY-MM-DD')) {\n    console.log('...ummm no! Please pick a date today or in the future...');\n    this.context.setUserAlert('...ummm no! Please pick a date today or in the future...')\n    this.setState({isLoading:false})\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {createAppointment(\n        activityId:\"${activityId}\",\n        patientId:\"${patientId}\",\n        appointmentInput:{\n          title:\"${title}\",\n          type:\"${type}\",\n          subType:\"${subType}\",\n          date:\"${date}\",\n          time:\"${time}\",\n          location:\"${location}\",\n          description:\"${description}\",\n          important:${important}\n        })\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.createAppointment);\n      let responseAlert = '...create appointment success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        showDetails: true,\n        creatingAppointment: false,\n        selectedAppointment: resData.data.createAppointment,\n        newAppointment: resData.data.createAppointment,\n        tabKey: 'detail',\n        activityA: `createAppointment?activityId:${activityId},appointmentId:${resData.data.createAppointment._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'))\n      this.getAllAppointments(seshStore);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nshowDetails = (args) => {\n  this.setState({\n    showDetails: true,\n    selectedAppointment: args,\n    overlay: false,\n    tabKey: 'detail'\n  })\n  this.props.selectAppointment(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\nselectPatient = (args) => {\n  this.setState({\n    selectedPatient: args\n  })\n\n}\nupdateAppointment = (args) => {\n  console.log('...updating selected appointment...');\n  this.setState({\n    selectedAppointment: args\n  })\n  this.props.selectAppointment(args);\n}\n\ndeleteAppointment = (args) => {\n  console.log('...deleteing appointment...',args);\n  this.context.setUserAlert('...deleteing appointment...')\n\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteAppointmentById(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteAppointmentById);\n      let responseAlert = '...delete appointment success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteAppointmentById?activityId:${activityId},appointmentId:${appointmentId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllAppointments({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing appointments for calendar...');\n  let calendarAppointments = args.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        date: x.date,\n        title: x.title,\n        type: x.type,\n        subType: x.subType,\n        time: x.time,\n        location: x.location,\n        description: x.description,\n        important: x.important,\n      }\n    }))\n    this.setState({\n      calendarAppointments: calendarAppointments\n    })\n\n}\n\nviewCalendarEvent = (args) => {\n  console.log('...viewing calendar appointment...',args.event.extendedProps.props);\n  const appointment = this.state.appointments.filter(x => x._id === args.event.extendedProps.props._id)[0];\n  this.setState({\n    overlay: true,\n    overlayStatus: {type: 'calendarAppointment', data: appointment}\n  })\n}\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\nstartSublistSearch = () => {\n  this.setState({\n    sublistSearch: true\n  })\n}\ncancelSublistSearch = () => {\n  this.setState({\n    sublistSearch: false,\n  })\n  this.getAllPatients({activityId: this.context.activityId,token: this.context.token});\n}\nsubmitSublistSearchForm = (event) => {\n  event.preventDefault()\n  console.log('...searching patient sublist...');\n  this.context.setUserAlert('...searching patient sublist...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'active' ||\n      field === 'age' ||\n      field === 'dob' ||\n      field === 'addresses.number' ||\n      field === 'addresses.primary' ||\n      field === 'loggedIn' ||\n      field === 'clientConnected' ||\n      field === 'verification.verified' ||\n      field === 'registration.date' ||\n      field === 'expiryDate' ||\n      field === 'referral.date' ||\n      field === 'insurance.expiryDate' ||\n      field === 'insurance.expiryDate'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getPatientsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getPatientsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n      `};\n  }\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getPatientsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getPatientsByField);\n      }\n\n      let responseAlert = '...patient search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          patients: resData.data.getPatientsByFieldRegex,\n          activityA: `getPatientsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          patients: resData.data.getPatientsByField,\n          activityA: `getPatientsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        selectCalendarDetails={this.showDetails}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n        <h1>Appointments: {this.state.showDetails === true &&\n                      this.state.selectedAppointment &&\n                      this.state.tabKey === 'detail' && (\n                            this.state.selectedAppointment.title\n                          )}</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col md={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterAppointmentForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.appointments && (\n            <Col md={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content >\n                <Tab.Pane eventKey=\"list\" className=\"mainList\">\n\n                <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                  <Tab eventKey=\"1\" title=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                    <AppointmentList\n                      filter={this.state.filter}\n                      appointments={this.state.appointments}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      showDetails={this.showDetails}\n                      onDelete={this.deleteAppointment}\n                    />\n                  </Tab>\n                  <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                    <h3>Calendar</h3>\n                    <FullCalendar\n                      defaultView=\"dayGridMonth\"\n                      plugins={[dayGridPlugin]}\n                      events={this.state.calendarAppointments}\n                      eventClick={this.viewCalendarEvent}\n                    />\n                  </Tab>\n                </Tabs>\n\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Appointment</h3>\n                  <Row className=\"userSearchRow searchForm\">\n                    <AppointmentSearchForm\n                      onConfirm={this.searchAppointments}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchAppointments && (\n                      <Button variant=\"outline-primary\" className=\"centered_btn\" onClick={this.toggleSideCol}>Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchAppointments && (\n                      <AppointmentList\n                        filter={this.state.filter}\n                        appointments={this.state.searchAppointments}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedAppointment && (\n                  <AppointmentDetail\n                    appointment={this.state.selectedAppointment}\n                    updateAppointment={this.updateAppointment}\n                  />\n                )}\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"new\">\n                {this.state.creatingAppointment === false && (\n                  <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={this.onStartCreateNewAppointment}>Create New</Button>\n                )}\n                {this.state.creatingAppointment === true &&\n                  this.state.patients &&\n                  !this.state.selectedPatient && (\n                  <Col className=\"patientSubListCol\">\n                  <Row className=\"patientSubListRow\">\n                  <Button variant=\"outline-success\" className=\"patientSublistSearchBtn\" onClick={this.startSublistSearch}>Search</Button>\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  {this.state.sublistSearch === true && (\n                    <PatientSearchForm\n                      onCancel={this.cancelSublistSearch}\n                      onConfirm={this.submitSublistSearchForm}\n                    />\n                  )}\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  <PatientList\n                    filter={this.state.filter}\n                    patients={this.state.patients}\n                    authId={this.context.activityId}\n                    onSelect={this.selectPatient}\n                    appointmentPage={true}\n                  />\n                  </Row>\n\n                  </Col>\n                )}\n                {this.state.creatingAppointment === true &&\n                  this.state.selectedPatient && (\n                  <Row>\n                    <CreateAppointmentForm\n                      onConfirm={this.submitCreateNewAppointmentForm}\n                      onCancel={this.cancelCreateNewAppointment}\n                      patient={this.state.selectedPatient}\n                    />\n                  </Row>\n                )}\n                {this.state.newAppointment && (\n                  <Row>\n                    <h3>Review New Appointment {this.state.newAppointment._id}</h3>\n                  </Row>\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default AppointmentPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './createForms.css';\n\nconst CreateVisitForm = (props) => {\n\nreturn (\n<div className=\"loginFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h1>Create Visit Form</h1>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"appointmentId\">\n        <Form.Label>Appointment: {props.appointment.title}</Form.Label>\n        <Form.Control type=\"text\" value={props.appointment._id}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"subType\">\n        <Form.Label>subType</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"subType\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginFormBtn\">Create</Button>\n      <Button variant=\"outline-danger\" className=\"loginFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default CreateVisitForm;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst ComplaintItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.complaint.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.complaint.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.complaint.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Anamnesis: <span className=\"bold\">{props.complaint.anamnesis}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'complaint',data:props.complaint})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.complaint}\n                attachments={props.complaint.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"complaint\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.complaint)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default ComplaintItem;\n","import React from 'react';\n\nimport ComplaintItem from '../../items/visit/ComplaintItem';\nimport './visitList.css';\n\nconst VisitComplaintList = props => {\n\n  const {...filter} = props.filter;\n  let complaints2 = props.complaints;\n  let propsComplaints = [];\n\n  if (filter.field === 'complaint' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsComplaints = complaints2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'title' && filter.value === 'Descending') {\n    propsComplaints = complaints2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsComplaints = complaints2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'description' && filter.value === 'Descending') {\n    propsComplaints = complaints2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'anamnesis' && filter.value === 'Ascending') {\n    propsComplaints = complaints2.sort((a, b) => (a.anamnesis > b.anamnesis) ? 1 : -1);\n  }\n  if (filter.field === 'complaint' && filter.key === 'anamnesis' && filter.value === 'Descending') {\n    propsComplaints = complaints2.sort((a, b) => (a.anamnesis < b.anamnesis) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'complaint') {\n    propsComplaints = complaints2;\n  }\n\n  let count = 0;\n\n  const complaints = propsComplaints.map(complaint => {\n\n    count = propsComplaints.indexOf(complaint)+1;\n\n    return (\n      <ComplaintItem\n        key={count}\n        complaint={complaint}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{complaints}</ul>;\n};\n\nexport default VisitComplaintList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst SurveyItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.survey.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.survey.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.survey.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'survey',data:props.survey})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.survey}\n                attachments={props.survey.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"survey\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.survey)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default SurveyItem;\n","import React from 'react';\n\nimport SurveyItem from '../../items/visit/SurveyItem';\nimport './visitList.css';\n\nconst VisitSurveyList = props => {\n\n  const {...filter} = props.filter;\n  let surveys2 = props.surveys;\n  let propsSurveys = [];\n\n  if (filter.field === 'survey' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsSurveys = surveys2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'survey' && filter.key === 'title' && filter.value === 'Descending') {\n    propsSurveys = surveys2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'survey' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsSurveys = surveys2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'survey' && filter.key === 'description' && filter.value === 'Descending') {\n    propsSurveys = surveys2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'survey') {\n    propsSurveys = surveys2;\n  }\n\n  let count = 0;\n\n  const surveys = propsSurveys.map(survey => {\n\n    count = propsSurveys.indexOf(survey)+1;\n\n    return (\n      <SurveyItem\n        key={count}\n        survey={survey}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{surveys}</ul>;\n};\n\nexport default VisitSurveyList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faEye,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst SystematicInquiryItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.systematicInquiry.title}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.systematicInquiry.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.systematicInquiry.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'systematicInquiry',data:props.systematicInquiry})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.systematicInquiry}\n                attachments={props.systematicInquiry.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"systematicInquiry\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.systematicInquiry)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default SystematicInquiryItem;\n","import React from 'react';\n\nimport SystematicInquiryItem from '../../items/visit/SystematicInquiryItem';\nimport './visitList.css';\n\nconst VisitSystematicInquiryList = props => {\n\n  const {...filter} = props.filter;\n  let systematicInquirys2 = props.systematicInquiry;\n  let propsSystematicInquirys = [];\n\n  if (filter.field === 'systematicInquiry' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'systematicInquiry' && filter.key === 'title' && filter.value === 'Descending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'systematicInquiry' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'systematicInquiry' && filter.key === 'description' && filter.value === 'Descending') {\n    propsSystematicInquirys = systematicInquirys2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'systematicInquiry') {\n    propsSystematicInquirys = systematicInquirys2;\n  }\n\n  let count = 0;\n\n  const systematicInquirys = propsSystematicInquirys.map(systematicInquiry => {\n\n    count = propsSystematicInquirys.indexOf(systematicInquiry)+1;\n\n    return (\n      <SystematicInquiryItem\n        key={count}\n        systematicInquiry={systematicInquiry}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{systematicInquirys}</ul>;\n};\n\nexport default VisitSystematicInquiryList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst VitalsItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Pulse Rate: <span className=\"bold\">{props.vitals.pr}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Respiratory Rate: <span className=\"bold\">{props.vitals.rr}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              <Card.Text className=\"cardText\">\n                Pulse Rate: <span className=\"bold\">{props.vitals.pr}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Respiratory Rate: <span className=\"bold\">{props.vitals.rr}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Blood Pressure : <span className=\"bold\">{props.vitals.bp1}</span> / <span className=\"bold\">{props.vitals.bp2}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Temperature: <span className=\"bold\">{props.vitals.temp}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                PS02: <span className=\"bold\">{props.vitals.ps02}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Height : <span className=\"bold\">{props.vitals.heightValue}</span>  <span className=\"bold\">{props.vitals.heightUnit}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Weight : <span className=\"bold\">{props.vitals.weightValue}</span>  <span className=\"bold\">{props.vitals.weightUnit}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                BMI : <span className=\"bold\">{props.vitals.bmi}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Urine\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.vitals.urine.type}</span> Value: <span className=\"bold\">{props.vitals.urine.value}</span>\n              </Card.Text>\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.vitals)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default VitalsItem;\n","import React from 'react';\n\nimport VitalsItem from '../../items/visit/VitalsItem';\nimport './visitList.css';\n\nconst VisitVitalsList = props => {\n\n  const {...filter} = props.filter;\n  let vitals2 = props.vitals;\n  let propsVitals = [];\n\n  if (filter.field === 'vitals' && filter.key === 'pr' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.pr > b.pr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'pr' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.pr < b.pr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp1' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp1 > b.bp1) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp1' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp1 < b.bp1) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp2' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp2 > b.bp2) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bp2' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.bp2 < b.bp2) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'rr' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.rr > b.rr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'rr' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.rr < b.rr) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'temp' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.temp > b.temp) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'temp' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.temp < b.temp) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'ps02' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.ps02 > b.ps02) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'ps02' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.ps02 < b.ps02) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'heightValue' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.heightValue > b.heightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'heightValue' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.heightValue < b.heightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'weightValue' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.weightValue > b.weightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'weightValue' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.weightValue < b.weightValue) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bmi' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.bmi > b.bmi) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'bmi' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.bmi < b.bmi) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.type' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.type > b.urine.type) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.type' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.type < b.urine.type) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.value' && filter.value === 'Ascending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.value > b.urine.value) ? 1 : -1);\n  }\n  if (filter.field === 'vitals' && filter.key === 'urine.value' && filter.value === 'Descending') {\n    propsVitals = vitals2.sort((a, b) => (a.urine.value < b.urine.value) ? 1 : -1);\n  }\n  // if (filter.field === 'vitals' && filter.key === 'role') {\n  //   propsVitals = vitals2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'vitals') {\n    propsVitals = vitals2;\n  }\n\n  let count = 0;\n\n  const vitals = propsVitals.map(vitalsItem => {\n\n    count = propsVitals.indexOf(vitalsItem)+1;\n\n    return (\n      <VitalsItem\n        key={count}\n        vitals={vitalsItem}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{vitals}</ul>;\n};\n\nexport default VisitVitalsList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst ExaminationItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            General: <span className=\"bold\">{props.examination.general}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Area: <span className=\"bold\">{props.examination.area}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                General: <span className=\"bold\">{props.examination.general}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Area: <span className=\"bold\">{props.examination.area}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                type: <span className=\"bold\">{props.examination.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                measure: <span className=\"bold\">{props.examination.measure}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                value: <span className=\"bold\">{props.examination.value}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                description: <span className=\"bold\">{props.examination.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                 followUp: <span className=\"bold\">{props.examination.followUp === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'examination',data:props.examination})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.examination}\n                attachments={props.examination.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"examination\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.examination)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default ExaminationItem;\n","import React from 'react';\n\nimport ExaminationItem from '../../items/visit/ExaminationItem';\nimport './visitList.css';\n\nconst VisitExaminationList = props => {\n\n  const {...filter} = props.filter;\n  let examinations2 = props.examination;\n  let propsExaminations = [];\n\n  if (filter.field === 'examination' && filter.key === 'general' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.general > b.general) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'general' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.general < b.general) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'area' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.area > b.area) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'area' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.area < b.area) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'type' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'measure' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.measure > b.measure) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'measure' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.measure < b.measure) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'value' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.value > b.value) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'value' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.value < b.value) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsExaminations = examinations2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'description' && filter.value === 'Descending') {\n    propsExaminations = examinations2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  if (filter.field === 'examination' && filter.key === 'followUp') {\n    propsExaminations = examinations2.filter(x => x.followUp === filter.value);\n  }\n  if (filter.field !== 'examination') {\n    propsExaminations = examinations2;\n  }\n\n  let count = 0;\n\n  const examinations = propsExaminations.map(examination => {\n\n    count = propsExaminations.indexOf(examination)+1;\n\n    return (\n      <ExaminationItem\n        key={count}\n        examination={examination}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{examinations}</ul>;\n};\n\nexport default VisitExaminationList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst InvestigationItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.investigation.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.investigation.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.investigation.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.investigation.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.investigation.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'investigation',data:props.investigation})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.investigation}\n                attachments={props.investigation.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"investigation\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.investigation)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default InvestigationItem;\n","import React from 'react';\n\nimport InvestigationItem from '../../items/visit/InvestigationItem';\nimport './visitList.css';\n\nconst VisitInvestigationList = props => {\n\n  const {...filter} = props.filter;\n  let investigations2 = props.investigation;\n  let propsInvestigations = [];\n\n  if (filter.field === 'investigation' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'investigation' && filter.key === 'title' && filter.value === 'Descending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'investigation' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'investigation' && filter.key === 'description' && filter.value === 'Descending') {\n    propsInvestigations = investigations2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'investigation') {\n    propsInvestigations = investigations2;\n  }\n\n  let count = 0;\n\n  const investigations = propsInvestigations.map(investigation => {\n\n    count = propsInvestigations.indexOf(investigation)+1;\n\n    return (\n      <InvestigationItem\n        key={count}\n        investigation={investigation}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{investigations}</ul>;\n};\n\nexport default VisitInvestigationList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst DiagnosisItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.diagnosis.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.diagnosis.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.diagnosis.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.diagnosis.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.diagnosis.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'diagnosis',data:props.diagnosis})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.diagnosis}\n                attachments={props.diagnosis.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"diagnosis\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.diagnosis)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default DiagnosisItem;\n","import React from 'react';\n\nimport DiagnosisItem from '../../items/visit/DiagnosisItem';\nimport './visitList.css';\n\nconst VisitDiagnosisList = props => {\n\n  const {...filter} = props.filter;\n  let diagnosis2 = props.diagnosis;\n  let propsDiagnosis = [];\n\n  if (filter.field === 'diagnosis' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'title' && filter.value === 'Descending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'type' && filter.value === 'Descending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'diagnosis' && filter.key === 'description' && filter.value === 'Descending') {\n    propsDiagnosis = diagnosis2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'diagnosis') {\n    propsDiagnosis = diagnosis2;\n  }\n\n  let count = 0;\n\n  const diagnoses = propsDiagnosis.map(diagnosis => {\n\n    count = propsDiagnosis.indexOf(diagnosis)+1;\n\n    return (\n      <DiagnosisItem\n        key={count}\n        diagnosis={diagnosis}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{diagnoses}</ul>;\n};\n\nexport default VisitDiagnosisList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst TreatmentItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.treatment.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.treatment.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.treatment.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.treatment.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.treatment.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Dose: <span className=\"bold\">{props.treatment.dose}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Frequency: <span className=\"bold\">{props.treatment.frequency}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'treatment',data:props.treatment})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.treatment}\n                attachments={props.treatment.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"treatment\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.treatment)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default TreatmentItem;\n","import React from 'react';\n\nimport TreatmentItem from '../../items/visit/TreatmentItem';\nimport './visitList.css';\n\nconst VisitTreatmentList = props => {\n\n  const {...filter} = props.filter;\n  let treatment2 = props.treatment;\n  let propsTreatment = [];\n\n  if (filter.field === 'treatment' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'title' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'type' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'dose' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.dose > b.dose) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'dose' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.dose < b.dose) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'frequency' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.frequency > b.frequency) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'frequency' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.frequency < b.frequency) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsTreatment = treatment2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'treatment' && filter.key === 'description' && filter.value === 'Descending') {\n    propsTreatment = treatment2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'treatment') {\n    propsTreatment = treatment2;\n  }\n\n  let count = 0;\n\n  const treatments = propsTreatment.map(treatment => {\n\n    count = propsTreatment.indexOf(treatment)+1;\n\n    return (\n      <TreatmentItem\n        key={count}\n        treatment={treatment}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{treatments}</ul>;\n};\n\nexport default VisitTreatmentList;\n","import React, {useState} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBatteryThreeQuarters,\n  faPlusSquare,\n  faBatteryEmpty,\n  faFolderMinus,\n  faEye,\n  faEraser,\n  faTrashAlt,\n  faBan,\n  faCheckSquare,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport PatientAttachmentList from '../../lists/patient/PatientAttachmentList';\n\nimport './visitItem.css';\n\nconst BillingItem = props => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Title: <span className=\"bold\">{props.billing.title}</span>\n          </Card.Text>\n          <Card.Text className=\"cardText\">\n            Type: <span className=\"bold\">{props.billing.type}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Title: <span className=\"bold\">{props.billing.title}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.billing.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Description: <span className=\"bold\">{props.billing.description}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Notes: <span className=\"bold\">{props.billing.notes}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Amount: <span className=\"bold\">{props.billing.amount}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Paid: <span className=\"bold\">{props.billing.paid === true ?(<FontAwesomeIcon icon={faCheckSquare} className=\"listIcon\"/>):(<FontAwesomeIcon icon={faBan} className=\"listIcon\"/>)}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Attachments: <FontAwesomeIcon icon={faPlusSquare} className=\"listIcon\" onClick={props.onAddAttachment.bind(this, {field: 'billing',data:props.billing})}/>\n              </Card.Text>\n              <PatientAttachmentList\n                item={props.billing}\n                attachments={props.billing.attachments}\n                canDelete={props.canDelete}\n                onDelete={props.deleteAttachment}\n                type=\"billing\"\n              />\n              </li>\n              {props.canDelete === true && (\n                <li>\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.billing)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default BillingItem;\n","import React from 'react';\n\nimport BillingItem from '../../items/visit/BillingItem';\nimport './visitList.css';\n\nconst VisitBillingList = props => {\n\n  const {...filter} = props.filter;\n  let billing2 = props.billing;\n  let propsBilling = [];\n\n  if (filter.field === 'billing' && filter.key === 'title' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.title > b.title) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'title' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.title < b.title) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'type' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'amount' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.amount > b.amount) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'amount' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.amount < b.amount) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'description' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.description > b.description) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'description' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.description < b.description) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'notes' && filter.value === 'Ascending') {\n    propsBilling = billing2.sort((a, b) => (a.notes > b.notes) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'notes' && filter.value === 'Descending') {\n    propsBilling = billing2.sort((a, b) => (a.notes < b.notes) ? 1 : -1);\n  }\n  if (filter.field === 'billing' && filter.key === 'paid') {\n    propsBilling = billing2.filter(x => x.paid === filter.value);\n  }\n  if (filter.field !== 'billing') {\n    propsBilling = billing2;\n  }\n\n  let count = 0;\n\n  const billings = propsBilling.map(billing => {\n\n    count = propsBilling.indexOf(billing)+1;\n\n    return (\n      <BillingItem\n        key={count}\n        billing={billing}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n        onAddAttachment={props.onAddAttachment}\n        deleteAttachment={props.deleteAttachment}\n      />\n    );\n  });\n\n  return <ul className=\"visitList\">{billings}</ul>;\n};\n\nexport default VisitBillingList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst VigilanceItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            number: <span className=\"bold\">{props.key}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n              <h3>chronicIllness:</h3>\n              <p>Diabetes</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.diabetes.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.diabetes.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.diabetes.comment}</span>\n              </Card.Text>\n\n              <p>High BloodPressure</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.hbp.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.hbp.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.hbp.comment}</span>\n              </Card.Text>\n\n              <p>Dyslipidemia</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.dyslipidemia.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.dyslipidemia.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.dyslipidemia.comment}</span>\n              </Card.Text>\n\n              <p>Cad</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.chronicIllness.cad.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.chronicIllness.cad.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.chronicIllness.cad.comment}</span>\n              </Card.Text>\n\n              <h3>lifestyle</h3>\n              <p>Weight</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.weight.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.weight.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.weight.comment}</span>\n              </Card.Text>\n\n              <p>Diet</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.diet.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.diet.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.diet.comment}</span>\n              </Card.Text>\n\n              <p>Smoking</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.smoking.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.smoking.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.smoking.comment}</span>\n              </Card.Text>\n\n              <p>SubstanceAbuse</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.substanceAbuse.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.substanceAbuse.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.substanceAbuse.comment}</span>\n              </Card.Text>\n\n              <p>exercise</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.exercise.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.exercise.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.exercise.comment}</span>\n              </Card.Text>\n\n              <p>allergies</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.allergies.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.allergies.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.allergies.comment}</span>\n              </Card.Text>\n\n              <p>asthma</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.lifestyle.asthma.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.lifestyle.asthma.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.lifestyle.asthma.comment}</span>\n              </Card.Text>\n\n              <h3>Screening</h3>\n              <p>breast</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.breast.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.breast.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.breast.comment}</span>\n              </Card.Text>\n\n              <p>prostate</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.prostate.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.prostate.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.prostate.comment}</span>\n              </Card.Text>\n\n              <p>cervix</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.cervix.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.cervix.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.cervix.comment}</span>\n              </Card.Text>\n\n              <p>colon</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.colon.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.colon.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.colon.comment}</span>\n              </Card.Text>\n\n              <p>dental</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.screening.dental.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.screening.dental.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.screening.dental.comment}</span>\n              </Card.Text>\n\n              <h3>Vaccines</h3>\n              <p>Influenza</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.influenza.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.influenza.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.influenza.comment}</span>\n              </Card.Text>\n\n              <p>varicella</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.varicella.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.varicella.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.varicella.comment}</span>\n              </Card.Text>\n\n              <p>hpv</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.hpv.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.hpv.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.hpv.comment}</span>\n              </Card.Text>\n\n              <p>mmr</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.mmr.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.mmr.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.mmr.comment}</span>\n              </Card.Text>\n\n              <p>tetanus</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.tetanus.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.tetanus.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.tetanus.comment}</span>\n              </Card.Text>\n\n              <p>pneumovax</p>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.pneumovax.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.pneumovax.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.pneumovax.comment}</span>\n              </Card.Text>\n\n              <p>other</p>\n              <Card.Text className=\"cardText\">\n                Other: <span className=\"bold\">{props.vigilance.vaccines.other.name}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Medication: <span className=\"bold\">{props.vigilance.vaccines.other.medication}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Testing: <span className=\"bold\">{props.vigilance.vaccines.other.testing}</span>\n              </Card.Text>\n              <Card.Text className=\"cardText\">\n                Comment: <span className=\"bold\">{props.vigilance.vaccines.other.comment}</span>\n              </Card.Text>\n\n\n              {props.canDelete === true && (\n                <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.vigilance)}>Delete</Button>\n              )}\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default VigilanceItem;\n","import React from 'react';\n\nimport VigilanceItem from '../../items/visit/VigilanceItem';\nimport './visitList.css';\n\nconst VisitVigilanceList = props => {\n\n  const {...filter} = props.filter;\n  let vigilance2 = props.vigilance;\n  let propsVigilance = [];\n\n  if (filter.field === 'vigilance' && filter.key === 'chronicIllness.diabetes.medication') {\n    propsVigilance = vigilance2.filter(x => x.chronicIllness.diabetes.medication === filter.value)\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'vigilance') {\n    propsVigilance = vigilance2;\n  }\n\n  let count = 0;\n\n  const vigilances = propsVigilance.map(vigilance => {\n\n    count = propsVigilance.indexOf(vigilance)+1;\n\n    return (\n      <VigilanceItem\n        key={count}\n        vigilance={vigilance}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{vigilances}</ul>;\n};\n\nexport default VisitVigilanceList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst ImageItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Link: <span className=\"bold\">{props.image.path}</span>\n          </Card.Text>\n\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.image.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.image.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.image.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.image)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n\n};\n\nexport default ImageItem;\n","import React from 'react';\n\nimport ImageItem from '../../items/visit/ImageItem';\nimport './visitList.css';\n\nconst VisitImageList = props => {\n\n  const {...filter} = props.filter;\n  let images2 = props.images;\n  let propsImages = [];\n\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'name' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'type' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsImages = images2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'image' && filter.key === 'link' && filter.value === 'Descending') {\n    propsImages = images2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'image') {\n    propsImages = images2;\n  }\n\n  let count = 0;\n\n  const images = propsImages.map(image => {\n\n    count = propsImages.indexOf(image)+1;\n\n    return (\n      <ImageItem\n        key={count}\n        image={image}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"imageList\">{images}</ul>;\n};\n\nexport default VisitImageList;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons';\nimport { faBatteryEmpty } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './visitItem.css';\n\nconst FileItem = (props) => {\n  const [state, setState] = useState(false);\n  const handleStateChange = () => {\n    if (state === true) {\n      setState(false);\n    }\n    if (state === false) {\n      setState(true);\n    }\n   }\n\n   const [deleteState, setDeleteState] = useState(false);\n   const handleDeleteStateChange = () => {\n     if (deleteState === true) {\n       setDeleteState(false);\n     }\n     if (deleteState === false) {\n       setDeleteState(true);\n     }\n    }\n\n  return (\n    <li key={props.key} className=\"\">\n      <Card>\n        <Card.Body className=\"cardBody\">\n          <Card.Text className=\"cardText\">\n            Link: <span className=\"bold\">{props.file.path}</span>\n          </Card.Text>\n          <FontAwesomeIcon icon={faEye} className=\"listIcon\" onClick={handleStateChange}/>\n          {state === true && (\n            <Row className=\"listItemHiddenRow\">\n            <ul>\n              <li>\n              <Card.Text className=\"cardText\">\n                Name: <span className=\"bold\">{props.file.name}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Type: <span className=\"bold\">{props.file.type}</span>\n              </Card.Text>\n              </li>\n              <li>\n              <Card.Text className=\"cardText\">\n                Link: <span className=\"bold\">{props.file.path}</span>\n              </Card.Text>\n              </li>\n              {props.canDelete === true && (\n                <li>\n                <FontAwesomeIcon icon={faTrashAlt} className=\"listIcon\" onClick={handleDeleteStateChange}/>\n                </li>\n              )}\n              {deleteState === true && (\n                <li>\n                <Row className=\"listItemHiddenRow\">\n                  {props.canDelete && (\n                    <Button variant=\"outline-danger\" onClick={props.onDelete.bind(this, props.file)}>Delete</Button>\n                  )}\n                </Row>\n                </li>\n              )}\n            </ul>\n\n            </Row>\n          )}\n        </Card.Body>\n      </Card>\n    </li>\n  )\n};\n\nexport default FileItem;\n","import React from 'react';\n\nimport FileItem from '../../items/visit/FileItem';\nimport './visitList.css';\n\nconst VisitFileList = props => {\n\n  const {...filter} = props.filter;\n  let files2 = props.files;\n  let propsFiles = [];\n\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'name' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.name < b.name) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.type > b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'type' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.type < b.type) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Ascending') {\n    propsFiles = files2.sort((a, b) => (a.path > b.path) ? 1 : -1);\n  }\n  if (filter.field === 'file' && filter.key === 'link' && filter.value === 'Descending') {\n    propsFiles = files2.sort((a, b) => (a.path < b.path) ? 1 : -1);\n  }\n  // if (filter.field === 'userMasterList' && filter.key === 'role') {\n  //   propsAddresses = addresses2.filter(x => x.role === filter.value);\n  // }\n  if (filter.field !== 'file') {\n    propsFiles = files2;\n  }\n\n  let count = 0;\n\n  const files = propsFiles.map(file => {\n\n    count = propsFiles.indexOf(file)+1;\n\n    return (\n      <FileItem\n        key={count}\n        file={file}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"fileList\">{files}</ul>;\n};\n\nexport default VisitFileList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterComplaintForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"complaint\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>description</option>\n        <option>anamnesis</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterComplaintForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterSurveyForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"survey\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterSurveyForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterSystematicInquiryForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"systematicInquiry\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterSystematicInquiryForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterDiagnosisForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"diagnosis\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterDiagnosisForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterVitalsForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"vitals\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>pr</option>\n        <option>bp1</option>\n        <option>bp2</option>\n        <option>rr</option>\n        <option>temp</option>\n        <option>ps02</option>\n        <option>heightUnit</option>\n        <option>heightValue</option>\n        <option>weightUnit</option>\n        <option>weightValue</option>\n        <option>bmi</option>\n        <option>urine.type</option>\n        <option>urine.value</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterVitalsForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterExaminationForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"examination\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>general</option>\n        <option>area</option>\n        <option>type</option>\n        <option>measure</option>\n        <option>value</option>\n        <option>description</option>\n        <option>followUp</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterExaminationForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterInvestigationForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"investigation\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterInvestigationForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterTreatmentForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"treatment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        <option>dose</option>\n        <option>frequency</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterTreatmentForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './filterForms.css';\n\nconst FilterBillingForm = (props) => {\n\nreturn (\n<div className=\"filterFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Control type=\"text\" hidden='true' value=\"billing\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"key\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>type</option>\n        <option>title</option>\n        <option>description</option>\n        <option>amount</option>\n        <option>paid</option>\n        <option>notes</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ascending</option>\n          <option>Descending</option>\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Filter</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default FilterBillingForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddComplaintForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Complaint</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"anamnesis\">\n        <Form.Label>anamnesis</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"anamnesis\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddComplaintForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddSurveyForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Survey</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddSurveyForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddSystematicInquiryForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add SystematicInquiry</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddSystematicInquiryForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddVitalsForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Vitals</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"pr\">\n        <Form.Label>Pulse Rate</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"pr\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"bp1\">\n        <Form.Label>Blood Pressure (top)</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"bp1\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"bp2\">\n        <Form.Label>Blood Pressure (bottom)</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"bp2\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"rr\">\n        <Form.Label>Respiratory Rate</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"rr\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"temp\">\n        <Form.Label>Temperature</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"temp\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"ps02\">\n        <Form.Label>PS-02</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"ps02\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"heightUnit\">\n        <Form.Label>Height: Unit</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Ft</option>\n          <option>M</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"heightValue\">\n        <Form.Label>Height: Value</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"heightValue\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"weightUnit\">\n        <Form.Label>Weight: Unit</Form.Label>\n        <Form.Control as=\"select\">\n          <option>Kg</option>\n          <option>Lbs</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"weightValue\">\n        <Form.Label>Weight: Value</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"weightValue\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"bmi\">\n        <Form.Label>BMI</Form.Label>\n        <Form.Control type=\"number\" step='0.001' placeholder=\"bmi\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"urineType\">\n        <Form.Label>Urine: type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"urineType\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"urineValue\">\n        <Form.Label>Urine: value</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"urineValue\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddVitalsForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddExaminationForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Examination</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"general\">\n        <Form.Label>General</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"general\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"area\">\n        <Form.Label>Area</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"area\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>Type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"measure\">\n        <Form.Label>Measure</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"measure\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"value\">\n        <Form.Label>Value</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"value\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"followUp\">\n        <Form.Label>FollowUp ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddExaminationForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddInvestigationForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Investigation</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddInvestigationForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddDiagnosisForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Diagnosis</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddDiagnosisForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddTreatmentForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Treatment</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"dose\">\n        <Form.Label>dose</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"dose\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"frequency\">\n        <Form.Label>frequency</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"frequency\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddTreatmentForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport AuthContext from '../../../context/auth-context';\nimport './addForms.css';\n\nconst AddBillingForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Billing</h4>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"title\">\n        <Form.Label>title</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"title\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"type\">\n        <Form.Label>type</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"type\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"description\">\n        <Form.Label>description</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"description\"/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"amount\">\n        <Form.Label>amount</Form.Label>\n        <Form.Control type=\"number\" step=\"0.001\" placeholder=\"amount\"/>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"paid\">\n        <Form.Label>Paid ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n    </Form.Row>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"notes\">\n        <Form.Label>notes</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"notes\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>File</Form.Label>\n        <Form.Control type=\"file\" id=\"fileInput\" placeholder=\"File\" onChange={(e) => {AuthContext._currentValue.file = e.target.files[0]}}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddBillingForm;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport './addForms.css';\n\nconst AddVigilanceForm = (props) => {\n\nreturn (\n<div className=\"addFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n    <h4>Add Vigilance</h4>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>Diabetes</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDiabetesMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDiabetesTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDiabetesComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>HBP</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessHbpMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessHbpTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessHbpComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>Dyslipidemia</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDyslipidemiaMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDyslipidemiaTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessDyslipidemiaComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Chronic Illness:</h4>\n    <p>Cad</p>\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessCadMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessCadTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceChronicIllnessCadComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Lifestyle:</h4>\n    <p>Weight</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleWeightMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleWeightTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleWeightComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Diet</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleDietMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleDietTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleDietComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Smoking</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSmokingMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSmokingTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSmokingComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>SubstanceAbuse</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSubstanceAbuseMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSubstanceAbuseTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleSubstanceAbuseComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Exercise</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleExerciseMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleExerciseTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleExerciseComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Allergies</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAllergiesMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAllergiesTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAllergiesComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Asthma</p>\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAsthmaMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAsthmaTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceLifestyleAsthmaComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Screening:</h4>\n    <p>Breast</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningBreastMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningBreastTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningBreastComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Prostate</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningProstateMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningProstateTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningProstateComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Cervix</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningCervixMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningCervixTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningCervixComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Colon</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningColonMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningColonTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningColonComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Dental</p>\n      <Form.Group as={Col} controlId=\"vigilanceScreeningDentalMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningDentalTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceScreeningDentalComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <h4>Vaccines</h4>\n    <p>Influenza</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesInfluenzaMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesInfluenzaTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesInfluenzaComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Varicella</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesVaricellaMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesVaricellaTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesVaricellaComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Hpv</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesHpvMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesHpvTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesHpvComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Mmr</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesMmrMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesMmrTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesMmrComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Tetanus</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesTetanusMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesTetanusTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesTetanusComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Pneumovax</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesPneumovaxMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesPneumovaxTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesPneumovaxComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <p>Other</p>\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherName\">\n        <Form.Label>name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"name\"/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherMedication\">\n        <Form.Label>Medication ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherTesting\">\n        <Form.Label>Testing ?</Form.Label>\n        <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"vigilanceVaccinesOtherComment\">\n        <Form.Label>comment</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"comment\"/>\n      </Form.Group>\n    </Form.Row>\n\n\n\n    <Form.Row className=\"formBtnRow\">\n      <Button variant=\"outline-success\" type=\"submit\" className=\"addFormBtn\">Add</Button>\n      <Button variant=\"outline-primary\" className=\"addFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default AddVigilanceForm;\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\nimport AddToCalendar from 'react-add-to-calendar';\nimport S3 from 'react-aws-s3';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../alertBox/AlertBox';\nimport LoadingOverlay from '../overlay/LoadingOverlay';\n\nimport PatientAddressList from '../lists/patient/PatientAddressList';\nimport PatientNextOfKinList from '../lists/patient/PatientNextOfKinList'\nimport PatientAllergyList from '../lists/patient/PatientAllergyList'\nimport PatientMedicationList from '../lists/patient/PatientMedicationList'\nimport PatientImageList from '../lists/patient/PatientImageList'\nimport PatientFileList from '../lists/patient/PatientFileList'\nimport UserAppointmentList from '../lists/user/UserAppointmentList'\nimport AppointmentNoteList from '../lists/appointment/AppointmentNoteList'\nimport VisitComplaintList from '../lists/visit/VisitComplaintList'\nimport VisitSurveyList from '../lists/visit/VisitSurveyList'\nimport VisitSystematicInquiryList from '../lists/visit/VisitSystematicInquiryList'\nimport VisitVitalsList from '../lists/visit/VisitVitalsList'\nimport VisitExaminationList from '../lists/visit/VisitExaminationList'\nimport VisitInvestigationList from '../lists/visit/VisitInvestigationList'\nimport VisitDiagnosisList from '../lists/visit/VisitDiagnosisList'\nimport VisitTreatmentList from '../lists/visit/VisitTreatmentList'\nimport VisitBillingList from '../lists/visit/VisitBillingList'\nimport VisitVigilanceList from '../lists/visit/VisitVigilanceList'\nimport VisitImageList from '../lists/visit/VisitImageList'\nimport VisitFileList from '../lists/visit/VisitFileList'\nimport UserList from '../lists/user/UserList'\n\n\nimport FilterAppointmentForm from '../forms/filter/FilterAppointmentForm';\nimport FilterComplaintForm from '../forms/filter/FilterComplaintForm';\nimport FilterSurveyForm from '../forms/filter/FilterSurveyForm';\nimport FilterSystematicInquiryForm from '../forms/filter/FilterSystematicInquiryForm';\nimport FilterDiagnosisForm from '../forms/filter/FilterDiagnosisForm';\nimport FilterVitalsForm from '../forms/filter/FilterVitalsForm';\nimport FilterExaminationForm from '../forms/filter/FilterExaminationForm';\nimport FilterInvestigationForm from '../forms/filter/FilterInvestigationForm';\nimport FilterTreatmentForm from '../forms/filter/FilterTreatmentForm';\nimport FilterBillingForm from '../forms/filter/FilterBillingForm';\nimport FilterImageForm from '../forms/filter/FilterImageForm';\nimport FilterFileForm from '../forms/filter/FilterFileForm';\nimport FilterUserForm from '../forms/filter/FilterUserForm';\n\nimport UpdatePatientSingleFieldForm from '../forms/add/UpdatePatientSingleFieldForm';\n\nimport AddUserForm from '../forms/add/AddUserForm';\nimport AddAttachmentForm from '../forms/add/AddAttachmentForm';\nimport AddImageForm from '../forms/add/AddImageForm';\nimport AddFileForm from '../forms/add/AddFileForm';\nimport AddComplaintForm from '../forms/add/AddComplaintForm';\nimport AddSurveyForm from '../forms/add/AddSurveyForm';\nimport AddSystematicInquiryForm from '../forms/add/AddSystematicInquiryForm';\nimport AddVitalsForm from '../forms/add/AddVitalsForm';\nimport AddExaminationForm from '../forms/add/AddExaminationForm';\nimport AddInvestigationForm from '../forms/add/AddInvestigationForm';\nimport AddDiagnosisForm from '../forms/add/AddDiagnosisForm';\nimport AddTreatmentForm from '../forms/add/AddTreatmentForm';\nimport AddBillingForm from '../forms/add/AddBillingForm';\nimport AddVigilanceForm from '../forms/add/AddVigilanceForm';\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './details.css';\n\nclass VisitDetail extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    canDelete: false,\n    updateSingleField: {\n      state: null,\n      field: null\n    },\n    selectedUser: null,\n    selectedPatient: null,\n    selectedVisit: null,\n    selectedAppointment: null,\n    addAttachmentForm: false,\n    addAttachmentArgs: null,\n    showAddConsultantForm: false,\n    users: null,\n    calEvent: {\n      title: this.props.visit.title,\n      description: this.props.visit.appointment.description,\n      location: this.props.visit.appointment.location,\n      startTime: moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.visit.time+':00-05:00',\n      endTime: moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')+'T'+this.props.visit.time+':00-05:00',\n    },\n    pocketVars: null,\n    s3State: {\n      action: null,\n      target: null,\n      status: null\n    },\n  };\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.propsVisit = this.props.visit;\n  }\n\ncomponentDidMount () {\n  console.log('...visit details component mounted...');\n  let seshStore;\n  if (sessionStorage.getItem('logInfo')) {\n    seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.getPocketVars(seshStore);\n  }\n  if (this.context.role === 'Admin') {\n    this.setState({\n      canDelete: true\n    })\n  }\n  this.getAllUsers(seshStore);\n}\ncomponentWillUnmount() {\n\n}\n\ngetPocketVars (args) {\n  console.log('...retriving pocketVars..');\n  this.context.setUserAlert('...retriving pocketVars..')\n  const token = args.token;\n  const activityId = args.activityId;\n  const requestBody = {\n        query:`\n          query {getPocketVars(\n            activityId:\"${activityId}\")}\n        `};\n\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n    method: 'POST',\n    body: JSON.stringify(requestBody),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + token\n    }\n  })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (resData.errors) {\n        this.setState({userAlert: resData.errors[0].message})\n      } else {\n        let pocketVarsParsed = JSON.parse(resData.data.getPocketVars)\n        console.log('...retriving pocketVars success...');\n        this.context.setUserAlert('...retriving pocketVars success...')\n        this.setState({\n          pocketVars: pocketVarsParsed\n        });\n      }\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n    });\n  }\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\ngetAllUsers (args) {\n  console.log('...retrieving all users...');\n  this.context.setUserAlert('...retrieving all users...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n  const userId = activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllUsers(\n        activityId:\"${activityId}\" )\n        {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,creator{_id}},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllUsers);\n      let responseAlert = '...all users retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        users: resData.data.getAllUsers,\n        activityA: `getAllUsers?activityId:${activityId},userId:${userId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nsubmitAddComplaintForm = (event) => {\n  event.preventDefault();\n  console.log('...adding complaint...');\n  this.context.setUserAlert('...adding complaint...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = event.target.title.value;\n  const description = event.target.description.value;\n  const anamnesis = event.target.anamnesis.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0 ||\n      anamnesis.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/complaint/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'complaint attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'complaint attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'complaint attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'complaint attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitComplaint(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${title}\",\n            complaintDescription:\"${description}\",\n            complaintAnamnesis:\"${anamnesis}\",\n            complaintAttachment:\"${file2Path}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitComplaint);\n      let responseAlert = '...complaint add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitComplaint)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitComplaint,\n        activityA: `addVisitComplaint?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitComplaint;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteComplaint = (args) => {\n\n  console.log('...deleting complaint...');\n  this.context.setUserAlert('...deleting complaint...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = args.title;\n  const description = args.description;\n  const anamnesis = args.anamnesis;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitComplaint(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${title}\",\n            complaintDescription:\"${description}\",\n            complaintAnamnesis:\"${anamnesis}\",\n            complaintAttachments:\"${attachments}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitComplaint);\n      let responseAlert = '...complaint delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitComplaint)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitComplaint,\n        activityA: `deleteVisitComplaint?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitComplaint;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/complaint/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/complaint/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `complaint attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddSurveyForm = (event) => {\n  event.preventDefault();\n  console.log('...adding survey...');\n  this.context.setUserAlert('...adding survey...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/survey/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'survey attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'survey attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'survey attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'survey attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitSurvey(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          surveyTitle:\"${title}\",\n          surveyDescription:\"${description}\",\n          surveyAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitSurvey);\n      let responseAlert = '...survey add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitSurvey)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitSurvey,\n        activityA: `addVisitSurvey?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitSurvey;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteSurvey = (args) => {\n\n  console.log('...deleting survey...');\n  this.context.setUserAlert('...deleting survey...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = args.title;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitSurvey(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          surveyTitle:\"${title}\",\n          surveyDescription:\"${description}\",\n          surveyAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitSurvey);\n      let responseAlert = '...survey delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitSurvey)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitSurvey,\n        activityA: `deleteVisitSurvey?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitSurvey;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/survey/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/survey/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `survey attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddSystematicInquiryForm = (event) => {\n  event.preventDefault();\n  console.log('...adding systematicInquiry...');\n  this.context.setUserAlert('...adding systematicInquiry...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/systematicInquiry/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'systematicInquiry attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'systematicInquiry attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'systematicInquiry attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'systematicInquiry attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitSysInquiry(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          systematicInquiryTitle:\"${title}\",\n          systematicInquiryDescription:\"${description}\",\n          systematicInquiryAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitSysInquiry);\n      let responseAlert = '...systematicInquiry add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitSysInquiry)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitSysInquiry,\n        activityA: `addVisitSysInquiry?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitSysInquiry;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteSystematicInquiry = (args) => {\n\n  console.log('...deleting systematicInquiry...');\n  this.context.setUserAlert('...deleting systematicInquiry...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const title = args.title;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitSysInquiry(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          systematicInquiryTitle:\"${title}\",\n          systematicInquiryDescription:\"${description}\",\n          systematicInquiryAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitSysInquiry);\n      let responseAlert = '...sys inquiry delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitSysInquiry)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitSysInquiry,\n        activityA: `deleteVisitSysInquiry?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitSysInquiry;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/systematicInquiry/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/systematicInquiry/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `systematicInquiry attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddVitalsForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Vitals...');\n  this.context.setUserAlert('...adding Vitals...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const pr = event.target.pr.value;\n  const bp1 = event.target.bp1.value;\n  const bp2 = event.target.bp2.value;\n  const rr = event.target.rr.value;\n  const temp = event.target.temp.value;\n  const ps02 = event.target.ps02.value;\n  const heightUnit = event.target.heightUnit.value;\n  const heightValue = event.target.heightValue.value;\n  const weightUnit = event.target.weightUnit.value;\n  const weightValue = event.target.weightValue.value;\n  const bmi = event.target.bmi.value;\n  const urineType = event.target.urineType.value;\n  const urineValue = event.target.urineValue.value;\n\n  let requestBody = {\n    query: `\n      mutation {addVisitVitals(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          vitalsPr:${pr},\n          vitalsBp1:${bp1},\n          vitalsBp2:${bp2},\n          vitalsRr:${rr},\n          vitalsTemp:${temp},\n          vitalsPs02:${ps02},\n          vitalsHeightUnit:\"${heightUnit}\",\n          vitalsHeightValue:${heightValue},\n          vitalsWeightUnit:\"${weightUnit}\",\n          vitalsWeightValue:${weightValue},\n          vitalsBmi:${bmi},\n          vitalsUrineType:\"${urineType}\",\n          vitalsUrineValue:\"${urineValue}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitVitals);\n      let responseAlert = '...Vitals add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitVitals)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitVitals,\n        activityA: `addVisitVitals?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitVitals;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteVitals = (args) => {\n\n  console.log('...deleting Vitals...');\n  this.context.setUserAlert('...deleting Vitals...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const pr = args.pr;\n  const bp1 = args.bp1;\n  const bp2 = args.bp2;\n  const rr = args.rr;\n  const temp = args.temp;\n  const ps02 = args.ps02;\n  const heightUnit = args.heightUnit;\n  const heightValue = args.heightValue;\n  const weightUnit = args.weightUnit;\n  const weightValue = args.weightValue;\n  const bmi = args.bmi;\n  const urineType = args.urine.type;\n  const urineValue = args.urine.value;\n\n  let requestBody = {\n    query: `\n    mutation {deleteVisitVitals(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        vitalsPr:${pr},\n        vitalsBp1:${bp1},\n        vitalsBp2:${bp2},\n        vitalsRr:${rr},\n        vitalsTemp:${temp},\n        vitalsPs02:${ps02},\n        vitalsHeightUnit:\"${heightUnit}\",\n        vitalsHeightValue:${heightValue},\n        vitalsWeightUnit:\"${weightUnit}\",\n        vitalsWeightValue:${weightValue},\n        vitalsBmi:${bmi},\n        vitalsUrineType:\"${urineType}\",\n        vitalsUrineValue:\"${urineValue}\"\n      })\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitVitals);\n      let responseAlert = '...vitals delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitVitals)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitVitals,\n        activityA: `deleteVisitVitals?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitVitals;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddExaminationForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Examination...');\n  this.context.setUserAlert('...adding Examination...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const general = event.target.general.value;\n  const area = event.target.area.value;\n  const type = event.target.type.value;\n  const measure = event.target.measure.value;\n  const value = event.target.value.value;\n  const description = event.target.description.value;\n  const followUp = event.target.followUp.checked;\n  const attachment = event.target.attachment.value;\n\n  if (\n      general.trim().length === 0 ||\n      area.trim().length === 0 ||\n      type.trim().length === 0 ||\n      measure.trim().length === 0 ||\n      value.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/examination/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'examination attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'examination attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'examination attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'examination attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitExamination(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          examinationGeneral:\"${general}\",\n          examinationArea:\"${area}\",\n          examinationType:\"${type}\",\n          examinationMeasure:\"${measure}\",\n          examinationValue:\"${value}\",\n          examinationDescription:\"${description}\",\n          examinationFollowUp:${followUp},\n          examinationAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitExamination);\n      let responseAlert = '...Examination add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitExamination)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitExamination,\n        activityA: `addVisitExamination?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitExamination;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteExamination = (args) => {\n\n  console.log('...deleting Examination...');\n  this.context.setUserAlert('...deleting Examination...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const general = args.general;\n  const area = args.area;\n  const type = args.type;\n  const measure = args.measure;\n  const value = args.value;\n  const description = args.description;\n  const followUp = args.followUp;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitExamination(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          examinationGeneral:\"${general}\",\n          examinationArea:\"${area}\",\n          examinationType:\"${type}\",\n          examinationMeasure:\"${measure}\",\n          examinationValue:\"${value}\",\n          examinationDescription:\"${description}\",\n          examinationFollowUp:${followUp},\n          examinationAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitExamination);\n      let responseAlert = '...Examination delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitExamination)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitExamination,\n        activityA: `deleteVisitExamination?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitExamination;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/examination/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/examination/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `examination attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddInvestigationForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Investigation...');\n  this.context.setUserAlert('...adding Investigation...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/investigation/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'investigation attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'investigation attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'investigation attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'investigation attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitInvestigation(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          investigationTitle:\"${title}\",\n          investigationType:\"${type}\",\n          investigationDescription:\"${description}\",\n          investigationAttachment:\"${file2Path}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitInvestigation);\n      let responseAlert = '...Investigation add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitInvestigation)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitInvestigation,\n        activityA: `addVisitInvestigation?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitInvestigation;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteInvestigation = (args) => {\n\n  console.log('...deleting Investigation...');\n  this.context.setUserAlert('...deleting Investigation...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitInvestigation(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          investigationTitle:\"${title}\",\n          investigationType:\"${type}\",\n          investigationDescription:\"${description}\",\n          investigationAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitInvestigation);\n      let responseAlert = '...Investigation delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitInvestigation)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitInvestigation,\n        activityA: `deleteVisitInvestigation?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitInvestigation;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/investigation/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/investigation/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `investigation attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddDiagnosisForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Diagnosis...');\n  this.context.setUserAlert('...adding Diagnosis...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const attachment = event.target.attachment.value;\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/diagnosis/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'diagnosis attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'diagnosis attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'diagnosis attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'diagnosis attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitDiagnosis(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          diagnosisTitle:\"${title}\",\n          diagnosisType:\"${type}\",\n          diagnosisDescription:\"${description}\",\n          diagnosisAttachment:\"${file2Path}\"\n        })\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitDiagnosis);\n      let responseAlert = '...Diagnosis add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitDiagnosis)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitDiagnosis,\n        activityA: `addVisitDiagnosis?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitDiagnosis;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteDiagnosis = (args) => {\n\n  console.log('...deleting Diagnosis...');\n  this.context.setUserAlert('...deleting Diagnosis...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitDiagnosis(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        visitInput:{\n          diagnosisTitle:\"${title}\",\n          diagnosisType:\"${type}\",\n          diagnosisDescription:\"${description}\",\n          diagnosisAttachments:\"${attachments}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id},consultants{_id},appointment{_id},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitDiagnosis);\n      let responseAlert = '...Diagnosis delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitDiagnosis)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitDiagnosis,\n        activityA: `deleteVisitDiagnosis?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitDiagnosis;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/diagnosis/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/diagnosis/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `diagnosis attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddTreatmentForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Treatment...');\n  this.context.setUserAlert('...adding Treatment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const dose = event.target.dose.value;\n  const frequency = event.target.frequency.value;\n  const attachment = event.target.attachment.value;\n\n\n  if (\n      title.trim().length === 0 ||\n      type.trim().length === 0 ||\n      description.trim().length === 0 ||\n      dose.trim().length === 0 ||\n      frequency.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/treatment/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'treatment attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'treatment attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'treatment attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'treatment attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n        mutation {addVisitTreatment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${type}\",\n            treatmentTitle:\"${title}\",\n            treatmentDescription:\"${description}\",\n            treatmentDose:\"${dose}\",\n            treatmentFrequency:\"${frequency}\",\n            treatmentAttachment:\"${file2Path}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitTreatment);\n      let responseAlert = '...Treatment add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitTreatment)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitTreatment,\n        activityA: `addVisitTreatment?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitTreatment;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteTreatment = (args) => {\n\n  console.log('...deleting Treatment...');\n  this.context.setUserAlert('...deleting Treatment...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const dose = args.dose;\n  const frequency = args.frequency;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n        mutation {deleteVisitTreatment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${type}\",\n            treatmentTitle:\"${title}\",\n            treatmentDescription:\"${description}\",\n            treatmentDose:\"${dose}\",\n            treatmentFrequency:\"${frequency}\",\n            treatmentAttachments:\"${attachments}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitTreatment);\n      let responseAlert = '...Treatment delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitTreatment)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitTreatment,\n        activityA: `deleteVisitTreatment?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitTreatment;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/treatment/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/treatment/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `treatment attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddBillingForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Billing...');\n  this.context.setUserAlert('...adding Billing...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const description = event.target.description.value;\n  const amount = event.target.amount.value;\n  const paid = event.target.paid.checked;\n  const notes = event.target.notes.value;\n  const attachment = event.target.attachment.value;\n\n\n  if (\n      title.trim().length === 0 ||\n      description.trim().length === 0 ||\n      amount <= 0 ||\n      notes.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    this.setState({isLoading: false})\n    return;\n  }\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    file2Path = '';\n    // this.context.setUserAlert(\"...no file!? Please add a file...\")\n    //     this.setState({isLoading: false})\n    //     return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/billing/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'billing attachment'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'billing attachment',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'billing attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'billing attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n        mutation {addVisitBilling(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${title}\",\n            billingType:\"${type}\",\n            billingDescription:\"${description}\",\n            billingAmount:${amount},\n            billingPaid:${paid},\n            billingAttachment:\"${file2Path}\",\n            billingNotes:\"${notes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitBilling);\n      let responseAlert = '...Billing add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitBilling)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitBilling,\n        activityA: `addVisitBilling?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitBilling;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteBilling = (args) => {\n\n  console.log('...deleting Billing...',args);\n  this.context.setUserAlert('...deleting Billing...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const title = args.title;\n  const type = args.type;\n  const description = args.description;\n  const amount = args.amount;\n  const paid = args.paid;\n  const notes = args.notes;\n  const attachments = args.attachments;\n\n  let requestBody = {\n    query: `\n        mutation {deleteVisitBilling(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${title}\",\n            billingType:\"${type}\",\n            billingDescription:\"${description}\",\n            billingAmount:${amount},\n            billingPaid:${paid},\n            billingAttachments:\"${attachments}\",\n            billingNotes:\"${notes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitBilling);\n      let responseAlert = '...Billing delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitBilling)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitBilling,\n        activityA: `deleteVisitBilling?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitBilling;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const preAttachments = args.attachments;\n\n      const filePath = 'visit/'+visitId+'/billing/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/billing/attachments/';\n\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachments..')\n      console.log('...s3 deleting attachments..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `billing attachments`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      console.log('start');\n      for (let index = 0; index < preAttachments.length; index++) {\n        let preAttachment = preAttachments[index];\n        console.log('multifile deletion...',index);\n\n        let filename = preAttachment;\n        let filename2 = filename.replace(filePath2,'');\n\n        ReactS3Client\n        .deleteFile(filename2, config)\n        .then(response => {\n          console.log(response)\n          this.context.setUserAlert(response)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n          })\n        })\n\n\n      }\n      console.log('end');\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddImageForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Image...');\n  this.context.setUserAlert('...adding Image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let imageName;\n  let imageType;\n  let imagePath;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/images';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    imagePath = filePath2;\n    imageName = fileName2;\n    imageType = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading image ...\")\n    console.log('...s3 uploading image..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'image'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'image',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'image',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n\n  let requestBody = {\n    query: `\n        mutation {addVisitImage(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            imageName:\"${imageName}\",\n            imageType:\"${imageType}\",\n            imagePath:\"${imagePath}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitImage);\n      let responseAlert = '...Image add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitImage)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitImage,\n        activityA: `addVisitImage?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitImage;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteImage = (args) => {\n\n  console.log('...deleting Image...',args);\n  this.context.setUserAlert('...deleting Image...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const name = args.name;\n  const type = args.type;\n  const path = args.path;\n\n  let requestBody = {\n    query: `\n    mutation {deleteVisitImage(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        imageName:\"${name}\",\n        imageType:\"${type}\",\n        imagePath:\"${path}\"\n      })\n    {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitImage);\n      let responseAlert = '...Image delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitImage)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitImage,\n        activityA: `deleteVisitImage?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitImage;\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'visit/'+visitId+'/images';\n      const filename = args.name;\n\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting image..')\n      console.log('...s3 deleting image..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'image'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'image',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddFileForm = (event) => {\n  event.preventDefault();\n  console.log('...adding File...');\n  this.context.setUserAlert('...adding File...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let file2Name;\n  let file2Type;\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/files';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n    file2Name = fileName2;\n    file2Type = fileType;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading file ...\")\n    console.log('...s3 uploading file..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: 'file'\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: 'file',\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'file',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody = {\n    query: `\n        mutation {addVisitFile(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            fileName:\"${file2Name}\",\n            fileType:\"${file2Type}\",\n            filePath:\"${file2Path}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitFile);\n      let responseAlert = '...File add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitFile)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitFile,\n        activityA: `addVisitFile?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitFile;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteFile = (args) => {\n\n  console.log('...deleting File...',args);\n  this.context.setUserAlert('...deleting File...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const name = args.name;\n  const type = args.type;\n  const path = args.path;\n\n  let requestBody = {\n    query: `\n    mutation {deleteVisitFile(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        fileName:\"${name}\",\n        fileType:\"${type}\",\n        filePath:\"${path}\"\n      })\n    {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitFile);\n      let responseAlert = '...File delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitFile)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitFile,\n        activityA: `deleteVisitFile?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitFile;\n      this.logUserActivity({activityId: activityId,token: token});\n\n      const filePath = 'visit/'+visitId+'/files';\n      const filename = args.name;\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting file..')\n      console.log('...s3 deleting file..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: 'file'\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: 'file',\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response.message)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddVigilanceForm = (event) => {\n  event.preventDefault();\n  console.log('...adding Vigilance...');\n  this.context.setUserAlert('...adding Vigilance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n    mutation {addVisitVigilance(\n      activityId:\"${activityId}\",\n      visitId:\"${visitId}\",\n      visitInput:{\n        vigilanceChronicIllnessDiabetesMedication:${event.target.vigilanceChronicIllnessDiabetesMedication.checked},\n        vigilanceChronicIllnessDiabetesTesting:${event.target.vigilanceChronicIllnessDiabetesTesting.checked},\n        vigilanceChronicIllnessDiabetesComment:\"${event.target.vigilanceChronicIllnessDiabetesComment.value}\",\n        vigilanceChronicIllnessHbpMedication:${event.target.vigilanceChronicIllnessHbpMedication.checked},\n        vigilanceChronicIllnessHbpTesting:${event.target.vigilanceChronicIllnessHbpTesting.checked},\n        vigilanceChronicIllnessHbpComment:\"${event.target.vigilanceChronicIllnessHbpComment.value}\",\n        vigilanceChronicIllnessDyslipidemiaMedication:${event.target.vigilanceChronicIllnessDyslipidemiaMedication.checked},\n        vigilanceChronicIllnessDyslipidemiaTesting:${event.target.vigilanceChronicIllnessDyslipidemiaTesting.checked},\n        vigilanceChronicIllnessDyslipidemiaComment:\"${event.target.vigilanceChronicIllnessDyslipidemiaComment.value}\",\n        vigilanceChronicIllnessCadMedication:${event.target.vigilanceChronicIllnessCadMedication.checked},\n        vigilanceChronicIllnessCadTesting:${event.target.vigilanceChronicIllnessCadTesting.checked},\n        vigilanceChronicIllnessCadComment:\"${event.target.vigilanceChronicIllnessCadComment.value}\",\n        vigilanceLifestyleWeightMedication:${event.target.vigilanceLifestyleWeightMedication.checked},\n        vigilanceLifestyleWeightTesting:${event.target.vigilanceLifestyleWeightTesting.checked},\n        vigilanceLifestyleWeightComment:\"${event.target.vigilanceLifestyleWeightComment.value}\",\n        vigilanceLifestyleDietMedication:${event.target.vigilanceLifestyleDietMedication.checked},\n        vigilanceLifestyleDietTesting:${event.target.vigilanceLifestyleDietTesting.checked},\n        vigilanceLifestyleDietComment:\"${event.target.vigilanceLifestyleDietComment.value}\",\n        vigilanceLifestyleSmokingMedication:${event.target.vigilanceLifestyleSmokingMedication.checked},\n        vigilanceLifestyleSmokingTesting:${event.target.vigilanceLifestyleSmokingTesting.checked},\n        vigilanceLifestyleSmokingComment:\"${event.target.vigilanceLifestyleSmokingComment.value}\",\n        vigilanceLifestyleSubstanceAbuseMedication:${event.target.vigilanceLifestyleSubstanceAbuseMedication.checked},\n        vigilanceLifestyleSubstanceAbuseTesting:${event.target.vigilanceLifestyleSubstanceAbuseTesting.checked},\n        vigilanceLifestyleSubstanceAbuseComment:\"${event.target.vigilanceLifestyleSubstanceAbuseComment.value}\",\n        vigilanceLifestyleExerciseMedication:${event.target.vigilanceLifestyleExerciseMedication.checked},\n        vigilanceLifestyleExerciseTesting:${event.target.vigilanceLifestyleExerciseTesting.checked},\n        vigilanceLifestyleExerciseComment:\"${event.target.vigilanceLifestyleExerciseComment.value}\",\n        vigilanceLifestyleAllergiesMedication:${event.target.vigilanceLifestyleAllergiesMedication.checked},\n        vigilanceLifestyleAllergiesTesting:${event.target.vigilanceLifestyleAllergiesTesting.checked},\n        vigilanceLifestyleAllergiesComment:\"${event.target.vigilanceLifestyleAllergiesComment.value}\",\n        vigilanceLifestyleAsthmaMedication:${event.target.vigilanceLifestyleAsthmaMedication.checked},\n        vigilanceLifestyleAsthmaTesting:${event.target.vigilanceLifestyleAsthmaTesting.checked},\n        vigilanceLifestyleAsthmaComment:\"${event.target.vigilanceLifestyleAsthmaComment.value}\",\n        vigilanceScreeningBreastMedication:${event.target.vigilanceScreeningBreastMedication.checked},\n        vigilanceScreeningBreastTesting:${event.target.vigilanceScreeningBreastTesting.checked},\n        vigilanceScreeningBreastComment:\"${event.target.vigilanceScreeningBreastComment.value}\",\n        vigilanceScreeningProstateMedication:${event.target.vigilanceScreeningProstateMedication.checked},\n        vigilanceScreeningProstateTesting:${event.target.vigilanceScreeningProstateTesting.checked},\n        vigilanceScreeningProstateComment:\"${event.target.vigilanceScreeningProstateComment.value}\",\n        vigilanceScreeningCervixMedication:${event.target.vigilanceScreeningCervixMedication.checked},\n        vigilanceScreeningCervixTesting:${event.target.vigilanceScreeningCervixTesting.checked},\n        vigilanceScreeningCervixComment:\"${event.target.vigilanceScreeningCervixComment.value}\",\n        vigilanceScreeningColonMedication:${event.target.vigilanceScreeningColonMedication.checked},\n        vigilanceScreeningColonTesting:${event.target.vigilanceScreeningColonTesting.checked},\n        vigilanceScreeningColonComment:\"${event.target.vigilanceScreeningColonComment.value}\",\n        vigilanceScreeningDentalMedication:${event.target.vigilanceScreeningDentalMedication.checked},\n        vigilanceScreeningDentalTesting:${event.target.vigilanceScreeningDentalTesting.checked},\n        vigilanceScreeningDentalComment:\"${event.target.vigilanceScreeningDentalComment.value}\",\n        vigilanceVaccinesInfluenzaMedication:${event.target.vigilanceVaccinesInfluenzaMedication.checked},\n        vigilanceVaccinesInfluenzaTesting:${event.target.vigilanceVaccinesInfluenzaTesting.checked},\n        vigilanceVaccinesInfluenzaComment:\"${event.target.vigilanceVaccinesInfluenzaComment.value}\",\n        vigilanceVaccinesVaricellaMedication:${event.target.vigilanceVaccinesVaricellaMedication.checked},\n        vigilanceVaccinesVaricellaTesting:${event.target.vigilanceVaccinesVaricellaTesting.checked},\n        vigilanceVaccinesVaricellaComment:\"${event.target.vigilanceVaccinesVaricellaComment.value}\",\n        vigilanceVaccinesHpvMedication:${event.target.vigilanceVaccinesHpvMedication.checked},\n        vigilanceVaccinesHpvTesting:${event.target.vigilanceVaccinesHpvTesting.checked},\n        vigilanceVaccinesHpvComment:\"${event.target.vigilanceVaccinesHpvComment.value}\",\n        vigilanceVaccinesMmrMedication:${event.target.vigilanceVaccinesMmrMedication.checked},\n        vigilanceVaccinesMmrTesting:${event.target.vigilanceVaccinesMmrTesting.checked},\n        vigilanceVaccinesMmrComment:\"${event.target.vigilanceVaccinesMmrComment.value}\",\n        vigilanceVaccinesTetanusMedication:${event.target.vigilanceVaccinesTetanusMedication.checked},\n        vigilanceVaccinesTetanusTesting:${event.target.vigilanceVaccinesTetanusTesting.checked},\n        vigilanceVaccinesTetanusComment:\"${event.target.vigilanceVaccinesTetanusComment.value}\",\n        vigilanceVaccinesPneumovaxMedication:${event.target.vigilanceVaccinesPneumovaxMedication.checked},\n        vigilanceVaccinesPneumovaxTesting:${event.target.vigilanceVaccinesPneumovaxTesting.checked},\n        vigilanceVaccinesPneumovaxComment:\"${event.target.vigilanceVaccinesPneumovaxComment.value}\",\n        vigilanceVaccinesOtherName:\"${event.target.vigilanceVaccinesOtherName.value}\",\n        vigilanceVaccinesOtherMedication:${event.target.vigilanceVaccinesOtherMedication.checked},\n        vigilanceVaccinesOtherTesting:${event.target.vigilanceVaccinesOtherTesting.checked},\n        vigilanceVaccinesOtherComment:\"${event.target.vigilanceVaccinesOtherComment.value}\"\n      })\n    {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitVigilance);\n      let responseAlert = '...Vigilance add success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitVigilance)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.addVisitVigilance,\n        activityA: `addVisitVigilance?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.addVisitVigilance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteVigilance = (args) => {\n\n  console.log('...deleting Vigilance...');\n  this.context.setUserAlert('...deleting Vigilance...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n        mutation {deleteVisitVigilance(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            vigilanceChronicIllnessDiabetesMedication:${args.chronicIllness.diabetes.medication},\n            vigilanceChronicIllnessDiabetesTesting:${args.chronicIllness.diabetes.testing},\n            vigilanceChronicIllnessDiabetesComment:\"${args.chronicIllness.diabetes.comment}\",\n            vigilanceChronicIllnessHbpMedication:${args.chronicIllness.hbp.medication},\n            vigilanceChronicIllnessHbpTesting:${args.chronicIllness.hbp.testing},\n            vigilanceChronicIllnessHbpComment:\"${args.chronicIllness.hbp.comment}\",\n            vigilanceChronicIllnessDyslipidemiaMedication:${args.chronicIllness.dyslipidemia.medication},\n            vigilanceChronicIllnessDyslipidemiaTesting:${args.chronicIllness.dyslipidemia.testing},\n            vigilanceChronicIllnessDyslipidemiaComment:\"${args.chronicIllness.dyslipidemia.comment}\",\n            vigilanceChronicIllnessCadMedication:${args.chronicIllness.cad.medication},\n            vigilanceChronicIllnessCadTesting:${args.chronicIllness.cad.testing},\n            vigilanceChronicIllnessCadComment:\"${args.chronicIllness.cad.comment}\",\n            vigilanceLifestyleWeightMedication:${args.lifestyle.weight.medication},\n            vigilanceLifestyleWeightTesting:${args.lifestyle.weight.testing},\n            vigilanceLifestyleWeightComment:\"${args.lifestyle.weight.comment}\",\n            vigilanceLifestyleDietMedication:${args.lifestyle.diet.medication},\n            vigilanceLifestyleDietTesting:${args.lifestyle.diet.testing},\n            vigilanceLifestyleDietComment:\"${args.lifestyle.diet.comment}\",\n            vigilanceLifestyleSmokingMedication:${args.lifestyle.smoking.medication},\n            vigilanceLifestyleSmokingTesting:${args.lifestyle.smoking.testing},\n            vigilanceLifestyleSmokingComment:\"${args.lifestyle.smoking.comment}\",\n            vigilanceLifestyleSubstanceAbuseMedication:${args.lifestyle.substanceAbuse.medication},\n            vigilanceLifestyleSubstanceAbuseTesting:${args.lifestyle.substanceAbuse.testing},\n            vigilanceLifestyleSubstanceAbuseComment:\"${args.lifestyle.substanceAbuse.comment}\",\n            vigilanceLifestyleExerciseMedication:${args.lifestyle.exercise.medication},\n            vigilanceLifestyleExerciseTesting:${args.lifestyle.exercise.testing},\n            vigilanceLifestyleExerciseComment:\"${args.lifestyle.exercise.comment}\",\n            vigilanceLifestyleAllergiesMedication:${args.lifestyle.allergies.medication},\n            vigilanceLifestyleAllergiesTesting:${args.lifestyle.allergies.testing},\n            vigilanceLifestyleAllergiesComment:\"${args.lifestyle.allergies.comment}\",\n            vigilanceLifestyleAsthmaMedication:${args.lifestyle.asthma.medication},\n            vigilanceLifestyleAsthmaTesting:${args.lifestyle.asthma.testing},\n            vigilanceLifestyleAsthmaComment:\"${args.lifestyle.asthma.comment}\",\n            vigilanceScreeningBreastMedication:${args.screening.breast.medication},\n            vigilanceScreeningBreastTesting:${args.screening.breast.testing},\n            vigilanceScreeningBreastComment:\"${args.screening.breast.comment}\",\n            vigilanceScreeningProstateMedication:${args.screening.prostate.medication},\n            vigilanceScreeningProstateTesting:${args.screening.prostate.testing},\n            vigilanceScreeningProstateComment:\"${args.screening.prostate.comment}\",\n            vigilanceScreeningCervixMedication:${args.screening.cervix.medication},\n            vigilanceScreeningCervixTesting:${args.screening.cervix.testing},\n            vigilanceScreeningCervixComment:\"${args.screening.cervix.comment}\",\n            vigilanceScreeningColonMedication:${args.screening.colon.medication},\n            vigilanceScreeningColonTesting:${args.screening.colon.testing},\n            vigilanceScreeningColonComment:\"${args.screening.colon.comment}\",\n            vigilanceScreeningDentalMedication:${args.screening.dental.medication},\n            vigilanceScreeningDentalTesting:${args.screening.dental.testing},\n            vigilanceScreeningDentalComment:\"${args.screening.dental.comment}\",\n            vigilanceVaccinesInfluenzaMedication:${args.vaccines.influenza.medication},\n            vigilanceVaccinesInfluenzaTesting:${args.vaccines.influenza.testing},\n            vigilanceVaccinesInfluenzaComment:\"${args.vaccines.influenza.comment}\",\n            vigilanceVaccinesVaricellaMedication:${args.vaccines.varicella.medication},\n            vigilanceVaccinesVaricellaTesting:${args.vaccines.varicella.testing},\n            vigilanceVaccinesVaricellaComment:\"${args.vaccines.varicella.comment}\",\n            vigilanceVaccinesHpvMedication:${args.vaccines.hpv.medication},\n            vigilanceVaccinesHpvTesting:${args.vaccines.hpv.testing},\n            vigilanceVaccinesHpvComment:\"${args.vaccines.hpv.comment}\",\n            vigilanceVaccinesMmrMedication:${args.vaccines.mmr.medication},\n            vigilanceVaccinesMmrTesting:${args.vaccines.mmr.testing},\n            vigilanceVaccinesMmrComment:\"${args.vaccines.mmr.comment}\",\n            vigilanceVaccinesTetanusMedication:${args.vaccines.tetanus.medication},\n            vigilanceVaccinesTetanusTesting:${args.vaccines.tetanus.testing},\n            vigilanceVaccinesTetanusComment:\"${args.vaccines.tetanus.comment}\",\n            vigilanceVaccinesPneumovaxMedication:${args.vaccines.pneumovax.medication},\n            vigilanceVaccinesPneumovaxTesting:${args.vaccines.pneumovax.testing},\n            vigilanceVaccinesPneumovaxComment:\"${args.vaccines.pneumovax.comment}\",\n            vigilanceVaccinesOtherName:\"${args.vaccines.other.name}\",\n            vigilanceVaccinesOtherMedication:${args.vaccines.other.medication},\n            vigilanceVaccinesOtherTesting:${args.vaccines.other.testing},\n            vigilanceVaccinesOtherComment:\"${args.vaccines.other.comment}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitVigilance);\n      let responseAlert = '...Vigilance delete success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitVigilance)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.deleteVisitVigilance,\n        activityA: `deleteVisitFile?activityId:${activityId},visitId:${visitId}`,\n        adding: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.deleteVisitVigilance;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nsubmitAddUserForm = (event) => {\n  event.preventDefault();\n  console.log('...adding consultant...');\n  this.context.setUserAlert('...adding consultant...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = event.target.user.value;\n  const visitId = this.props.visit._id;\n\n  const userRole = this.state.users.filter(x => x._id === consultantId)[0].role;\n  if (userRole !== 'Doctor' && userRole !== 'Nurse') {\n    console.log('...please choose a Doctor or Nurse to add please...');\n    this.context.setUserAlert('...please choose a Doctor or Nurse to add please...')\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {addVisitConsultant(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addVisitConsultant);\n      let responseAlert = '...add consultant success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.addVisitConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `addVisitConsultant?activityId:${activityId},visitId:${visitId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\ndeleteConsultant = (args) => {\n  console.log('...deleting consultant...');\n  this.context.setUserAlert('...deleting consultant...')\n  this.setState({isLoading: true});\n  //\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const consultantId = args._id;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitConsultant(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        consultantId:\"${consultantId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitConsultant);\n      let responseAlert = '...delete consultant success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.deleteVisitConsultant)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteVisitConsultant?activityId:${activityId},visitId:${visitId},consultantId:${consultantId}`,\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.cancelAdd();\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nstartAddAttachment = (args) => {\n  console.log('...start add attachment...');\n  this.setState({\n    addAttachmentForm: true,\n    addAttachmentArgs: args\n  })\n}\ncancelAddAttachment = () => {\n  this.setState({\n    addAttachmentForm: false\n  })\n}\naddAttachment = (event) => {\n  event.preventDefault();\n  console.log('...adding attachment...');\n  this.context.setUserAlert('...adding attachment...');\n  this.setState({\n    isLoading: true,\n    addAttachmentForm: false\n  })\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  let args = this.state.addAttachmentArgs;\n  let field = args.field;\n\n  let file2Path;\n\n  if (event.target.fileInput.value === \"\" ) {\n    this.context.setUserAlert(\"...no file!? Please add a file...\")\n        this.setState({isLoading: false})\n        return;\n  }\n\n  if ( event.target.fileInput.value !== \"\" ) {\n    let file = AuthContext._currentValue.file;\n\n    const fileName = file.name;\n    // const fileName = file.name.substr(0, file.name.length - 4);\n    const filePath = 'visit/'+visitId+'/'+field+'/attachments';\n    console.log('...file present...');\n    let fileType = file.type.split('/')[1];\n    let filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/'+filePath+'/'+fileName+'.'+fileType;\n    let fileName2 = fileName+'.'+fileType;\n\n    file2Path = filePath2;\n\n    const config = {\n      bucketName: 'mbjentemrstorage',\n      dirName: filePath,\n      region: 'us-east-2',\n      accessKeyId: this.state.pocketVars.s3.a,\n      secretAccessKey: this.state.pocketVars.s3.b,\n      s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n    }\n    const ReactS3Client = new S3(config);\n    this.context.setUserAlert(\"...s3 uploading allergy attachment ...\")\n    console.log('...s3 uploading allergy attachment..');\n    this.setState({\n      overlayStatus: {\n        type: 's3',\n        data: {\n          action: 'upload',\n          target: `${field} attachment`,\n        }\n      },\n      overlay: true,\n    s3State:  {\n      action: 'upload',\n      target: `${field} attachment`,\n      status: 'inProgress'\n    }\n  });\n\n    ReactS3Client\n        .uploadFile(file, fileName)\n        .then(data => {\n          console.log(\"attachment upload success!\",data);\n          this.context.setUserAlert(\"...upload success!\")\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'complete'\n            }\n          });\n        })\n        .catch(err => {\n          console.error(\"upload error:\",err);\n          this.context.setUserAlert(\"...upload error:  \"+err.statusText)\n          this.setState({\n            overlayStatus: null,\n            overlay: false,\n            s3State:  {\n              action: 'upload',\n              target: 'allergy attachment',\n              status: 'failed'\n            }\n          });\n        })\n      }\n\n  let requestBody;\n\n  if (field === 'complaint') {\n    let complaintTitle = args.data.title;\n    let complaintDescription = args.data.description;\n    let complaintAnamnesis = args.data.anamnesis;\n    let complaintAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitComplaintAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${complaintTitle}\",\n            complaintDescription:\"${complaintDescription}\",\n            complaintAnamnesis:\"${complaintAnamnesis}\",\n            complaintAttachment:\"${complaintAttachment}\"\n          })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'survey') {\n    let surveyTitle = args.data.title;\n    let surveyDescription = args.data.description;\n    let surveyAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitSurveyAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            surveyTitle:\"${surveyTitle}\",\n            surveyDescription:\"${surveyDescription}\",\n            surveyAttachment:\"${surveyAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'systematicInquiry') {\n    let systematicInquiryTitle = args.data.title;\n    let systematicInquiryDescription = args.data.description;\n    let systematicInquiryAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitSysInquiryAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            systematicInquiryTitle:\"${systematicInquiryTitle}\",\n            systematicInquiryDescription:\"${systematicInquiryDescription}\",\n            systematicInquiryAttachment:\"${systematicInquiryAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'examination') {\n    let examinationGeneral = args.data.general;\n    let examinationArea = args.data.area;\n    let examinationType = args.data.type;\n    let examinationMeasure = args.data.measure;\n    let examinationValue = args.data.value;\n    let examinationDescription = args.data.description;\n    let examinationFollowUp = args.data.followUp;\n    let examinationAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitExaminationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            examinationGeneral:\"${examinationGeneral}\",\n            examinationArea:\"${examinationArea}\",\n            examinationType:\"${examinationType}\",\n            examinationMeasure:\"${examinationMeasure}\",\n            examinationValue:\"${examinationValue}\",\n            examinationDescription:\"${examinationDescription}\",\n            examinationFollowUp:${examinationFollowUp},\n            examinationAttachment:\"${examinationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'investigation') {\n    let investigationTitle = args.data.title;\n    let investigationType = args.data.type;\n    let investigationDescription = args.data.description;\n    let investigationAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitInvestigationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            investigationTitle:\"${investigationTitle}\",\n            investigationType:\"${investigationType}\",\n            investigationDescription:\"${investigationDescription}\",\n            investigationAttachment:\"${investigationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'diagnosis') {\n    let diagnosisTitle = args.data.title;\n    let diagnosisType = args.data.type;\n    let diagnosisDescription = args.data.description;\n    let diagnosisAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitDiagnosisAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            diagnosisTitle:\"${diagnosisTitle}\",\n            diagnosisType:\"${diagnosisType}\",\n            diagnosisDescription:\"${diagnosisDescription}\",\n            diagnosisAttachment:\"${diagnosisAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'treatment') {\n    let treatmentType = args.data.type;\n    let treatmentTitle = args.data.title;\n    let treatmentDescription = args.data.description;\n    let treatmentDose = args.data.dose;\n    let treatmentFrequency = args.data.frequency;\n    let treatmentAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitTreatmentAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${treatmentType}\",\n            treatmentTitle:\"${treatmentTitle}\",\n            treatmentDescription:\"${treatmentDescription}\",\n            treatmentDose:\"${treatmentDose}\",\n            treatmentFrequency:\"${treatmentFrequency}\",\n            treatmentAttachment:\"${treatmentAttachment}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'billing') {\n    let billingAmount = args.data.amount;\n    let billingPaid = args.data.paid;\n    let billingTitle = args.data.title;\n    let billingType = args.data.type;\n    let billingDescription = args.data.description;\n    let billingNotes = args.data.notes;\n    let billingAttachment = file2Path;\n\n    requestBody = {\n      query: `\n        mutation {addVisitBillingAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${billingTitle}\",\n            billingType:\"${billingType}\",\n            billingDescription:\"${billingDescription}\",\n            billingAmount:${billingAmount},\n            billingPaid:${billingPaid},\n            billingAttachment:\"${billingAttachment}\",\n            billingNotes:\"${billingNotes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'complaint') {\n        // console.log('...resData...',resData.data.addVisitComplaintAttachment);\n      }\n      if (field === 'survey') {\n        // console.log('...resData...',resData.data.addVisitSurveyAttachment);\n      }\n      if (field === 'systematicInquiry') {\n        // console.log('...resData...',resData.data.addVisitSysInquiryAttachment);\n      }\n      if (field === 'examination') {\n        // console.log('...resData...',resData.data.addVisitExaminationAttachment);\n      }\n      if (field === 'investigation') {\n        // console.log('...resData...',resData.data.addVisitInvestigationAttachment);\n      }\n      if (field === 'diagnosis') {\n        // console.log('...resData...',resData.data.addVisitDiagnosisAttachment);\n      }\n      if (field === 'treatment') {\n        // console.log('...resData...',resData.data.addVisitTreatmentAttachment);\n      }\n      if (field === 'billing') {\n        // console.log('...resData...',resData.data.addVisitBillingAttachment);\n      }\n\n      let responseAlert = '...add attachment success!...';\n      let error = null;\n\n      if (field === 'complaint') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'survey') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'systematicInquiry') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'examination') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'investigation') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'diagnosis') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'treatment') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'billing') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'complaint') {\n        this.props.updateVisit(resData.data.addVisitComplaintAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitComplaintAttachment,\n          activityA: `addVisitComplaintAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'survey') {\n        this.props.updateVisit(resData.data.addVisitSurveyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitSurveyAttachment,\n          activityA: `addVisitSurveyAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'systematicInquiry') {\n        this.props.updateVisit(resData.data.addVisitSysInquiryAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitSysInquiryAttachment,\n          activityA: `addVisitSysInquiryAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'examination') {\n        this.props.updateVisit(resData.data.addVisitExaminationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitExaminationAttachment,\n          activityA: `addVisitExaminationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'investigation') {\n        this.props.updateVisit(resData.data.addVisitInvestigationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitInvestigationAttachment,\n          activityA: `addVisitInvestigationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'diagnosis') {\n        this.props.updateVisit(resData.data.addVisitDiagnosisAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitDiagnosisAttachment,\n          activityA: `addVisitDiagnosisAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'treatment') {\n        this.props.updateVisit(resData.data.addVisitTreatmentAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitTreatmentAttachment,\n          activityA: `addVisitTreatmentAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'billing') {\n        this.props.updateVisit(resData.data.addVisitBillingAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.addVisitBillingAttachment,\n          activityA: `addVisitBillingAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\ndeleteAttachment = (args) => {\n  console.log('...deleting attachment...', args.type);\n  this.context.setUserAlert('...adding attachment...');\n  // this.setState({isLoading: true})\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  const field = args.type;\n  const attachment = args.attachment;\n  const item = args.item;\n\n  let requestBody;\n\n  if (field === 'complaint') {\n    let complaintTitle = item.title;\n    let complaintDescription = item.description;\n    let complaintAnamnesis = item.anamnesis;\n    let complaintAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitComplaintAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            complaintTitle:\"${complaintTitle}\",\n            complaintDescription:\"${complaintDescription}\",\n            complaintAnamnesis:\"${complaintAnamnesis}\",\n            complaintAttachment:\"${complaintAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'survey') {\n    let surveyTitle = item.title;\n    let surveyDescription = item.description;\n    let surveyAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitSurveyAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            surveyTitle:\"${surveyTitle}\",\n            surveyDescription:\"${surveyDescription}\",\n            surveyAttachment:\"${surveyAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'systematicInquiry') {\n    let systematicInquiryTitle = item.title;\n    let systematicInquiryDescription = item.description;\n    let systematicInquiryAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitSysInquiryAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            systematicInquiryTitle:\"${systematicInquiryTitle}\",\n            systematicInquiryDescription:\"${systematicInquiryDescription}\",\n            systematicInquiryAttachment:\"${systematicInquiryAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'examination') {\n    let examinationGeneral = item.general;\n    let examinationArea = item.area;\n    let examinationType = item.type;\n    let examinationMeasure = item.measure;\n    let examinationValue = item.value;\n    let examinationDescription = item.description;\n    let examinationFollowUp = item.followUp;\n    let examinationAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitExaminationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            examinationGeneral:\"${examinationGeneral}\",\n            examinationArea:\"${examinationArea}\",\n            examinationType:\"${examinationType}\",\n            examinationMeasure:\"${examinationMeasure}\",\n            examinationValue:\"${examinationValue}\",\n            examinationDescription:\"${examinationDescription}\",\n            examinationFollowUp:${examinationFollowUp},\n            examinationAttachment:\"${examinationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'investigation') {\n    let investigationTitle = item.title;\n    let investigationType = item.type;\n    let investigationDescription = item.description;\n    let investigationAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitInvestigationAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            investigationTitle:\"${investigationTitle}\",\n            investigationType:\"${investigationType}\",\n            investigationDescription:\"${investigationDescription}\",\n            investigationAttachment:\"${investigationAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'diagnosis') {\n    let diagnosisTitle = item.title;\n    let diagnosisType = item.type;\n    let diagnosisDescription = item.description;\n    let diagnosisAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitDiagnosisAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            diagnosisTitle:\"${diagnosisTitle}\",\n            diagnosisType:\"${diagnosisType}\",\n            diagnosisDescription:\"${diagnosisDescription}\",\n            diagnosisAttachment:\"${diagnosisAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'treatment') {\n\n    let treatmentType = item.type;\n    let treatmentTitle = item.title;\n    let treatmentDescription = item.description;\n    let treatmentDose = item.dose;\n    let treatmentFrequency = item.frequency;\n    let treatmentAttachment = attachment;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitTreatmentAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            treatmentType:\"${treatmentType}\",\n            treatmentTitle:\"${treatmentTitle}\",\n            treatmentDescription:\"${treatmentDescription}\",\n            treatmentDose:\"${treatmentDose}\",\n            treatmentFrequency:\"${treatmentFrequency}\",\n            treatmentAttachment:\"${treatmentAttachment}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (field === 'billing') {\n\n    let billingTitle = item.title;\n    let billingType = item.type;\n    let billingDescription = item.description;\n    let billingAmount = item.amount;\n    let billingPaid = item.paid;\n    let billingAttachment = attachment;\n    let billingNotes = item.notes;\n\n    requestBody = {\n      query: `\n        mutation {deleteVisitBillingAttachment(\n          activityId:\"${activityId}\",\n          visitId:\"${visitId}\",\n          visitInput:{\n            billingTitle:\"${billingTitle}\",\n            billingType:\"${billingType}\",\n            billingDescription:\"${billingDescription}\",\n            billingAmount:${billingAmount},\n            billingPaid:${billingPaid},\n            billingAttachment:\"${billingAttachment}\",\n            billingNotes:\"${billingNotes}\"\n          })\n          {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (field === 'complaint') {\n        // console.log('...resData...',resData.data.deleteVisitComplaintAttachment);\n      }\n      if (field === 'survey') {\n        // console.log('...resData...',resData.data.deleteVisitSurveyAttachment);\n      }\n      if (field === 'systematicInquiry') {\n        // console.log('...resData...',resData.data.deleteVisitSysInquiryAttachment);\n      }\n      if (field === 'examination') {\n        // console.log('...resData...',resData.data.deleteVisitExaminationAttachment);\n      }\n      if (field === 'investigation') {\n        // console.log('...resData...',resData.data.deleteVisitInvestigationAttachment);\n      }\n      if (field === 'diagnosis') {\n        // console.log('...resData...',resData.data.deleteVisitDiagnosisAttachment);\n      }\n      if (field === 'treatment') {\n        // console.log('...resData...',resData.data.deleteVisitTreatmentAttachment);\n      }\n      if (field === 'billing') {\n        // console.log('...resData...',resData.data.deleteVisitBillingAttachment);\n      }\n\n      let responseAlert = '...delete attachment success!...';\n      let error = null;\n\n      if (field === 'complaint') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'survey') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'systematicInquiry') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'examination') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'investigation') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'diagnosis') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'treatment') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (field === 'billing') {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (field === 'complaint') {\n        this.props.updateVisit(resData.data.deleteVisitComplaintAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitComplaintAttachment,\n          activityA: `deleteVisitComplaintAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'survey') {\n        this.props.updateVisit(resData.data.deleteVisitSurveyAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitSurveyAttachment,\n          activityA: `deleteVisitSurveyAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'systematicInquiry') {\n        this.props.updateVisit(resData.data.deleteVisitSysInquiryAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitSysInquiryAttachment,\n          activityA: `deleteVisitSysInquiryAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'examination') {\n        this.props.updateVisit(resData.data.deleteVisitExaminationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitExaminationAttachment,\n          activityA: `deleteVisitExaminationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'investigation') {\n        this.props.updateVisit(resData.data.deleteVisitInvestigationAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitInvestigationAttachment,\n          activityA: `deleteVisitInvestigationAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'diagnosis') {\n        this.props.updateVisit(resData.data.deleteVisitDiagnosisAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitDiagnosisAttachment,\n          activityA: `deleteVisitDiagnosisAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'treatment') {\n        this.props.updateVisit(resData.data.deleteVisitTreatmentAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitTreatmentAttachment,\n          activityA: `deleteVisitTreatmentAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n      if (field === 'billing') {\n        this.props.updateVisit(resData.data.deleteVisitBillingAttachment)\n        this.setState({\n          isLoading: false,\n          selectedVisit: resData.data.deleteVisitBillingAttachment,\n          activityA: `deleteVisitBillingAttachment?activityId:${activityId},visitId:${visitId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n\n\n      const filePath = 'visit/'+visitId+'/'+field+'/attachments';\n      const filePath2 = 'https://mbjentemrstorage.s3.amazonaws.com/visit/'+visitId+'/'+field+'/attachments/';\n      const filename = attachment;\n      const filename2 = filename.replace(filePath2,'');\n      console.log('1:',filePath);\n      console.log('2:',filename);\n      console.log('3:',filename2);\n      const config = {\n        bucketName: 'mbjentemrstorage',\n        dirName: filePath,\n        region: 'us-east-2',\n        accessKeyId: this.state.pocketVars.s3.a,\n        secretAccessKey: this.state.pocketVars.s3.b,\n        s3Url: 'https://mbjentemrstorage.s3.amazonaws.com',\n      }\n      const ReactS3Client = new S3(config);\n      this.context.setUserAlert('...s3 deleting attachment..')\n      console.log('...s3 deleting attachment..');\n      this.setState({\n        overlayStatus: {\n          type: 's3',\n          data: {\n            action: 'delete',\n            target: `${field} attachment`\n          }\n        },\n        overlay: true,\n        s3State:  {\n          action: 'delete',\n          target: `${field} attachment`,\n          status: 'inProgress'\n        }\n      });\n\n      ReactS3Client\n      .deleteFile(filename2, config)\n      .then(response => {\n        console.log(response)\n        this.context.setUserAlert(response)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({\n          overlayStatus: null,\n          overlay: false,\n        })\n      })\n\n\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nsubmitUpdateSingleFieldForm = (event) => {\n  event.preventDefault();\n  console.log('...updating single field...');\n  this.context.setUserAlert('...updating single field...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n\n  let requestBody = {\n    query: `\n      mutation {updateVisitSingleField(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.updateVisitSingleField);\n      let responseAlert = '...field update success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.updateVisitSingleField)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.updateVisitSingleField,\n        activityA: `updateVisitSingleField?activityId:${activityId},visitId:${visitId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.updateVisitSingleField;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\nstartUpdateSingleField = (args) => {\n  this.setState({\n    updateSingleField: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelUpdateSingleField = () => {\n  this.setState({\n    updateSingleField: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({menuSelect: args})\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\n\ncompleteVisit = () => {\n  console.log('...completing visit...');\n  this.context.setUserAlert('...completing visit...')\n  this.setState({isLoading: true})\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = this.props.visit._id;\n\n  let requestBody = {\n    query: `\n      mutation {completeVisitById(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\"\n      )\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.completeVisitById);\n      let responseAlert = '...visit completed!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.props.updateVisit(resData.data.completeVisitById)\n      this.setState({\n        isLoading: false,\n        selectedVisit: resData.data.completeVisitById,\n        activityA: `completeVisitById?activityId:${activityId},visitId:${visitId}`,\n        updateSingleField: {\n          state: null,\n          field: null\n        }\n      });\n      this.context.selectedVisit = resData.data.completeVisitById;\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n      />\n    )}\n\n    <Container className=\"detailPageContainer\">\n      <Row className=\"detailPageContainerRow mainRow\">\n        <Col md={2} className=\"detailPageContainerCol\">\n\n        </Col>\n        <Col md={10} className=\"detailPageContainerCol\">\n          {!this.props.visit && (\n            <h3>...</h3>\n          )}\n        </Col>\n      </Row>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"1\">\n        <Row className=\"detailPageContainerRow mainRow2\">\n          <Col md={3} className=\"detailPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column subMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"1\" onClick={this.menuSelect.bind(this, 'basic')}>Basic</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"2\" onClick={this.menuSelect.bind(this, 'admin')}>Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"3\" onClick={this.menuSelect.bind(this, 'consultant')}>Consultants</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"4\" onClick={this.menuSelect.bind(this, 'complaint')}>Complaints</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"5\" onClick={this.menuSelect.bind(this, 'survey')}>Survey</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"6\" onClick={this.menuSelect.bind(this, 'systematicInquiry')}>Systematic Inquiry</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"7\" onClick={this.menuSelect.bind(this, 'vitals')}>Vitals</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"8\" onClick={this.menuSelect.bind(this, 'examination')}>Examination</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"9\" onClick={this.menuSelect.bind(this, 'investigation')}>investigation</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"10\" onClick={this.menuSelect.bind(this, 'diagnosis')}>diagnosis</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"11\" onClick={this.menuSelect.bind(this, 'treatment')}>treatment</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"12\" onClick={this.menuSelect.bind(this, 'billing')}>billing</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"13\" onClick={this.menuSelect.bind(this, 'vigilance')}>vigilance</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"14\" onClick={this.menuSelect.bind(this, 'image')}>images</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"15\" onClick={this.menuSelect.bind(this, 'file')}>files</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                {this.state.menuSelect === 'consultant' && (\n                  <FilterUserForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'complaint' && (\n                  <FilterComplaintForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'survey' && (\n                  <FilterSurveyForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'systematicInquiry' && (\n                  <FilterSystematicInquiryForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'vitals' && (\n                  <FilterVitalsForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'examination' && (\n                  <FilterExaminationForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'investigation' && (\n                  <FilterInvestigationForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'diagnosis' && (\n                  <FilterDiagnosisForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'treatment' && (\n                  <FilterTreatmentForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'billing' && (\n                  <FilterBillingForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'vigilance' && (\n                  <h3>Filter vigilance form</h3>\n                )}\n                {this.state.menuSelect === 'image' && (\n                  <FilterImageForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n                {this.state.menuSelect === 'file' && (\n                  <FilterFileForm\n                    onCancel={this.toggleSideCol}\n                    onConfirm={this.submitFilterForm}\n                  />\n                )}\n              </Col>\n            )}\n          </Col>\n\n          {this.props.visit && (\n            <Col md={9} className=\"detailPageContainerCol specialCol2\">\n              {this.state.updateSingleField.state === true && (\n                <UpdatePatientSingleFieldForm\n                  field={this.state.updateSingleField.field}\n                  onConfirm={this.submitUpdateSingleFieldForm}\n                  onCancel={this.cancelUpdateSingleField}\n                />\n              )}\n                <Tab.Content className=\"tabContent\">\n                  <Tab.Pane eventKey=\"1\">\n                    Visit Basic:\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.title}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'title')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Type:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.type}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'type')}>Edit</Button>\n                        <p className=\"listGroupText\">subType:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.subType}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'subType')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Date:</p>\n                        <p className=\"listGroupText bold\">{moment.unix(this.props.visit.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD')}</p>\n                        <p className=\"listGroupText\">Time:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.time}</p>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.startUpdateSingleField.bind(this, 'time')}>Edit</Button>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Patient:</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Name:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.patient.title}</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.patient.name}</p>\n                        <Link\n                          to={{\n                            pathname: \"/patients\",\n                            state: {patient: this.props.visit.patient._id}\n                          }}\n                        >Go!</Link>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.props.visit.patient._id}</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Appointment:</p>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Title:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit.appointment.title}</p>\n                        <Link\n                          to={{\n                            pathname: \"/appointments\",\n                            state: {appointment: this.props.visit.appointment._id}\n                          }}\n                        >Go!</Link>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                      <p className=\"listGroupText\">Id:</p>\n                      <p className=\"listGroupText bold\">{this.props.visit.appointment._id}</p>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"2\">\n                    Visit Admin\n                    <ListGroup className=\"profileBasicListGroup\">\n                      <ListGroup.Item>\n                        <p className=\"listGroupText\">Id:</p>\n                        <p className=\"listGroupText bold\">{this.props.visit._id}</p>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"3\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Consultant List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'consultant')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'consultant' &&\n                      this.state.users && (\n                        <AddUserForm\n                          onConfirm={this.submitAddUserForm}\n                          onCancel={this.cancelAdd}\n                          filter={this.state.filter}\n                          users={this.state.users}\n                        />\n                    )}\n                    <UserList\n                      filter={this.state.filter}\n                      authId={this.context.activityId}\n                      users={this.props.visit.consultants}\n                      visitPage={true}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteConsultant}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"4\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Complaint List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'complaint')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'complaint' && (\n                        <AddComplaintForm\n                          onConfirm={this.submitAddComplaintForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitComplaintList\n                      filter={this.state.filter}\n                      complaints={this.props.visit.complaints}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteComplaint}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"5\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Survey List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'survey')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'survey' && (\n                        <AddSurveyForm\n                          onConfirm={this.submitAddSurveyForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitSurveyList\n                      filter={this.state.filter}\n                      surveys={this.props.visit.surveys}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteSurvey}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"6\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit SystematicInquiry List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'systematicInquiry')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'systematicInquiry' && (\n                        <AddSystematicInquiryForm\n                          onConfirm={this.submitAddSystematicInquiryForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitSystematicInquiryList\n                      filter={this.state.filter}\n                      systematicInquiry={this.props.visit.systematicInquiry}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteSystematicInquiry}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"7\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Vitals List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'vitals')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'vitals' && (\n                        <AddVitalsForm\n                          onConfirm={this.submitAddVitalsForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitVitalsList\n                      filter={this.state.filter}\n                      vitals={this.props.visit.vitals}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteVitals}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"8\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Examination List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'examination')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'examination' && (\n                        <AddExaminationForm\n                          onConfirm={this.submitAddExaminationForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitExaminationList\n                      filter={this.state.filter}\n                      examination={this.props.visit.examination}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteExamination}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"9\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Investigation List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'investigation')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'investigation' && (\n                        <AddInvestigationForm\n                          onConfirm={this.submitAddInvestigationForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitInvestigationList\n                      filter={this.state.filter}\n                      investigation={this.props.visit.investigation}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteInvestigation}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"10\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Diagnosis List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'diagnosis')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'diagnosis' && (\n                        <AddDiagnosisForm\n                          onConfirm={this.submitAddDiagnosisForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitDiagnosisList\n                      filter={this.state.filter}\n                      diagnosis={this.props.visit.diagnosis}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteDiagnosis}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"11\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Treatment List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'treatment')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'treatment' && (\n                        <AddTreatmentForm\n                          onConfirm={this.submitAddTreatmentForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitTreatmentList\n                      filter={this.state.filter}\n                      treatment={this.props.visit.treatment}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteTreatment}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"12\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Billing List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'billing')}>Add</Button>\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={this.completeVisit}>Complete Visit</Button>\n\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'billing' && (\n                        <AddBillingForm\n                          onConfirm={this.submitAddBillingForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    {this.state.addAttachmentForm === true && (\n                      <AddAttachmentForm\n                        onCancel={this.cancelAddAttachment}\n                        onConfirm={this.addAttachment}\n                      />\n                    )}\n                    <VisitBillingList\n                      filter={this.state.filter}\n                      billing={this.props.visit.billing}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteBilling}\n                      onAddAttachment={this.startAddAttachment}\n                      deleteAttachment={this.deleteAttachment}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"13\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Vigilance List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'vigilance')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'vigilance' && (\n                        <AddVigilanceForm\n                          onConfirm={this.submitAddVigilanceForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitVigilanceList\n                      filter={this.state.filter}\n                      vigilance={this.props.visit.vigilance}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteVigilance}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"14\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit Image List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'image')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'image' && (\n                        <AddImageForm\n                          onConfirm={this.submitAddImageForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitImageList\n                      filter={this.state.filter}\n                      images={this.props.visit.images}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteImage}\n                    />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"15\">\n                    <Row className=\"displayPaneHeadRow\">\n                      <p className=\"displayPaneTitle\">Visit File List:</p>\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                      {this.context.role !== 'Staff' && (\n                        <Button variant=\"outline-success\" onClick={this.startAdd.bind(this, 'file')}>Add</Button>\n                      )}\n                    </Row>\n                    {this.state.adding.state === true &&\n                      this.state.adding.field === 'file' && (\n                        <AddFileForm\n                          onConfirm={this.submitAddFileForm}\n                          onCancel={this.cancelAdd}\n                        />\n                    )}\n                    <VisitFileList\n                      filter={this.state.filter}\n                      files={this.props.visit.files}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.deleteFile}\n                    />\n                  </Tab.Pane>\n\n                </Tab.Content>\n\n            </Col>\n          )}\n\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n}\n\n}\n\nexport default VisitDetail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './searchForms.css';\n\nconst VisitSearchForm = (props) => {\n\nreturn (\n<div className=\"searchFormTopDiv\">\n  <Form onSubmit={props.onConfirm}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"field\">\n        <Form.Label>Field</Form.Label>\n        <Form.Control as=\"select\">\n        <option>date</option>\n        <option>time</option>\n        <option>title</option>\n        <option>type</option>\n        <option>subType</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"query\">\n        <Form.Label>Query</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"date format: 'YYYY-MM-DD'\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"filterFormBtn\">Search</Button>\n      <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={props.onCancel}>Cancel</Button>\n    </Form.Row>\n  </Form>\n</div>\n\n)};\n\nexport default VisitSearchForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport moment from 'moment';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/alertBox/AlertBox';\nimport LoadingOverlay from '../../components/overlay/LoadingOverlay';\n\nimport CreateVisitForm from '../../components/forms/create/CreateVisitForm';\nimport VisitList from '../../components/lists/visit/VisitList';\nimport PatientList from '../../components/lists/patient/PatientList';\nimport AppointmentList from '../../components/lists/appointment/AppointmentList';\n// import SearchAppointmentList from '../../components/lists/appointment/SearchAppointmentList';\nimport VisitDetail from '../../components/details/VisitDetail';\n\nimport FilterVisitForm from '../../components/forms/filter/FilterVisitForm';\nimport VisitSearchForm from '../../components/forms/search/VisitSearchForm';\nimport AppointmentSearchForm from '../../components/forms/search/AppointmentSearchForm';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import bootstrapPlugin from '@fullcalendar/bootstrap';\nimport '../../calendar.scss'\n\nimport loadingGif from '../../assets/loading.gif';\nimport { faBath } from '@fortawesome/free-solid-svg-icons';\nimport './visit.css';\n\nclass VisitPage extends Component {\n  state = {\n    activityA: null,\n    role: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n    activityUser: null,\n    users: null,\n    patients: null,\n    appointments: null,\n    canDelete: false,\n    visits: null,\n    searchVisits: null,\n    isLoading: false,\n    seshStore: null,\n    profileLoaded: false,\n    sideCol: 'menu',\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n    menuSelected: null,\n    adding: {\n      state: null,\n      field: null\n    },\n    showDetails: false,\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    selectedVisit: null,\n    creatingVisit: false,\n    newVisit: null,\n    calendarVisits: null,\n    fromGoLink: null,\n    goLinkId: null,\n    sublistSearch: false,\n    tabKey: 'list',\n  };\n  static contextType = AuthContext;\n\ncomponentDidMount () {\n  console.log('...all visits component mounted...');\n  if (sessionStorage.getItem('logInfo')) {\n    const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n    if (seshStore.role === 'Admin') {\n      this.setState({canDelete:true})\n    }\n\n    if (this.props.location.state) {\n      if (this.props.location.state.visit) {\n        this.setState({\n          fromGoLink: true,\n          goLinkId: this.props.location.state.visit\n        })\n      }\n    }\n    this.getAllVisits(seshStore);\n    this.getAllAppointments(seshStore);\n    // this.getAllPatients(seshStore);\n    if (this.props.selectedVisit) {\n      console.log('...found existing visit selection... loading...');\n      this.setState({\n        showDetails: true,\n        selectedVisit: this.props.selectedVisit\n      })\n    }\n  }\n}\ncomponentWillUnmount() {\n\n}\ncomponentDidUpdate () {\n}\n\ngetAllVisits (args) {\n  console.log('...retrieving all visits...');\n  this.context.setUserAlert('...retrieving all visits...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllVisits(\n        activityId:\"${activityId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllVisits);\n      let responseAlert = '...all visits retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      if (this.state.fromGoLink === true) {\n        let goLinkVisit = resData.data.getAllVisits.filter(x => x._id === this.state.goLinkId)[0];\n        this.setState({\n          showDetails: true,\n          selectedVisit: goLinkVisit,\n          tabKey: 'detail'\n        })\n        this.context.setUserAlert('...Check the details tab...')\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        visits: resData.data.getAllVisits,\n        activityA: `getAllVisits?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.parseForCalendar(resData.data.getAllVisits)\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\ngetAllAppointments (args) {\n  console.log('...retrieving all appointments...');\n  this.context.setUserAlert('...retrieving all appointments...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllAppointments(\n        activityId:\"${activityId}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id,date,time,title,type,subType},patient{_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,registrationNumber,dob,age,gender,loggedIn,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}},inProgress,attended,important,notes,tags,reminders{_id},creator{_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone,email},addresses{number,street,town,city,parish,country,postalCode,primary}}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllAppointments);\n      let responseAlert = '...all appointments retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        appointments: resData.data.getAllAppointments,\n        activityA: `getAllAppointments?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\ngetAllPatients (args) {\n  console.log('...retrieving all patients...');\n  this.context.setUserAlert('...retrieving all patients...')\n  this.setState({isLoading: true});\n\n  const token = args.token;\n  const activityId = args.activityId;\n\n  let requestBody = {\n    query: `\n      query {getAllPatients(\n        activityId:\"${activityId}\"\n      )\n      {_id,active,title,name,role,username,registration{date,number},dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},expiryDate,referral{date,reason,physician{name,email,phone}},attendingPhysician,occupation{role,employer{name,phone,email,address}},insurance{company,policyNumber,description,expiryDate,subscriber{company,description}},nextOfKin{name,relation,contact{email,phone1,phone2}},allergies{type,title,description,attachments},medication{type,title,description,attachments},images{name,type,path},files{name,type,path},notes,tags,appointments{_id,title,type,subType,date,time,checkinTime,seenTime,location,description,inProgress,attended,important,notes,tags},visits{_id,date,time,title,type,subType},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.getAllPatients);\n      let responseAlert = '...all patients retrieval success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        patients: resData.data.getAllPatients,\n        activityA: `getAllPatients?activityId:${activityId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n};\n\nlogUserActivity(args) {\n  console.log('...logUserActivity...');\n  const activityId = args.activityId;\n  const token = args.token;\n  const userId = activityId;\n  const request = this.state.activityA;\n  const activityDate = moment().format('YYYY-MM-DD');\n  let requestBody = {\n    query: `\n      mutation {addUserActivity(\n        activityId:\"${activityId}\",userId:\"${userId}\",\n        userInput:{\n          activityDate:\"${activityDate}\",\n          activityRequest:\"${request}\"\n        })\n      {_id,title,name,role,username,registrationNumber,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary},loggedIn,clientConnected,verification{verified,type,code},attendance{date,status,description},leave{type,startDate,endDate,description},images{name,type,path},files{name,type,path},notes,appointments{_id},reminders{_id},activity{date,request}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.addUserActivity);\n      if (resData.data.addUserActivity.error) {\n        console.log('...resDataError...',resData.data.addUserActivity.error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nsearchVisits = (event) => {\n  event.preventDefault();\n  console.log('...searching visits...');\n  this.context.setUserAlert('...searching visits...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'date') {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n      query {getVisitsByFieldRegex(\n        activityId:\"${activityId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n        query {getVisitsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n      `};\n  }\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getVisitsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getVisitsByField);\n      }\n\n      let responseAlert = '...visit search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          searchVisits: resData.data.getVisitsByFieldRegex,\n          activityA: `getVisitsByFieldRegex?activityId:${activityId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          searchVisits: resData.data.getVisitsByField,\n          activityA: `getVisitsByField?activityId:${activityId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\nonStartCreateNewVisit = () => {\n  this.setState({\n    creatingVisit: true\n  })\n}\ncancelCreateNewVisit = () => {\n  this.setState({\n    creatingVisit: false,\n    selectedAppointment: null\n  })\n}\nsubmitCreateNewVisitForm = (event) => {\n  event.preventDefault();\n  console.log('...creating new visit...');\n  this.context.setUserAlert('...creating new visit...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const appointmentId = this.state.selectedAppointment._id;\n\n  const title = event.target.title.value;\n  const type = event.target.type.value;\n  const subType = event.target.subType.value;\n\n  if (\n      title.trim().length === 0 ||\n      type.trim().length === 0\n    ) {\n    this.context.setUserAlert(\"...blank fields!!!...\")\n    return;\n  }\n\n  const tooEarly = moment().format('YYYY-MM-DD') < moment.unix(this.state.selectedAppointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD');\n  const tooLate = moment().format('YYYY-MM-DD') > moment.unix(this.state.selectedAppointment.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD');\n\n  if (tooEarly === true) {\n    console.log('...appointment for this visit is in the future...please wait or create a new appointment...');\n    this.context.setUserAlert('...appointment for this visit is in the future...please wait or create a new appointment...')\n    this.setState({isLoading: false})\n    return\n  }\n  if (tooLate === true) {\n    console.log('...appointment for this visit has already gone... please create a new appointment...');\n    this.context.setUserAlert('...appointment for this visit has already gone... please create a new appointment...')\n    this.setState({isLoading: false})\n    return\n  }\n\n  let requestBody = {\n    query: `\n      mutation {createVisit(\n        activityId:\"${activityId}\",\n        appointmentId:\"${appointmentId}\",\n        visitInput:{\n          title:\"${title}\",\n          type:\"${type}\",\n          subType:\"${subType}\"\n        })\n        {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      console.log('...resData...',resData.data.createVisit);\n      let responseAlert = '...create visit success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        showDetails: true,\n        creatingVisit: false,\n        selectedVisit: resData.data.createVisit,\n        newVisit: resData.data.createVisit,\n        tabKey: 'detail',\n        activityA: `createAppointment?activityId:${activityId},visitId:${resData.data.createVisit._id}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'))\n      this.getAllVisits(seshStore);\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n\n}\n\ntoggleSideCol = () => {\n  if (this.state.sideCol === 'menu') {\n    this.setState({sideCol: 'filter'})\n  } else {\n    this.setState({\n      sideCol: 'menu',\n      // filter: {\n      //   field: null,\n      //   key: null,\n      //   value: null\n      // }\n    })\n  }\n\n}\nmenuSelect = (args) => {\n  this.setState({\n    menuSelect: args,\n    tabKey: args\n  })\n}\nsubmitFilterForm = (event) => {\n  event.preventDefault();\n  let field = event.target.field.value;\n  let key = event.target.key.value;\n  let value = event.target.value.value;\n  if (value === 'true') {\n    value = true\n  }\n  if (value === 'false') {\n    value = false\n  }\n  this.setState({\n    filter: {\n      field: field,\n      key: key,\n      value: value\n    }\n  })\n\n}\n\nselectAppointment = (args) => {\n  this.setState({\n    selectedAppointment: args\n  })\n}\n\nshowDetails = (args) => {\n  this.setState({\n    showDetails: true,\n    selectedVisit: args,\n    overlay: false,\n    tabKey: 'detail'\n  })\n  this.props.selectVisit(args);\n}\nstartAdd = (args) => {\n  this.setState({\n    adding: {\n      state: true,\n      field: args\n    }\n  })\n}\ncancelAdd = () => {\n  this.setState({\n    adding: {\n      state: null,\n      field: null\n    }\n  })\n}\nupdateVisit = (args) => {\n  console.log('...updating selected visit...');\n  this.setState({\n    selectedVisit: args\n  })\n  this.props.selectVisit(args);\n}\n\ndeleteVisit = (args) => {\n  console.log('...deleteing visit...');\n  this.context.setUserAlert('...deleteing visit...')\n\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const visitId = args._id;\n\n  let requestBody = {\n    query: `\n      mutation {deleteVisitById(\n        activityId:\"${activityId}\",\n        visitId:\"${visitId}\"\n      )\n      {_id,date,time,title,type,subType,patient{_id,active,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},consultants{_id,title,name,role,username,dob,age,gender,contact{phone,phone2,email},addresses{number,street,town,city,parish,country,postalCode,primary}},appointment{_id,title,type,subType,date,time,checkinTime,seenTime,location,description},complaints{title,description,anamnesis,attachments},surveys{title,description,attachments},systematicInquiry{title,description,attachments},vitals{pr,bp1,bp2,rr,temp,ps02,heightUnit,heightValue,weightUnit,weightValue,bmi,urine{type,value}},examination{general,area,type,measure,value,description,followUp,attachments},investigation{type,title,description,attachments},diagnosis{type,title,description,attachments},treatment{type,title,description,dose,frequency,attachments},billing{title,type,description,amount,paid,attachments,notes},vigilance{chronicIllness{diabetes{medication,testing,comment},hbp{medication,testing,comment},dyslipidemia{medication,testing,comment},cad{medication,testing,comment}},lifestyle{weight{medication,testing,comment},diet{medication,testing,comment},smoking{medication,testing,comment},substanceAbuse{medication,testing,comment},exercise{medication,testing,comment},allergies{medication,testing,comment},asthma{medication,testing,comment}},screening{breast{medication,testing,comment},prostate{medication,testing,comment},cervix{medication,testing,comment},colon{medication,testing,comment},dental{medication,testing,comment}},vaccines{influenza{medication,testing,comment},varicella{medication,testing,comment},hpv{medication,testing,comment},mmr{medication,testing,comment},tetanus{medication,testing,comment},pneumovax{medication,testing,comment},other{name,medication,testing,comment}}},images{name,type,path},files{name,type,path}}}\n    `};\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      // console.log('...resData...',resData.data.deleteVisitById);\n      let responseAlert = '...delete visit success!...';\n      let error = null;\n      if (resData.data.error) {\n        error = resData.data.error;\n        responseAlert = error;\n      }\n      this.context.setUserAlert(responseAlert)\n      this.setState({\n        isLoading: false,\n        activityA: `deleteVisitById?activityId:${activityId},visitId:${visitId}`\n      });\n      this.logUserActivity({activityId: activityId,token: token});\n      this.getAllVisits({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nparseForCalendar = (args) => {\n  console.log('...parsing visits for calendar...');\n  let calendarVisits = args.map(x => ({\n      title: x.title,\n      date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n      props: {\n        _id: x._id,\n        title: x.title,\n        type: x.type,\n        date: moment.unix(x.date.substr(0,10)).add(1,'days').format('YYYY-MM-DD'),\n        time: x.time,\n        subType: x.subType,\n      }\n    }))\n    this.setState({\n      calendarVisits: calendarVisits\n    })\n}\n\nviewCalendarEvent = (args) => {\n  console.log('...viewing calendar visit...');\n  const visit = this.state.visits.filter(x => x._id === args.event.extendedProps.props._id)[0];\n  this.setState({\n    overlay: true,\n    overlayStatus: {type: 'calendarVisit', data: visit}\n  })\n}\ntoggleOverlay = () => {\n  this.setState({\n    overlay: false\n  })\n}\n\nstartSublistSearch = () => {\n  this.setState({\n    sublistSearch: true\n  })\n}\ncancelSublistSearch = () => {\n  this.setState({\n    sublistSearch: false,\n  })\n  this.getAllAppointments({activityId: this.context.activityId,token: this.context.token});\n}\nsubmitSublistSearchForm = (event) => {\n  event.preventDefault();\n  console.log('...searching appointments...');\n  this.context.setUserAlert('...searching appointments...')\n  this.setState({isLoading: true});\n\n  const token = this.context.token;\n  const activityId = this.context.activityId;\n  const userId = activityId;\n  const field = event.target.field.value;\n  const query = event.target.query.value;\n  let regex = true;\n  if (field === 'date' ||\n      field === 'inProgress' ||\n      field === 'attended' ||\n      field === 'important' ||\n      field === 'important'\n    ) {\n      regex = false;\n  }\n  // console.log('regex',regex);\n\n  let requestBody;\n  if (regex === true) {\n    requestBody = {\n      query: `\n        query {getAppointmentsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  if (regex === false) {\n    requestBody = {\n      query: `\n      query {getAppointmentsByField(\n        activityId:\"${activityId}\",\n        field:\"${field}\",\n        query:\"${query}\"\n      )\n      {_id,title,type,subType,date,time,checkinTime,seenTime,location,description,visit{_id},patient{_id},consultants{_id},inProgress,attended,important,notes,tags,reminders{_id},creator{_id}}}\n      `};\n  }\n  fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      if (regex === true) {\n        // console.log('...resData...',resData.data.getAppointmentsByFieldRegex);\n      }\n      if (regex === false) {\n        // console.log('...resData...',resData.data.getAppointmentsByField);\n      }\n\n      let responseAlert = '...appointment search success!...';\n      let error = null;\n\n      if (regex === true) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n      if (regex === false) {\n        if (resData.data.error) {\n          error = resData.data.error;\n          responseAlert = error;\n        }\n      }\n\n      this.context.setUserAlert(responseAlert)\n\n      if (regex === true) {\n        this.setState({\n          isLoading: false,\n          appointments: resData.data.getAppointmentsByFieldRegex,\n          activityA: `getAppointmentsByFieldRegex?activityId:${activityId},userId:${userId}`\n        });\n      }\n      if (regex === false) {\n        this.setState({\n          isLoading: false,\n          appointments: resData.data.getAppointmentsByField,\n          activityA: `getAppointmentsByField?activityId:${activityId},userId:${userId}`\n        });\n      }\n\n      this.logUserActivity({activityId: activityId,token: token});\n    })\n    .catch(err => {\n      console.log(err);\n      this.context.setUserAlert(err);\n      this.setState({isLoading: false })\n    });\n}\n\nresetFilter = () => {\n  this.setState({\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    }\n  })\n}\n\n\nrender() {\n\n  return (\n    <React.Fragment>\n\n    {this.state.overlay === true && (\n      <LoadingOverlay\n        status={this.state.overlayStatus}\n        selectCalendarDetails={this.showDetails}\n        toggleOverlay={this.toggleOverlay}\n      />\n    )}\n\n    <Container className=\"staffPageContainer\">\n      <Row className=\"staffPageContainerRow headRow\">\n        <Col md={9} className=\"staffPageContainerCol\">\n          <h1>Visits: {this.state.showDetails === true &&\n                        this.state.selectedVisit &&\n                        this.state.tabKey === 'detail' && (\n                              this.state.selectedVisit.title\n                            )}</h1>\n        </Col>\n        <Col md={3} className=\"staffPageContainerCol\">\n          {this.state.isLoading ? (\n            <Image src={loadingGif} className=\"loadingGif\" fluid />\n          ):(\n            <p>.</p>\n          )}\n        </Col>\n      </Row>\n\n      <Tab.Container id=\"left-tabs-example\" activeKey={this.state.tabKey}>\n        <Row className=\"staffPageContainerRow mainRow2\">\n\n          <Col md={3} className=\"staffPageContainerCol specialCol1\">\n            {this.state.sideCol === 'menu' && (\n              <Nav variant=\"pills\" className=\"flex-column mainMenu\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"list\" onClick={this.menuSelect.bind(this, 'list')}>List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"search\" onClick={this.menuSelect.bind(this, 'search')}>Search</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"detail\" onClick={this.menuSelect.bind(this, 'detail')}>Details</Nav.Link>\n                </Nav.Item>\n                {this.context.role === 'Nurse' && (\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                  </Nav.Item>\n                )}\n                {this.context.role === 'Doctor' && (\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"new\" onClick={this.menuSelect.bind(this, 'new')}>New</Nav.Link>\n                  </Nav.Item>\n                )}\n\n              </Nav>\n            )}\n            {this.state.sideCol === 'filter' && (\n              <Col>\n                <FilterVisitForm\n                  onCancel={this.toggleSideCol}\n                  onConfirm={this.submitFilterForm}\n                />\n              </Col>\n            )}\n          </Col>\n\n          {this.state.visits && (\n            <Col md={9} className=\"staffPageContainerCol specialCol2\">\n              <Tab.Content>\n                <Tab.Pane eventKey=\"list\">\n\n                <Tabs defaultActiveKey=\"2\" id=\"uncontrolled-tab-example\">\n                  <Tab eventKey=\"1\" title=\"list\">\n                  <Row className=\"displayPaneHeadRow\">\n                    <Button variant=\"outline-primary\" onClick={this.toggleSideCol}>Filter</Button>\n                    <Button variant=\"outline-warning\" onClick={this.resetFilter}>Reset</Button>\n                  </Row>\n                    <VisitList\n                      filter={this.state.filter}\n                      visits={this.state.visits}\n                      authId={this.context.activityId}\n                      canDelete={this.state.canDelete}\n                      showDetails={this.showDetails}\n                      onDelete={this.deleteVisit}\n                    />\n                  </Tab>\n                  <Tab eventKey=\"2\" title=\"calendar\" className=\"calendarTab\">\n                    <h3>Calendar</h3>\n                    <FullCalendar\n                      plugins={[dayGridPlugin]}\n                      intitialView=\"dayGridMonth\"\n                      events={this.state.calendarVisits}\n                      eventClick={this.viewCalendarEvent}\n                    />\n                  </Tab>\n                </Tabs>\n\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"search\">\n                <Col className=\"userSearchCol\">\n                  <h3>Search Visit</h3>\n                  <Row className=\"userSearchRow\">\n                    <VisitSearchForm\n                      onConfirm={this.searchVisits}\n                    />\n                  </Row>\n                  <Row>\n                    {this.state.searchVisits && (\n                      <Button variant=\"outline-primary\" onClick={this.toggleSideCol} className=\"centered_btn\">Filter</Button>\n                    )}\n                  </Row>\n                  <Row className=\"userSearchRow results\">\n                    {this.state.searchVisits && (\n                      <VisitList\n                        filter={this.state.filter}\n                        visits={this.state.searchVisits}\n                        authId={this.context.activityId}\n                        showDetails={this.showDetails}\n                      />\n                    )}\n                  </Row>\n                </Col>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"detail\">\n                {this.state.showDetails === true &&\n                  this.state.selectedVisit && (\n                    <VisitDetail\n                      visit={this.state.selectedVisit}\n                      updateVisit={this.updateVisit}\n                    />\n                )}\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"new\">\n                {this.state.creatingVisit === false && (\n                  <Button variant=\"outline-secondary\" className=\"filterFormBtn\" onClick={this.onStartCreateNewVisit}>Create New</Button>\n                )}\n                {this.state.creatingVisit === true &&\n                  this.state.appointments &&\n                  !this.state.selectedAppointment && (\n                  <Col className=\"patientSubListCol\">\n                  <Row className=\"patientSubListRow\">\n                  <Button variant=\"outline-secondary\" className=\"patientSublistSearchBtn\" onClick={this.startSublistSearch}>Search</Button>\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  {this.state.sublistSearch === true && (\n                    <AppointmentSearchForm\n                      onCancel={this.cancelSublistSearch}\n                      onConfirm={this.submitSublistSearchForm}\n                    />\n                  )}\n                  </Row>\n                  <Row className=\"patientSubListRow\">\n                  <AppointmentList\n                    filter={this.state.filter}\n                    appointments={this.state.appointments}\n                    authId={this.context.activityId}\n                    onSelect={this.selectAppointment}\n                    visitPage={true}\n                  />\n                  </Row>\n\n                  </Col>\n                )}\n                {this.state.creatingVisit === true &&\n                  this.state.selectedAppointment && (\n                  <Row>\n                    <CreateVisitForm\n                      onConfirm={this.submitCreateNewVisitForm}\n                      onCancel={this.cancelCreateNewVisit}\n                      appointment={this.state.selectedAppointment}\n                    />\n                  </Row>\n                )}\n                {this.state.newVisit && (\n                  <Row>\n                    <h3>Review New Visit {this.state.newVisit._id}</h3>\n                  </Row>\n                )}\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          )}\n        </Row>\n      </Tab.Container>\n    </Container>\n    </React.Fragment>\n  );\n\n}\n\n\n}\n\nexport default VisitPage;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport AlertBox from './components/alertBox/AlertBox';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport LandingPage from './pages/landing/Landing';\nimport HomePage from './pages/landing/Home';\nimport MyProfilePage from './pages/profile/Profile';\nimport LoginPage from './pages/auth/Login';\nimport SignupPage from './pages/auth/Signup';\nimport PasswordResetPage from './pages/auth/PasswordReset';\nimport StaffPage from './pages/staff/Staff';\nimport PatientPage from './pages/patient/Patients';\nimport AppointmentPage from './pages/appointment/Appointment';\nimport VisitPage from './pages/visit/Visit';\n\nimport AuthContext from './context/auth-context';\nimport io from 'socket.io-client';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    activityId: null,\n    role: null,\n    context: this.context,\n    sessionStorageAuth: JSON.parse(sessionStorage.getItem('logInfo')),\n    sessionCookiePresent: false,\n    passwordResetState: 'incomplete',\n    passwordResetMessage: '...',\n    userAlert: null,\n    selectedUser: null,\n    selectedPatient: null,\n    selectedAppointment: null,\n    selectedVisit: null,\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.sessionStorageAuth = JSON.parse(sessionStorage.getItem('logInfo'));\n    this.socket = io('http://localhost:9099');\n  }\n\n  login = (token, activityId, role, tokenExpiration) => {\n    console.log('...context login...');\n    this.setState({\n      token: token,\n      activityId: activityId,\n      role: role,\n      sessionStorageAuth: {\n        token: token,\n        activityId: activityId,\n        role: role,\n        tokenExpiration: tokenExpiration\n      }\n    });\n    this.sessionStorageAuth = {\n      token: token,\n      activityId: activityId,\n      role: role,\n      tokenExpiration: tokenExpiration\n    }\n    this.context.token = token;\n    this.context.activityId = activityId;\n    this.context.role = role;\n    this.userOnline();\n  };\n\n  logout = () => {\n      this.logout2();\n  };\n\n  componentDidMount() {\n    console.log('...app component mounted...');\n    if (sessionStorage.getItem('logInfo') && this.state.token === null) {\n      console.log('...sessionStorageFound...');\n      const seshStore = JSON.parse(sessionStorage.getItem('logInfo'));\n      this.login(\n        seshStore.token,\n        seshStore.activityId,\n        seshStore.role,\n        seshStore.tokenExpiration,\n      )\n    }\n    if (!this.sessionStorageAuth) {\n      console.log('...noSessionStorageFound...');\n    }\n    this.socket.emit('unauthorizedClientConnect');\n    console.log(\"socket listening....\");\n    // this.userOnline();\n    this.socket.on('test', function(data) {\n      console.log(\"testing...\",data);\n    });\n  }\n\n  componentWillUnmount() {\n    console.log('...app component un-mounting...');\n  }\n\n  logout2 () {\n    console.log('...logging you out...');\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n        query{logout(\n          activityId:\"${activityId}\")\n        {_id,loggedIn}}\n      `};\n\n    fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        this.setState({\n           token: null,\n           activityId: null,\n           role: null,\n           sessionCookiePresent: null,\n           sessionStorageAuth: null,\n        });\n        this.sessionStorageAuth = null;\n        sessionStorage.clear();\n        this.context = {\n          token: null,\n          activityId: null,\n          activityA: null,\n          activityUser: null,\n          role: null,\n          userId: null,\n          user: {},\n          users:[],\n          selectedUser: null,\n          selectedPatient: null,\n          selectedAppointment: null,\n          selectedVisit: null,\n          sender: null,\n          receiver: null,\n          userAlert: \"...\",\n          file: null,\n          fancyDate: null,\n          login: this.login,\n          logout: this.logout,\n          setUserAlert: this.setUserAlert,\n          userOnline: this.userOnline,\n        };\n        this.setState({userAlert: '...logout success...'});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  userOnline = () => {\n    console.log('...domesticating socket client...');\n    this.socket.emit('msg_subscribe', {user: this.context.activityId, room:'msg'+this.context.activityId});\n  }\n\n  passwordReset = (event) => {\n    event.preventDefault();\n    console.log('...reset password submission...');\n      const params = event.target.formGridParams.value.split('@');\n      const verificationCode = params[1];\n      const userId = params[0];\n      const password = event.target.formGridPassword.value;\n      // console.log('params',params);\n\n      const requestBody = {\n        query:`\n          mutation {resetUserPassword(\n            userId:\"${userId}\",\n            verification:\"${verificationCode}\",\n            userInput:{\n              password:\"${password}\"\n            })\n            {_id,password,verification{verified}}}\n        `};\n\n      fetch('http://ec2-3-129-19-78.us-east-2.compute.amazonaws.com/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log('passwordReset',resData);\n          if (resData.errors) {\n            this.setState({passwordResetState: 'error', passwordResetMessage: resData.errors[0].message+'..if not, try making a new reset request..' })\n          } else {\n            this.setState({passwordResetState: 'complete' })\n          }\n\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({passwordResetState: 'error', passwordResetMessage: err })\n        });\n  }\n  cancelPasswordReset = () => {\n    this.setState({passwordResetState: 'cancelled'})\n  }\n\n  setUserAlert = (args) => {\n    // console.log('...setUserAlert...',args);\n    this.setState({userAlert: args})\n  }\n\n  selectUser = (args) => {\n    console.log('...updating top-level selected user...');\n    this.setState({\n      selectedUser: args\n    })\n  }\n  selectPatient = (args) => {\n    console.log('...updating top-level selected patient...');\n    this.setState({\n      selectedPatient: args\n    })\n  }\n  selectAppointment = (args) => {\n    console.log('...updating top-level selected appointment...');\n    this.setState({\n      selectedAppointment: args\n    })\n  }\n  selectVisit = (args) => {\n    console.log('...updating top-level selected visit...');\n    this.setState({\n      selectedVisit: args\n    })\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              activityId: this.state.activityId,\n              activityA: null,\n              activityUser: null,\n              role: this.state.role,\n              userId: null,\n              user: {},\n              users:[],\n              selectedUser: null,\n              selectedPatient: null,\n              selectedAppointment: null,\n              selectedVisit: null,\n              sender: null,\n              receiver: null,\n              userAlert: \"...\",\n              file: null,\n              fancyDate: null,\n              login: this.login,\n              logout: this.logout,\n              setUserAlert: this.setUserAlert,\n              userOnline: this.userOnline,\n            }}\n          >\n            <MainNavigation\n              role={this.state.role}\n            />\n            <AlertBox\n              authId={this.context.activityId}\n              alert={this.state.userAlert}\n            />\n            <main className=\"main-content\">\n              <Switch>\n\n              {this.state.sessionStorageAuth && (\n                <Redirect from=\"/login\" to=\"/home\" exact />\n              )}\n\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/home\" render={(props) => <HomePage {...props}\n                  title=\"home\"\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/profile\" render={(props) => <MyProfilePage {...props}\n                  title=\"profile\"\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/staff\" render={(props) => <StaffPage {...props}\n                  title=\"staff\"\n                  selectedUser={this.state.selectedUser}\n                  selectUser={this.selectUser}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/patients\" render={(props) => <PatientPage {...props}\n                  title=\"patients\"\n                  selectedPatient={this.state.selectedPatient}\n                  selectPatient={this.selectPatient}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/appointments\" render={(props) => <AppointmentPage {...props}\n                  title=\"appointments\"\n                  selectedAppointment={this.state.selectedAppointment}\n                  selectAppointment={this.selectAppointment}\n                />}/>\n              )}\n              {this.state.sessionStorageAuth && (\n                <Route path=\"/visits\" render={(props) => <VisitPage {...props}\n                  title=\"visits\"\n                  selectedVisit={this.state.selectedVisit}\n                  selectVisit={this.selectVisit}\n                />}/>\n              )}\n\n              {this.state.sessionStorageAuth && (\n                <Redirect from=\"/\" to=\"/home\" exact />\n              )}\n              {this.state.sessionStorageAuth && (\n                <Redirect from=\"*\" to=\"/home\" exact />\n              )}\n\n\n\n              {!this.state.sessionStorageAuth && (\n                <Route path=\"/landing\" render={(props) => <LandingPage {...props}\n                  title=\"landing\"\n                />}/>\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Route path=\"/login\" render={(props) => <LoginPage {...props}\n                  title=\"login\"\n                />}/>\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Route path=\"/signup\" render={(props) => <SignupPage {...props}\n                  title=\"signup\"\n                  setUserAlert={this.setUserAlert}\n                />}/>\n              )}\n\n              <Route path=\"/passwordReset/:params\" render={(props) => <PasswordResetPage {...props}\n                passwordReset={this.passwordReset}\n                cancelPasswordReset={this.cancelPasswordReset}\n                resetState={this.state.passwordResetState}\n                message={this.state.passwordResetMessage}\n                />}\n              />\n\n              {!this.state.sessionStorageAuth && (\n                <Redirect from=\"/home\" to=\"/landing\" exact />\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Redirect from=\"/\" to=\"/landing\" exact />\n              )}\n              {!this.state.sessionStorageAuth && (\n                <Redirect from=\"*\" to=\"/landing\" exact />\n              )}\n\n              </Switch>\n            </main>\n\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loading.8631702d.gif\";"],"sourceRoot":""}